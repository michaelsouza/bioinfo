(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1042850,      22952]
NotebookOptionsPosition[   1018429,      22217]
NotebookOutlinePosition[   1022451,      22303]
CellTagsIndexPosition[   1022408,      22300]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DG Package", "Title",
 CellChangeTimes->{{3.6793495261201363`*^9, 3.6793495384395885`*^9}, 
   3.679349644788345*^9, 3.67934974754046*^9, {3.698080393349868*^9, 
   3.698080394373047*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell["1) Instance Creation and Plot Routines", "Chapter",
 CellChangeTimes->{{3.6793500520209*^9, 3.679350065056984*^9}, {
   3.6950585832964363`*^9, 3.6950585871556697`*^9}, {3.695721180314636*^9, 
   3.695721206866439*^9}, 3.698079604394558*^9, {3.6980801756029487`*^9, 
   3.698080180840421*^9}, {3.6980803985611115`*^9, 3.698080400318778*^9}, 
   3.698157038028053*^9, {3.7002280176828976`*^9, 3.7002280179629517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: DG\n",
 StyleBox["DGAllEdges, DGEdgeWeight, DGEdgeDistanceBounds, DGProblem, \
DGSaveProblem, DGGraphGetIJD", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698064786393987*^9, 3.6980648085765533`*^9}, {
   3.6980677551920414`*^9, 3.698067772324468*^9}, 3.6980678077804627`*^9, {
   3.6980730442932186`*^9, 3.698073084912524*^9}, {3.6980731592026176`*^9, 
   3.698073183521519*^9}, {3.698135205349147*^9, 3.698135224691476*^9}, {
   3.698135487529049*^9, 3.6981354882540293`*^9}, {3.6981356287527127`*^9, 
   3.6981356329327507`*^9}, {3.6982407844204545`*^9, 3.698240789311618*^9}, 
   3.6982595805552015`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.698067812774536*^9, 3.698067816768963*^9}, {
  3.6981354925538797`*^9, 3.6981354928866024`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
    RowBox[{
    "DGAllEdges", ",", "\[IndentingNewLine]", "DGEdgeWeight", ",", 
     "\[IndentingNewLine]", "DGEdgeDistanceBounds", ",", 
     "\[IndentingNewLine]", "DGProblem", ",", "\[IndentingNewLine]", 
     "DGPrintGraph", ",", "\[IndentingNewLine]", "DGPrintX", ",", 
     "\[IndentingNewLine]", "DGSaveProblem", ",", "\[IndentingNewLine]", 
     "DGGraphGetIJD"}], "\n", "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGAllEdges", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", 
        RowBox[{"k", " ", "=", " ", "0"}], ",", " ", "pij"}], "}"}], ",", 
      "\n", "   ", 
      RowBox[{
       RowBox[{"pij", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ")"}], "/", 
             "2"}]}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "<=", " ", "n"}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"i", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
            RowBox[{"j", " ", "<=", " ", "n"}], ",", " ", 
            RowBox[{"j", "++"}], ",", "\n", "      ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", "\n", "      ", 
             RowBox[{
              RowBox[{"pij", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"i", " ", "<->", " ", "j"}]}], ";"}]}], "\n", "      ", 
           "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "pij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeWeight", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Gets", " ", "edge", " ", 
       RowBox[{"weight", ".", " ", "'"}], 
       RowBox[{"E", "'"}], " ", "can", " ", "be", " ", "a", " ", "single", 
       " ", "edge", " ", "or", " ", "a", " ", "list", " ", "of", " ", 
       "edges"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "eij", ",", "wij", ",", " ", 
        RowBox[{"D", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"FailureQ", "[", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", " ", 
               RowBox[{"E", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
             "EdgeWeight"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "E", " ", "is", " ", "a", " ", "list", " ", "of", " ", "edges"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], ",", " ", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eij", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
               RowBox[{"eij", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
              RowBox[{"eij", " ", "=", " ", 
               RowBox[{
                RowBox[{"eij", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
                RowBox[{"eij", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FailureQ", "[", 
               RowBox[{"wij", "=", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
                  "EdgeWeight"}], "]"}]}], "]"}], ",", 
              RowBox[{"Throw", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"D", ",", " ", "wij"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"E", " ", "is", " ", "a", " ", "single", " ", "edge"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", "E"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{
              RowBox[{"eij", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
              RowBox[{"eij", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FailureQ", "[", 
             RowBox[{"D", " ", "=", " ", 
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"G", ",", " ", "E"}], "}"}], ",", " ", 
                "EdgeWeight"}], "]"}]}], "]"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "D", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeDistanceBounds", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eij", " ", "=", " ", "E"}], ",", " ", "Lij", ",", " ", "Uij",
         ",", " ", "Vij"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eij", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
          RowBox[{"eij", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"eij", " ", "=", " ", 
          RowBox[{
           RowBox[{"eij", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
           RowBox[{"eij", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"Vij", " ", "=", " ", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
          "\"\<DistanceBounds\>\""}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "Vij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGProblem", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"eij_:", " ", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"dijEps_:", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Creates", " ", "a", " ", "problem", " ", "P", " ", "such", " ", "that",
        " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "is", " ", "the", " ", 
       "problem", " ", "graph", " ", "and", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}], " ", "is", " ", "a", " ", 
       "problem", " ", "solution"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "d", ",", "dij", ",", "k", ",", "numberOfAtoms", 
        ",", "G", ",", "E", ",", "DijEps"}], "}"}], ",", "\n", "   ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "default", " ", "values"}], " ", "*)"}], "\n", 
      "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "eij", "]"}], ">", "0"}], ",", 
         RowBox[{"E", "=", "eij"}], ",", 
         RowBox[{"E", "=", 
          RowBox[{"DGAllEdges", "[", 
           RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], "]"}], ";", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dijEps", "]"}], ">", "0"}], ",", 
         RowBox[{"DijEps", "=", "dijEps"}], ",", 
         RowBox[{"DijEps", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "unpacks", " ", "the", " ", "edges", " ", "and", " ", "calculate", 
         " ", "distances"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"i", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"j", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"j", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"numberOfAtoms", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"i", ",", " ", "j"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
       "\n", "   ", 
       RowBox[{"G", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"Infinity", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}]}], 
         "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}]}], "\n", "    ", "]"}], ";", 
       "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "the", " ", "graph"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"WeightedAdjacencyGraph", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"adds", " ", "distance", " ", "bounds"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "DijEps", "]"}], "!=", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidInput: eij and dijEps must have the same size\>\"", 
          "]"}]}], "]"}], ";", " ", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", 
               RowBox[{
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", 
             "\"\<DistanceBounds\>\""}], "]"}], "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], "}"}], "*", 
            "dij"}]}]}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<X\>\"", "\[Rule]", "x"}], ",", 
          RowBox[{"\"\<G\>\"", "\[Rule]", "G"}]}], "|>"}], "]"}]}]}], "\n", 
     "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintGraph", "[", "G_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", "table", ",", "eij", ",", "i", ",", "j", ",", "k", ",", 
        "Lij", ",", "Uij", ",", "Dij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"table", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", "=", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "Dij", ",", "Lij", ",", "Uij"}], 
            "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", 
         RowBox[{"table", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\"", ",", 
               "\"\<lij\>\"", ",", "\"\<uij\>\""}], "}"}]}], "}"}]}]}], "]"}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintX", "[", "X_", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"X", ",", " ", 
       RowBox[{"TableHeadings", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}], "}"}]}]}], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPrintDistanceMatrix", "[", 
    RowBox[{"X_", ",", "edges_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"E", "=", "edges"}], ",", "table", ",", "i", ",", "j", ",", 
       "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"table", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\""}], 
             "}"}]}], "}"}]}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintDistanceMatrix", "[", "X_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "edges", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"DGAllEdges", "[", 
         RowBox[{"Length", "[", "X", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DGPrintDistanceMatrix", "[", 
        RowBox[{"X", ",", "edges"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSaveProblem", "[", 
     RowBox[{"P_", ",", " ", "fname_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Create", " ", "the", " ", "files", " ", 
       RowBox[{"fname", ".", "csv"}], " ", "and", " ", 
       RowBox[{"fname_xsol", ".", "csv"}], " ", "with"}], ",", " ", 
      "respectively", ",", " ", 
      RowBox[{
      "the", " ", "DG", " ", "constraints", " ", "given", " ", "by", " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "and", " ", "one", " ", 
       "associated", " ", "solution", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", " ", "fid", ",", " ", "table", ",", " ", "eij", ",", " ",
         "i", ",", " ", "j", ",", " ", "k", ",", " ", "X", ",", " ", "G", ",",
         " ", "Dij", ",", " ", "Lij", ",", " ", "Uij"}], "}"}], ",", "\n", 
      "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "and", " ", "saves", " ", "solution", " ", "table"}], 
       " ", "*)"}], "\n", "   ", 
      RowBox[{
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"P", "[", "\"\<X\>\"", "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "3"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<_xsol.csv\>\""}], "]"}]}], ";", "\n",
        "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving solution file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "creates", " ", "and", " ", "saves", " ", "constraints", " ", 
         "table"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";", "\n", "   ", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "5"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j"}], "}"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", " ", "Uij"}], "}"}], " ", "=", " ", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"Dij", " ", "=", " ", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j", ",", " ", 
             RowBox[{"N", "[", "Dij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Lij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Uij", "]"}]}], "}"}]}]}]}], "\n", "    ", 
        "]"}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<.csv\>\""}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving constraints file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<I\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<D\>\"", ",", 
            " ", "\"\<L\>\"", ",", " ", "\"\<U\>\""}], "}"}]}]}], "]"}], 
       ";"}]}], "\n", "   ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGraphGetIJD", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "d", ",", "E"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"E", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980648378091593`*^9, 3.698064854788249*^9}, {
   3.698064906159929*^9, 3.698064909325801*^9}, {3.698064955176897*^9, 
   3.698064986006858*^9}, {3.698065109038253*^9, 3.698065150671424*^9}, {
   3.69806518659297*^9, 3.698065193368532*^9}, {3.6980654001540194`*^9, 
   3.6980654244181046`*^9}, {3.6980655393665404`*^9, 3.698065555128313*^9}, {
   3.6980659794963894`*^9, 3.6980660041682944`*^9}, {3.698066341867444*^9, 
   3.6980663567706394`*^9}, {3.6980665592012296`*^9, 
   3.6980666992461824`*^9}, {3.69806673177922*^9, 3.698066780054468*^9}, {
   3.6980668153666925`*^9, 3.69806686656289*^9}, {3.69806701658186*^9, 
   3.698067018994828*^9}, {3.698067996394244*^9, 3.698068042764223*^9}, {
   3.698068155902776*^9, 3.6980682384338694`*^9}, {3.6980684167789364`*^9, 
   3.6980684192427177`*^9}, 3.6980700592523394`*^9, {3.6980704236155825`*^9, 
   3.6980707185421805`*^9}, {3.6980707610011263`*^9, 3.698070854882349*^9}, {
   3.6980708951572204`*^9, 3.69807095084225*^9}, {3.698070990102256*^9, 
   3.6980710197514257`*^9}, {3.69807108328992*^9, 3.6980710851061954`*^9}, {
   3.698071134927409*^9, 3.6980711366806107`*^9}, {3.6980714781002245`*^9, 
   3.698071690621649*^9}, 3.6980717752567205`*^9, {3.698071824174859*^9, 
   3.698071835213976*^9}, {3.698071886342635*^9, 3.6980718929859667`*^9}, {
   3.698072224182354*^9, 3.6980722489870024`*^9}, {3.698072475433307*^9, 
   3.698072476001685*^9}, {3.698072507681114*^9, 3.6980725095555162`*^9}, {
   3.698072661011775*^9, 3.698072730186365*^9}, {3.698072802711589*^9, 
   3.698072810574417*^9}, {3.6980747631397576`*^9, 3.6980747665630274`*^9}, {
   3.698078742239861*^9, 3.6980787427962303`*^9}, {3.6980788044556255`*^9, 
   3.698078886289402*^9}, 3.698079529602953*^9, {3.698079562825487*^9, 
   3.6980795628394966`*^9}, {3.6980841826292048`*^9, 
   3.6980841893896885`*^9}, {3.6981352488359904`*^9, 3.698135531631914*^9}, {
   3.698135642417054*^9, 3.6981356548828564`*^9}, {3.698135687148699*^9, 
   3.69813569447806*^9}, {3.6982216004241915`*^9, 3.698221739589205*^9}, {
   3.6982218524675703`*^9, 3.698221872903125*^9}, {3.6982219257613215`*^9, 
   3.6982220862061243`*^9}, {3.698222983461506*^9, 3.6982231253506966`*^9}, {
   3.698223285203043*^9, 3.698223303981498*^9}, {3.698232826843835*^9, 
   3.6982329751758366`*^9}, {3.6982330643710318`*^9, 
   3.6982331580395837`*^9}, {3.6982332202168217`*^9, 
   3.6982332369894466`*^9}, {3.6982333007459803`*^9, 
   3.6982333251156435`*^9}, {3.6982334452210298`*^9, 3.69823386830234*^9}, {
   3.698233971233729*^9, 3.6982341107259865`*^9}, {3.698234157087762*^9, 
   3.698234166227824*^9}, {3.6982342008682995`*^9, 3.6982342078039*^9}, {
   3.698240819715974*^9, 3.6982408474903955`*^9}, {3.6983191649781866`*^9, 
   3.698319169648599*^9}, {3.7003057978269615`*^9, 3.7003059781893115`*^9}, {
   3.700306014054883*^9, 3.700306041788701*^9}, {3.7003060781106386`*^9, 
   3.70030613384301*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples:", "Section",
 CellChangeTimes->{{3.6980677784161177`*^9, 3.6980677937658424`*^9}, {
   3.6980678280050044`*^9, 3.6980678367016196`*^9}, 3.7002279528025875`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGAllEdges", " ", "*)"}], "\n", 
  RowBox[{"DGAllEdges", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.69806784107166*^9, 3.698067885891185*^9}, {
   3.698072476059723*^9, 3.698072476069231*^9}, 3.6980795296114593`*^9, {
   3.698079659259447*^9, 3.6980796592649527`*^9}, 3.698079723959221*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702717414353963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "complete", " ", 
    "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintDistanceMatrix", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6980678514006224`*^9, {3.6980679034188004`*^9, 3.698067938519929*^9}, {
   3.698070087795181*^9, 3.6980701309785995`*^9}, {3.6980701806363125`*^9, 
   3.6980701917162457`*^9}, {3.6980707240828867`*^9, 3.698070728339967*^9}, {
   3.698071156019414*^9, 3.698071173038784*^9}, {3.698071267726063*^9, 
   3.698071268937364*^9}, {3.698071306434246*^9, 3.6980713142584715`*^9}, {
   3.69807140802295*^9, 3.698071409104385*^9}, {3.698072476108756*^9, 
   3.698072476123766*^9}, 3.6980795296284704`*^9, {3.6980796656206665`*^9, 
   3.698079665626671*^9}, 3.6982328268823624`*^9, 3.698233064406555*^9, {
   3.6982338813554974`*^9, 3.6982339037413445`*^9}, {3.6982342329371486`*^9, 
   3.698234244522332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702717414385214*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.7320508075688772`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.7320508075688772`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij"}}]]]], "Print",
 CellChangeTimes->{3.702717414385214*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "<->", " ", "2"}], ",", " ", 
       RowBox[{"2", " ", "<->", " ", "3"}], ",", " ", 
       RowBox[{"3", " ", "<->", " ", "4"}], ",", " ", 
       RowBox[{"4", " ", "<->", " ", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij"}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698070175421965*^9, 3.698070175861757*^9}, {
   3.698070213177312*^9, 3.698070315300525*^9}, {3.6980713539418945`*^9, 
   3.6980713662326765`*^9}, {3.6980714206781745`*^9, 
   3.6980714208693013`*^9}, {3.698072476186808*^9, 3.698072476201317*^9}, 
   3.698079529705022*^9, {3.698079678277562*^9, 3.6980796782830653`*^9}, 
   3.698232826904878*^9, 3.69823306442557*^9, {3.6982342604183755`*^9, 
   3.6982342641588564`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7027174144164643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "inexact", " ", 
    "distances"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", " ", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", " ", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", " ", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dijEps", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0.1", ",", " ", "0", ",", " ", "0.2"}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij", ",", " ", "dijEps"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980720809289303`*^9, 3.6980721673125477`*^9}, {
   3.698072476261857*^9, 3.698072476270364*^9}, {3.698074794128626*^9, 
   3.698074795245368*^9}, 3.6980795297355413`*^9, {3.6980796883057127`*^9, 
   3.698079688311717*^9}, 3.698232826928891*^9, 3.698233064442582*^9, 
   3.6982342864456387`*^9, {3.7027178221035633`*^9, 3.702717834985159*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.2727922061357857`", 
      "1.5556349186104048`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "0.8`", "1.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7027174144386096`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Saves", " ", "a", " ", "DGProblem"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\n", 
   RowBox[{"DGSaveProblem", "[", 
    RowBox[{
    "P", ",", " ", 
     "\"\<c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_\
problem_small\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980724323259354`*^9, 3.6980724456790857`*^9}, 
   3.6980724763684278`*^9, {3.6980725466797047`*^9, 3.6980726421410055`*^9}, {
   3.6980727654041586`*^9, 3.6980727682410746`*^9}, 3.698078867840667*^9, 
   3.6980795298060875`*^9, {3.6980797088881145`*^9, 3.6980797089077563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving solution file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small_xsol.csv\"\>"}],
  SequenceForm[
  "Saving solution file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small_xsol.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174144542365`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving constraints file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small.csv\"\>"}],
  SequenceForm[
  "Saving constraints file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717414869375*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: MDGP\n",
 StyleBox["DGSetXByCartesianSystem, DGSetXByHomogeneousCoords, \
DGRandom3DBackbone, DGRandomMDGP, DGCalculateProteinAngles, \
DGCalculateProteinAnglesForAtomAtPosition, DGCalculateTorsionAngles", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
  3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
  3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
  3.6980731201361957`*^9, 3.6980731887764435`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980732060967464`*^9, 3.698073211231152*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGSetXByCartesianSystem", ",", "\[IndentingNewLine]", 
    "DGSetXByHomogeneousCoords", ",", "\[IndentingNewLine]", 
    "DGRandom3DBackbone", ",", "\[IndentingNewLine]", "DGRandomMDGP", ",", 
    "\[IndentingNewLine]", "DGPlaneAndTorsionAngles"}], "\[IndentingNewLine]",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByCartesianSystem", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "rotations", " ", "and", " ", "translations", " ", 
        "explicitly"}], ";", "\[IndentingNewLine]", "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "            ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "        ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}],
           FontWeight->"Plain"], " ", "\[IndentingNewLine]"}]}]}]}]}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "i", ",", "v", ",", "n", ",", "R", ",", 
        "X", ",", "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "positions"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"b", "-", "c"}], "]"}]}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"a", "-", "b"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "creation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"R", "[", "v", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "apply"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "apply", " ", "torsion", " ", "rotation", " ", "and", " ", 
            "translation"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{
            RowBox[{"R", "[", "v", "]"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "v"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByHomogeneousCoords", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "transformation", " ", "matrices"}], ";", "\[IndentingNewLine]", 
       "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         StyleBox["    ",
          FontWeight->"Plain"], "        "}]], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["        ",
        FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
             RowBox[{"angle", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "2"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}], ";"}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "\[IndentingNewLine]"}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "B", ",", "B1", ",", "B2", ",", "B3", ",", "X", ",", "i", ",", "di", 
        ",", "ct", ",", "st", ",", "cw", ",", "sw", ",", "v", ",", 
        "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ct", ",", "st"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "ct"}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "st"}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "first", " ", "transformation", " ", "matrices"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"B1", "=", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"B2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"di", "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "ct"}], ",", 
            RowBox[{"-", "st"}], ",", "0", ",", 
            RowBox[{
             RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"st", ",", 
            RowBox[{"-", "ct"}], ",", "0", ",", 
            RowBox[{"di", "*", "st"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "coordinates"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"B1", ".", "B2", ".", "B3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ct", ",", "st"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cw", ",", "sw"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"di", "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"concatenate", " ", "transformation", " ", "matrices"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "ct"}], ",", 
                RowBox[{"-", "st"}], ",", "0", ",", 
                RowBox[{
                 RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "cw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "cw"}], ",", 
                RowBox[{"-", "sw"}], ",", 
                RowBox[{"di", "*", "st", "*", "cw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "sw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "sw"}], ",", "cw", ",", 
                RowBox[{"di", "*", "st", "*", "sw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "transformation", " ", "at", " ", "origin"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandom3DBackbone", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"algorithm_:", "\"\<HomogeneousCoords\>\""}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Generates", " ", "a", " ", "random", " ", "backbone", " ", "in", " ", 
       "tridimensional", " ", "Euclidean", " ", "space"}], ";", 
      "\[IndentingNewLine]", "   ", 
      StyleBox[
       RowBox[{"Input", " ", "parameters"}],
       FontVariations->{"Underline"->True}], 
      StyleBox[";",
       FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "algorithm", " ", "to", " ", "be", " ", "applied", " ", "during", " ",
          "coordinates", " ", 
         RowBox[{"calculation", ".", " ", "The"}], " ", 
         RowBox[{"options", " ", "'"}], "are", " ", 
         RowBox[{"HomogeneousCoords", "'"}], " ", 
         RowBox[{"or", " ", "'"}], 
         RowBox[{"CartesianSystem", "'"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", "the", 
         " ", "current", " ", "time", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "the", " ", "local", " ", "variables"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "d", ",", "\[Theta]", ",", "\[Omega]", ",", "X", ",", "output", ",", 
        RowBox[{"\[Epsilon]", "=", "0.05"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"seed", ">", "0"}], ",", 
         RowBox[{"SeedRandom", "[", "seed", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"length", " ", "of", " ", "covalent", " ", "bonds"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.526", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"plane", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.91", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"torsion", " ", "angles"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "Degree"}], ",", 
              RowBox[{"180", "Degree"}], ",", 
              RowBox[{"300", "Degree"}]}], "}"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Epsilon]"}], ",", "\[Epsilon]"}], "}"}], 
              "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "remaining", " ", "3", "d", " ", 
         "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "algorithm", ",", "\[IndentingNewLine]", "\"\<HomogeneousCoords\>\"", 
         ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByHomogeneousCoords", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<CartesianSystem\>\"", ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByCartesianSystem", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"Throw", "[", 
          RowBox[{"\"\<InvalidAlgorithm:\>\"", ",", 
           RowBox[{"OptionValue", "[", "algorithm", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "output"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "->", "X"}], ",", 
         RowBox[{"\"\<TorsionAngles\>\"", "\[Rule]", "\[Omega]"}], ",", 
         RowBox[{"\"\<CovalentBondLengths\>\"", "->", "d"}], ",", 
         RowBox[{"\"\<PlaneRotationAngles\>\"", "\[Rule]", "\[Theta]"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgesMDGP", "[", "numberOfAtoms_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"i", "+", "3"}], ",", "numberOfAtoms"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"edges", ",", 
               RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "edges", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"dijEps_:", "0.0"}], ",", 
      RowBox[{"dijMax_:", "Infinity"}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Generates", " ", "a", " ", "random", " ", "MDGP", " ", 
       RowBox[{"instance", "."}]}], ";", " ", "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        StyleBox["dijEps",
         FontSlant->"Italic"], 
        StyleBox[":",
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"the", " ", "upper", " ", 
          RowBox[{"(", "uij", ")"}], " ", "and", " ", "lower", " ", 
          RowBox[{"(", "lij", ")"}], " ", "constraints", " ", "boundaries", 
          " ", "are", " ", "generated", " ", "using", " ", "the", " ", 
          "formulae", " ", "lij"}],
         FontWeight->"Plain"]}], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dijEps"}], ")"}], " ", "and", " ", "uij"}], " ",
          "=", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "dijEps"}], ")"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["dijMax",
        FontSlant->"Italic"], ":", 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "all", " ", "distances", " ", "greater", " ", "than", " ", "dijMax", 
         " ", "are", " ", "dropped"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{"defines", " ", "the", " ", "method", " ", 
         RowBox[{"(", "algorithm", ")"}], " ", "used", " ", "to", " ", 
         "calculate", " ", "the", " ", "pairwise", " ", 
         RowBox[{"distances", ".", " ", "The"}], " ", "options", " ", "are", 
         " ", "\"\<DistanceMatrix\>\"", " ", "and", " ", "\"\<Nearest\>\""}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", 
         "current", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "X", ",", "D", ",", "E", ",", "dij", ",", 
        "DijEps"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{
         RowBox[{"DGRandom3DBackbone", "[", 
          RowBox[{
          "numberOfAtoms", ",", "\"\<HomogeneousCoords\>\"", ",", "seed"}], 
          "]"}], "[", "\"\<Points\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DijEps", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "distance", " ", "bounds"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", "numberOfAtoms"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"exact", " ", "distances"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "2"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Continue", "[", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"intervalar", " ", "distances"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "3"}], "||", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{"Norm", "[", 
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"X", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "<", 
                 "dijMax"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "dijEps"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DGProblem", "[", 
         RowBox[{"X", ",", "E", ",", "DijEps"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"A_", ",", "B_", ",", "C_", ",", "D_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "the", " ", "plane", " ", "and", " ", "torsion", " ",
        "for", " ", "3", "D", " ", "points", " ", "A"}], ",", " ", "B", ",", 
      " ", 
      RowBox[{"C", " ", "and", " ", "D", " ", "in", " ", "that", " ", 
       RowBox[{"order", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nabc", ",", " ", "nbcd", ",", "\[Theta]", ",", "\[Omega]"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"centered", " ", "at", " ", "C"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"B", "-", "C"}], ",", 
          RowBox[{"D", "-", "C"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Theta]):Angle[BCD]  =\>\"", ",", "\[Theta]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"centered", " ", "at", " ", "B", " ", "and", " ", "C"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nabc", ",", "nbcd"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"A", "-", "B"}], ",", 
            RowBox[{"C", "-", "B"}]}], "]"}], ",", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"B", "-", "C"}], ",", 
            RowBox[{"D", "-", "C"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{"nabc", ",", "nbcd"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Omega]):Angle[ABCD] =\>\"", ",", "\[Omega]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"X_", ",", "i_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles", 
       " ", "of", " ", "i"}], "-", 
      RowBox[{"th", " ", 
       RowBox[{"atom", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlaneAndTorsionAngles", "[", "X_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Omega]", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
         RowBox[{"DGPlaneAndTorsionAngles", "[", 
          RowBox[{"X", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679334396696954*^9, 3.6793344197378874`*^9}, {
   3.679334459021727*^9, 3.6793344614910192`*^9}, {3.679334506573509*^9, 
   3.67933450744427*^9}, 3.679334554859289*^9, {3.6793347748775415`*^9, 
   3.6793348146727505`*^9}, {3.6793348683176303`*^9, 
   3.6793349148147354`*^9}, {3.679335216182414*^9, 3.679335270449379*^9}, {
   3.679335358320606*^9, 3.6793353855927134`*^9}, {3.679335422113183*^9, 
   3.679335422860292*^9}, {3.679335467322652*^9, 3.6793354718670073`*^9}, {
   3.679335502941807*^9, 3.6793355176517873`*^9}, {3.6793359308181715`*^9, 
   3.6793359602458916`*^9}, {3.6793359984610925`*^9, 3.679336011029911*^9}, {
   3.679336355941925*^9, 3.679336390681263*^9}, {3.679336436703087*^9, 
   3.679336440913059*^9}, {3.6793364973777227`*^9, 3.679336508943397*^9}, {
   3.679337482798051*^9, 3.6793374878195066`*^9}, {3.679337531710136*^9, 
   3.679337679993342*^9}, {3.679337711180924*^9, 3.6793377943636985`*^9}, {
   3.679337830273183*^9, 3.6793379235522385`*^9}, {3.6793380600889235`*^9, 
   3.679338107718841*^9}, {3.679338168311281*^9, 3.6793381690922422`*^9}, {
   3.679338254307039*^9, 3.679338327393572*^9}, {3.6793384127916727`*^9, 
   3.679338418720523*^9}, {3.6793384657072325`*^9, 3.679338788372825*^9}, {
   3.679338898441475*^9, 3.6793389990638256`*^9}, {3.6793390477861385`*^9, 
   3.679339051499843*^9}, {3.6793391446277075`*^9, 3.6793392599804153`*^9}, 
   3.6793393742092657`*^9, {3.6793395780321927`*^9, 3.6793398587893867`*^9}, {
   3.6793398957561593`*^9, 3.6793399605794096`*^9}, {3.67934000207397*^9, 
   3.6793400630782733`*^9}, {3.6793401514655437`*^9, 
   3.6793403347497687`*^9}, {3.6793403699550896`*^9, 3.67934037140318*^9}, {
   3.679340563130898*^9, 3.6793405841237473`*^9}, {3.6793406189939303`*^9, 
   3.6793406823092556`*^9}, {3.6793413087872534`*^9, 
   3.6793413117913976`*^9}, {3.6793414144409704`*^9, 
   3.6793414780425982`*^9}, {3.6793415857352*^9, 3.679341749056054*^9}, {
   3.6793418327409945`*^9, 3.6793418417524166`*^9}, {3.679341876481241*^9, 
   3.6793418824052687`*^9}, {3.679341997125859*^9, 3.6793420172739105`*^9}, {
   3.67934205563032*^9, 3.6793420821291895`*^9}, {3.679342117275077*^9, 
   3.6793421196924405`*^9}, {3.6793421834981775`*^9, 3.679342183855644*^9}, {
   3.6793422500684495`*^9, 3.6793422840007253`*^9}, {3.6793424043195424`*^9, 
   3.6793424350150757`*^9}, {3.679342585125659*^9, 3.679342801705634*^9}, {
   3.679342833323803*^9, 3.6793428396110015`*^9}, {3.6793429405557547`*^9, 
   3.6793429972575336`*^9}, {3.679343068573412*^9, 3.6793430980621653`*^9}, 
   3.6793431423230133`*^9, {3.6793431858227177`*^9, 3.6793432209529057`*^9}, {
   3.6793432860551014`*^9, 3.6793433042354126`*^9}, {3.6793433545087633`*^9, 
   3.6793433652364955`*^9}, {3.6793452969963503`*^9, 3.6793453088097954`*^9}, 
   3.6793461153501606`*^9, {3.6793473536334457`*^9, 3.6793473954665585`*^9}, {
   3.6793477301073675`*^9, 3.679347763333604*^9}, {3.6793478591437263`*^9, 
   3.6793478625984306`*^9}, {3.6793480121537013`*^9, 
   3.6793482720333853`*^9}, {3.67934834772797*^9, 3.6793483523074236`*^9}, {
   3.6793484687244396`*^9, 3.679348489631818*^9}, {3.679348535732118*^9, 
   3.6793485836744003`*^9}, {3.679348656480409*^9, 3.6793486600900903`*^9}, 
   3.6793492489231615`*^9, {3.6793494190708942`*^9, 3.679349419296319*^9}, 
   3.6793494823993444`*^9, {3.6793500975888023`*^9, 3.6793501010398235`*^9}, {
   3.6793503502988024`*^9, 3.679350357442238*^9}, {3.679350388693789*^9, 
   3.6793504609919558`*^9}, {3.679350512381988*^9, 3.6793505224916997`*^9}, {
   3.6793505658690414`*^9, 3.679350573203977*^9}, {3.6793920543569756`*^9, 
   3.6793923209393916`*^9}, {3.679392352626535*^9, 3.6793925381168537`*^9}, {
   3.6793926280473437`*^9, 3.679392661685611*^9}, {3.679392696383786*^9, 
   3.679392699025669*^9}, {3.6793928383564887`*^9, 3.6793934549091573`*^9}, {
   3.679393586505351*^9, 3.679393616703784*^9}, {3.6793939133345203`*^9, 
   3.6793939143222685`*^9}, 3.6793940696010857`*^9, {3.679394099668668*^9, 
   3.6793944506348133`*^9}, {3.679394784056423*^9, 3.67939534176003*^9}, {
   3.679395381425836*^9, 3.679395503566868*^9}, {3.6793955684350924`*^9, 
   3.6793955734567842`*^9}, {3.6793957804079714`*^9, 
   3.6793958367041416`*^9}, {3.6793960807594223`*^9, 3.679396100513118*^9}, {
   3.67939616157646*^9, 3.679396197364892*^9}, {3.6793962497184567`*^9, 
   3.679396282906206*^9}, {3.679396609090597*^9, 3.6793966167836933`*^9}, {
   3.679396648625914*^9, 3.6793966543985653`*^9}, {3.679396740943916*^9, 
   3.679396768582145*^9}, {3.679396857866257*^9, 3.6793968963813653`*^9}, {
   3.6793969336171*^9, 3.6793970905785065`*^9}, {3.6793971251566105`*^9, 
   3.6793971298515577`*^9}, {3.679397221304947*^9, 3.67939722410863*^9}, {
   3.6793972641763353`*^9, 3.679397266225936*^9}, {3.6793983203128195`*^9, 
   3.6793983706649785`*^9}, {3.679398435449253*^9, 3.6793984477299423`*^9}, {
   3.6793984907409554`*^9, 3.6793985421648207`*^9}, {3.679398593771634*^9, 
   3.6793986705180993`*^9}, {3.6793989235435977`*^9, 3.67939893434542*^9}, {
   3.679403394164427*^9, 3.6794034018166647`*^9}, {3.679403783825127*^9, 
   3.6794037864835734`*^9}, {3.6794038759602175`*^9, 
   3.6794040830475106`*^9}, {3.679404119305796*^9, 3.679404298238202*^9}, 
   3.679404382036023*^9, {3.679404653274694*^9, 3.6794046842305584`*^9}, {
   3.6794050293859835`*^9, 3.6794050557043276`*^9}, {3.6794051146048007`*^9, 
   3.679405116722584*^9}, {3.679405184367193*^9, 3.6794052171029243`*^9}, {
   3.679405498432304*^9, 3.679405569807764*^9}, {3.679405690984426*^9, 
   3.6794056940269375`*^9}, {3.679405754352635*^9, 3.6794057624882355`*^9}, 
   3.679405828952403*^9, {3.6794059773823776`*^9, 3.679406037058329*^9}, {
   3.679406078458248*^9, 3.6794061638320656`*^9}, {3.6794064355972614`*^9, 
   3.679406619068183*^9}, {3.67940666239577*^9, 3.679406687383835*^9}, {
   3.679406724763648*^9, 3.6794067251687045`*^9}, 3.6794068172515316`*^9, {
   3.679406863506428*^9, 3.679406872901106*^9}, {3.679406930446825*^9, 
   3.679406948401491*^9}, {3.6794070040861063`*^9, 3.6794070065561094`*^9}, {
   3.679407312344544*^9, 3.679407314713808*^9}, {3.679407430180848*^9, 
   3.679407458271701*^9}, 3.6794078238766403`*^9, {3.679407878354503*^9, 
   3.6794082035777364`*^9}, {3.679566685353998*^9, 3.67956669759547*^9}, 
   3.679568153295287*^9, {3.6795682979748397`*^9, 3.679568399913588*^9}, {
   3.679568451510522*^9, 3.679568495166552*^9}, {3.6795691795206947`*^9, 
   3.679569250499019*^9}, {3.679569280716798*^9, 3.6795693785712852`*^9}, {
   3.6795925633128986`*^9, 3.679592673970081*^9}, {3.679592721867278*^9, 
   3.6795927229374475`*^9}, {3.679594988131906*^9, 3.679595118982105*^9}, {
   3.679738892130002*^9, 3.679738904422254*^9}, {3.6797389527800984`*^9, 
   3.6797389661620564`*^9}, {3.6797390238401327`*^9, 
   3.6797390636940556`*^9}, {3.6797391569629755`*^9, 3.679739218024413*^9}, {
   3.679739321633385*^9, 3.6797393341911097`*^9}, {3.6797394358016376`*^9, 
   3.679739498369319*^9}, {3.679739592363925*^9, 3.6797396087330103`*^9}, {
   3.6797405277538753`*^9, 3.6797405906735935`*^9}, {3.679741837482974*^9, 
   3.679741856061937*^9}, {3.6797530753347263`*^9, 3.679753080740266*^9}, {
   3.679822610411623*^9, 3.6798226951736937`*^9}, {3.6798262757554946`*^9, 
   3.6798262950500765`*^9}, {3.6798304972475395`*^9, 3.679830500587058*^9}, {
   3.6798305863580213`*^9, 3.6798306115801296`*^9}, {3.679830653827534*^9, 
   3.679830659160823*^9}, {3.679830750679475*^9, 3.679830778729604*^9}, {
   3.6798309380103083`*^9, 3.679831207376337*^9}, {3.6798312397643733`*^9, 
   3.6798313536889253`*^9}, {3.6798313849934535`*^9, 3.679831403721264*^9}, {
   3.6798314534696703`*^9, 3.6798315710288057`*^9}, {3.6798316592417555`*^9, 
   3.6798317372267046`*^9}, 3.679831789061343*^9, {3.679831822090675*^9, 
   3.679831828828328*^9}, {3.6798318972804823`*^9, 3.6798319051885147`*^9}, {
   3.679831945915737*^9, 3.6798319534838204`*^9}, {3.679831984167186*^9, 
   3.679831996593215*^9}, {3.6798321399538794`*^9, 3.6798321522301235`*^9}, {
   3.6798322802409973`*^9, 3.6798322901002426`*^9}, {3.679832475527353*^9, 
   3.6798324791745257`*^9}, {3.679832515937626*^9, 3.6798325272304134`*^9}, {
   3.6798328341287575`*^9, 3.6798328453074446`*^9}, {3.679832936913255*^9, 
   3.6798329499211493`*^9}, 3.6798329836635427`*^9, 3.6799120745739098`*^9, {
   3.68096946640281*^9, 3.680969506471238*^9}, {3.6809695943663626`*^9, 
   3.6809695983006277`*^9}, {3.680971291386725*^9, 3.680971292487916*^9}, {
   3.6810483453596783`*^9, 3.6810483658374515`*^9}, {3.681049666557871*^9, 
   3.681049672721483*^9}, {3.681049746015087*^9, 3.6810497473331203`*^9}, {
   3.681050036116782*^9, 3.6810503893437195`*^9}, {3.681050439415736*^9, 
   3.681050443570201*^9}, {3.6810508388119097`*^9, 3.681050853163069*^9}, {
   3.6810508894027395`*^9, 3.681050893808611*^9}, {3.681050960791823*^9, 
   3.6810510981120815`*^9}, {3.68105113216866*^9, 3.6810511668364615`*^9}, {
   3.681051291204856*^9, 3.6810512973216534`*^9}, {3.681051343040867*^9, 
   3.6810513458639803`*^9}, {3.6810514354795513`*^9, 
   3.6810514424265547`*^9}, {3.6810515295113626`*^9, 3.681051567230074*^9}, 
   3.681051692501606*^9, {3.681051791144629*^9, 3.681051837795389*^9}, {
   3.6810519974251823`*^9, 3.6810521036048183`*^9}, {3.681052180564599*^9, 
   3.6810521932444377`*^9}, {3.681052498724401*^9, 3.6810525317013626`*^9}, {
   3.681052601514738*^9, 3.6810526020129356`*^9}, {3.681130097135313*^9, 
   3.6811301355329266`*^9}, {3.6811306071661057`*^9, 
   3.6811306080939198`*^9}, {3.681569293340601*^9, 3.681569317434729*^9}, 
   3.681569384549055*^9, {3.6815694300305977`*^9, 3.6815694757801313`*^9}, {
   3.681569563306698*^9, 3.681569588540775*^9}, {3.6827030876800084`*^9, 
   3.682703262424608*^9}, {3.6827033351522703`*^9, 3.682703415951787*^9}, {
   3.6827036928979535`*^9, 3.6827037232224236`*^9}, {3.682751730525303*^9, 
   3.6827517963283806`*^9}, {3.6827518694423895`*^9, 3.682751938368969*^9}, {
   3.682752027328513*^9, 3.682752222908455*^9}, {3.6827522575518446`*^9, 
   3.682752305498808*^9}, {3.682752343269593*^9, 3.682752354684014*^9}, {
   3.682755918271523*^9, 3.6827559318206263`*^9}, {3.6827559727179627`*^9, 
   3.682756087687999*^9}, {3.682756145721592*^9, 3.682756179708579*^9}, {
   3.6827562427576885`*^9, 3.682756246343544*^9}, {3.6827562838961797`*^9, 
   3.682756361155776*^9}, {3.6827564050716653`*^9, 3.682756407820393*^9}, {
   3.6827568065792284`*^9, 3.682756817610793*^9}, {3.6827569799864893`*^9, 
   3.682757046769945*^9}, {3.6827571010926585`*^9, 3.68275714115174*^9}, 
   3.6827572933922772`*^9, {3.682757377968191*^9, 3.6827573780054502`*^9}, {
   3.682757430656029*^9, 3.682757430938339*^9}, {3.682757538765318*^9, 
   3.6827575688045273`*^9}, {3.6827576062534266`*^9, 
   3.6827577481318636`*^9}, {3.6827581645482197`*^9, 
   3.6827581925304317`*^9}, {3.6827582367544127`*^9, 
   3.6827582371612177`*^9}, {3.682758608097464*^9, 3.682758623028547*^9}, {
   3.6827587073678665`*^9, 3.682758772728657*^9}, {3.682758834124054*^9, 
   3.682758836456462*^9}, {3.682782233662289*^9, 3.6827822447829604`*^9}, {
   3.682782320018792*^9, 3.682782487834862*^9}, {3.682782529947446*^9, 
   3.6827825314122334`*^9}, {3.682782623878173*^9, 3.6827826814501777`*^9}, {
   3.6827827337311916`*^9, 3.682782750069191*^9}, {3.682782896362369*^9, 
   3.6827828993756037`*^9}, {3.6827829353820267`*^9, 3.682782936614396*^9}, {
   3.6827852963565493`*^9, 3.6827852984977875`*^9}, {3.6827871345324674`*^9, 
   3.6827871372960124`*^9}, {3.6827873158456683`*^9, 3.682787318082534*^9}, 
   3.6860539435781755`*^9, {3.689601466774104*^9, 3.6896015532256894`*^9}, {
   3.6896016488772197`*^9, 3.6896017962777505`*^9}, {3.689601830847403*^9, 
   3.689601843970112*^9}, {3.689601972787878*^9, 3.689601987554659*^9}, {
   3.6896020823447723`*^9, 3.689602177412902*^9}, {3.689602219625367*^9, 
   3.6896025123406606`*^9}, {3.689602553886554*^9, 3.689602618506301*^9}, {
   3.6896026500310593`*^9, 3.6896026586156025`*^9}, {3.6896026945036297`*^9, 
   3.6896028712580557`*^9}, {3.6896029047014227`*^9, 
   3.6896029083520837`*^9}, {3.689602966711435*^9, 3.689603058571074*^9}, {
   3.6896030932120867`*^9, 3.689603098139574*^9}, {3.6896031601944327`*^9, 
   3.6896031778706956`*^9}, {3.692621083267871*^9, 3.692621091669281*^9}, {
   3.6926212289569902`*^9, 3.6926212863157787`*^9}, {3.6926213497820015`*^9, 
   3.692621425637977*^9}, {3.6926214644408817`*^9, 3.6926214670573387`*^9}, {
   3.692621527200048*^9, 3.6926216897906265`*^9}, {3.692627410197031*^9, 
   3.6926275455290575`*^9}, {3.692627745145838*^9, 3.6926277852211*^9}, {
   3.692627821712092*^9, 3.692627853727536*^9}, {3.693051401128996*^9, 
   3.693051427295449*^9}, {3.6930549156980915`*^9, 3.6930551127231016`*^9}, {
   3.6930552622573557`*^9, 3.693055266815773*^9}, {3.693055339369998*^9, 
   3.693055342949571*^9}, {3.6930554341310496`*^9, 3.693055503513935*^9}, {
   3.6930556414092984`*^9, 3.693055671403966*^9}, {3.6930558447268047`*^9, 
   3.693055926052605*^9}, {3.69305610697759*^9, 3.693056188778535*^9}, {
   3.6930563054950542`*^9, 3.6930563090177827`*^9}, {3.693056360765195*^9, 
   3.693056364987186*^9}, {3.693056410841975*^9, 3.6930564674928303`*^9}, {
   3.693056544238221*^9, 3.6930565494853306`*^9}, {3.6930566103966265`*^9, 
   3.6930566475710416`*^9}, {3.693056687192659*^9, 3.6930566953123307`*^9}, {
   3.6930567877264233`*^9, 3.6930568950334253`*^9}, {3.6930570764514155`*^9, 
   3.693057081922228*^9}, {3.6930571431816697`*^9, 3.6930572655759053`*^9}, {
   3.693057312085458*^9, 3.6930573768320684`*^9}, {3.6930574682013035`*^9, 
   3.693057478075393*^9}, {3.6932296110918107`*^9, 3.6932296491465197`*^9}, {
   3.6932296904250884`*^9, 3.6932297134186444`*^9}, {3.693229748263383*^9, 
   3.6932297809611044`*^9}, {3.6932308110630655`*^9, 3.693230887986189*^9}, 
   3.693231311160925*^9, {3.6932313870086255`*^9, 3.693231387261767*^9}, {
   3.693300257298705*^9, 3.693300990881487*^9}, {3.6933010948551283`*^9, 
   3.6933011038372164`*^9}, {3.6933011352536983`*^9, 3.693301291501009*^9}, {
   3.693301360678998*^9, 3.693301846650869*^9}, {3.6933018835332117`*^9, 
   3.6933019831666975`*^9}, {3.6933020216715317`*^9, 3.693302099051983*^9}, {
   3.6933021369545527`*^9, 3.6933023594457426`*^9}, {3.693315004372259*^9, 
   3.693315011074277*^9}, {3.6944413361908827`*^9, 3.694441336907129*^9}, {
   3.6950542188467774`*^9, 3.695054222592431*^9}, {3.6950542990197506`*^9, 
   3.695054307656605*^9}, {3.695055223340433*^9, 3.695055253120858*^9}, {
   3.695055384838611*^9, 3.6950553878557982`*^9}, {3.6950554421005893`*^9, 
   3.6950555642412815`*^9}, {3.695055732966177*^9, 3.6950557465022993`*^9}, {
   3.6950558046684055`*^9, 3.695055961220101*^9}, {3.695055998668761*^9, 
   3.6950560162157063`*^9}, {3.695056048840163*^9, 3.695056146211532*^9}, {
   3.6950561862654486`*^9, 3.695056188190776*^9}, {3.6950562373677807`*^9, 
   3.6950562879516363`*^9}, {3.6950563517744646`*^9, 3.695056360712323*^9}, {
   3.69505860651243*^9, 3.695058635588434*^9}, {3.695058684806075*^9, 
   3.6950588940516233`*^9}, {3.6957164552525945`*^9, 
   3.6957164560312014`*^9}, {3.6957168591079035`*^9, 
   3.6957169851976123`*^9}, {3.695717024315192*^9, 3.695717055967568*^9}, {
   3.695717541243352*^9, 3.695717560925682*^9}, 3.6957176038835087`*^9, {
   3.6957178788805103`*^9, 3.6957178831140776`*^9}, {3.6957179221867228`*^9, 
   3.6957179708748155`*^9}, 3.695718071534438*^9, {3.69571902099082*^9, 
   3.695719034182557*^9}, {3.695719110436449*^9, 3.69571912465912*^9}, {
   3.6959981424530063`*^9, 3.695998143402657*^9}, {3.695998201800911*^9, 
   3.6959982211236086`*^9}, 3.696161679540288*^9, {3.696332885830512*^9, 
   3.69633291986983*^9}, {3.6963330735158176`*^9, 3.6963330774044304`*^9}, {
   3.6963331566111712`*^9, 3.6963331767939215`*^9}, {3.696592128005638*^9, 
   3.696592200325493*^9}, {3.696592280079686*^9, 3.696592300895893*^9}, {
   3.696592360614642*^9, 3.6965924391532173`*^9}, {3.696592549000717*^9, 
   3.6965926737509665`*^9}, {3.6965927230303907`*^9, 3.696592776632204*^9}, {
   3.696592858783024*^9, 3.6965928838162374`*^9}, {3.6965929149072313`*^9, 
   3.696592957987955*^9}, {3.6965930011830645`*^9, 3.696593001767194*^9}, {
   3.6965931015144644`*^9, 3.6965931654384584`*^9}, 3.6965931976879473`*^9, {
   3.6965932301462927`*^9, 3.6965932334864273`*^9}, {3.6965933569359655`*^9, 
   3.6965933577742367`*^9}, {3.696593390597328*^9, 3.6965934361026325`*^9}, {
   3.69659349189392*^9, 3.696593496582985*^9}, {3.6965935305307894`*^9, 
   3.696593532985401*^9}, {3.6965936048453135`*^9, 3.6965936500412455`*^9}, {
   3.696593703183982*^9, 3.6965937451325016`*^9}, {3.6965938330555153`*^9, 
   3.696593888009883*^9}, {3.696593996396145*^9, 3.6965943945158587`*^9}, {
   3.696594455320829*^9, 3.6965947103520412`*^9}, 3.696594768684037*^9, {
   3.696594815028183*^9, 3.696594823298046*^9}, {3.6965948702502565`*^9, 
   3.696595114616662*^9}, {3.6965951697312756`*^9, 3.6965953069777794`*^9}, {
   3.6965953500124445`*^9, 3.696595353751785*^9}, {3.6965953948831806`*^9, 
   3.6965954213916507`*^9}, {3.696595542553995*^9, 3.6965955448754787`*^9}, {
   3.6965956361847277`*^9, 3.69659568404626*^9}, {3.696595734352703*^9, 
   3.6965957496578636`*^9}, {3.696595795766102*^9, 3.6965958031733503`*^9}, {
   3.696595870299922*^9, 3.6965959033890886`*^9}, {3.69659594497962*^9, 
   3.6965960170554657`*^9}, {3.696596069740856*^9, 3.6965960719006443`*^9}, {
   3.696596115793432*^9, 3.6965961457518997`*^9}, {3.6965962116946173`*^9, 
   3.6965962545251417`*^9}, {3.696596513453669*^9, 3.696596515787285*^9}, 
   3.696596667129428*^9, {3.696596717699503*^9, 3.696596905098714*^9}, {
   3.6965969520835447`*^9, 3.696597023631856*^9}, {3.6965971034463863`*^9, 
   3.696597122891425*^9}, {3.6965975434946456`*^9, 3.696597546602838*^9}, {
   3.696597678096383*^9, 3.696597688330096*^9}, {3.6965978572829094`*^9, 
   3.6965979026996202`*^9}, {3.6965980212576485`*^9, 3.6965980251793203`*^9}, 
   3.6966112031725936`*^9, {3.696611352492113*^9, 3.6966113711786222`*^9}, {
   3.6966114660470867`*^9, 3.6966114941486444`*^9}, {3.696611603631793*^9, 
   3.6966117017799177`*^9}, {3.696700266768712*^9, 3.696700288898875*^9}, {
   3.6967004337486825`*^9, 3.6967004344970875`*^9}, {3.696700470331721*^9, 
   3.696700811186071*^9}, 3.6967008770696635`*^9, {3.69806251910773*^9, 
   3.6980625541108*^9}, 3.6980625975942183`*^9, {3.698062632771715*^9, 
   3.6980628199497538`*^9}, 3.6980632337317467`*^9, {3.6980648304601855`*^9, 
   3.6980648325027876`*^9}, {3.698065066304674*^9, 3.698065079166938*^9}, {
   3.698065285455764*^9, 3.6980652965729313`*^9}, {3.6980653380167575`*^9, 
   3.6980653446492004`*^9}, {3.6980654471979094`*^9, 3.6980655292188916`*^9}, 
   3.6980655608374662`*^9, {3.698065604769106*^9, 3.698065619074422*^9}, {
   3.6980656675506783`*^9, 3.6980657993549433`*^9}, {3.6980658534383354`*^9, 
   3.698065966443425*^9}, {3.6980660365747347`*^9, 3.6980662024756727`*^9}, {
   3.6980662555999365`*^9, 3.698066332245663*^9}, {3.698066967983133*^9, 
   3.698067007227691*^9}, {3.6980670546053877`*^9, 3.698067056006934*^9}, {
   3.6980670908888907`*^9, 3.6980671669030037`*^9}, {3.6980724764654927`*^9, 
   3.698072477326563*^9}, 3.698072882773279*^9, {3.698072926956035*^9, 
   3.698073002792399*^9}, {3.6980735228888316`*^9, 3.6980736363143997`*^9}, {
   3.6980736736873636`*^9, 3.6980736762855873`*^9}, {3.698073733371315*^9, 
   3.6980738176139774`*^9}, {3.698074115673706*^9, 3.698074151883384*^9}, {
   3.6980741951740847`*^9, 3.698074199709016*^9}, {3.6980745246005197`*^9, 
   3.6980745474711885`*^9}, {3.698074601676409*^9, 3.69807460485203*^9}, {
   3.6980746715422163`*^9, 3.6980746777413116`*^9}, {3.6980791312936554`*^9, 
   3.69807925534293*^9}, {3.698079396933419*^9, 3.698079417484049*^9}, 
   3.6980842057440357`*^9, {3.6982409454848895`*^9, 3.6982412171955957`*^9}, {
   3.698241250091914*^9, 3.698241286441023*^9}, {3.698241327342353*^9, 
   3.6982413450801177`*^9}, {3.6982415966143312`*^9, 3.698241607293414*^9}, {
   3.698241638323495*^9, 3.6982416395132837`*^9}, {3.6982416887425785`*^9, 
   3.698241696773405*^9}, {3.698241822416162*^9, 3.6982418436196356`*^9}, {
   3.6982418853778315`*^9, 3.6982419724720964`*^9}, {3.6982684593176923`*^9, 
   3.6982685497169113`*^9}, {3.6982685851762476`*^9, 3.698268651698173*^9}, {
   3.6982687051849484`*^9, 3.6982688063507752`*^9}, {3.6982817507720194`*^9, 
   3.698281838841721*^9}, {3.6983178004506273`*^9, 3.6983178149373293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980732393627605`*^9, 3.6980732540080023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"MDGP", " ", "Edges"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"DGEdgesMDGP", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.698268659292677*^9, 3.698268679682145*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702717415001335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.698073269371405*^9, 3.6980732758917685`*^9}, {
  3.6980733132091875`*^9, 3.698073412714217*^9}, {3.698073837244851*^9, 
  3.6980738825713406`*^9}, {3.6980739630820827`*^9, 3.6980739865670257`*^9}, {
  3.6980740243601036`*^9, 3.698074078671706*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.7027174150375977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", 
   RowBox[{"x", ",", "4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980740869154997`*^9, 3.698074087535412*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.702717415053856*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", "x", "]"}]}]}], "Input",
 CellChangeTimes->{{3.698074093754369*^9, 3.698074100719349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.702717415100732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "backbone"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"x", "=", 
   RowBox[{"DGRandom3DBackbone", "[", 
    RowBox[{"5", ",", "\"\<HomogeneousCoords\>\"", ",", "0"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980743791997128`*^9, 3.6980744057210426`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Points\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",",
         "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5143771231717857`"}], ",", "2.1607420964278248`", ",",
         "1.2401936625999592`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.140802067777405`"}], ",", "3.550015284364621`", ",", 
        "1.3188562207568022`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"TorsionAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "5.2443479205160335`", ",", 
      "3.2464486631133274`"}], "}"}]}], ",", 
   RowBox[{"\<\"CovalentBondLengths\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1.526`", ",", "1.526`", ",", "1.526`", ",", "1.526`"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"PlaneRotationAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1.91`", ",", "1.91`", ",", "1.91`"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.702717415137991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "exact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698074330586739*^9, 3.698074347158475*^9}, {
   3.698074722476389*^9, 3.6980747337900963`*^9}, {3.6980789816254253`*^9, 
   3.6980789916984963`*^9}, 3.698232826976427*^9, 3.698233064477606*^9, 
   3.69823428647866*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "2.922279260253636`", "2.922279260253636`", 
      "2.922279260253636`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.33503068613685`", "4.33503068613685`", 
      "4.33503068613685`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "3.838986340382805`", "3.838986340382805`", 
      "3.838986340382805`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.526`", "1.526`", "1.526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.70271741516967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "inexact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980789964236283`*^9, 3.6980790439016924`*^9}, {
   3.698079080507471*^9, 3.6980791021393194`*^9}, 3.698232826999941*^9, 
   3.6982330644946165`*^9, 3.6982342864951715`*^9, {3.698241389853842*^9, 
   3.6982414361845713`*^9}, {3.6982421743828087`*^9, 3.698242181708167*^9}, {
   3.6983178850819316`*^9, 3.6983179125065937`*^9}}],

Cell[BoxData["4.9817846025676245`"], "Output",
 CellChangeTimes->{3.702717415185296*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.839254571592896`", "3.4553291144336065`", 
      "4.223180028752186`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.9817846025676245`", "4.483606142310862`", 
      "5.479963062824387`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "3.8393467071028535`", "3.4554120363925684`", 
      "4.223281377813139`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702717415200921*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot Routines\n",
 StyleBox["DGPlot3DBackbone, DGPlotAdjacencyMatrix", "Subitem",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698067020384124*^9, 3.6980670292797318`*^9}, {
  3.69807933406898*^9, 3.6980793390359116`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980799303095355`*^9, 3.698079937820016*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGPlot3DBackbone", ",", "\[IndentingNewLine]", "DGPlotAdjacencyMatrix"}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{"X_", ",", "r_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"objs", "=", 
        RowBox[{"{", "}"}]}], ",", "single", ",", "k", ",", "Y"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Plots", " ", "the", " ", "points", " ", "using", " ", "the", " ", 
       "coordinates", " ", "of", " ", 
       RowBox[{"X", "[", "\"\<Points\>\"", "]"}], " ", "property"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"single", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"single", ",", 
        RowBox[{"Y", "=", 
         RowBox[{"{", "X", "}"}]}], ",", 
        RowBox[{"Y", "=", "X"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "Y", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"objs", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"Y", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "d"}], "]"}]}], "}"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
       RowBox[{"objs", ",", "\[IndentingNewLine]", " ", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"DiagonalCovering_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "n", ",", "ei", ",", "ej", ",", "edges", ",", 
       "primitives", ",", "add"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"inverting", " ", "edges", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"n", "-", 
            RowBox[{
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"primitives", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", "edges", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plot", " ", "diagonal", " ", "covering"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"DiagonalCovering", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "edges", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"add", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "edges", "]"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ej", "=", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"add", ",", "\[IndentingNewLine]", 
              RowBox[{"PrependTo", "[", 
               RowBox[{"primitives", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Red", ",", 
                  RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "ei", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"primitives", ",", "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "+", "1", "-", "i"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698067066932127*^9, 3.6980670691426945`*^9}, {
  3.6980671902539835`*^9, 3.698067204062685*^9}, {3.698072477390606*^9, 
  3.698072477433634*^9}, {3.700987271372648*^9, 3.7009872875874596`*^9}, {
  3.700987323104432*^9, 3.7009874696514378`*^9}, {3.700987505505695*^9, 
  3.700987529023263*^9}, {3.7009875975775332`*^9, 3.7009877752900534`*^9}, {
  3.700987878201973*^9, 3.7009878784024715`*^9}, {3.700987950788203*^9, 
  3.7009880153453655`*^9}, {3.7009924409184427`*^9, 3.700992486222743*^9}, {
  3.7009926305790386`*^9, 3.700992654396882*^9}, {3.7009926852740664`*^9, 
  3.7009929240122814`*^9}, {3.7009929569973097`*^9, 3.700993026603757*^9}, {
  3.700993113636631*^9, 3.70099315839818*^9}, {3.7009932005168066`*^9, 
  3.7009932252977724`*^9}, {3.7009936381442947`*^9, 3.70099364635505*^9}, {
  3.7009938366151433`*^9, 3.70099384037185*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980799499995937`*^9, 3.698079957872316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "a", " ", "simple", " ", "a", " ", "backbone"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGRandom3DBackbone", "[", "7", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{
     RowBox[{"x", "[", "\"\<Points\>\"", "]"}], ",", "0.1", ",", "0.04"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698079970912464*^9, 3.698080010863962*^9}, {
   3.6980800447884617`*^9, 3.6980800500019207`*^9}, {3.7009874748140745`*^9, 
   3.7009874888528194`*^9}, {3.70098769231281*^9, 3.7009876933628187`*^9}, 
   3.7009877878708878`*^9, {3.7009878646324606`*^9, 3.700987907848855*^9}, {
   3.7009880253623495`*^9, 3.7009880288635263`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], 
    SphereBox[{-4.175354456649897, 2.918406061664793, 2.433301799008352}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-4.073400326030756, 0.7317799730731723, 1.2436407030510275`}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.6195413075325322`, 1.498089205418556, 2.482776753591911}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.559738547848874, 
     1.4390544004143437`, -0.007195202279582542}, 0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{-1.526, 0, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.1]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.559738547848874, 
      1.4390544004143437`, -0.007195202279582542}, {-4.073400326030756, 
      0.7317799730731723, 1.2436407030510275`}, {-3.6195413075325322`, 
      1.498089205418556, 2.482776753591911}, {-4.175354456649897, 
      2.918406061664793, 2.433301799008352}}, 0.04]}},
  Axes->False,
  Boxed->False]], "Output",
 CellChangeTimes->{3.702717415538743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "adjacency", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "True"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698080062339603*^9, 3.6980801360647244`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{10, 1}, {10, 10}, {1, 10}}],
     "Triangle"]}, 
   {PointSize[Medium], 
    PointBox[{{2, 10}, {3, 10}, {4, 10}, {5, 10}, {6, 10}, {7, 10}, {8, 10}, {
     9, 10}, {10, 10}, {3, 9}, {4, 9}, {5, 9}, {6, 9}, {7, 9}, {8, 9}, {9, 
     9}, {10, 9}, {4, 8}, {5, 8}, {6, 8}, {7, 8}, {8, 8}, {9, 8}, {10, 8}, {5,
      7}, {6, 7}, {7, 7}, {8, 7}, {9, 7}, {10, 7}, {6, 6}, {7, 6}, {8, 6}, {9,
      6}, {10, 6}, {7, 5}, {8, 5}, {9, 5}, {10, 5}, {8, 4}, {9, 4}, {10, 4}, {
     9, 3}, {10, 3}, {10, 2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 10}, {10, 1}}]}},
  Axes->True,
  AxesOrigin->{1, 1},
  GridLines->Automatic,
  Ticks->{Automatic, {{1, 
      FormBox["10", TraditionalForm]}, {2, 
      FormBox["9", TraditionalForm]}, {3, 
      FormBox["8", TraditionalForm]}, {4, 
      FormBox["7", TraditionalForm]}, {5, 
      FormBox["6", TraditionalForm]}, {6, 
      FormBox["5", TraditionalForm]}, {7, 
      FormBox["4", TraditionalForm]}, {8, 
      FormBox["3", TraditionalForm]}, {9, 
      FormBox["2", TraditionalForm]}, {10, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.7027174157550077`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2) Check Solution and Standard Solvers", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution Analysis \n",
 StyleBox["DGRelativeResidue,", "Text",
  FontSlant->"Italic"],
 StyleBox[" DGLDME, DGRMSD", "Item",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698080472408944*^9, 3.6980804768391886`*^9}, {
   3.6980819993394966`*^9, 3.6980819997147427`*^9}, {3.69808505769368*^9, 
   3.698085064416663*^9}, {3.6980850988719807`*^9, 3.6980851081311226`*^9}, 
   3.7003143420681887`*^9, {3.700316618932584*^9, 3.7003166283211555`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980817616089787`*^9, 3.6980817644118385`*^9}, {
  3.698081995870195*^9, 3.698081997682396*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGRelativeResidue", ",", "DGRMSD", ",", "DGLDME"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "k", ",", "lij", ",", "uij", ",", " ", "dij", ",", 
        "numberOfEdges", ",", "E", ",", "error"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numberOfEdges", "=", 
        RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfEdges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "numberOfEdges"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"j", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"error", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"lij", "-", "dij"}]}], "}"}], "]"}], "/", "lij"}], 
             ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"dij", "-", "uij"}]}], "}"}], "]"}], "/", "uij"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"Solution\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"Quality\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of nodes      : \>\"", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of edges      : \>\"", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Relative error bounds: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "error", "]"}], ",", 
              RowBox[{"Max", "[", "error", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Mean relative error  : \>\"", ",", 
            RowBox[{"Mean", "[", "error", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "error", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculates", " ", "the", " ", "relative", " ", "residue", " ", "of", 
      " ", "the", " ", 
      StyleBox[
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}],
       FontSlant->"Italic"], " ", "considering", " ", "only", " ", "the", " ", 
      RowBox[{"nodes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eij", ",", "j", ",", "k", ",", "V", ",", "Xi", ",", "Xj", ",", "Dij", 
        ",", "Lij", ",", "Uij", ",", "errorDij", ",", "nid"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"current", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Xi", "=", 
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "indentifies", " ", "which", " ", "nodes", " ", "has", " ", "been", 
         " ", "already", " ", "fixed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nid", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "i"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "i"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nid", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", "k"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "considering", " ", "only", " ", "the", " ", "precedent", " ", 
         "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"V", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"nid", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<V=\>\"", ",", "V"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"errorDij", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "V", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"neighbor", " ", "index"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"V", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"neighbor", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Xj", "=", 
           RowBox[{"X", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"actual", " ", "distance"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"Xi", ",", "Xj"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"distance", " ", "bounds"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"error", " ", "Dij"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"eij", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Lij", "-", "Dij"}], ")"}], "/", "Lij"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dij", "-", "Uij"}], ")"}], "/", "Uij"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "error"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eij", ">", "errorDij"}], ",", 
            RowBox[{"errorDij", "=", "eij"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "errorDij", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGLDME", "[", 
     RowBox[{"G_", ",", "X_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "E", ",", 
        RowBox[{"ldme", "=", "0"}], ",", "lij", ",", "uij", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ldme", "+=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lij", "-", "dij"}], ",", 
              RowBox[{"dij", "-", "uij"}], ",", "0"}], "]"}], "^", 
            "2"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"ldme", "/", 
          RowBox[{"Length", "[", "E", "]"}]}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRMSD", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xc", ",", "yc", ",", "x", ",", "y", ",", "U", ",", "D", ",", "V", ",", 
      "rmsd"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"calculating", " ", "centers"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xc", "=", 
      RowBox[{"Mean", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yc", "=", 
      RowBox[{"Mean", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "translation", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "xc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "yc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "svd", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "D", ",", "V"}], "}"}], "=", 
      RowBox[{"SingularValueDecomposition", "[", "V", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"U", ".", 
       RowBox[{"Transpose", "[", "V", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"x", ".", "V"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rmsd", "=", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"x", "-", "y"}], ",", "\"\<Frobenius\>\""}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"rmsd", ",", "V", ",", "x", ",", "y"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.694502972960245*^9, {3.698067367481141*^9, 3.698067395833313*^9}, {
   3.698067426273737*^9, 3.6980674351745768`*^9}, {3.698067476857498*^9, 
   3.698067483945337*^9}, {3.698072477617757*^9, 3.6980724776993113`*^9}, {
   3.698080496562684*^9, 3.698080532662128*^9}, {3.6980805663762627`*^9, 
   3.6980805821927524`*^9}, {3.6980806901517887`*^9, 3.698080796669462*^9}, {
   3.6980808393943543`*^9, 3.698080998395549*^9}, {3.6980810288677597`*^9, 
   3.698081062766244*^9}, {3.6980810944827795`*^9, 3.6980812551239653`*^9}, {
   3.6980812941803694`*^9, 3.698081718035078*^9}, 3.698081759366491*^9, {
   3.6980821303298736`*^9, 3.698082131928934*^9}, {3.6980823171869106`*^9, 
   3.6980823242021375`*^9}, {3.6980824851120887`*^9, 3.6980824974522734`*^9}, 
   3.6980826051157875`*^9, {3.698082694063882*^9, 3.698083018317852*^9}, {
   3.698083054638441*^9, 3.698083067468951*^9}, {3.698083643291038*^9, 
   3.698083685250867*^9}, {3.698084961578022*^9, 3.6980849783856697`*^9}, {
   3.6980850110823555`*^9, 3.6980850259131927`*^9}, {3.6980850881383624`*^9, 
   3.6980851960959663`*^9}, 3.698085227318336*^9, {3.698085299672714*^9, 
   3.69808532412243*^9}, {3.6982596118859816`*^9, 3.6982596174341617`*^9}, {
   3.7003143019857407`*^9, 3.7003143249318533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.679350148964155*^9, 3.679350152549901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGRMSD", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.814700", ",", "0.097500", ",", "0.157600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.905800", ",", "0.278500", ",", "0.970600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.127000", ",", "0.546900", ",", "0.957200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.913400", ",", "0.957500", ",", "0.485400"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.632400", ",", "0.964900", ",", "0.800300"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.167723", ",", "5.509229", ",", "5.376972"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.921716", ",", "5.625914", ",", "6.161379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.265461", ",", "5.705450", ",", "6.339958"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.936486", ",", "6.432611", ",", "5.883000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.680966", ",", "5.982123", ",", "5.893736"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "X", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "Y", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmsd", ",", "Q", ",", "x", ",", "y"}], "}"}], "=", 
     RowBox[{"DGRMSD", "[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"rmsd", ",", 
     RowBox[{"MatrixForm", "[", "Q", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.698085535985145*^9, 3.6980855913598733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.8147`", "0.0975`", "0.1576`"},
       {"0.9058`", "0.2785`", "0.9706`"},
       {"0.127`", "0.5469`", "0.9572`"},
       {"0.9134`", "0.9575`", "0.4854`"},
       {"0.6324`", "0.9649`", "0.8003`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6.167723`", "5.509229`", "5.376972`"},
       {"5.921716`", "5.625914`", "6.161379`"},
       {"5.265461`", "5.70545`", "6.339958`"},
       {"5.936486`", "6.432611`", "5.883`"},
       {"5.680966`", "5.982123`", "5.893736`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7027174158018875`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1903780078674813`", ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9566747069429383`", "0.2765434897775246`", "0.09108898592755987`"},
       {
        RowBox[{"-", "0.2837391927655152`"}], "0.9556736038779582`", 
        "0.07861318807737516`"},
       {
        RowBox[{"-", "0.06531137408152571`"}], 
        RowBox[{"-", "0.10105276400268803`"}], "0.9927349914770809`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.29768724295102145`", 
        RowBox[{"-", "0.3608305893562868`"}], 
        RowBox[{"-", "0.5375458406210714`"}]},
       {"0.2803853677346845`", 
        RowBox[{"-", "0.24481645226982926`"}], "0.29207490110980117`"},
       {
        RowBox[{"-", "0.5399533209580477`"}], 
        RowBox[{"-", "0.2023316197900854`"}], "0.22893192966359216`"},
       {"0.12668626232402228`", "0.45521845637971775`", 
        RowBox[{"-", "0.13552948575729132`"}]},
       {
        RowBox[{"-", "0.16480555205168068`"}], "0.3527602050364837`", 
        "0.1520684956049697`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3732525999999998`", 
        RowBox[{"-", "0.34183640000000004`"}], 
        RowBox[{"-", "0.5540370000000001`"}]},
       {"0.12724560000000018`", 
        RowBox[{"-", "0.22515140000000056`"}], "0.23036999999999974`"},
       {
        RowBox[{"-", "0.5290093999999996`"}], 
        RowBox[{"-", "0.1456154000000005`"}], "0.4089489999999998`"},
       {"0.14201560000000057`", "0.5815455999999992`", 
        RowBox[{"-", "0.04800900000000041`"}]},
       {
        RowBox[{"-", "0.11350440000000006`"}], "0.13105759999999922`", 
        RowBox[{"-", "0.03727300000000078`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7027174159860964`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "relative", " ", "error"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
     RowBox[{"x", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], ",", "True"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980818764703417`*^9, 3.698081886967304*^9}, {
   3.698081945433242*^9, 3.698081988827022*^9}, 3.698082060929844*^9, {
   3.6980820951910677`*^9, 3.6980820983881884`*^9}, {3.6980821446609993`*^9, 
   3.6980822671425567`*^9}, {3.6980825518738685`*^9, 3.698082555863014*^9}, {
   3.6980830370027437`*^9, 3.6980830414366865`*^9}, {3.6980830871540065`*^9, 
   3.6980830909235086`*^9}, {3.69808533986487*^9, 3.698085364223053*^9}, 
   3.698085405098055*^9, {3.6980854633787403`*^9, 3.698085468666749*^9}, {
   3.700314324969633*^9, 3.700314324969633*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717416001712*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.70271741601734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.70271741601734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.70271741601734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Mean relative error  : ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{3.70271741601734*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7027174160349736`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717416038476*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174160394783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174160394783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.0040109253882126715`", ",", "0.08776122111577453`"}], "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {0.0040109253882126715`, 0.08776122111577453}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174160394783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "0.033534993527428135`"}],
  SequenceForm["Mean relative error  : ", 0.033534993527428135`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174160394783`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.036342179512326434`", ",", "0.03654913127086201`", ",", 
   "0.054833554241728436`", ",", "0.004753005625219553`", ",", 
   "0.0040109253882126715`", ",", "0.08776122111577453`", ",", 
   "0.012585551077983915`", ",", "0.016708669913859043`", ",", 
   "0.03436685230450509`", ",", "0.04743884482380967`"}], "}"}]], "Output",
 CellChangeTimes->{3.7027174160394783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "+=", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGRelativeResidue", "[", 
  RowBox[{
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "4"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6980825719787025`*^9, 3.6980825962794266`*^9}, {
   3.698259647769782*^9, 3.698259648639358*^9}, 3.7003143250008965`*^9}],

Cell[BoxData["0.1022703842524302`"], "Output",
 CellChangeTimes->{3.70271741607073*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Methods\n",
 StyleBox["DGNSolve, DGAllEdgesSolver, DGOptSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6944402487750998`*^9, 3.694440261776547*^9}, {
   3.6950520111428094`*^9, 3.695052013723016*^9}, {3.6980831506880984`*^9, 
   3.6980831767769136`*^9}, {3.698133371312555*^9, 3.6981333836562414`*^9}, {
   3.698135930449641*^9, 3.698135948486604*^9}, 3.700322100281624*^9}],

Cell[CellGroupData[{

Cell["DGNSolve - Nonlinear equations", "Section",
 CellChangeTimes->{{3.695980774599187*^9, 3.6959807890422645`*^9}, {
   3.698083438792361*^9, 3.6980834456569133`*^9}, 3.6981342346777525`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGNSolve", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNSolve", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "i", ",", "j", ",", "d", ",", "d12", ",", "eqs", ",", "xi", 
       ",", "xj", ",", "x", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "i", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<x\>\"", ",", 
            RowBox[{"ToString", "[", "xi", "]"}], ",", 
            RowBox[{"ToString", "[", "xj", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xj", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "i", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xi", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xj", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eqs", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "some", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"d12", "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"eqs", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "d12"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<eqs=\>\"", ",", 
        RowBox[{"TableForm", "[", "eqs", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"x", "=", 
        RowBox[{"NSolve", "[", 
         RowBox[{"eqs", ",", "x", ",", "Reals"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<x=\>\"", ",", 
        RowBox[{"TableForm", "[", "x", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "convert", " ", "relations", " ", "to", " ", "scalar", " ", "matrix"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "1"}], ",", 
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959807931988735`*^9, 3.6959808651195087`*^9}, {
   3.695981319470448*^9, 3.6959816654278154`*^9}, {3.695981696802899*^9, 
   3.69598193790523*^9}, {3.6959820413830986`*^9, 3.695982084209268*^9}, {
   3.695982167030732*^9, 3.6959821710191383`*^9}, {3.6959822184038534`*^9, 
   3.695982247628214*^9}, {3.695982304465785*^9, 3.6959823353580503`*^9}, {
   3.695982376103098*^9, 3.6959823800191355`*^9}, {3.695982800673107*^9, 
   3.695982828060028*^9}, {3.6959828702427034`*^9, 3.695982871401049*^9}, {
   3.6959829164454274`*^9, 3.6959830004868164`*^9}, {3.6959888042983994`*^9, 
   3.695988828501298*^9}, {3.695988895041767*^9, 3.695988955372898*^9}, {
   3.6959890712644*^9, 3.695989072049646*^9}, {3.695989103696677*^9, 
   3.6959891990099096`*^9}, {3.695989270528079*^9, 3.695989273022993*^9}, {
   3.6959893888410683`*^9, 3.695989444627164*^9}, {3.695989528041983*^9, 
   3.695989547018861*^9}, {3.695989592844425*^9, 3.6959896880344257`*^9}, {
   3.695989726077453*^9, 3.695989755804819*^9}, {3.695989869082122*^9, 
   3.6959899107177277`*^9}, {3.695989946606575*^9, 3.695989951887924*^9}, {
   3.695989995530915*^9, 3.6959901298385134`*^9}, {3.6959901809553523`*^9, 
   3.695990198460229*^9}, {3.6959902513619356`*^9, 3.695990370372473*^9}, {
   3.6959904207088675`*^9, 3.695990423239892*^9}, {3.6959904662502933`*^9, 
   3.6959905066632338`*^9}, {3.6959905389614973`*^9, 3.695990555189827*^9}, {
   3.695990592406352*^9, 3.6959905969143476`*^9}, {3.695990862448014*^9, 
   3.6959908807504*^9}, {3.696000226158333*^9, 3.6960002763225875`*^9}, 
   3.696000556861759*^9, 3.698072480850925*^9, {3.6980831666521983`*^9, 
   3.6980831691908817`*^9}, {3.6980832306786633`*^9, 3.698083358132863*^9}, {
   3.698083461150189*^9, 3.698083470133647*^9}, {3.698083534682835*^9, 
   3.6980835526362424`*^9}, {3.698083691959817*^9, 3.6980837054017324`*^9}, 
   3.6980838454526196`*^9, {3.6980839403088937`*^9, 3.6980839490326786`*^9}, {
   3.6980843544733815`*^9, 3.698084438317992*^9}, {3.6980845362034473`*^9, 
   3.6980845613631344`*^9}, {3.6980846745877323`*^9, 
   3.6980846848488035`*^9}, {3.698084721247966*^9, 3.698084721453601*^9}, {
   3.698084817232126*^9, 3.6980848637684917`*^9}, {3.6981335546141305`*^9, 
   3.698133654313637*^9}, 3.6981337103556285`*^9, {3.698133846774843*^9, 
   3.6981338552489643`*^9}, {3.698133886967635*^9, 3.698133943451098*^9}, {
   3.698135573538377*^9, 3.698135617321416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.6981342657108355`*^9, 3.698134272655942*^9}, {
  3.6981343900066195`*^9, 3.6981343928237734`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959821725045357`*^9, 3.6959822057965155`*^9}, {
   3.695982268679414*^9, 3.6959823441443806`*^9}, {3.695982920850732*^9, 
   3.6959829209352903`*^9}, {3.6959889733898363`*^9, 
   3.6959890309626265`*^9}, {3.6959890820892334`*^9, 
   3.6959890852169228`*^9}, {3.6959894614439697`*^9, 
   3.6959894618659773`*^9}, {3.695990141312871*^9, 3.6959901626141343`*^9}, {
   3.6959902092902546`*^9, 3.695990213653076*^9}, {3.6959906056694627`*^9, 
   3.6959907132884865`*^9}, {3.69599074403419*^9, 3.6959908171476326`*^9}, {
   3.695990848691627*^9, 3.695990848783781*^9}, {3.6959909472498837`*^9, 
   3.695990958030756*^9}, {3.6959909990686064`*^9, 3.6959911014281673`*^9}, {
   3.6959913603925343`*^9, 3.695991378520133*^9}, {3.695991433093545*^9, 
   3.6959914428903313`*^9}, 3.695991528666456*^9, {3.69599293111237*^9, 
   3.6959929457414904`*^9}, {3.6959998819368143`*^9, 
   3.6959998966497583`*^9}, {3.6980724808624325`*^9, 3.698072480872939*^9}, {
   3.698083371004901*^9, 3.6980833815779133`*^9}, {3.6980834763637805`*^9, 
   3.6980835167999725`*^9}, {3.698083560105197*^9, 3.698083627113807*^9}, {
   3.698083718150687*^9, 3.698083729336606*^9}, {3.6980837656231737`*^9, 
   3.6980837817648787`*^9}, {3.6980839882216706`*^9, 3.698083993838396*^9}, {
   3.698084540828515*^9, 3.698084565599944*^9}, {3.6980849011127596`*^9, 
   3.6980849128890715`*^9}, {3.698133031309068*^9, 3.698133037710814*^9}, {
   3.698133273852414*^9, 3.6981332754589806`*^9}, 3.6981338077458096`*^9, {
   3.6981339586967115`*^9, 3.6981339613164473`*^9}, 3.6981341845189857`*^9, 
   3.698134282590531*^9, 3.6981347590256243`*^9, 3.6982328270239544`*^9, 
   3.6982330645126257`*^9, 3.6982342865056777`*^9, 3.700314325047763*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.70271741611761*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "1.`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     1., ($CellContext`x11 - $CellContext`x31)^2 + ($CellContext`x12 - \
$CellContext`x32)^2 + ($CellContext`x13 - $CellContext`x33)^2 == 
     1., ($CellContext`x21 - $CellContext`x31)^2 + ($CellContext`x22 - \
$CellContext`x32)^2 + ($CellContext`x23 - $CellContext`x33)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 1., $CellContext`x11 == 0, $CellContext`x12 == 
     0, $CellContext`x13 == 0, $CellContext`x21 == 1., $CellContext`x22 == 
     0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.70271741611761*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{"x11", "\[Rule]", "0.`"}], 
       RowBox[{"x12", "\[Rule]", "0.`"}], 
       RowBox[{"x13", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x21", "\[Rule]", "1.`"}], 
       RowBox[{"x22", "\[Rule]", "0.`"}], 
       RowBox[{"x23", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x31", "\[Rule]", "0.`"}], 
       RowBox[{"x32", "\[Rule]", 
        RowBox[{"-", "0.9461485789259028`"}]}], 
       RowBox[{"x33", "\[Rule]", "0.3237327085675732`"}]},
      {
       RowBox[{"x41", "\[Rule]", "0.3920674858148788`"}], 
       RowBox[{"x42", "\[Rule]", "0.12068110699822138`"}], 
       RowBox[{"x43", "\[Rule]", "1.288134677947717`"}]},
      {
       RowBox[{"x51", "\[Rule]", "0.7812591758266134`"}], 
       RowBox[{"x52", "\[Rule]", "0.9009284425215245`"}], 
       RowBox[{"x53", "\[Rule]", "0.3748071414683701`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{$CellContext`x11 -> 0., $CellContext`x12 -> 
      0., $CellContext`x13 -> 0.}, {$CellContext`x21 -> 1., $CellContext`x22 -> 
      0., $CellContext`x23 -> 0.}, {$CellContext`x31 -> 
      0., $CellContext`x32 -> -0.9461485789259028, $CellContext`x33 -> 
      0.3237327085675732}, {$CellContext`x41 -> 
      0.3920674858148788, $CellContext`x42 -> 
      0.12068110699822138`, $CellContext`x43 -> 
      1.288134677947717}, {$CellContext`x51 -> 
      0.7812591758266134, $CellContext`x52 -> 
      0.9009284425215245, $CellContext`x53 -> 0.3748071414683701}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417217745*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0.`", "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "1.`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], "0.`", 
      RowBox[{"-", "0.9461485789259028`"}], "0.3237327085675732`"},
     {
      TagBox["4",
       HoldForm], "0.3920674858148788`", "0.12068110699822138`", 
      "1.288134677947717`"},
     {
      TagBox["5",
       HoldForm], "0.7812591758266134`", "0.9009284425215245`", 
      "0.3748071414683701`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Output",
 CellChangeTimes->{3.702717417217745*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027174172393637`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174172393637`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174172393637`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.5543122344752192`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.5543122344752192`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174172393637`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "8.786542118747292`*^-16"}],
  SequenceForm["Mean relative error  : ", 8.786542118747292*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174172393637`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.698134374303359*^9, 3.6981343879453526`*^9}, {
  3.6981344825839243`*^9, 3.6981345190736256`*^9}, {3.6981347408180485`*^9, 
  3.6981347432411566`*^9}, {3.6981349406590924`*^9, 3.698134953907379*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959914809267282`*^9, 3.6959914981254253`*^9}, {
   3.695991562961543*^9, 3.6959916431277523`*^9}, {3.6959920787623296`*^9, 
   3.695992087048052*^9}, {3.696946214015137*^9, 3.69694621608445*^9}, {
   3.6980724808839464`*^9, 3.698072480897456*^9}, {3.698084028617964*^9, 
   3.698084105895296*^9}, {3.6980858921917467`*^9, 3.6980858944297314`*^9}, {
   3.698085934280164*^9, 3.6980859343897343`*^9}, {3.6980859899040556`*^9, 
   3.698086052129326*^9}, {3.6981330460023603`*^9, 3.698133057702621*^9}, 
   3.6981330886126213`*^9, {3.6981331326739793`*^9, 3.6981331488507085`*^9}, {
   3.698133253865158*^9, 3.698133296529955*^9}, {3.698133447048286*^9, 
   3.6981334486803684`*^9}, {3.698133997471426*^9, 3.698133999296138*^9}, {
   3.6981342041044755`*^9, 3.698134209840279*^9}, {3.6981343631304502`*^9, 
   3.6981343650707364`*^9}, {3.698134496173938*^9, 3.6981345005568447`*^9}, {
   3.6981345313367596`*^9, 3.6981345910158415`*^9}, 3.6981346249008155`*^9, 
   3.698134701853427*^9, {3.6981348637946124`*^9, 3.6981349007781425`*^9}, 
   3.698232827103007*^9, 3.698233064531138*^9, 3.6982342865161858`*^9, 
   3.7003143251011763`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702717417439737*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", 
         "0.48442079485399997`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.46455244687799996`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.06095072934799999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.18868906230899998`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "0.6960034445704992`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     0.48442079485399997`, ($CellContext`x11 - $CellContext`x31)^2 + \
($CellContext`x12 - $CellContext`x32)^2 + ($CellContext`x13 - \
$CellContext`x33)^2 == 
     0.46455244687799996`, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     0.06095072934799999, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 0.18868906230899998`, $CellContext`x11 == 
     0, $CellContext`x12 == 0, $CellContext`x13 == 0, $CellContext`x21 == 
     0.6960034445704992, $CellContext`x22 == 0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417439737*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175369997`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027174175400023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175400023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175400023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0.9999999999999999, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175400023`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "1.`"}],
  SequenceForm["Mean relative error  : ", 1.],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175400023`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981347628831825`*^9, 3.698134786324731*^9}, 
   3.698134823515397*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981348054584217`*^9, 3.698134807957579*^9}, 
   3.698232827128024*^9, 3.69823306454965*^9, 3.6982342865201874`*^9, 
   3.7003143251480494`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.`", "1.`", "1.`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7027174175712614`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x43"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x41", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x42", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x43", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "2.9999999999999996`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "1.`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     1., ($CellContext`x11 - $CellContext`x31)^2 + ($CellContext`x12 - \
$CellContext`x32)^2 + ($CellContext`x13 - $CellContext`x33)^2 == 
     1., ($CellContext`x11 - $CellContext`x41)^2 + ($CellContext`x12 - \
$CellContext`x42)^2 + ($CellContext`x13 - $CellContext`x43)^2 == 
     1., ($CellContext`x11 - $CellContext`x51)^2 + ($CellContext`x12 - \
$CellContext`x52)^2 + ($CellContext`x13 - $CellContext`x53)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x41)^2 + \
($CellContext`x22 - $CellContext`x42)^2 + ($CellContext`x23 - \
$CellContext`x43)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 
     1., ($CellContext`x31 - $CellContext`x41)^2 + ($CellContext`x32 - \
$CellContext`x42)^2 + ($CellContext`x33 - $CellContext`x43)^2 == 
     2.0000000000000004`, ($CellContext`x31 - $CellContext`x51)^2 + \
($CellContext`x32 - $CellContext`x52)^2 + ($CellContext`x33 - \
$CellContext`x53)^2 == 
     1., ($CellContext`x41 - $CellContext`x51)^2 + ($CellContext`x42 - \
$CellContext`x52)^2 + ($CellContext`x43 - $CellContext`x53)^2 == 
     2.9999999999999996`, $CellContext`x11 == 0, $CellContext`x12 == 
     0, $CellContext`x13 == 0, $CellContext`x21 == 1., $CellContext`x22 == 
     0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174175712614`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{"x11", "\[Rule]", "0.`"}], 
       RowBox[{"x12", "\[Rule]", "0.`"}], 
       RowBox[{"x13", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x21", "\[Rule]", "1.`"}], 
       RowBox[{"x22", "\[Rule]", "0.`"}], 
       RowBox[{"x23", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x31", "\[Rule]", "0.`"}], 
       RowBox[{"x32", "\[Rule]", "0.11356406042150105`"}], 
       RowBox[{"x33", "\[Rule]", 
        RowBox[{"-", "0.9935306760138731`"}]}]},
      {
       RowBox[{"x41", "\[Rule]", "0.`"}], 
       RowBox[{"x42", "\[Rule]", "0.9935306760138729`"}], 
       RowBox[{"x43", "\[Rule]", "0.1135640604215011`"}]},
      {
       RowBox[{"x51", "\[Rule]", "1.`"}], 
       RowBox[{"x52", "\[Rule]", "0.11356406042150105`"}], 
       RowBox[{"x53", "\[Rule]", 
        RowBox[{"-", "0.9935306760138731`"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{$CellContext`x11 -> 0., $CellContext`x12 -> 
      0., $CellContext`x13 -> 0.}, {$CellContext`x21 -> 1., $CellContext`x22 -> 
      0., $CellContext`x23 -> 0.}, {$CellContext`x31 -> 0., $CellContext`x32 -> 
      0.11356406042150105`, $CellContext`x33 -> -0.9935306760138731}, \
{$CellContext`x41 -> 0., $CellContext`x42 -> 
      0.9935306760138729, $CellContext`x43 -> 
      0.1135640604215011}, {$CellContext`x51 -> 1., $CellContext`x52 -> 
      0.11356406042150105`, $CellContext`x53 -> -0.9935306760138731}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174177398357`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0.`", "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "1.`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], "0.`", "0.11356406042150105`", 
      RowBox[{"-", "0.9935306760138731`"}]},
     {
      TagBox["4",
       HoldForm], "0.`", "0.9935306760138729`", "0.1135640604215011`"},
     {
      TagBox["5",
       HoldForm], "1.`", "0.11356406042150105`", 
      RowBox[{"-", "0.9935306760138731`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Output",
 CellChangeTimes->{3.7027174177398357`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027174177398357`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174177398357`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417755591*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.1102230246251565`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.1102230246251565`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417755591*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "6.075938985661148`*^-16"}],
  SequenceForm["Mean relative error  : ", 6.075938985661148*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417755591*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.6981343377716303`*^9, 3.6981343538603*^9}, {
  3.6981344661054945`*^9, 3.698134480170825*^9}, {3.698134734934148*^9, 
  3.6981347357797074`*^9}, {3.6981350119238586`*^9, 3.6981350132437344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698134194580659*^9, 3.6981342001503525`*^9}, {
   3.698134310771722*^9, 3.698134331373887*^9}, {3.6981350004322367`*^9, 
   3.6981350190771027`*^9}, 3.698232827151539*^9, 3.6982330645676622`*^9, 
   3.698234286524191*^9, 3.7003143251858363`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "0.9067104106681471`", "0.9067104106681471`", 
      "0.9067104106681471`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "0.5323895510404012`", "0.5323895510404012`", 
      "0.5323895510404012`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "0.5225119104173607`", "0.5225119104173607`", 
      "0.5225119104173607`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "0.7349697695252506`", "0.7349697695252506`", 
      "0.7349697695252506`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "0.5914445952251148`", "0.5914445952251148`", 
      "0.5914445952251148`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "0.6085463860290355`", "0.6085463860290355`", 
      "0.6085463860290355`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7027174177868404`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", 
         "0.48442079485399997`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.46455244687799996`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.8221237688139998`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.2834386340569999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.06095072934799999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.2730186965279999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.18868906230899998`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.540180562116`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.34980670922099993`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x41", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x42", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x43", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.37032870394899997`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "0.6960034445704992`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     0.48442079485399997`, ($CellContext`x11 - $CellContext`x31)^2 + \
($CellContext`x12 - $CellContext`x32)^2 + ($CellContext`x13 - \
$CellContext`x33)^2 == 
     0.46455244687799996`, ($CellContext`x11 - $CellContext`x41)^2 + \
($CellContext`x12 - $CellContext`x42)^2 + ($CellContext`x13 - \
$CellContext`x43)^2 == 
     0.8221237688139998, ($CellContext`x11 - $CellContext`x51)^2 + \
($CellContext`x12 - $CellContext`x52)^2 + ($CellContext`x13 - \
$CellContext`x53)^2 == 
     0.2834386340569999, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     0.06095072934799999, ($CellContext`x21 - $CellContext`x41)^2 + \
($CellContext`x22 - $CellContext`x42)^2 + ($CellContext`x23 - \
$CellContext`x43)^2 == 
     0.2730186965279999, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 
     0.18868906230899998`, ($CellContext`x31 - $CellContext`x41)^2 + \
($CellContext`x32 - $CellContext`x42)^2 + ($CellContext`x33 - \
$CellContext`x43)^2 == 
     0.540180562116, ($CellContext`x31 - $CellContext`x51)^2 + \
($CellContext`x32 - $CellContext`x52)^2 + ($CellContext`x33 - \
$CellContext`x53)^2 == 
     0.34980670922099993`, ($CellContext`x41 - $CellContext`x51)^2 + \
($CellContext`x42 - $CellContext`x52)^2 + ($CellContext`x43 - \
$CellContext`x53)^2 == 0.37032870394899997`, $CellContext`x11 == 
     0, $CellContext`x12 == 0, $CellContext`x13 == 0, $CellContext`x21 == 
     0.6960034445704992, $CellContext`x22 == 0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174177868404`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417840229*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717417840229*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417840229*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717417840229*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0.9999999999999999, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174178558655`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "1.`"}],
  SequenceForm["Mean relative error  : ", 1.],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174178558655`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGOptSolver - Optimization", "Section",
 CellChangeTimes->{{3.6981358277685385`*^9, 3.698135859657689*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6945082211811686`*^9, 3.6945082350165057`*^9}, {
   3.694508353277437*^9, 3.694508357986554*^9}, {3.694509485037609*^9, 
   3.6945095303971586`*^9}, 3.6981358145867968`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOptSolverFobj", ",", "DGOptSolver"}], "]"}]], "Input",
 CellChangeTimes->{{3.69813587956089*^9, 3.698135900942071*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DGOptSolverFobj", "[", 
   RowBox[{"i_", ",", "j_", ",", "d_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "=", "0"}], ",", "numberOfAtoms", ",", "ncols", ",", 
      "nrows", ",", "k", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"f", "+=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "^", 
            "2"}]}], ")"}], "^", "2"}]}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGOptSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "f", ",", "y", ",", "v", ",", "w", ",", "i", ",", 
      "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "z", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"z", ",", 
        RowBox[{"3", "*", "numberOfAtoms"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", ":=", 
      RowBox[{
       RowBox[{"DGOptSolverFobj", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "#"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "y"}], "}"}], "=", 
      RowBox[{"NMinimize", "[", 
       RowBox[{
        RowBox[{"f", "[", "y", "]"}], ",", "y"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", "iloc", "]"}], "]"}], "[", 
          RowBox[{"[", "jloc", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwl0G1IU3EUBvC10AqKEBGNcuxmiDJ1mHmFJdF6AbdCxrq9KFrOUJsKRY3I
EExmJisj8u72cvU65wcjkGEur9SHcBGVisxc2IvaWFtik2WNBk2D7vPvw+EH
h4dzOIeqPm+skctksjyp4Fqvq+pBe1jb4XGaoCFovQrtqmXizOn7LZB2jbVC
YSHDBtnsA7dJXk874I9kfhTm3PjkgRWLCa+gWagMkfn2CeKkmPobKjL3EQ3b
N8Rh73iMWG7ZuvEh9vhWNsES2yIHvy5HiGyQEuGH0rwx+Cdr+v2wZOeV8Cxc
mW7yw2bhUgie6vtucEsyujNGGOj/XAan1EMm+C5WXgcHXzc1ws2HuGdwMuoh
+oTxl/CcanYGptd756FbTy1B+fqEKNxd4FyF1KO3257iDm9zOuzv2ZEFM125
anh5z7oCWE2XFMI5pVsDb70o3gvv0kVaWDGceASqjmsqYd1jtgauFVnNsCfp
ZgP8q/logQwTb4PxnwsdUMm334P5J8Vu6IvxLpLjDo7AtIYyEW4RlkKwS6b4
Bdt0zCr0MmeJ81qHfETyy2FdErwgpKRA/9CxNFh/LaKEiYHSDNK/cyIbPndU
EVkfT8NgzgCxNrCzGEbMtcTuCfuUiL9wrV64q1BhsXaGtUdH/2szDpqcknPJ
T4iUwJmhJnSxEer96hb4Zv83Yn70ehfU9fEs/AeJrpd4
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.694443377092915*^9, 3.69444339110975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"C", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "5", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"DGOptSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "y", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6981360211258264`*^9, 3.6981360483600693`*^9}, {
   3.6981360788457885`*^9, 3.6981360876976595`*^9}, {3.6981362425377584`*^9, 
   3.6981362793146505`*^9}, 3.700314325248334*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717420021142*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420021142*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Number of edges      : ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420041278*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.579564683660724`*^-9", ",", "1.0100278246477091`*^-7"}], 
    "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {2.579564683660724*^-9, 1.0100278246477091`*^-7}],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420042779*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "3.1451951971911144`*^-8"}],
  SequenceForm["Mean relative error  : ", 3.1451951971911144`*^-8],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420042779*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGOptSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698136335320798*^9, 3.698136365971901*^9}, 
   3.698136419643999*^9, {3.6981365233312697`*^9, 3.6981365309578285`*^9}, 
   3.6982328271785564`*^9, 3.698233064588676*^9, 3.6982342865286937`*^9, 
   3.700314325301742*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702717420343769*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717420559931*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420559931*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420559931*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.4374620027146118`*^-9", ",", "1.759691728446197`*^-8"}], 
    "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {2.4374620027146118`*^-9, 1.759691728446197*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420575556*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "8.907273066324697`*^-9"}],
  SequenceForm["Mean relative error  : ", 8.907273066324697*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717420575556*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"D", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "100", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "It", " ", "can", " ", "take", " ", "a", " ", "lot", " ", "of", " ", 
    RowBox[{
     RowBox[{"time", "!!"}], "!"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", "100"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "k", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"MDGAllPairs", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"eij", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"0.50", 
           RowBox[{"Length", "[", "eij", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"MDGCreateInstanceFromSolutionAndPairs", "[", 
        RowBox[{"x", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"MDGOptSolver", "[", 
        RowBox[{"i", ",", "j", ",", "d"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"CheckMDGSolution", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "y", ",", "False"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"f", ">", "0.01"}], ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"k", ",", "10"}], "]"}], "\[Equal]", "0"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{Seed,Error}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "f"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.694509866767895*^9, 3.6945098916890173`*^9}, {
   3.694510093362407*^9, 3.6945101089935975`*^9}, {3.694510169324609*^9, 
   3.6945101956066246`*^9}, {3.69451025730608*^9, 3.6945103028323336`*^9}, {
   3.694510333348612*^9, 3.6945103372228565`*^9}, {3.694510375701194*^9, 
   3.6945103983735256`*^9}, {3.6945104397134395`*^9, 
   3.6945105412985134`*^9}, {3.6945116235631905`*^9, 
   3.6945117051807966`*^9}, {3.694511748936102*^9, 3.694511751267356*^9}, {
   3.694511828015873*^9, 3.69451182813148*^9}, {3.6945118732869487`*^9, 
   3.6945119184429393`*^9}, {3.694512052222779*^9, 3.694512063708476*^9}, {
   3.694512108959667*^9, 3.694512122482854*^9}, {3.6945122224563627`*^9, 
   3.6945122549831843`*^9}, {3.6945122929003396`*^9, 3.6945123044169874`*^9}, 
   3.6945123946710157`*^9, {3.6945124631794453`*^9, 3.6945125052038*^9}, {
   3.6945126788009663`*^9, 3.6945126790627346`*^9}, {3.6945130547371454`*^9, 
   3.6945130548839865`*^9}, {3.6945135081915073`*^9, 3.694513508353938*^9}, {
   3.694519946259391*^9, 3.6945199465126286`*^9}, {3.6945256242761097`*^9, 
   3.6945256246907053`*^9}, {3.694525800598526*^9, 3.6945258010835543`*^9}, {
   3.6957188810695877`*^9, 3.695718892192297*^9}, {3.6959992062308846`*^9, 
   3.695999250403311*^9}, {3.69807248104105*^9, 3.6980724810570617`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGAllEdgesSolver - Solver for complete distance matrices", "Section",
 CellChangeTimes->{{3.694440270104432*^9, 3.6944402903355665`*^9}, {
   3.694508362021762*^9, 3.6945083745408287`*^9}, {3.6945086248727016`*^9, 
   3.694508627838993*^9}, {3.6945094785730658`*^9, 3.6945094800751905`*^9}, {
   3.6945095153284197`*^9, 3.6945095197760963`*^9}, {3.6981344064787574`*^9, 
   3.6981344229460754`*^9}, 3.7003220682508497`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698135035451965*^9, 3.6981350399559503`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGAllEdgesSolver", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGAllEdgesSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "k", ",", "m", ",", "\[Lambda]", ",", "v", ",", 
      "x", ",", "i", ",", "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "i", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"j", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"\[Lambda]", ":", 
       RowBox[{"eigenvalues", " ", "and", " ", "v"}], ":", "eigenvectors"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "iloc", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "iloc", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}]}], ")"}], "/", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "v"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"m", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"getting", " ", "solution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "[", 
          RowBox[{"[", "iloc", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6945071563672113`*^9, 3.694507320236541*^9}, {
   3.694507374181988*^9, 3.6945074899994063`*^9}, {3.694508412302476*^9, 
   3.694508475668783*^9}, {3.694508530004429*^9, 3.694508561182579*^9}, {
   3.6959987033856926`*^9, 3.695998723358347*^9}, 3.698072480922473*^9, {
   3.6981333587577276`*^9, 3.698133359033911*^9}, {3.698133390002452*^9, 
   3.6981334023261256`*^9}, {3.698135717156601*^9, 3.6981357371274214`*^9}, {
   3.700322084102275*^9, 3.7003220841179*^9}, 3.702205777346334*^9, {
   3.702205852832011*^9, 3.702205863962781*^9}, {3.702205920478272*^9, 
   3.7022059370982065`*^9}, {3.702207236434928*^9, 3.7022072566342735`*^9}, {
   3.702717536736679*^9, 3.7027175405832577`*^9}, {3.7027176883324986`*^9, 
   3.702717699885353*^9}, {3.7027178659989595`*^9, 3.702717868829978*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.698135059085639*^9, 3.6981350698968105`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints where DGNSolve fails", \
"Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136136952828*^9, 
  3.6981361465947227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.526000000000000"}], ",", "0", ",", "0"}], "}"}], ",", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.033755510908970"}], ",", " ", "1.439048415148556", 
        ",", "0"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.559719882819027"}], " ", ",", "1.439060986205111", 
        ",", "0.010427631711570"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.076155173310602"}], " ", ",", "0.764476592552454", 
        ",", 
        RowBox[{"-", "1.257210521144031"}]}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.578831769689775"}], " ", ",", "1.531380885110071", 
        ",", 
        RowBox[{"-", "2.479177475798574"}]}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.053530057464236"}], " ", ",", "2.979379151615945", 
        ",", 
        RowBox[{"-", "2.397700142877220"}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGPrintGraph", "[", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGAllEdgesSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.698135080509349*^9, 3.6981351226262827`*^9}, {
   3.698135768710869*^9, 3.698135776496533*^9}, 3.698232827201572*^9, 
   3.698233064605688*^9, 3.6982342865326967`*^9, 3.7003143253707542`*^9, 
   3.700322084150173*^9, {3.7022067183952436`*^9, 3.7022067807644897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.03375551090897`"}], ",", "1.439048415148556`", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.559719882819027`"}], ",", "1.439060986205111`", ",", 
     "0.01042763171157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.076155173310602`"}], ",", "0.764476592552454`", ",", 
     RowBox[{"-", "1.257210521144031`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.578831769689775`"}], ",", "1.531380885110071`", ",", 
     RowBox[{"-", "2.479177475798574`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.053530057464236`"}], ",", "2.979379151615945`", ",", 
     RowBox[{"-", "2.39770014287722`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70220678490214*^9, 3.7022072595535603`*^9, 
  3.7027174206445694`*^9, 3.7027176733449955`*^9, 3.7027178807851934`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.8396107747606196`", "3.8396107747606196`", 
      "3.8396107747606196`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.333594784003535`", "4.333594784003535`", 
      "4.333594784003535`"},
     {
      TagBox["5",
       HoldForm], "1", "6", "4.615136531840455`", "4.615136531840455`", 
      "4.615136531840455`"},
     {
      TagBox["6",
       HoldForm], "1", "7", "5.5728603096617455`", "5.5728603096617455`", 
      "5.5728603096617455`"},
     {
      TagBox["7",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["8",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["9",
       HoldForm], "2", "5", "2.944196692308224`", "2.944196692308224`", 
      "2.944196692308224`"},
     {
      TagBox["10",
       HoldForm], "2", "6", "3.564486870004594`", "3.564486870004594`", 
      "3.564486870004594`"},
     {
      TagBox["11",
       HoldForm], "2", "7", "4.5841110692938445`", "4.5841110692938445`", 
      "4.5841110692938445`"},
     {
      TagBox["12",
       HoldForm], "3", "4", "1.5259999999999996`", "1.5259999999999996`", 
      "1.5259999999999996`"},
     {
      TagBox["13",
       HoldForm], "3", "5", "2.4913895358402254`", "2.4913895358402254`", 
      "2.4913895358402254`"},
     {
      TagBox["14",
       HoldForm], "3", "6", "2.9226882979483584`", "2.9226882979483584`", 
      "2.9226882979483584`"},
     {
      TagBox["15",
       HoldForm], "3", "7", "3.4930035745432817`", "3.4930035745432817`", 
      "3.4930035745432817`"},
     {
      TagBox["16",
       HoldForm], "4", "5", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["17",
       HoldForm], "4", "6", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["18",
       HoldForm], "4", "7", "2.9009494856035825`", "2.9009494856035825`", 
      "2.9009494856035825`"},
     {
      TagBox["19",
       HoldForm], "5", "6", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["20",
       HoldForm], "5", "7", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["21",
       HoldForm], "6", "7", "1.5259999999999994`", "1.5259999999999994`", 
      "1.5259999999999994`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
      17, 18, 19, 20, 21}, {"i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.702717880785694*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.702717880785694*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Number of nodes      : ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.702717880785694*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "21"}],
  SequenceForm["Number of edges      : ", 21],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.702717880785694*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.4550760480015164`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.4550760480015164`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.7027178808013287`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "4.0659894380218377`*^-16"}],
  SequenceForm["Mean relative error  : ", 4.0659894380218377`*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7022058076748333`*^9, {3.702205847433198*^9, 3.7022058666268444`*^9}, 
   3.7022059404000764`*^9, 3.7022067849043427`*^9, 3.7022072595535603`*^9, 
   3.7027174206602006`*^9, 3.7027176733449955`*^9, 3.7027178808013287`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 100 points all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136155945425*^9, 
  3.6981361596994143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGAllEdgesSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981361619569116`*^9, 3.69813618311895*^9}, 
   3.700314325402018*^9, 3.700322084181426*^9, 3.7027175502076855`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7027174217459126`*^9, {3.7027176660988913`*^9, 3.7027176793352203`*^9}, 
   3.702717885005988*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "100"}],
  SequenceForm["Number of nodes      : ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7027174217459126`*^9, {3.7027176660988913`*^9, 3.7027176793352203`*^9}, 
   3.702717885005988*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4950"}],
  SequenceForm["Number of edges      : ", 4950],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7027174217459126`*^9, {3.7027176660988913`*^9, 3.7027176793352203`*^9}, 
   3.7027178850216136`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.106499366629302`*^-14"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.106499366629302*^-14}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7027174217459126`*^9, {3.7027176660988913`*^9, 3.7027176793352203`*^9}, 
   3.7027178850216136`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "4.661669333401723`*^-16"}],
  SequenceForm["Mean relative error  : ", 4.661669333401723*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7027174217459126`*^9, {3.7027176660988913`*^9, 3.7027176793352203`*^9}, 
   3.7027178850216136`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3) Ordering, BuildUP, BP and IBP", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.698278975629528*^9, 3.6982789823035517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordering\n",
 StyleBox["DGOrdering, DGNaturalOrdering", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.696934517173864*^9, 3.6969345185367727`*^9}, 
   3.6969346750258846`*^9, 3.6981366777421827`*^9, {3.698220137774626*^9, 
   3.698220138030796*^9}, {3.698268878385317*^9, 3.69826888252829*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.696934578835677*^9, 3.696934581103756*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOrdering", ",", "DGNaturalOrdering"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGOrdering", "[", 
    RowBox[{"G_", ",", "C_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Finds", " ", "an", " ", "order", " ", "such", " ", "that", " ", "all", 
      " ", "atoms", " ", "could", " ", "be", " ", "determined", " ", "by", 
      " ", "following", " ", "it"}], ";", " ", "\[IndentingNewLine]", "   ", 
     RowBox[{
      StyleBox["C",
       FontSlant->"Italic"], 
      StyleBox[":",
       FontSlant->"Italic"], " ", 
      StyleBox[
       RowBox[{
       "Initial", " ", "clique", " ", "used", " ", "to", " ", "start", " ", 
        "the", " ", "ordering"}],
       FontSlant->"Italic"]}], 
     StyleBox[";",
      FontSlant->"Italic"], 
     StyleBox["\[IndentingNewLine]",
      FontSlant->"Italic"], 
     StyleBox["   ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"G", ":", " ", 
       RowBox[{"Instance", " ", "graph"}]}],
      FontSlant->"Italic"], 
     StyleBox[";",
      FontSlant->"Italic"]}], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "neighs", ",", "nAtoms", ",", 
       "nFixedAtoms", ",", "nFixedNeighs", ",", "atomsToBeFixed", ",", 
       "atomOrder", ",", " ", "order", ",", "minNeighsToBeFixed"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minNeighsToBeFixed", "=", 
       RowBox[{"Length", "[", "C", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedNeighs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomOrder", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomsToBeFixed", "=", "C"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nFixedNeighs", "[", 
        RowBox[{"[", "C", "]"}], "]"}], "=", "Infinity"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedAtoms", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "atomsToBeFixed", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<nFixedNeighs=\>\"", ",", "nFixedNeighs"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<atomsToBeFixed=\>\"", ",", "atomsToBeFixed"}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"i", "=", 
          RowBox[{"First", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "the", " ", "first", " ", "element"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"atomsToBeFixed", "=", 
          RowBox[{"Rest", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"skipped", ":", " ", 
           RowBox[{"already", " ", "fixed"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"atomOrder", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Fixing: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"atomOrder", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"++", "nFixedAtoms"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<atomOrder=\>\"", ",", "atomOrder"}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "neighs", " ", "score"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"neighs", "=", 
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<neighs=\>\"", ",", "neighs"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "neighs", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"neighs", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"nFixedNeighs", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"atomOrder", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"nFixedNeighs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
                "minNeighsToBeFixed"}], " ", "&&", 
               RowBox[{"Not", "[", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nFixedAtoms", "\[NotEqual]", "nAtoms"}], ",", 
        RowBox[{
        "Throw", "[", 
         "\"\<InvalidOrdering: It has not been possible the set \
ordering.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"order", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"order", "[", 
        RowBox[{"[", "atomOrder", "]"}], "]"}], "=", "order"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "order", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNaturalOrdering", "[", "G_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6980611506193595`*^9, 3.698061152492004*^9}, 
   3.698072481134613*^9, {3.698136626484687*^9, 3.6981366266763134`*^9}, {
   3.69813681557358*^9, 3.698136816036886*^9}, {3.698137537734437*^9, 
   3.698137590182723*^9}, {3.698235991898496*^9, 3.6982360627464857`*^9}, {
   3.6982361166922655`*^9, 3.698236179383627*^9}, {3.6982362219318867`*^9, 
   3.698236263425408*^9}, {3.698268890318713*^9, 3.6982689596448994`*^9}, 
   3.6982762453630505`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{
  3.696335250480235*^9, {3.6963366417863913`*^9, 3.6963366443081226`*^9}, {
   3.69693446673809*^9, 3.6969344703216915`*^9}, {3.6969345925486455`*^9, 
   3.6969345996344643`*^9}}],

Cell[CellGroupData[{

Cell["Simple Example: The initial ordering is ok!", "Subsubsection",
 CellChangeTimes->{{3.696934614705723*^9, 3.6969346254263096`*^9}, {
  3.6981609206416388`*^9, 3.698160922002041*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6963351391970744`*^9, 3.6963351781245375`*^9}, {
   3.6963352250157614`*^9, 3.6963352441326723`*^9}, {3.6966991356467*^9, 
   3.6966991599848185`*^9}, {3.696699212467594*^9, 3.696699212567856*^9}, 
   3.696699760565385*^9, {3.69669979452897*^9, 3.6966998652771873`*^9}, {
   3.6967008913917418`*^9, 3.696700901880651*^9}, {3.696934477541465*^9, 
   3.6969344787881804`*^9}, {3.6969346029648733`*^9, 
   3.6969346047214565`*^9}, {3.6969459408755083`*^9, 3.696945941822027*^9}, 
   3.6980724811436186`*^9, {3.698136903087622*^9, 3.698136916136277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{-0.9510565162951538, 
      0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
      0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
      0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
       {RGBColor[0.5, 0., 0.], 
        LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 
         4}, {3, 5}, {4, 5}}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{-0.9510565162951538, 
       0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
       0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
       0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{5, 1}, {5, 5}, {1, 5}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 5}, {3, 5}, {4, 5}, {5, 5}, {3, 4}, {4, 4}, {5, 4}, {4, 
       3}, {5, 3}, {5, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 5}, {5, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["5", TraditionalForm]}, {2, 
        FormBox["4", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["2", TraditionalForm]}, {5, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7027174229357553`*^9, 3.7027178921380997`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921380997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921380997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Fixing: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921537256`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921537256`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {2, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921537256`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921693506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921693506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Fixing: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921693506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921693506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921693506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921874843`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921899853`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Fixing: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "3"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "4", "}"}]}],
  SequenceForm["atomsToBeFixed=", {4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Fixing: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178921909866`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178922066617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178922066617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178922066617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "5", "}"}]}],
  SequenceForm["atomsToBeFixed=", {5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178922066617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Fixing: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.7027178922066617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.702717892222287*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174229377584`*^9, 3.702717892222287*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.7027174229357553`*^9, 3.702717892222287*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Harder Example: The initial ordering is not valid", "Subsubsection",
 CellChangeTimes->{3.696934653673157*^9, 3.698160925305233*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LayeredGraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.696699222452924*^9, 3.6966993598737216`*^9}, {
   3.6966993928242817`*^9, 3.69669964645918*^9}, {3.6966996846742587`*^9, 
   3.6966996863586435`*^9}, {3.696699787441859*^9, 3.6966997902261276`*^9}, {
   3.696699983277195*^9, 3.696700066799402*^9}, {3.6967001159283457`*^9, 
   3.6967001463737307`*^9}, {3.696700378130589*^9, 3.696700406037734*^9}, {
   3.6967008496726646`*^9, 3.696700855375781*^9}, {3.6967012062244864`*^9, 
   3.6967012420923347`*^9}, {3.6967013615844746`*^9, 3.696701364078554*^9}, {
   3.6967014049615245`*^9, 3.6967014090833235`*^9}, {3.696934481921709*^9, 
   3.696934483419512*^9}, 3.698072481153125*^9, {3.698136927274665*^9, 
   3.698136934192253*^9}, {3.700563046326106*^9, 3.700563132903144*^9}, {
   3.700563163619388*^9, 3.7005631745071526`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxtmgdYFFfXx3cpuwtIXYrGXmLBEhv4aoj3ROxfLFFRsb0WMIoGWzR2CMaG
xoYaRUMUu7EFjVGizkaiIFawoUYFuyiwNJX+wcw5sw/Hd588z81xZpeZuXfO
Off3/zccP21QsJVGo3Gw0WiqxuqfmoD/g6M7jmZJGV3YcQPFmur/TuebBft3
FtOHzqe/R6ML/O9/17Dj9OHXw4/z+6HzDabqv0sxP67+nul//x6/TwOL+fc1
LObnf3SfUP08PvLzPppHUT3mx/nvuLB/5/f10TyKrY6dfHad3y89W7/p9Pxr
XlDv6KHB9xPipe79ft9s3ugF889s9bgadUGq237wz+MGe0HzvJ/X9b54TZoG
C/66aucFXy2cdPXowluS39wW1j6nPOHZN40+Wel5X4q4Nzr05zGekPPQz2t4
zXTJP6hmWUGpB9T167R0Q/BTaVHNwKP9ojxgQX/N3fy8F1K7d/WX7mzoAcOj
AjzEvVfS1kYroy49dodrPwZ8NWRZpjR3V/cBJdHu8KSRZmGH4jfS1bmDTvkO
doe13wbs/rdjlrQ5Nu7aAoM73AkKuDDAN1u61SB4Q3K8EU4bNI9Xl2dLK/In
WzcOMYJvYEBu1E85Utwnfzdc6mmE/kMDSoOe5kiDNodkmSU3em7SRPljiTvO
yS1+6WiJy471rjU33hW0GJ/3nPq351RX9XjEvpH5CY0scdcJXkfDHrmocUGf
Xyv/s8T7q04PtsRDtxjr2rd1getJ0vnRvW+IPtGjuzy/7AVuR3q+vzvsibgf
mrI1OtILyked+LIkOlscWTSyXgM/L9g8d8jYK3PeiYsXSxJnp3vCAB+3Lmn7
ykXjvnGbt33vCUPi7H4eaLaGf/Rhkeu1njDQulVMlIsd/FYxbtewxR4Q4zi9
/R8nnOBuu5EZWVnuEPMq88CIUDfoGRPSfchAdxhc1nfW3vNukPf5qguTu7hD
4eQe0/WORsjouqZwdB13CG9zf8eifkZw3jfrVtt3Rijsa2dr96MRFn33+fgn
iUYIkFK3HzhmBO99z2NmrjfCjlW+k/570wi1xMzIjEFGuHO04zfeb43Qyy+j
yWc1jPCu5dWt9iVG+DOmfejIs/T83SF6a9XHFboH7H3WofJ46dKf3e26uYJL
wNYN1yu/HzG014vxuS4QXJFmd/OWEdo4HHDat88FYEhw367HK8/fdean20Eu
sHtw1yGuK4xgbhAxIbu5C6wrm9Dsq8FGcLPJr//0pTPYDLqTkO1uhMg1PZqe
W+UM2q83tSi64gb9M0ruffuFMywt3jF8ygI3CCz1+Dyv1An6mlfO2vK3Cywr
HBkbfMcRnjS9/9+xw5zgXY2Y5OTEGpCTuLF28CwH2Nvt3+MNUxwgPsH/E3HX
ABs3e44JybOHXp+8HJkdoYMEQ79Lu1vaw6bLi9NnzrGB9lvDCm8stIPYu/b7
r/xuBRm9jjzJfm6AmV1XxZV01EKK+7115RMt+fTAN2+fFF73UuPA3TX8HkZb
4honxzqcHGuJE7a/Ghje0BKHDa/6gqcai9dRXV9HWWKbAX++WN7DEl9d6WRb
M89DjZX5scTy17ta4s5rnv5nzVM1r2lWrqj6WOJ7Ea3TIlpb4uaLUpstSjWq
8dzvqz6WOHFGncr/LLFX1ev4t5sa03qhOFO+HkusXI+l/kTK12OJ0+TrscQD
i3cPKN7trMbm7KqPkxrLP/cfS9xG/gFHNe4gfxzUOKVZ1Q3aq/HMqttJtFNj
o2vVxxIfsx1Z+Z9lvpXr0atxjnw9OnY9lli5Hls1viJ/bNR4YtXyqW2Ji8et
b2/+zlqNf6x6HGlWaqysB0s8/2KbMRVntGqsPG9LLJ+ebKlHh9o26+I+VgPT
pP2lBXmnpPAjOs9PKutRstu6J4uaXJb+kGYbQqO8YPvqQM+lmjvS9g797pYM
8ILw02OOrF3+WOpo/1NEgrUX2CX9Nuqo8bkU7u9jf+GIJzQ1xNYuysmUFj/u
Ear52hPWONlFDjpklto8OndkdqYHzLYuj73XtEDaIHZcbrLAAy4+OZq2/uV7
aZ915j+O1h7wi67fCNORIulInxtHdyS6Q/PgZyM7TSmRguq+0SysXK8Ty2c/
fFenTEpa3OXUrz3cYVCq9nF5Qrl079tztx0qjDDP7H+sWVuNaUvmnEDTCSM0
8rBpV/BBY9IXTvA/O9EITYb9nRt0Rmtq/NPSKCsPI4SfXJA3b76VKTvuQZ91
lfUoxmgqPHPG1tRWro+ucFuubzrTFrk+ukDHcR7GTTt1JqU+umC905muyPXR
BSaM9GjRqZ/etEmujy5Y//Sm/V8mN9k02xnaWJk67ZL0JpeXN3U9bzlhPdSb
gnwi/O1bO8HGqnL8QW/a3er2/YwwWr8GE63fCvmjN1VfvwYTrV8txtXXr8FU
ff0aTNXXr8FUff0aTNXXr8FUff0aTB3l67GGyM4zuhW805vWfdJfL0VYQesX
/9ilPKi8n5f2PeY91MJz25KAzUf0phNbJ78d56+FuC3GZt2n6U0L24WUzT2h
gc0xTovu19Wbzh6pMfdcWw2s83o7LDBeZ8ptFHsqaHqF2Gl96E9Td51pxPHQ
IQc2lYvE8f23u5y1NZ10Ckvom1ImbHxu2vZpbGtSxjLRopMY0sXa2qSMJaLt
sfq/nHfUmtrJY5HoAK9NCUvLpVo7vkvP6PZeJDgu9Gvbo0R6outab0tsofC6
9P5QcuAHafWzBUOftyoQn80c5RaVUCjV7Nxm5aWMPKG3Ozh1ZUS+9KNNwMnu
f+eKXT+l/3V4c66U2tP8cOhlS1+q1AM1P4Kc3qONOD8aUOqB5bhSDyzxYvkL
aj4FpR5YYuX9t8RX5Hqg5ldg+RdY/gXKv3Q9LP8Cy7/A8i+w/Ass/wLLv3BV
znc11Fh+PLUtsZLvHNTrUfKdmp/xfi3xAjnfqfkZ788SK/nO0ocr+c4AG3oN
fZHZuUIo/bcRnHwujDg/uFz4y/23EWYmfTV6Wb8yofTfRjijzcrybVYqlP7b
CFnpe2rcSi8Wn8v9txvoJ35/evT8IqH0325gWD+u4Gb+e9FN7r9dIW9c0Fnf
fu/EQrn/doXzaWHuy5YVCMovQ3wDZo+NyheUX7Z8cfve7TN5gvLLuuyKL19Y
5QnKL5373D68PjhXUH7Z1C+gbtozs6D8srskbN3pcLOg/BI8OEDv29ksKL/c
H3L7h35OZlE9v5gF5ZdW8vubI9bI77M9HJff1xwRLL/PdrBBfj+zxUn5fbYD
5X3MEsr7bIBh87sUTP7+rTgnv88GgDHH/hv8OlPMc/16VPtTeohwOvbIyvha
HArsdPBWXz3UW1WVQF6IUculcXte6cDl1ldeTX56Ji0O9lw0MlQLdZTj0t65
EDPCS0vflwbvTQpo+YcGuim/L63IPrLrai8N/X1paewL5yUxFZgvsiTDLy1t
nX4uF0p+yZair7Rq5jevTCj5KEfq1C5ztmOPUqHkrxzpSfKE3B+Ki/F9NkvK
+1SkxtfTLrz5tdMHNa7aTaS/fidof6KvSrfHCtXj+pjQq86rCtS4cPXoM+Xz
8tU4Vc7neWosn74xV42Hj+v/XXOTWfj+e2u1/QQN0PqdF/xLar07GqD1e2lb
YIpfoBZo/TYOs1sZ9FYLtH5XOh8u2rTWCmj9ln3VvXFKN2ug9buw03VbT50N
0PrVX++3M+ieDdD6xfoIrD4Cq4/A6iOw+gisPgKrj8DqI7D6CKw+Aq3fKQcz
TU31Bhh10/vTeuGV6/fAQettdQywPXnRmcJUO0gtE0mjwAB5NVsVnW5pB8l7
DzpNnWmA4ed8HoREVp63O/NOUpwB7sRHjzfk6KH3+4oGs7R2MNlp5NoNgXq4
EpP5NmSMHbicnjPOLlkH3tsOdjl2yQ6uxGelTQWdmueoPr6JH9jUPMURPo3u
PfVxuBUsC50+w/+hI5x+XpBWfFsLO162PHKxgRPkefxn3tL2WujQdMm/83yd
4Jq3W7+wzZXz6j2ndFS9yufQZMmQV1oNpObbOE1Pq9zn2HjW/+F1ubgf8Znr
8SBHmB45uNT5UZkYd7fQtmlCDeh17xwsyigVE3KHvU3KdwBlLBHx2rCUqUZ7
UMZi0Xu5TY8WQw2gjB+EQ8SrnuV/6UAZ3wmrPO+7b7rbgjIWirZ3LxfmVu5n
lTFfbGx3OdbFZAXKmCdaa1s86hWnBWXMFaU9nu/7OVEDymgWJRgr/aYRWuH5
Sr9pBPo9pd80Av09pd80Al1PmNxvuoE9Xq/Sb7pBL7wfpd90hb/wfpV+0xXo
eSj9pisMWNK09di7NeCw3G+6QFT7vMPb/nCECXK/6QLtK+JDF6xxAqXfdAHv
1+HTKsY5Q9yDhb95lTuD34eGacaalefdzooLn+wMG+wjas5f6AJOmYnL5l91
gg2/pc9t/8ilcp/p0MzW2wngwRdFfl+4wsPgP6MaVK7fG3bp88c8coNxb4W9
v789hMQdfNKsthHa9XBrFiXZQfSxyJXJA42Q03NlzDsfOxhtEz6tZ5gRtuTu
nv7tXgPEHY7cuG1v5f6+R/Av710MEH3o4IdLF42wT36f9FBTm74t5bER3ycd
NPvNe3FcrhHfJx0kH4z8dWqpEXbJ7xP1d+7q+qX4lpyfrNRY3v4larFeu4Ob
3G9q1eO/y/2mhZ/tkAFMhcrXHj2s+pSpcV15Q1mqxqPkhrVEjRU+9E4Qf3jr
NWZQE0OhIP6gH1F366oL+YL4w4lWu7tsj8kTxB9y1+b5Do3KFcQfTEsMa07v
MgviD/4uV8JW/5ojiD94d/Hc+qFNtiD+4Ls055s/C98K4g9B8jp6I4g/1L0z
beXmwJeC+ENah7neLes/FcQfmns8iXFc+UgQf9h+4oR5UNRdQfzBveekvk1H
pwjiD7WjioY5X00UxB8alCYF/Hv2jCD+UK9jD9/d0gG1PhC/ongf8i2qR4WM
f33B+BjnZ5yvlSJ/o5jzOeJ3/ZDvDUS+x/lfPPLBlcgHOT9cg3xxE/JF4o9X
kD9eZ3yS+GU08kvON+sg/1yI/JP4aHfkoy+Qn/6I/JTz1WbIX6cjf13A+Czn
tzHId58j36XnM1huGJzV+Peqx+njrM5PTZmfOKnHl3ZO2anxt8TK81f7NWmx
3DBYYp3cMNRQY3k5PHNQY6qPND9UH2l+qD7S/FB9pPmh+kjzQ/WR5ofqI80P
1UeaH6qPND/UR9D86LDPoPmhPoTmh/oUmp9I7GNofhphn0Pzk4R9EM0P9Uk0
P52wj5p66kAtj4tmKalxy1mF250hL7nLni8O5UrLo8e3zmjhDOs6HY+dF5cn
dQna2yZhrxP0KHdzu5SWLz0Kfzdnm9EJjPVH5LesXyjNMQ/ShUx3hOKtK3rG
Ln0n2Rz/6982Z2vAh9AYh1Y1Pkg/JrUtfl3kAM4x27pdiiuSitrGjdnW1AG6
Ngt/M29eiUT5/9AlOSFLlP+/Oe/d1Nu/TKL8P9NVc65WWZlE+T/ppPeg0Ohy
ifL/VLl+VEiU/5V6USFR/t8m14cKifK/Ug8qpOr5X6Pu75vi8THyeqmsy/j9
bfJ60cIY/H2zvF60MAX/vrJeNJCI13dots8Fl0cVYgZef2qdk/U+PV4uJuH9
NZqZdd5tY5mg+982+8Hv98JLBT0fHIUTPj8cRRE+XxxFCT5/HAXND46C5g9H
QfOLo6D5x1F8i+sDRzEd8+8N5L+7GB/ezPgx5ffzyJc5f87C+rAH+XQG49f/
h/VlBfJtzr81WJ/6IR/XYf1ahfx8PePre7D+5SJ/53w+iPF7zvc5/69en92g
EPWDP1A/uI36Qm/UF3ai/vAJ6g+kT7REfYL0i4WoX4ShvuGE+kYB6h/pqH8M
QX2kAPURrp+QvnIH9ZWvUX85iPpLAOozF1Gf6cf0m01M3+H6jyvTh1JRP+qL
+hG+T/Ab8geKiU8Q73jN+AXnG5x/LGF8hPgJxZMYX+H8pTXjM8Rv6Ho43+H8
h/OhlYwfMb7/EX/ifIrzK2vkW3Q9nH9xPnae8TPO14i/UXwQ+dy+mN9X3RUV
Yohcn/UwvuoxTikXcXJ91iPHKhOKvqGDGrNi/bXLSsUyuT7r8LmXCEWftAX5
MQ0oFkp9toWqv1rfs0gY5PpsA+2qlkHSe7FVrs/Wal9L+bZ06vtn+QUFgvaL
vY5EPL00N1/QfrG7t2H8q9xcQfvF3PTlYweMNQvaL+7abX2ubHmWoP1iYumb
+KzOmYL2iwOTk/4MvfNC0H7RzzH6RPjop4L2i7VWSeN7xTwWtF+86fhh1cRt
NwTtF2+kNPzy68g9gvaL4x5/v742/CPRftE8bX/PnWm3Jdovwq4bzf/jly7R
fjGu883vzlY8k2i/2L9k5PJ039cS7RfdXoWM3ZnxVqL9Is0XzQ/FND+0Pmh+
6DjND8U0P+r6wfmhmOaHYpofiqvvhzRsP6Rh+yEN2w9p2H5Iw/ZDGrYf0rD9
kIbth+j9KVLj6jxKA9V5lAaq86jKuBqP0kB1HqWB6jyqsm+qxqMq3yfGoy7J
/ZNe5VEr5P5Jr/KoznL/pFN5lNI/6VQepfRPtiqPUvonG5VHKf2TtcqjlP7J
WuVRSv9kpfKo9nL/pFV5lNI/aVUepfRPGpVHKf2TRuVRA5ds7OP9plwQj2p0
bZ/j6v1lgnhUUojNcvcRpYJ4VK/Ag38kVBSr/g96rzfg8VN7A/r6aQrV73fa
VDL3zZ588Rn+fnq74XmzhuUJH/z7xxZOOXnbPVfQ9Q1/ExLZ8EyOOIXXH9t5
6hd9J2YJur9uz+4v/bT5G0H37/Pm5ITj2teCng/23YL6bOy7BT1f7LsFPX/s
uwX12dh3C+qzse8W1Gdj3y1o/rHvFtRnY99N60fzG+qPFHN9kuuXC5i+ac30
zyVMHy1i+ukkpq9y/bUV02e5fmtm+u4Apv9yfdiN6cdcX05l+jOrzxpWnz/S
t7n+zfVxrp+z+vyR/s71+ep+HI3Gg+n7XP/n/gDuH0hj/oIVzH/QhfkTMpl/
gfsbrjD/A/dHAPNPcH8F919wf8Zw5t84iP4O8m9R3uP7S/JvUd4j/xblPdq/
Ut57xva3fP9L/i3Ke3z/zPfX19j+m+/Pyb91G/fvfH9P/i0z7v85HyD/1mjk
B8rTsfAFijl/ID5BvIPzC843OP/wYnzkGPITiodU4ysaDfV1FFNfRzH1der8
Y19HMfV1aox9nXo+9nUUU19HMeX/pNer6y7wminq+mx3WmxbiPEGkXTNIzIv
Pl9ol3f9IWTEbjGpw820hGV5eDxOvB9/qzh3Uq7o07rVmGPdz4gFo2uZF44z
4/n/iIwe3WdcSs8WxRfE0oLjl8WJiQ/3D2qZhd9PFVPqli/bFPtGZAybmPLn
8zvCELLXYUPPTBHY2PqoZ/5TMSh08f7vdC+EED+sKkx6I8aNFV2W1n4ibkie
wm9+rggKT/1hucND8UXekoTr8QViWe0Pc8dG3hGvfA2Dffa+F59tyAncdPyG
SP1pV9ZUv2IRnzSjz1dOieLDu4CoOYtKRefeA4P/z/2MGDOzfvdBk8tFy/uG
cw9CDohY1MtTUC8nPX0J6ulcb6/J9Ph/mF7fFvX8mqjnt0O9vy3q/d7oB/BG
PwD3C3A/QSzzG6xHP0Ie+hHIr3AO/Qrcz/CM+R1aoR8iGP0Qq5hfQlktBhPV
I/J3tGJ+C6pH5O8wM7/GAObn4H4PN+YHqV6PDKZU5ieheoT9iykW9TbuV8H+
xeSKeh32L6Z9qOeRH2Yj6n2nmF+G/DTfo15IfputpCcqfbeJ6hH5dd6iX4f7
eRqj38eAfh/yA0WjH4j7hYKYn4j7jX5FP9JR9CNxv9Is9DOtRz/TWuZ3aoF+
qDD0Q3G/1GL0U/mgn+oX5rfifqxZ6NeKQL8W5b9h2I9TTP065dubTF/m+rOO
6dM6pl8X4H6C4htM/6b9CPoHpAzUz48zfX0D09+5Pk/6/TLU74Hp+6T/D0H9
vx7zB6B/QEREv47YvV5H/gExAv0F5D84jP6DbsyfQP6Fs+hf4P4G9A+IE+h/
QP+ACEJ/BPoHxFr0T+DzEfQ+3UP/Bb1PE5k/g/wb9D6Rv4PeJ/J/0Pu0lvlD
yD9C7xP5S+h94v4TM/pTFqC+z/0rOuZvecv8L3+hPyYU/QUz0D9TB/0H5K/p
jv6Ejei/eY7+BeLvOH7EXzmf5fyW813i7zgK4u84CuLvOH7El4k/RyN/Jv7e
APn0TMavib8fRr5N/D0Q+fdoxseJv29Hft6M8XVsH9R6QPx9J/L57YzfE393
Q75P/H0/8v9Epg/MYPoB8Xcz6gt0/x1Qf+D6BPH3D6hfEH9fgvpGCdM/uD5C
8/cQ9ROa386or3D9hfh7MuozrsiHSpAPET9qhfzoBONLXzL+lM341ATkV/bI
r9KQb/VCvpWK/Osv5F+cj32O/Kwn8rP+yNemIV9LYvwtlvG5PMbv/Bnf6438
Lx75Xznjg5wftmV80ZHxR84nOb90YHyT80/qo39H/raf8VPyd9D8kL+D5of7
RbifhPtNyN9B80P+Dpof8nfQ/HC/y1j0w9D83EO/DM1PCvPT9GB+m47Mj8P9
OivQz0Pzk8X8PvTe0H6tBfMLcT9RH+Y3Ij8S7de4X4n8TLRf436nb9EPVX2/
ZgDW3wHr74D1d8D6O2D9HbD+Dlh/B6y/A6pH3E9GfIrqEfejcb9aJPOzEZ+i
ekR8iuoR7dOpHhGfonqE+Req91MW/kk89Sbjo5yf6hhf1TH+Wr2f0sANxm85
3x3J+G8d5MN0PemMH//K+DLnz5xPz0R+TfFNxrc5/+Z8nPILXQ/n65y/cz7P
+T3lF4opv5D+Wgv9L6S/1kN/zGbmn+H+GtJff0H/DemvTdGfk8H8O6S/1kN/
D/f/kP7aEf1BOuYfIv21O/qL9jD/EemvZvQnkf56HP1L3N9E+ms2+p+Ux+PO
1os7Wy/ubL24s/XiztbLx/4t7u+qvl7c2XpxB+pfLqG/jPqXpsx/Rv40t2r+
BCNQ/8L9baOY/438cdS/TEX/HPUvpDNSviP/3QP035E/ryf688i/54z+Pe7v
a8H8f9wfuBH9g0HoHxyI/sKj6C/k/kPyY65Hf2Jv5l90YP5Gqo/h6H/k/kju
n2zN/JXkx4xA/yVxTOSaH/F74pjINQVxTOSaYiXTByg/I9f8SF8gjolc8yN9
gupDR9QvqH4A6huk3+xC/YPrI75MPyH95jHqK1x/If0mHvUZZf0a1PeJ6mNP
1He4/vMZ04eoPg5A/YjrS6eY/kT3Z0Z9iu6/A+pXXN+i+vgB9S+uj9Hzt0X9
LJLpa42Y/pbE9Dmu31F9TEZ9bzTyvKbI8zjvu4k88DTyQM4LuyJPXI488Try
xvHIG7syHjkSeeVg5JWcZxLvDEHeWcJ4qBXy0qfISzlPJd76AXmrFfLYidV4
7AZxCXntFeS59ZDnYn1SeS/FbRkPdmS8mPNkzpsdGI/mvJrzbOrD/x8pDPKz

      "], {
       {RGBColor[0.5, 0., 0.], 
        LineBox[{{1, 2}, {1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
          50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3}, {1, 64, 
          65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
          82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
          4}, {1, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
          124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
          137, 138, 139, 140, 141, 142, 5}, {1, 143, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 
          162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 
          175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
          188, 189, 190, 191, 192, 193, 194, 195, 6}, {2, 1}, {2, 3}, {2, 196,
           197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
          210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 4}, {2, 
          222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 
          235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
          248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 
          261, 262, 263, 264, 265, 6}, {2, 266, 267, 268, 269, 270, 271, 272, 
          273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 
          299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 7}, {2, 310, 
          311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 
          324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 
          337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 
          350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 
          8}, {3, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 
          375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 
          388, 1}, {3, 2}, {3, 4}, {3, 389, 390, 391, 392, 393, 394, 395, 396,
           397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 
          410, 411, 412, 413, 414, 5}, {3, 415, 416, 417, 418, 419, 420, 421, 
          422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 
          435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
          448, 449, 6}, {4, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 
          460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 
          473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 1}, {4, 
          485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 
          498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
          2}, {4, 3}, {4, 5}, {4, 511, 512, 513, 514, 515, 516, 517, 518, 519,
           520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 
          533, 534, 535, 536, 6}, {4, 537, 538, 539, 540, 541, 542, 543, 544, 
          545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 
          558, 559, 560, 561, 562, 7}, {4, 563, 564, 565, 566, 567, 568, 569, 
          570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 
          583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 
          596, 597, 8}, {5, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 
          608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 
          621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 
          634, 635, 636, 637, 638, 639, 640, 641, 1}, {5, 642, 643, 644, 645, 
          646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 
          659, 660, 661, 662, 663, 664, 665, 666, 667, 3}, {5, 4}, {5, 6}, {5,
           7}, {5, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
           680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 
          693, 8}, {6, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 
          705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 
          718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 
          731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 
          744, 745, 746, 1}, {6, 747, 748, 749, 750, 751, 752, 753, 754, 755, 
          756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 
          769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 
          782, 783, 784, 785, 786, 787, 788, 789, 790, 2}, {6, 791, 792, 793, 
          794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 
          807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 
          820, 821, 822, 823, 824, 825, 3}, {6, 826, 827, 828, 829, 830, 831, 
          832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 
          845, 846, 847, 848, 849, 850, 851, 4}, {6, 5}, {6, 8}, {7, 852, 853,
           854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 
          867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 
          880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
          893, 894, 895, 2}, {7, 896, 897, 898, 899, 900, 901, 902, 903, 904, 
          905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 
          918, 919, 920, 921, 4}, {7, 5}, {7, 8}, {8, 922, 923, 924, 925, 926,
           927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 
          940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 
          966, 967, 968, 969, 970, 971, 972, 973, 974, 2}, {8, 975, 976, 977, 
          978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 
          991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
           1004, 1005, 1006, 1007, 1008, 1009, 4}, {8, 1010, 1011, 1012, 1013,
           1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
          1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
          5}, {8, 6}, {8, 7}}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["7",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["8",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0., 6.}, {2., 5.}, {-1., 4.}, {2., 3.}, {0., 
       2.}, {-1., 1.}, {2., 1.}, {2., 0.}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{8, 1}, {8, 8}, {1, 8}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 8}, {3, 8}, {4, 8}, {7, 8}, {8, 8}, {3, 7}, {4, 7}, {5, 
       7}, {6, 7}, {8, 7}, {4, 6}, {7, 6}, {8, 6}, {6, 5}, {7, 5}, {8, 5}, {5,
        5}, {6, 4}, {7, 4}, {7, 3}, {8, 3}, {8, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 8}, {8, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["8", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["6", TraditionalForm]}, {4, 
        FormBox["5", TraditionalForm]}, {5, 
        FormBox["4", TraditionalForm]}, {6, 
        FormBox["3", TraditionalForm]}, {7, 
        FormBox["2", TraditionalForm]}, {8, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.702717423116376*^9, 3.702717892269164*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178922862997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178922882996`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Fixing: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892290803*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 0, 0, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892290803*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "7", ",", "8"}], "}"}]}],
  SequenceForm["neighs=", {2, 3, 4, 7, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892290803*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0, 0, 1, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892290803*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892290803*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Fixing: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892306715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 0, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892306715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "8", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892306715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1, 1, 1, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892306715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892306715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Fixing: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892322339*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892322339*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "8"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 4, 7, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892322339*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1", ",", "1", ",", "2", ",", "3"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1, 1, 2, 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892322339*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "4", "}"}]}],
  SequenceForm["atomsToBeFixed=", {4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892322339*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Fixing: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892337964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892337964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "7", ",", "8", ",", "5", ",", "6"}],
     "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 7, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892337964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892337964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "8", "}"}]}],
  SequenceForm["atomsToBeFixed=", {8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892337964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Fixing: ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923535895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 0, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923535895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "7", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 4, 7, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923535895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2", ",", "3", ",", "4", ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2, 3, 4, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923535895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "7", "}"}]}],
  SequenceForm["atomsToBeFixed=", {7}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923535895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Fixing: ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892369214*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892369214*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "8", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892369214*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "3", ",", "4", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 3, 4, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892369214*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "6", "}"}]}],
  SequenceForm["atomsToBeFixed=", {6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.70271789238484*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Fixing: ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178923878465`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "7", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 7, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892390847*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7", ",", "8", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {2, 4, 7, 8, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892390847*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "4", ",", "4", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 4, 4, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892390847*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "5", "}"}]}],
  SequenceForm["atomsToBeFixed=", {5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892390847*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Fixing: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.702717892390847*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "8", ",", "7", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 8, 7, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178924076395`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {2, 4, 7, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174231335077`*^9, 3.7027178924076395`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "8", ",", "7", ",", "6", ",", "5"}],
   "}"}]], "Output",
 CellChangeTimes->{3.702717423116376*^9, 3.7027178924076395`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GeometricTransformationBox[
      GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}, {
        {RGBColor[0.5, 0., 0.], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
          6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {4, 
          7}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}}]}, {InsetBox[
          FrameBox["1",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 1], InsetBox[
          FrameBox["2",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 2], InsetBox[
          FrameBox["3",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 3], InsetBox[
          FrameBox["4",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 4], InsetBox[
          FrameBox["5",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 5], InsetBox[
          FrameBox["6",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 6], InsetBox[
          FrameBox["7",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 7], InsetBox[
          FrameBox["8",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 8]}}], {{
      0.007334089450707237, -0.008623418294631868}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {3.448487, 2.448487}},
    PlotRange->{{-0.262560402335323, 
     2.363043621017907}, {-0.14743738408999468`, 1.3269364568099522`}},
    PlotRangePadding->Automatic], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 7, 8, 5, 6}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
           7}, {2, 8}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 8}, {4, 5}, {4, 
           6}, {4, 7}, {7, 8}, {7, 5}, {8, 5}, {8, 6}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
           1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {
           1.095691072601297, 0.6505122461849997}, {1.0491244756787474`, 
           1.1794990727199575`}, {0.5531324991014905, 0.08045910464541084}, {
           2.100483218682584, 0.9014058445027913}, {1.8248187044662827`, 
           0.16135316934500915`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{6, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{7, 8}, 0.023421592724759938`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.023421592724759938`], 
             DiskBox[2, 0.023421592724759938`], 
             DiskBox[3, 0.023421592724759938`], 
             DiskBox[4, 0.023421592724759938`], 
             DiskBox[5, 0.023421592724759938`], 
             DiskBox[6, 0.023421592724759938`], 
             DiskBox[7, 0.023421592724759938`], 
             DiskBox[8, 0.023421592724759938`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", "True"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{3.7005622829975276`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GeometricTransformationBox[
      GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}, {
        {RGBColor[0.5, 0., 0.], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
          6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {4, 
          7}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}}]}, {InsetBox[
          FrameBox["1",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 1], InsetBox[
          FrameBox["2",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 2], InsetBox[
          FrameBox["3",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 3], InsetBox[
          FrameBox["4",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 4], InsetBox[
          FrameBox["5",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 5], InsetBox[
          FrameBox["6",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 6], InsetBox[
          FrameBox["7",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 7], InsetBox[
          FrameBox["8",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 8]}}], {{
      0.007334089450707237, -0.008623418294631868}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {3.448487, 2.448487}},
    PlotRange->{{-0.262560402335323, 
     2.363043621017907}, {-0.14743738408999468`, 1.3269364568099522`}},
    PlotRangePadding->Automatic], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{8, 1}, {8, 8}, {1, 8}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 8}, {3, 8}, {4, 8}, {7, 8}, {8, 8}, {3, 7}, {4, 7}, {5, 
       7}, {6, 7}, {8, 7}, {4, 6}, {7, 6}, {8, 6}, {6, 5}, {7, 5}, {8, 5}, {5,
        5}, {6, 4}, {7, 4}, {7, 3}, {8, 3}, {8, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 8}, {8, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["8", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["6", TraditionalForm]}, {4, 
        FormBox["5", TraditionalForm]}, {5, 
        FormBox["4", TraditionalForm]}, {6, 
        FormBox["3", TraditionalForm]}, {7, 
        FormBox["2", TraditionalForm]}, {8, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.702717423417053*^9, 3.7027178924545174`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intersection of spheres\n",
 StyleBox["DGIntersect3Spheres, DGIntersect4Spheres", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6982194666379185`*^9, 3.6982194765995255`*^9}, {
   3.698220168167163*^9, 3.6982202742700357`*^9}, {3.698220398059785*^9, 
   3.698220406529903*^9}, 3.698220659834761*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGIntersect3Spheres", ",", "DGIntersect4Spheres"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIntersect3Spheres", "[", 
     RowBox[{"a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_"}],
      "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Gets", " ", "the", " ", "2", " ", "solutions", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "a"}], "||"}], "=", "ra"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "b"}], "||"}], "=", "rb"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "c"}], "||"}], "=", "rc"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "   ", 
       StyleBox["Input",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], 
       StyleBox[";",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
       StyleBox["a",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox["b",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      RowBox[{
       RowBox[{
        StyleBox["c",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"sphere", " ", "centers"}],
         FontWeight->"Plain"]}], ";", "\[IndentingNewLine]", "   ", "ra"}], 
      ",", "rb", ",", 
      RowBox[{
       RowBox[{"rc", ":", " ", 
        StyleBox[
         RowBox[{"respective", " ", "sphere", " ", "radius"}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox["   ",
        FontWeight->"Plain"], 
       StyleBox["Output",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], ";", "   ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["x",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"the", " ", "two", " ", "intersections", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ":", " ", 
            RowBox[{"positive", " ", "chirality", " ", "and", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ":", " ", 
            RowBox[{"negative", " ", "chirality"}]}], ")"}]}],
         FontWeight->"Plain"]}], ";"}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "A", ",", "x", ",", "p", ",", "dp", ",", "u", ",", "v", ",", 
        "w", ",", "du", ",", "dv", ",", "dw", ",", "dpu", ",", "AbsCos", ",", 
        "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "select", " ", "the", " ", "most", " ", "perpendicular", " ", "vertex",
         " ", "angle", " ", 
        RowBox[{"(", "stability", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AbsCos", "[", 
          RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"u", ",", "v"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Norm", "[", "u", "]"}], "*", 
            RowBox[{"Norm", "[", "v", "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w", ",", "du", ",", "dv", ",", "dw"}], 
          "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MinimalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"b", "-", "a"}], ",", 
                   RowBox[{"c", "-", "a"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "a", ",", "b", ",", "c", ",", "ra", ",", "rb", ",", "rc"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"c", "-", "b"}], ",", 
                   RowBox[{"a", "-", "b"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "b", ",", "c", ",", "a", ",", "rb", ",", "rc", ",", "ra"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"a", "-", "c"}], ",", 
                   RowBox[{"b", "-", "c"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "c", ",", "a", ",", "b", ",", "rc", ",", "ra", ",", "rb"}], 
                  "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
             "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"normal", " ", "to", " ", "the", " ", "plane", " ", 
          RowBox[{"(", 
           RowBox[{"u", ",", "v", ",", "w"}], ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"v", "-", "u"}], ",", 
            RowBox[{"w", "-", "u"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "-", "u"}], ",", 
           RowBox[{"w", "-", "u"}], ",", "n"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"v", ",", "v"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dv", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"w", ",", "w"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dw", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{"Dot", "[", 
            RowBox[{"n", ",", "u"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"A", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "select", " ", "the", " ", "factor", " ", "with", " ", "minimal", 
          " ", "canceling", " ", "effect", " ", 
          RowBox[{"(", "stability", ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "du"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MaximalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ra", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "a"}], "]"}]}], ")"}], "/", "ra"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", "ra"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rb", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "b"}], "]"}]}], ")"}], "/", "rb"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", "rb"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rc", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "c"}], "]"}]}], ")"}], "/", "rc"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "rc"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dpu", "=", 
         RowBox[{"Norm", "[", 
          RowBox[{"p", "-", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dp", "=", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"du", "+", "dpu"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"du", "-", "dpu"}], ")"}]}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"dp", "=", 
         RowBox[{"Re", "[", "dp", "]"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "+", 
           RowBox[{"dp", "*", "n"}]}], ",", 
          RowBox[{"p", "-", 
           RowBox[{"dp", "*", "n"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<a=\>\"", ",", "a", ",", "\"\<  ra=\>\"", ",", "ra", ",", 
           "\"\<  b=\>\"", ",", "b", ",", "\"\<  rb=\>\"", ",", "rb", ",", 
           "\"\<  c=\>\"", ",", "c", ",", "\"\<  rc=\>\"", ",", "rc"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<p=\>\"", ",", "p", ",", "\"\<  dp=\>\"", ",", "dp", ",", 
           "\"\<  x=\>\"", ",", "x"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calculating", " ", "max", " ", "relative", " ", "errors", " ", "of", 
         " ", "each", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "ra"}], 
                ")"}], "/", "ra"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rb"}], 
                ")"}], "/", "rb"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"c", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rc"}], 
                ")"}], "/", "rc"}]}], "}"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIntersect4Spheres", "[", 
    RowBox[{
    "a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_", ",", "d_",
      ",", "rd_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "error", ",", "errd1", ",", "errd2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "=", 
       RowBox[{"DGIntersect3Spheres", "[", 
        RowBox[{"a", ",", "ra", ",", "b", ",", "rb", ",", "c", ",", "rc"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd2", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"errd1", "<", "errd2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "errd1"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "errd2"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982194867257423`*^9, 3.6982194896711955`*^9}, {
   3.6982195521886597`*^9, 3.6982195574006166`*^9}, {3.698219658452036*^9, 
   3.6982197616420813`*^9}, {3.6982197929738626`*^9, 3.698220066685677*^9}, {
   3.6982202502951345`*^9, 3.6982206319197464`*^9}, {3.698220667243675*^9, 
   3.698220668644104*^9}, {3.6982374927691836`*^9, 3.6982376692978663`*^9}, {
   3.6982376993873615`*^9, 3.6982377116575003`*^9}, {3.6982377427296095`*^9, 
   3.6982378010688024`*^9}, {3.698238162700093*^9, 3.69823821610886*^9}, {
   3.698238503550205*^9, 3.6982385061164074`*^9}, {3.6982394287569656`*^9, 
   3.6982395461318145`*^9}, {3.6982396045652046`*^9, 
   3.6982396143261786`*^9}, {3.6982396607885056`*^9, 
   3.6982397285916595`*^9}, {3.6982397636183057`*^9, 3.698239783426839*^9}, {
   3.6982399533225765`*^9, 3.698239972728856*^9}, {3.6982400966089387`*^9, 
   3.6982401012365484`*^9}, 3.6982427393374405`*^9, {3.698243596521635*^9, 
   3.6982437164378223`*^9}, {3.6982437695877132`*^9, 
   3.6982437905316043`*^9}, {3.6983192514474745`*^9, 
   3.6983192996453114`*^9}, {3.6983193844490786`*^9, 3.698319388494842*^9}, {
   3.6983194281754827`*^9, 3.698319433003346*^9}, {3.6983196015623474`*^9, 
   3.698319630059145*^9}, {3.698319684615945*^9, 3.698319702038396*^9}, {
   3.6983221142065024`*^9, 3.6983221170274825`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "DGBuildUpSolver\n",
 StyleBox["DGBuildUpInitX, DGBuildUpSetX, DGBuildUpSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244132498234*^9, 
  3.698244132699868*^9}, {3.6982442429445033`*^9, 3.6982442478042264`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6808787874069276`*^9, 3.6808787932715735`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGBuildUpInitX", ",", "\[IndentingNewLine]", "DGBuildUpSetX", ",", 
    "\[IndentingNewLine]", "DGBuildUpSolver"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpInitX", "[", 
     RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i1", ",", "i2", ",", "i3", ",", "i4", ",", "d12", ",", "d13", ",", 
        "d14", ",", "d23", ",", "d24", ",", "d34", ",", "A", ",", "X", ",", 
        "X21", ",", "X31", ",", "X32", ",", "X41", ",", "X42", ",", "error"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
        "basis"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "d12", ",", "d13", ",", "d14", ",", "d23", ",", "d24", ",", "d34"}], 
         "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "i2"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "i4"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "four", " ", "atoms", " ", "in", " ", "the", " ", "basis"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "d12"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X21", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d13", "^", "2"}], "-", 
           RowBox[{"d23", "^", "2"}], "+", 
           RowBox[{"X21", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "X21"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X31", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"d13", "^", "2"}], "-", 
          RowBox[{"X31", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i4", "]"}], "]"}], ",", "error"}], "}"}], "=", 
        RowBox[{
         RowBox[{"DGIntersect3Spheres", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i1", "]"}], "]"}], ",", "d14", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i2", "]"}], "]"}], ",", "d24", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i3", "]"}], "]"}], ",", "d34"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpSetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "basis", ",", "x", ",", "i1", ",", 
        "i2", ",", "i3", ",", "i4", ",", "d1", ",", "d2", ",", "d3", ",", 
        "d4", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "4"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"basis", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{"neighs", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "basis", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
           RowBox[{"basis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i3", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i4", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "error"}], "}"}], "=", 
           RowBox[{"DGIntersect4Spheres", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i3", "]"}], "]"}], ",", "d3", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i4", "]"}], "]"}], ",", "d4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"error", "<", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "3"}], ")"}]}]}], ",", "Break"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"error", ">", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}]}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidSolution: A precise solution could not be found.\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G_", ",", "nodes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"DGBuildUpInitX", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "remaining", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "5"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"nodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"DGBuildUpSetX", "[", 
          RowBox[{"G", ",", "X", ",", "nodes", ",", "i"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.680878796715887*^9, 3.6808788985008335`*^9}, {
   3.6808789677890434`*^9, 3.680879020711442*^9}, {3.6808790793750415`*^9, 
   3.68087932980835*^9}, {3.6808794433580427`*^9, 3.680879452768545*^9}, {
   3.680879482957798*^9, 3.6808798572569814`*^9}, {3.6808801823844533`*^9, 
   3.6808802178347673`*^9}, {3.6808811493834057`*^9, 
   3.6808816352290897`*^9}, {3.6808816739789124`*^9, 3.680882032196274*^9}, {
   3.6808820912500343`*^9, 3.6808821757453947`*^9}, {3.680882211133314*^9, 
   3.680882378871024*^9}, {3.6808824342608643`*^9, 3.680882434823531*^9}, {
   3.680883747151867*^9, 3.680883922885659*^9}, {3.680883972978032*^9, 
   3.680884390920006*^9}, {3.6808844300037193`*^9, 3.6808845512584267`*^9}, 
   3.68088461521344*^9, {3.6808846535514545`*^9, 3.6808847349773226`*^9}, {
   3.6808850013417034`*^9, 3.6808850118309097`*^9}, {3.680885071364455*^9, 
   3.680885338050998*^9}, {3.680885369092225*^9, 3.6808854465825834`*^9}, {
   3.6808858161521587`*^9, 3.6808858165517445`*^9}, {3.680885969295744*^9, 
   3.680886034427628*^9}, {3.680886171713134*^9, 3.6808863538065033`*^9}, 
   3.6808863990841804`*^9, {3.6808864612464943`*^9, 3.680886529813063*^9}, {
   3.6808869456867824`*^9, 3.680886961764923*^9}, {3.6808870123576927`*^9, 
   3.680887019550462*^9}, {3.680887114898735*^9, 3.6808871182675095`*^9}, {
   3.680887181162428*^9, 3.680887187111746*^9}, {3.680887251367427*^9, 
   3.680887273892291*^9}, {3.680887323898876*^9, 3.680887325082522*^9}, {
   3.680887456347989*^9, 3.6808874620826855`*^9}, {3.6808875561244335`*^9, 
   3.680887573091951*^9}, {3.680887721148032*^9, 3.6808878253963804`*^9}, {
   3.680887892923795*^9, 3.680887895438401*^9}, {3.6808883279068727`*^9, 
   3.6808883742127953`*^9}, {3.6808887446347*^9, 3.6808888009663877`*^9}, {
   3.680888843084072*^9, 3.68088888217283*^9}, {3.6808889672984886`*^9, 
   3.680888980048806*^9}, {3.680889012873393*^9, 3.680889017001927*^9}, {
   3.6809607127676287`*^9, 3.680960713931309*^9}, {3.680963627939675*^9, 
   3.6809636936788006`*^9}, {3.680963725032446*^9, 3.68096375932222*^9}, {
   3.680963996232436*^9, 3.680964178133572*^9}, {3.680964213180361*^9, 
   3.6809642748716707`*^9}, {3.680964349959564*^9, 3.6809643607069154`*^9}, {
   3.6809643998686404`*^9, 3.680964423431587*^9}, {3.6809649940240765`*^9, 
   3.6809650555320835`*^9}, {3.680965297215009*^9, 3.680965374687066*^9}, {
   3.680965746541073*^9, 3.680965840873766*^9}, {3.680966028202756*^9, 
   3.6809661594200068`*^9}, {3.680966229724207*^9, 3.6809662777779217`*^9}, {
   3.6809663143619595`*^9, 3.680966336214636*^9}, {3.68096644404537*^9, 
   3.6809666533585944`*^9}, {3.680966782656155*^9, 3.68096684043402*^9}, {
   3.6809669531870036`*^9, 3.680967156904188*^9}, {3.6809672053008804`*^9, 
   3.680967224729057*^9}, {3.680967332314844*^9, 3.680967339149928*^9}, {
   3.6809673783050733`*^9, 3.6809674245168176`*^9}, {3.6809676623088226`*^9, 
   3.6809678364166517`*^9}, {3.6809683681222277`*^9, 
   3.6809686165290656`*^9}, {3.6809686831482697`*^9, 3.680968684388035*^9}, {
   3.680968722806388*^9, 3.6809688286478157`*^9}, {3.6809688660650325`*^9, 
   3.6809688731104565`*^9}, {3.680968922304273*^9, 3.680968979206273*^9}, {
   3.6809690865346055`*^9, 3.680969130012158*^9}, {3.680969781989382*^9, 
   3.680969872823762*^9}, {3.6809699400381446`*^9, 3.680970004489729*^9}, {
   3.6809700536833115`*^9, 3.6809700682716103`*^9}, {3.6809710208681808`*^9, 
   3.680971077002434*^9}, {3.680971109326406*^9, 3.680971115550733*^9}, {
   3.6809711907370863`*^9, 3.680971216592291*^9}, {3.680971278912956*^9, 
   3.6809712801192245`*^9}, {3.6809718771352825`*^9, 3.680971944993314*^9}, {
   3.6809720034773016`*^9, 3.6809720732264376`*^9}, {3.6809724406934075`*^9, 
   3.68097248602604*^9}, {3.6809726599472265`*^9, 3.6809726602954173`*^9}, {
   3.6809727230464745`*^9, 3.6809727291279593`*^9}, {3.680973017680879*^9, 
   3.6809730380391974`*^9}, {3.6809731227303166`*^9, 
   3.6809731466993895`*^9}, {3.680973762644851*^9, 3.6809737679144526`*^9}, {
   3.680973813745384*^9, 3.6809738243622527`*^9}, {3.6809739095062947`*^9, 
   3.680973940278738*^9}, {3.680973995792797*^9, 3.6809740011452093`*^9}, {
   3.6809740466010485`*^9, 3.680974060123784*^9}, {3.6809753469202642`*^9, 
   3.680975657929818*^9}, {3.680975695072091*^9, 3.6809758501681805`*^9}, {
   3.6809758996673946`*^9, 3.6809762262710686`*^9}, {3.680976301712438*^9, 
   3.6809763299510756`*^9}, {3.6809763746469035`*^9, 3.680976380499403*^9}, {
   3.6809764218826056`*^9, 3.6809765347847033`*^9}, {3.680976581667529*^9, 
   3.680976597026043*^9}, {3.680976666398885*^9, 3.6809766669610734`*^9}, {
   3.6809767210323706`*^9, 3.680976781558323*^9}, {3.6809768323302093`*^9, 
   3.680976846514173*^9}, {3.680976911357921*^9, 3.6809769209581203`*^9}, {
   3.680977049628893*^9, 3.6809771526850805`*^9}, {3.6809773883553143`*^9, 
   3.6809774793566475`*^9}, {3.6809775209278545`*^9, 3.680977521665044*^9}, {
   3.6809776512633805`*^9, 3.6809776515167046`*^9}, {3.680977712319936*^9, 
   3.6809777460168*^9}, {3.6810531539619203`*^9, 3.681053166959158*^9}, {
   3.6810532473507404`*^9, 3.6810532616980743`*^9}, {3.681053537630972*^9, 
   3.6810535971654816`*^9}, {3.6810536299030733`*^9, 3.681053764619897*^9}, {
   3.6810540191911044`*^9, 3.6810541426058364`*^9}, {3.681054193325778*^9, 
   3.681054202050123*^9}, {3.681054407650793*^9, 3.681054422525179*^9}, {
   3.6810544649467773`*^9, 3.6810544702728024`*^9}, {3.6810545196776843`*^9, 
   3.6810545642818737`*^9}, {3.6810546574028754`*^9, 
   3.6810546706011558`*^9}, {3.6811147611436043`*^9, 3.681114794728092*^9}, {
   3.681114882040724*^9, 3.6811148829097633`*^9}, {3.6811149340621448`*^9, 
   3.6811149841654096`*^9}, {3.6811151906954145`*^9, 3.68111537573689*^9}, {
   3.681115515816817*^9, 3.6811155891013746`*^9}, {3.6811156493781*^9, 
   3.681115666641453*^9}, {3.6811157198894944`*^9, 3.681115785849764*^9}, {
   3.681115827017232*^9, 3.6811158347965927`*^9}, {3.6811159033938723`*^9, 
   3.681116089029919*^9}, {3.681116213755548*^9, 3.681116272066968*^9}, {
   3.6811163405323725`*^9, 3.6811163422818956`*^9}, {3.6811164168073506`*^9, 
   3.6811164867154493`*^9}, {3.6811169255299654`*^9, 
   3.6811172248748937`*^9}, {3.681117258961213*^9, 3.6811174496638355`*^9}, {
   3.681117533579012*^9, 3.681117647560803*^9}, {3.681117763229082*^9, 
   3.681117783811084*^9}, {3.6811178439925947`*^9, 3.6811178454111786`*^9}, {
   3.6811178787361465`*^9, 3.681118062900173*^9}, {3.6811182140723333`*^9, 
   3.681118242911724*^9}, {3.681118570175209*^9, 3.681118576971583*^9}, {
   3.6811186959610105`*^9, 3.6811187586878242`*^9}, {3.6811187891790757`*^9, 
   3.681118790999563*^9}, {3.6811188571056223`*^9, 3.681118914067198*^9}, {
   3.6811189451494126`*^9, 3.681119011066283*^9}, {3.681119048258296*^9, 
   3.681119051434639*^9}, {3.681119092032136*^9, 3.681119104913178*^9}, {
   3.6811191834650784`*^9, 3.6811191867953424`*^9}, {3.6811196359476748`*^9, 
   3.681119688600884*^9}, {3.68111975028333*^9, 3.6811197807530875`*^9}, {
   3.6811198129044657`*^9, 3.681119817415021*^9}, 3.6811199829716883`*^9, {
   3.681120060387*^9, 3.68112008143056*^9}, {3.6811205197179084`*^9, 
   3.681120554142846*^9}, {3.68112059755657*^9, 3.6811209608421526`*^9}, {
   3.681121000321582*^9, 3.6811213121725974`*^9}, {3.68112299321381*^9, 
   3.681123012107442*^9}, {3.681123048832554*^9, 3.6811232172421627`*^9}, {
   3.6811273234720945`*^9, 3.681127432423428*^9}, {3.6811274800609336`*^9, 
   3.6811274809005604`*^9}, {3.6811275257683163`*^9, 3.681127578179681*^9}, {
   3.681127694826793*^9, 3.681127710789095*^9}, {3.6811278110887747`*^9, 
   3.681127844848827*^9}, {3.6811318326745567`*^9, 3.6811318616049323`*^9}, {
   3.6811320378293934`*^9, 3.6811321022246556`*^9}, {3.6811322022846727`*^9, 
   3.6811322197331595`*^9}, {3.681132275270756*^9, 3.681132303924238*^9}, {
   3.681132952546542*^9, 3.681132975747823*^9}, {3.6811330533869743`*^9, 
   3.681133069989792*^9}, {3.6811331401560717`*^9, 3.681133210129423*^9}, {
   3.68113355997246*^9, 3.681133580734687*^9}, {3.681133629200098*^9, 
   3.681133630070923*^9}, {3.6811337049047832`*^9, 3.6811337124057627`*^9}, {
   3.681133819975602*^9, 3.681133840938975*^9}, {3.681133980113397*^9, 
   3.6811339892678027`*^9}, {3.6811340593396463`*^9, 
   3.6811340697445583`*^9}, {3.6811341524626665`*^9, 3.681134155389428*^9}, {
   3.6811384085644703`*^9, 3.681138416451669*^9}, {3.6811384531639957`*^9, 
   3.6811387332515326`*^9}, {3.696326247015401*^9, 3.696326290249895*^9}, {
   3.6963263290758915`*^9, 3.6963263534943542`*^9}, {3.6963265499230905`*^9, 
   3.6963267199909678`*^9}, {3.6963267593116693`*^9, 
   3.6963269229873137`*^9}, {3.696326975109809*^9, 3.6963269771450577`*^9}, {
   3.6963270084709077`*^9, 3.6963270268753195`*^9}, {3.696327279707534*^9, 
   3.6963277124342194`*^9}, {3.6963277670566783`*^9, 
   3.6963279383852067`*^9}, {3.6963279795211296`*^9, 
   3.6963281839315977`*^9}, {3.696328216429962*^9, 3.696328350263246*^9}, {
   3.696328411126731*^9, 3.6963286380076227`*^9}, {3.6963286951665726`*^9, 
   3.6963289772073884`*^9}, {3.696329031822198*^9, 3.696329290347029*^9}, {
   3.6963293252573895`*^9, 3.696329474349821*^9}, {3.6963295071975946`*^9, 
   3.6963295732929854`*^9}, {3.6963296485433044`*^9, 
   3.6963296648466263`*^9}, {3.6963298886113076`*^9, 3.696329943964314*^9}, {
   3.6963299828627825`*^9, 3.696330037711483*^9}, {3.6963301105312886`*^9, 
   3.6963301559281893`*^9}, {3.69633018944613*^9, 3.696330215930565*^9}, {
   3.696330259860301*^9, 3.6963304438441257`*^9}, {3.696330475475258*^9, 
   3.6963306230483894`*^9}, {3.6963306563291655`*^9, 
   3.6963307206242332`*^9}, {3.6963345425594997`*^9, 3.696334563107193*^9}, {
   3.696334653622881*^9, 3.696334663105197*^9}, {3.6963351846429973`*^9, 
   3.696335191975522*^9}, {3.696338539683173*^9, 3.6963385468592424`*^9}, {
   3.6967009588676825`*^9, 3.6967009616899395`*^9}, {3.696701101654566*^9, 
   3.6967011779401827`*^9}, {3.696934183996126*^9, 3.696934207031106*^9}, {
   3.696934260981206*^9, 3.696934285673975*^9}, {3.696934322808727*^9, 
   3.6969343619935703`*^9}, {3.6969344502573805`*^9, 
   3.6969344569846115`*^9}, {3.6969345597853594`*^9, 3.696934564670198*^9}, {
   3.6981370507222033`*^9, 3.6981370610160313`*^9}, {3.6981373191413965`*^9, 
   3.6981373679463625`*^9}, {3.698137636535467*^9, 3.698137640349996*^9}, {
   3.698137692978403*^9, 3.698137694388838*^9}, {3.6981377371096735`*^9, 
   3.6981378087923565`*^9}, {3.6981378413129263`*^9, 3.698137901443728*^9}, {
   3.6981379713812246`*^9, 3.6981381104371033`*^9}, {3.698138163007603*^9, 
   3.698138273010347*^9}, {3.6981383288703957`*^9, 3.6981383470199337`*^9}, {
   3.698138383433584*^9, 3.6981385107632823`*^9}, {3.6981385728761735`*^9, 
   3.698138601187451*^9}, {3.6981386377627096`*^9, 3.6981386923429112`*^9}, {
   3.698138727770139*^9, 3.6981387340603113`*^9}, {3.6981387792380495`*^9, 
   3.698138792421794*^9}, {3.6981388289921837`*^9, 3.698139280883665*^9}, {
   3.698139335557928*^9, 3.6981394881856575`*^9}, {3.698139521639346*^9, 
   3.6981396956565886`*^9}, {3.6981397462081165`*^9, 
   3.6981397622967873`*^9}, {3.698155520709202*^9, 3.6981555904389486`*^9}, {
   3.6981556674640684`*^9, 3.698155693967147*^9}, {3.6981557545088015`*^9, 
   3.698155808280466*^9}, {3.698155853286815*^9, 3.698155855055989*^9}, {
   3.6982189983475137`*^9, 3.698219030988694*^9}, {3.698219100474406*^9, 
   3.698219198969232*^9}, {3.6982192381510115`*^9, 3.698219253221507*^9}, {
   3.698220777816371*^9, 3.6982208595135517`*^9}, {3.698220963698536*^9, 
   3.6982211178834953`*^9}, {3.698221212645543*^9, 3.6982212782050257`*^9}, 
   3.6982213725109158`*^9, {3.6982215131814556`*^9, 3.698221514190624*^9}, {
   3.698223369061162*^9, 3.698223370668728*^9}, {3.698223428680704*^9, 
   3.698223498676685*^9}, {3.698232667104102*^9, 3.6982327100590925`*^9}, {
   3.6982363879168158`*^9, 3.698236497420759*^9}, {3.698236542712164*^9, 
   3.698236577277589*^9}, {3.698236653268828*^9, 3.698236745014656*^9}, {
   3.698236775330765*^9, 3.6982368007891493`*^9}, {3.6982368409967117`*^9, 
   3.6982369917653947`*^9}, {3.6982370416917057`*^9, 3.698237114115241*^9}, {
   3.698237161049319*^9, 3.6982372226609635`*^9}, {3.6982372605330825`*^9, 
   3.698237302611991*^9}, {3.698237340209424*^9, 3.698237346900936*^9}, {
   3.6982374036160526`*^9, 3.6982374125940075`*^9}, {3.6982378428289995`*^9, 
   3.6982380410494075`*^9}, {3.698238254286378*^9, 3.6982382988629436`*^9}, 
   3.6982384288421555`*^9, {3.69823846001383*^9, 3.698238473616352*^9}, {
   3.6982386797612762`*^9, 3.69823869086414*^9}, {3.698238937783132*^9, 
   3.698238973369734*^9}, {3.698239054302782*^9, 3.698239120169636*^9}, 
   3.698240491600814*^9, 3.698240522976124*^9, {3.6982424083772717`*^9, 
   3.698242443063778*^9}, {3.698242810686262*^9, 3.698242818332333*^9}, {
   3.6982431621439376`*^9, 3.69824321141813*^9}, {3.6982432460511*^9, 
   3.6982432468136053`*^9}, {3.6982432868221755`*^9, 
   3.6982432902635994`*^9}, {3.6982435559692388`*^9, 
   3.6982435562439213`*^9}, {3.698245000504096*^9, 3.698245044587835*^9}, {
   3.698245079434947*^9, 3.698245100812493*^9}, {3.698245837087344*^9, 
   3.6982458669331384`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6808847610415177`*^9, 3.680884762636571*^9}}],

Cell[CellGroupData[{

Cell["Check DGBuildUpInitX", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.6981402250229177`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpInitX", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "basis"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintDistanceMatrix", "[", 
  RowBox[{"x", ",", "edges"}], "]"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
  3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
  3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
  3.698218926550845*^9, 3.698218982996833*^9}, {3.698221528171595*^9, 
  3.6982215292478094`*^9}, {3.698223229496271*^9, 3.69822324531176*^9}, {
  3.698232789723715*^9, 3.6982327915454226`*^9}, {3.6982330045728703`*^9, 
  3.698233050778017*^9}, {3.698233185373212*^9, 3.6982331896285343`*^9}, {
  3.698234330535508*^9, 3.6982343508117933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["5",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["7",
       HoldForm], "4", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7027174235173254`*^9, 3.702717892569416*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "2", "4", "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.0000000000000002`"},
     {
      TagBox["5",
       HoldForm], "3", "4", "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "3", "5", "1.`"},
     {
      TagBox["7",
       HoldForm], "4", "5", "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {"i", "j", "dij"}}]]]], "Print",
 CellChangeTimes->{3.7027174235173254`*^9, 3.702717892569416*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check DGBuildUpSolver", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.698140236428483*^9, 
   3.698238321752689*^9, {3.6982383734862976`*^9, 3.6982383771012917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
   3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
   3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
   3.6981402466162415`*^9, 3.698140340332897*^9}, 3.6981556019936123`*^9, {
   3.6982187458271065`*^9, 3.698218876577999*^9}, {3.6982344194696364`*^9, 
   3.6982344493154306`*^9}, {3.6982383323257017`*^9, 3.698238406412279*^9}, {
   3.6982385625786076`*^9, 3.698238587018317*^9}, {3.698238626331799*^9, 
   3.698238646767353*^9}, {3.6982387148145256`*^9, 3.698238802521889*^9}, {
   3.6982388531985006`*^9, 3.6982389113771334`*^9}, {3.6982390082525625`*^9, 
   3.698239019195321*^9}, {3.698239169984175*^9, 3.6982392406763315`*^9}, {
   3.698239330259947*^9, 3.69823933328045*^9}, 3.6982393807854576`*^9, 
   3.698239584306156*^9, 3.6982400280690603`*^9, 3.7003143255491667`*^9, {
   3.7009919838539476`*^9, 3.700992101070965*^9}, {3.700992166609742*^9, 
   3.7009922125087585`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0", "0", "0"},
     {
      TagBox["2",
       HoldForm], "1.`", "0", "0"},
     {
      TagBox["3",
       HoldForm], "1.0000000000000002`", "1.`", "0"},
     {
      TagBox["4",
       HoldForm], "0.9999999999999996`", "1.0000000000000002`", "1.`"},
     {
      TagBox["5",
       HoldForm], "1.0000000000000002`", 
      RowBox[{"-", "2.2204460492503136`*^-16"}], "0.9999999999999999`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.7027178925915565`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.7027178925915565`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.7027178925915565`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.70271789260719*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.440892098500626`*^-16"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.440892098500626*^-16}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.70271789260719*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "5.551115123125783`*^-17"}],
  SequenceForm["Mean relative error  : ", 5.551115123125783*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027174235550127`*^9, 3.70271789260719*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving an instance using BuilUpSolver method ", "Subsubsection",
 CellChangeTimes->{3.696335266702453*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "=", 
    RowBox[{"DGProblem", "[", 
     RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"20", ",", "0.0", ",", "5.0", ",", "0"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G", ",", "nodes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{"G", ",", "X", ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6811193723446083`*^9, 3.681119412620857*^9}, {
   3.6811199311928988`*^9, 3.681119960930756*^9}, {3.681119990991001*^9, 
   3.6811200405793905`*^9}, {3.6811230224344797`*^9, 3.681123028526058*^9}, {
   3.6811277224020305`*^9, 3.6811277237741623`*^9}, {3.6811285593560123`*^9, 
   3.681128578782134*^9}, {3.6811286737619624`*^9, 3.681128765537285*^9}, {
   3.681128804607932*^9, 3.6811288239519253`*^9}, {3.681130635133052*^9, 
   3.6811306585684404`*^9}, {3.681132006711861*^9, 3.6811320068519697`*^9}, {
   3.6811322329539566`*^9, 3.6811322568870325`*^9}, {3.681132509241618*^9, 
   3.681132516105033*^9}, {3.6811328599020844`*^9, 3.681132874485738*^9}, {
   3.6811342789491444`*^9, 3.6811343056250167`*^9}, {3.6815665500810804`*^9, 
   3.681566551437929*^9}, {3.681569740351883*^9, 3.681569740852806*^9}, {
   3.6815710193111305`*^9, 3.681571023000434*^9}, {3.6815714400430307`*^9, 
   3.681571491286482*^9}, 3.682752354751058*^9, 3.682757377921311*^9, {
   3.69633473379433*^9, 3.696334739241384*^9}, 3.696335048087739*^9, {
   3.6963351061616244`*^9, 3.696335135730406*^9}, {3.696335254918723*^9, 
   3.6963352586483583`*^9}, 3.698072481347253*^9, {3.6982401401846647`*^9, 
   3.698240149132599*^9}, {3.698240224116712*^9, 3.6982403996781855`*^9}, {
   3.6982405533797884`*^9, 3.698240564408103*^9}, {3.6982422163981752`*^9, 
   3.6982422286963325`*^9}, {3.698242338147665*^9, 3.698242351792679*^9}, {
   3.6982427561150675`*^9, 3.6982427695394716`*^9}, {3.698243314622154*^9, 
   3.6982433155002365`*^9}, 3.7003143256025734`*^9, {3.7009922376381283`*^9, 
   3.7009922464586315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.702717423601889*^9, 3.7027178926384416`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702717423601889*^9, 3.7027178926384416`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717423601889*^9, 3.7027178926384416`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717423601889*^9, 3.7027178926384416`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.440892098500626`*^-16"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.440892098500626*^-16}],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717423601889*^9, 3.702717892654065*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "5.551115123125783`*^-17"}],
  SequenceForm["Mean relative error  : ", 5.551115123125783*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{3.702717423601889*^9, 3.702717892654065*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGBPSolver", "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244126381677*^9, 
  3.6982441350594325`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGBPXinit", ",", "DGBPGetX", ",", "DGBPSolver"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPXinit", "[", 
    RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "numberOfAtoms", ",", "dab", ",", "dac", 
       ",", "dbc", ",", "\[Theta]", ",", "X"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"three", " ", "first", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
       RowBox[{"basis", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dab", ",", "dac", ",", "dbc"}], "}"}], "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "\[UndirectedEdge]", "b"}], ",", 
           RowBox[{"a", "\[UndirectedEdge]", "c"}], ",", 
           RowBox[{"b", "\[UndirectedEdge]", "c"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "planar", " ", "rotation", " ", "angle", " ", "for", " ", "third", " ",
         "atom"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dab", "^", "2"}], "+", 
           RowBox[{"dbc", "^", "2"}], "-", 
           RowBox[{"dac", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "dab", "*", "dbc"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
        "three", " ", "first", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "dab"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dab"}], "+", 
            RowBox[{"dbc", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
           RowBox[{"dbc", "*", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", ",", "0"}], "}"}]}],
         "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBPGetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "branch_", ",", "nodes_", ",", "i_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "x", ",", "error", ",", "i1", ",", 
        "i2", ",", "i3", ",", "d1", ",", "d2", ",", "d3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "3"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<neighs=\>\"", ",", "neighs", ",", "\"\< k=\>\"", ",", "k"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3"}], "}"}], "=", 
        RowBox[{"neighs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d1", ",", "d2", ",", "d3"}], "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "=", 
        RowBox[{"DGIntersect3Spheres", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i3", "]"}], "]"}], ",", "d3"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"branch", "+", "1"}], "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G_", ",", "nodes_", ",", 
     RowBox[{"onesol_:", "False"}], ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", 
     RowBox[{"G", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "X", ",", "S", ",", "work", ",", "error", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"DGBPXinit", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "BPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"work", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
          RowBox[{"DGBPGetX", "[", 
           RowBox[{"G", ",", "X", ",", 
            RowBox[{"branch", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "nodes", ",", "k"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"DGRelativeResidue", "[", 
           RowBox[{"G", ",", "X", ",", "nodes", ",", "k"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"error", ">", "tol"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[bp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", "\"\<  error=\>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"error", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             "\"\<  prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"DGPrintX", "[", 
            RowBox[{"X", "[", 
             RowBox[{"[", 
              RowBox[{"nodes", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "k"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", "X"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"onesol", ",", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"S", ",", "work"}], "}"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679558175961939*^9, 3.6795582465756893`*^9}, {
   3.6795582826425705`*^9, 3.6795582839429235`*^9}, {3.6795657231676226`*^9, 
   3.6795657791530952`*^9}, {3.6795658130773067`*^9, 3.679565871544673*^9}, {
   3.6795861090630603`*^9, 3.679586268296414*^9}, {3.6795863005452967`*^9, 
   3.679586495840868*^9}, {3.6795865460918303`*^9, 3.6795865970915422`*^9}, {
   3.6795868432394185`*^9, 3.6795869018284483`*^9}, {3.679586939131709*^9, 
   3.679586976913601*^9}, {3.6795870626458464`*^9, 3.6795871011073523`*^9}, {
   3.6795871633176947`*^9, 3.679587758105817*^9}, {3.679587804838523*^9, 
   3.6795878406799817`*^9}, {3.6795881298229246`*^9, 3.679588139590253*^9}, {
   3.679588432141921*^9, 3.679588820678732*^9}, {3.67958885218464*^9, 
   3.679588859454245*^9}, {3.679591543221243*^9, 3.6795916551338434`*^9}, {
   3.679591702248043*^9, 3.679591773731745*^9}, {3.6795919722830153`*^9, 
   3.6795919729205785`*^9}, {3.6795920143454957`*^9, 
   3.6795920373721275`*^9}, {3.6795920942295294`*^9, 3.679592111174794*^9}, {
   3.6795921457433033`*^9, 3.6795921895011177`*^9}, {3.6795922813103876`*^9, 
   3.6795922980595803`*^9}, {3.679592407947278*^9, 3.6795924086627626`*^9}, {
   3.6795924498624945`*^9, 3.679592466754154*^9}, {3.679592757750784*^9, 
   3.679592801039822*^9}, {3.679592909747943*^9, 3.6795929608876143`*^9}, {
   3.679593939143162*^9, 3.6795940165402756`*^9}, {3.679594087903904*^9, 
   3.6795941883419476`*^9}, {3.679594287225954*^9, 3.6795943875196476`*^9}, {
   3.679594448595685*^9, 3.679594478828597*^9}, {3.6795945652724648`*^9, 
   3.6795946280032177`*^9}, {3.6795946789134407`*^9, 
   3.6795947026597376`*^9}, {3.679594776154107*^9, 3.6795948130815954`*^9}, {
   3.679594874794201*^9, 3.6795948828190813`*^9}, {3.6795949534488997`*^9, 
   3.6795949725060587`*^9}, {3.6795953069724016`*^9, 3.679595386091648*^9}, {
   3.6795955639765224`*^9, 3.6795956274997435`*^9}, {3.679595702271488*^9, 
   3.6795959233026123`*^9}, {3.679595965972151*^9, 3.6795959811159763`*^9}, {
   3.679596019161744*^9, 3.6795961007578773`*^9}, {3.679596138153123*^9, 
   3.679596343165894*^9}, {3.6795963808982925`*^9, 3.679596485412173*^9}, {
   3.679596522566841*^9, 3.6795965922679443`*^9}, {3.6795966325388813`*^9, 
   3.6795966980857244`*^9}, {3.679596732170254*^9, 3.679596952279262*^9}, {
   3.6795970019970694`*^9, 3.6795970768712177`*^9}, {3.679597120771289*^9, 
   3.679597123641965*^9}, {3.679597504661482*^9, 3.67959752405188*^9}, {
   3.6795977558745494`*^9, 3.679597791424835*^9}, 3.6795987087156878`*^9, {
   3.6795988192242517`*^9, 3.67959883584793*^9}, {3.679598870164411*^9, 
   3.6795991011240025`*^9}, {3.679599318938053*^9, 3.679599340969948*^9}, {
   3.6795993740469303`*^9, 3.679599392408225*^9}, {3.679599446418444*^9, 
   3.6795994936803236`*^9}, {3.6795995268675137`*^9, 3.6795995571197987`*^9}, 
   3.679599593529305*^9, {3.6795996462842827`*^9, 3.679599664667951*^9}, 
   3.6796000535012045`*^9, {3.6796005685888577`*^9, 3.6796006406104794`*^9}, {
   3.679600696928871*^9, 3.6796007267160053`*^9}, {3.6796008413370132`*^9, 
   3.6796008545284967`*^9}, {3.6796009031430583`*^9, 
   3.6796009310933266`*^9}, {3.6796010302991343`*^9, 3.67960105103058*^9}, {
   3.679601123591203*^9, 3.6796011690061445`*^9}, {3.6796012042311897`*^9, 
   3.6796012284117613`*^9}, {3.6796013171753454`*^9, 
   3.6796013538183103`*^9}, {3.679678803727684*^9, 3.6796788489988422`*^9}, {
   3.6796789029728556`*^9, 3.679678973714923*^9}, {3.679679007940275*^9, 
   3.6796790171013775`*^9}, {3.6796791140754843`*^9, 3.679679297244875*^9}, {
   3.679679330413969*^9, 3.6796793579806814`*^9}, {3.6796794551957006`*^9, 
   3.6796794760541725`*^9}, {3.679679575327817*^9, 3.6796796729758596`*^9}, {
   3.679679868010354*^9, 3.6796800326147842`*^9}, {3.6796800872006283`*^9, 
   3.679680109202219*^9}, {3.6796801598977137`*^9, 3.679680170399706*^9}, {
   3.679680211818449*^9, 3.6796804482737713`*^9}, {3.6796805112298536`*^9, 
   3.6796805744565773`*^9}, {3.6796806218580914`*^9, 3.679680757892975*^9}, {
   3.679680811495949*^9, 3.6796808818651915`*^9}, {3.6796809144827785`*^9, 
   3.6796809666833677`*^9}, {3.6796810029485235`*^9, 
   3.6796810081740055`*^9}, {3.6796810575156417`*^9, 
   3.6796811033995237`*^9}, {3.679681332527998*^9, 3.6796813333625546`*^9}, {
   3.6796813807917876`*^9, 3.67968147752941*^9}, {3.679681563739986*^9, 
   3.6796815769607897`*^9}, {3.6796817221757703`*^9, 3.679681763490862*^9}, {
   3.679681838781067*^9, 3.6796818408804646`*^9}, {3.6796818894447145`*^9, 
   3.679682079969407*^9}, {3.679682121825989*^9, 3.6796821248530035`*^9}, {
   3.679682265526948*^9, 3.679682306277526*^9}, {3.6796823673326397`*^9, 
   3.679682384445038*^9}, {3.6796824443186035`*^9, 3.679682475464719*^9}, {
   3.6796825288595295`*^9, 3.6796825637327585`*^9}, {3.67968278119676*^9, 
   3.679682782882883*^9}, {3.6797345890383964`*^9, 3.6797346061187067`*^9}, {
   3.679734645268098*^9, 3.679734678069255*^9}, {3.679734719550336*^9, 
   3.679734728336152*^9}, {3.679734851985812*^9, 3.6797348613539844`*^9}, {
   3.6797349632167463`*^9, 3.6797349754570136`*^9}, {3.679735010318187*^9, 
   3.679735089425761*^9}, {3.6797352029473877`*^9, 3.6797352174003067`*^9}, {
   3.679735334219095*^9, 3.6797353520668097`*^9}, {3.6797354127852964`*^9, 
   3.6797354225972743`*^9}, {3.6797356146960435`*^9, 3.6797356233076*^9}, {
   3.679735670171296*^9, 3.679735748032075*^9}, {3.679735818469843*^9, 
   3.679735848457308*^9}, {3.67973596027987*^9, 3.679735975920292*^9}, {
   3.6797360359884872`*^9, 3.679736087721181*^9}, {3.6797362491591873`*^9, 
   3.679736251571519*^9}, {3.6797363112665663`*^9, 3.67973638863768*^9}, {
   3.6797365176603727`*^9, 3.679736520301809*^9}, {3.679736670119876*^9, 
   3.6797367431527596`*^9}, {3.679756482791448*^9, 3.679756557876812*^9}, {
   3.6797567570184045`*^9, 3.6797567594612527`*^9}, {3.6797567906860046`*^9, 
   3.679756802275606*^9}, {3.6797568773893633`*^9, 3.679756886271783*^9}, {
   3.679757001405609*^9, 3.6797570054216137`*^9}, {3.679757180744531*^9, 
   3.6797572214769106`*^9}, {3.6797572539267645`*^9, 
   3.6797572552707305`*^9}, {3.679757302135573*^9, 3.679757309602027*^9}, {
   3.6797576159368067`*^9, 3.679757640960533*^9}, {3.6797577488837395`*^9, 
   3.6797577653388815`*^9}, {3.6797577958104706`*^9, 3.679757803108025*^9}, {
   3.6797578760871897`*^9, 3.6797578901608458`*^9}, {3.679758056388175*^9, 
   3.679758057856022*^9}, {3.679758116808442*^9, 3.679758142175377*^9}, {
   3.6797583149135833`*^9, 3.679758607202947*^9}, {3.679758663127587*^9, 
   3.6797586884288898`*^9}, {3.679759119373311*^9, 3.679759252843992*^9}, {
   3.679760070123723*^9, 3.679760141715478*^9}, {3.6797601874366446`*^9, 
   3.67976021978776*^9}, {3.679761268846787*^9, 3.6797613467221656`*^9}, {
   3.6797613820967917`*^9, 3.679761404174221*^9}, {3.6797614488257165`*^9, 
   3.6797615135316324`*^9}, {3.6797616958144684`*^9, 3.679761727076391*^9}, {
   3.6797629611339755`*^9, 3.6797630599393997`*^9}, {3.6797632969326744`*^9, 
   3.6797633450875072`*^9}, {3.6797633864858117`*^9, 3.679763417622408*^9}, {
   3.679763454154428*^9, 3.679763458232932*^9}, {3.679763559460507*^9, 
   3.679763559766924*^9}, {3.67976360142772*^9, 3.679763602011773*^9}, {
   3.679763652514624*^9, 3.6797636554635086`*^9}, {3.6797636883303623`*^9, 
   3.6797636933229237`*^9}, {3.679763739648059*^9, 3.6797637500153637`*^9}, {
   3.6797638017358065`*^9, 3.679763821403262*^9}, {3.6797639540004077`*^9, 
   3.679763967875004*^9}, {3.679764012996402*^9, 3.679764053151238*^9}, {
   3.679764105585392*^9, 3.6797641333006964`*^9}, {3.679764241169329*^9, 
   3.6797642550419507`*^9}, {3.6797642965486746`*^9, 
   3.6797642974911604`*^9}, {3.679766312258819*^9, 3.6797663400081835`*^9}, {
   3.6797665204820805`*^9, 3.6797666179276123`*^9}, {3.6797666878843207`*^9, 
   3.679766700259632*^9}, 3.679766730824309*^9, {3.67976678431518*^9, 
   3.6797667911152844`*^9}, {3.679766899700026*^9, 3.6797669126934752`*^9}, {
   3.6797669454005632`*^9, 3.679766965008849*^9}, {3.6797670469007864`*^9, 
   3.6797670576985207`*^9}, {3.679767112514214*^9, 3.6797671303351617`*^9}, {
   3.6797675537044563`*^9, 3.6797676224830623`*^9}, {3.679767976648643*^9, 
   3.6797680158816223`*^9}, {3.679768074496215*^9, 3.6797680775963783`*^9}, {
   3.6797683593332515`*^9, 3.6797683759920163`*^9}, {3.6797689343634205`*^9, 
   3.67976894926108*^9}, {3.679769294256039*^9, 3.679769332344527*^9}, {
   3.6798191469974074`*^9, 3.679819160356634*^9}, 3.6798192106398354`*^9, {
   3.67981926129202*^9, 3.679819264210451*^9}, {3.6798201118432903`*^9, 
   3.6798201155779047`*^9}, {3.679820335384288*^9, 3.679820377209854*^9}, {
   3.679820499748266*^9, 3.679820500648081*^9}, {3.6798205849449463`*^9, 
   3.679820599020897*^9}, {3.679820651543778*^9, 3.679820717123869*^9}, 
   3.6798208645536685`*^9, {3.679820946173946*^9, 3.6798209585549765`*^9}, {
   3.6798211650566034`*^9, 3.679821179641118*^9}, {3.6798212774784584`*^9, 
   3.6798212833238792`*^9}, {3.6798215653792295`*^9, 3.67982157108221*^9}, {
   3.679821616893424*^9, 3.679821653145285*^9}, {3.6798222987882447`*^9, 
   3.6798223432753534`*^9}, 3.679822416580861*^9, {3.679822823372448*^9, 
   3.6798228417201242`*^9}, {3.679823267991959*^9, 3.6798232844684114`*^9}, {
   3.679826381840706*^9, 3.67982643359863*^9}, 3.6798265156658287`*^9, {
   3.6798266225012636`*^9, 3.679826673734756*^9}, {3.679826743782586*^9, 
   3.679826770138029*^9}, {3.6798288730382085`*^9, 3.6798288749212675`*^9}, 
   3.679830925818262*^9, {3.6799122356862607`*^9, 3.679912420141233*^9}, 
   3.679912621838517*^9, {3.679912660005648*^9, 3.6799127645180964`*^9}, {
   3.679912796764311*^9, 3.679912833673414*^9}, {3.679912923419185*^9, 
   3.6799130110394573`*^9}, {3.6799132053019743`*^9, 
   3.6799132383140087`*^9}, {3.6799132802516465`*^9, 3.67991331943956*^9}, {
   3.679913510472663*^9, 3.6799136126746993`*^9}, {3.6799143039934287`*^9, 
   3.679914498499134*^9}, {3.6799146006025815`*^9, 3.679914665572703*^9}, {
   3.6799147788339305`*^9, 3.6799147832198434`*^9}, {3.679915529268517*^9, 
   3.6799155521864934`*^9}, {3.6799163694288054`*^9, 
   3.6799163759577293`*^9}, {3.679916633719616*^9, 3.6799166874558907`*^9}, {
   3.6799167701444783`*^9, 3.6799167738622227`*^9}, {3.6799168079043493`*^9, 
   3.6799168533126335`*^9}, {3.679916959985268*^9, 3.6799169731612396`*^9}, 
   3.6799170200748706`*^9, {3.6799171302212915`*^9, 3.679917141185356*^9}, {
   3.679917187615794*^9, 3.6799171931360073`*^9}, {3.679917338879426*^9, 
   3.679917349384443*^9}, {3.6799174136620827`*^9, 3.6799174401714363`*^9}, {
   3.6799175166104527`*^9, 3.6799175282932596`*^9}, 3.6799178373631587`*^9, {
   3.6799179537059784`*^9, 3.6799179803577185`*^9}, {3.67991866146945*^9, 
   3.6799187062925053`*^9}, {3.679918827393654*^9, 3.6799189074639287`*^9}, {
   3.6799189626153173`*^9, 3.6799189686805744`*^9}, {3.6799190280052376`*^9, 
   3.6799190455061207`*^9}, {3.6799190972022314`*^9, 3.679919125280387*^9}, {
   3.679924566119967*^9, 3.679924604385762*^9}, {3.6799246642790704`*^9, 
   3.6799246956132803`*^9}, {3.6799247527275844`*^9, 
   3.6799247930164156`*^9}, {3.679924951195854*^9, 3.6799249803781705`*^9}, {
   3.679925022623218*^9, 3.6799250488316956`*^9}, {3.6799253861656322`*^9, 
   3.6799254381888103`*^9}, {3.6799255434641275`*^9, 3.679925616718331*^9}, {
   3.679925661348341*^9, 3.679925698259054*^9}, {3.67992573602477*^9, 
   3.6799257478959365`*^9}, {3.6799258174994507`*^9, 
   3.6799259665814676`*^9}, {3.679926003783972*^9, 3.679926024748337*^9}, {
   3.679926069235965*^9, 3.6799260902291036`*^9}, {3.6799261736068425`*^9, 
   3.679926196432872*^9}, {3.679926255248601*^9, 3.6799262580962477`*^9}, {
   3.679926293552193*^9, 3.679926293751954*^9}, {3.6799263246875305`*^9, 
   3.67992632905294*^9}, {3.6799263775010214`*^9, 3.6799264110418615`*^9}, {
   3.6799264515895023`*^9, 3.679926470697673*^9}, {3.6799267773032274`*^9, 
   3.6799268074427676`*^9}, {3.6799273312718644`*^9, 
   3.6799273548658895`*^9}, {3.6799274096231394`*^9, 
   3.6799274791310563`*^9}, {3.6802492252310677`*^9, 
   3.6802494747564917`*^9}, {3.680249508550872*^9, 3.6802495430476055`*^9}, {
   3.680249675725598*^9, 3.6802497003809333`*^9}, 3.68024975508574*^9, {
   3.680256236853915*^9, 3.6802562600900726`*^9}, {3.68025634441387*^9, 
   3.680256365234165*^9}, {3.6802567065770197`*^9, 3.6802567081447225`*^9}, {
   3.68025976930814*^9, 3.6802597702248554`*^9}, {3.6802649405067997`*^9, 
   3.6802650359517117`*^9}, {3.680265067363373*^9, 3.6802650674600096`*^9}, {
   3.6802651867038527`*^9, 3.680265190137226*^9}, {3.680265223704136*^9, 
   3.680265238230487*^9}, {3.680265490528492*^9, 3.6802655052228985`*^9}, {
   3.680265558508396*^9, 3.680265561709672*^9}, {3.6808879559628687`*^9, 
   3.680888011732835*^9}, {3.6809606117806787`*^9, 3.6809606203078012`*^9}, 
   3.6809606847064285`*^9, {3.6809675539292154`*^9, 3.6809675860694647`*^9}, {
   3.6809692430036077`*^9, 3.680969426149309*^9}, {3.680969611597622*^9, 
   3.680969678171399*^9}, {3.6809717051663656`*^9, 3.680971757266692*^9}, {
   3.681049731545925*^9, 3.6810497326806526`*^9}, {3.6815751098190413`*^9, 
   3.6815752193084803`*^9}, {3.681575314417507*^9, 3.6815753681505737`*^9}, 
   3.6815761221030645`*^9, {3.6827804798722897`*^9, 3.682780494816037*^9}, 
   3.682780604217006*^9, {3.682781704192978*^9, 3.682781710459713*^9}, {
   3.682781876637768*^9, 3.682781904072253*^9}, {3.6827830443626947`*^9, 
   3.6827830549350944`*^9}, {3.682783127758354*^9, 3.6827832541087*^9}, {
   3.682783660581412*^9, 3.6827836734256077`*^9}, {3.682783792501422*^9, 
   3.682783800043203*^9}, {3.682783844406822*^9, 3.682783854282976*^9}, {
   3.6827840511165624`*^9, 3.682784068157834*^9}, {3.68278424789962*^9, 
   3.682784265851144*^9}, {3.6827844475525365`*^9, 3.6827845018196874`*^9}, {
   3.682784564540927*^9, 3.682784585555146*^9}, {3.682784632517503*^9, 
   3.6827846755811577`*^9}, {3.6827849678890543`*^9, 
   3.6827849698689795`*^9}, {3.6827850127031283`*^9, 3.682785092085968*^9}, {
   3.6827851570326347`*^9, 3.682785214146377*^9}, {3.6827852794649224`*^9, 
   3.6827852820630054`*^9}, {3.682785312889785*^9, 3.682785314900358*^9}, {
   3.682874358256663*^9, 3.682874360903284*^9}, {3.682934839631378*^9, 
   3.682934847817806*^9}, 3.682935758206027*^9, {3.6830328654542093`*^9, 
   3.683032867551629*^9}, 3.683032898094671*^9, {3.693310963628379*^9, 
   3.6933111790311046`*^9}, {3.693311218561573*^9, 3.6933112303168716`*^9}, {
   3.693311272066084*^9, 3.6933113625963125`*^9}, {3.6950523845124087`*^9, 
   3.6950523866515436`*^9}, {3.695052424890731*^9, 3.6950524370506387`*^9}, {
   3.6961619545602474`*^9, 3.6961620702824574`*^9}, {3.696338889049758*^9, 
   3.6963338496056805`*^9}, {3.6969507875440702`*^9, 
   3.6969508014723735`*^9}, {3.696950922935711*^9, 3.6969509459133635`*^9}, {
   3.697550371565403*^9, 3.697550371949326*^9}, 3.6979836235158963`*^9, {
   3.697983655060665*^9, 3.6979837327770033`*^9}, {3.697983790859722*^9, 
   3.6979838074844527`*^9}, {3.6979838473949614`*^9, 3.697983851665854*^9}, {
   3.697983950552133*^9, 3.6979840506270604`*^9}, {3.697984105707975*^9, 
   3.697984297952173*^9}, {3.6979847495993657`*^9, 3.6979847803348207`*^9}, 
   3.697984835994111*^9, {3.6979851699465094`*^9, 3.697985191261283*^9}, {
   3.697993736941249*^9, 3.697993822054891*^9}, {3.697995079340356*^9, 
   3.6979951862910323`*^9}, {3.697995230421173*^9, 3.697995375695047*^9}, {
   3.6979959019891167`*^9, 3.6979959454676337`*^9}, {3.6980465852605247`*^9, 
   3.69804683109072*^9}, {3.698047088010625*^9, 3.6980471411569014`*^9}, {
   3.6980472323885565`*^9, 3.6980472377501125`*^9}, {3.6980473104644995`*^9, 
   3.698047354675248*^9}, {3.6980473947561235`*^9, 3.698047402385198*^9}, {
   3.6980475542975597`*^9, 3.698047608345428*^9}, {3.6980476472397304`*^9, 
   3.6980476615872464`*^9}, {3.6980477094119816`*^9, 
   3.6980477828026576`*^9}, {3.698047829278983*^9, 3.698048018965683*^9}, {
   3.698048240561721*^9, 3.698048259884059*^9}, {3.698056934456436*^9, 
   3.6980571566496816`*^9}, {3.698057237832131*^9, 3.6980572462169743`*^9}, {
   3.6980579118181686`*^9, 3.6980579607923365`*^9}, {3.6980580053419185`*^9, 
   3.698058005805474*^9}, {3.6980580742219687`*^9, 3.698058079955908*^9}, {
   3.698058164953802*^9, 3.698058196322177*^9}, {3.698059333503028*^9, 
   3.6980594776024847`*^9}, {3.698061155504623*^9, 3.69806128012282*^9}, {
   3.69806131126612*^9, 3.698061611727914*^9}, 3.698061886200822*^9, {
   3.6980619836449723`*^9, 3.6980622098389125`*^9}, {3.6980622685617027`*^9, 
   3.698062269630556*^9}, {3.6980623644826*^9, 3.6980623815051975`*^9}, {
   3.6980624151710653`*^9, 3.698062418731555*^9}, {3.698062454202283*^9, 
   3.698062459051075*^9}, {3.698062507249819*^9, 3.6980625091454873`*^9}, 
   3.69807248122217*^9, {3.6982443204084044`*^9, 3.6982443820402813`*^9}, {
   3.6982444141631303`*^9, 3.6982444162199945`*^9}, {3.69824444651709*^9, 
   3.6982447022968225`*^9}, {3.6982448483396826`*^9, 3.698244851450246*^9}, {
   3.698244933819071*^9, 3.698244958976886*^9}, {3.698245395254878*^9, 
   3.6982454425872707`*^9}, {3.6982455334518604`*^9, 3.698245695213285*^9}, {
   3.698245781741675*^9, 3.6982457826152544`*^9}, {3.6982458825059676`*^9, 
   3.6982459172355022`*^9}, {3.698246045059526*^9, 3.698246100321678*^9}, {
   3.698253129835696*^9, 3.6982531386876264`*^9}, {3.6982532304499874`*^9, 
   3.69825324168644*^9}, {3.6982532778355227`*^9, 3.6982534073757544`*^9}, {
   3.698253465180602*^9, 3.6982534977651043`*^9}, {3.698254190143094*^9, 
   3.6982542433688955`*^9}, {3.698254279969256*^9, 3.698254353568982*^9}, {
   3.6982544022712836`*^9, 3.6982544534763365`*^9}, {3.6982544873733187`*^9, 
   3.698254508807534*^9}, {3.698254595014316*^9, 3.698254597343861*^9}, {
   3.698254634108245*^9, 3.698254680962821*^9}, {3.6982547749639425`*^9, 
   3.698254789407022*^9}, 3.698254861014345*^9, {3.6982549544580545`*^9, 
   3.6982549839301014`*^9}, {3.698255015125292*^9, 3.6982550486934605`*^9}, {
   3.6982551208823404`*^9, 3.6982552963360257`*^9}, {3.6982553362324867`*^9, 
   3.698255342231966*^9}, {3.698255465912278*^9, 3.698255486190133*^9}, {
   3.698255686124612*^9, 3.6982557622596884`*^9}, {3.6982558094149637`*^9, 
   3.6982558199469495`*^9}, 3.698256018427397*^9, {3.6982560569529486`*^9, 
   3.6982561175620804`*^9}, {3.698256229300191*^9, 3.6982562416898055`*^9}, {
   3.6982562844544973`*^9, 3.6982562938097024`*^9}, {3.6982563758321037`*^9, 
   3.698256377887467*^9}, {3.698256415702329*^9, 3.6982564539306993`*^9}, {
   3.6982566963957667`*^9, 3.698256770189762*^9}, {3.698256801014397*^9, 
   3.6982569997499104`*^9}, {3.6982570494969053`*^9, 3.698257072085887*^9}, {
   3.6982571653623567`*^9, 3.698257192433812*^9}, {3.6982572469951086`*^9, 
   3.6982573639914455`*^9}, {3.6982574279343557`*^9, 
   3.6982574668984146`*^9}, {3.698257511397131*^9, 3.6982575172485123`*^9}, {
   3.698257584419564*^9, 3.6982576933415976`*^9}, {3.6982577499231243`*^9, 
   3.6982577501943045`*^9}, {3.69825785394013*^9, 3.698257872567484*^9}, 
   3.6982579412235203`*^9, {3.698258013468663*^9, 3.6982580318583593`*^9}, {
   3.698258339897382*^9, 3.6982583475944867`*^9}, {3.6982583791599216`*^9, 
   3.698258380355215*^9}, {3.6982584368701987`*^9, 3.698258462045396*^9}, 
   3.6982585281301856`*^9, {3.698258606776347*^9, 3.698258607964134*^9}, {
   3.698259032988323*^9, 3.698259039056348*^9}, {3.6982590936030264`*^9, 
   3.6982591024363847`*^9}, {3.6982591576172233`*^9, 3.698259166864355*^9}, {
   3.698259200680093*^9, 3.698259243642088*^9}, {3.6982592893579845`*^9, 
   3.698259311563212*^9}, {3.698259404324794*^9, 3.6982594615177617`*^9}, {
   3.6982595450400524`*^9, 3.6982595530380344`*^9}, {3.69825971680807*^9, 
   3.698259723223493*^9}, 3.698259820699207*^9, {3.6982606713400655`*^9, 
   3.6982607004496317`*^9}, {3.6982607665887327`*^9, 
   3.6982607822190995`*^9}, {3.698260846650982*^9, 3.6982608594689837`*^9}, {
   3.6982609151166964`*^9, 3.6982609543557205`*^9}, {3.6982610021420703`*^9, 
   3.69826104096456*^9}, {3.6982610775518847`*^9, 3.6982610816931314`*^9}, {
   3.6982612369141397`*^9, 3.698261250419097*^9}, {3.698262305377144*^9, 
   3.6982623858675575`*^9}, {3.6982624440639563`*^9, 
   3.6982624579936953`*^9}, {3.6982680541222563`*^9, 3.698268104513773*^9}, {
   3.698268352069643*^9, 3.698268356044016*^9}, {3.6982692866625395`*^9, 
   3.6982693246676664`*^9}, 3.698269518825307*^9, 3.6983103791587944`*^9, {
   3.698310440083367*^9, 3.698310441363062*^9}, {3.698317111589958*^9, 
   3.698317113164505*^9}, {3.698318652996944*^9, 3.6983186843734655`*^9}, {
   3.698318741470319*^9, 3.6983187662058525`*^9}, {3.6983188359678097`*^9, 
   3.6983188588205843`*^9}, {3.698318889818942*^9, 3.698318935753536*^9}, {
   3.6983190542967052`*^9, 3.6983190942500157`*^9}, {3.6983198910647526`*^9, 
   3.698319940327596*^9}, {3.6983222530352154`*^9, 3.6983222561663446`*^9}, {
   3.698322286437148*^9, 3.698322288498358*^9}, {3.6983224085677023`*^9, 
   3.698322427449193*^9}, {3.6983224617708344`*^9, 3.6983224961451883`*^9}, {
   3.6983226973291006`*^9, 3.698322720017496*^9}, {3.6983257179480543`*^9, 
   3.6983257268086743`*^9}, 3.700314325718482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.6797567333782396`*^9, 3.6797567347311673`*^9}, {
  3.696335502893475*^9, 3.6963355050803843`*^9}}],

Cell[CellGroupData[{

Cell["Small Instance", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.7009922963106003`*^9, 3.7009923183190393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGRandom3DBackbone", "[", "7", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{
     RowBox[{"X", "[", "\"\<Points\>\"", "]"}], ",", "edges"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G", ",", "nodes", ",", "False", ",", "True"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"X", "=", 
  RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{"X", ",", ".2", ",", ".08"}], "]"}]}], "Input",
 CellChangeTimes->{{3.700992316272402*^9, 3.7009923884478188`*^9}, {
   3.7009925127862043`*^9, 3.700992537293635*^9}, {3.70099305171308*^9, 
   3.7009930566034174`*^9}, {3.700993247763296*^9, 3.700993340032179*^9}, {
   3.700993521193789*^9, 3.700993536375091*^9}, {3.700993602648387*^9, 
   3.7009936033240385`*^9}, {3.700994063161317*^9, 3.700994100399763*^9}, {
   3.700994221044218*^9, 3.700994249734191*^9}, {3.7009969511055737`*^9, 
   3.7009969632500596`*^9}, {3.7027175853756847`*^9, 3.7027176224992905`*^9}, 
   3.7027179367510824`*^9, {3.702717987756665*^9, 3.70271798969906*^9}, {
   3.7027180484700594`*^9, 3.7027181111759844`*^9}, {3.7027181454983077`*^9, 
   3.702718210788308*^9}, {3.7027182591529436`*^9, 3.702718265089552*^9}, {
   3.7027183355720863`*^9, 3.7027183645707674`*^9}, {3.7027189430955796`*^9, 
   3.7027189441498065`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.70271832562436*^9, 3.7027183704064674`*^9}, 
   3.7027189222725267`*^9, 3.702720880876627*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.702718349664914*^9, 3.7027183704377213`*^9}, 
   3.702718922288151*^9, 3.7027208808922567`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of solutions: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.702718349664914*^9, 3.7027183704377213`*^9}, 
   3.702718922288151*^9, 3.7027208809093833`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.5505434974895222`"}], ",", "1.4422987926418036`", ",", 
       RowBox[{"-", "0.16739067719280462`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.915707564899443`"}], ",", "0.7945907808650512`", ",", 
       RowBox[{"-", "1.4999842143799134`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.2202821558994756`"}], ",", "1.5410574695232409`", ",", 
       RowBox[{"-", "2.634817674955037`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.7130123779898347`"}], ",", "1.537172771216797`", ",", 
       RowBox[{"-", "2.3964928425953147`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.5505434974895222`"}], ",", "1.4422987926418036`", ",", 
       RowBox[{"-", "0.16739067719280462`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.915707564899443`"}], ",", "0.7945907808650512`", ",", 
       RowBox[{"-", "1.4999842143799134`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.2202821558994756`"}], ",", "1.5410574695232409`", ",", 
       RowBox[{"-", "2.634817674955037`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.617587965318304`"}], ",", "3.0138159692732103`", ",", 
       RowBox[{"-", "2.5923147901556396`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.5505434974895222`"}], ",", "1.4422987926418036`", ",", 
       "0.16739067719280462`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.915707564899443`"}], ",", "0.7945907808650512`", ",", 
       "1.4999842143799134`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.2202821558994756`"}], ",", "1.5410574695232409`", ",", 
       "2.634817674955037`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.617587965318304`"}], ",", "3.0138159692732103`", ",", 
       "2.5923147901556396`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.5505434974895222`"}], ",", "1.4422987926418036`", ",", 
       "0.16739067719280462`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.915707564899443`"}], ",", "0.7945907808650512`", ",", 
       "1.4999842143799134`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.2202821558994756`"}], ",", "1.5410574695232409`", ",", 
       "2.634817674955037`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.7130123779898347`"}], ",", "1.537172771216797`", ",", 
       "2.3964928425953147`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.70271832562436*^9, 3.7027183704064674`*^9}, 
   3.7027189222725267`*^9, 3.702720880914889*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.70271832562436*^9, 3.7027183704064674`*^9}, 
   3.7027189222725267`*^9, 3.702720880914889*^9}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5505434974895222`, 
      1.4422987926418036`, -0.16739067719280462`}, {-3.915707564899443, 
      0.7945907808650512, -1.4999842143799134`}, {-3.2202821558994756`, 
      1.5410574695232409`, -2.634817674955037}, {-3.617587965318304, 
      3.0138159692732103`, -2.5923147901556396`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5505434974895222`, 
      1.4422987926418036`, -0.16739067719280462`}, {-3.915707564899443, 
      0.7945907808650512, -1.4999842143799134`}, {-3.2202821558994756`, 
      1.5410574695232409`, -2.634817674955037}, {-1.7130123779898347`, 
      1.537172771216797, -2.3964928425953147`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5505434974895222`, 1.4422987926418036`, 
      0.16739067719280462`}, {-3.915707564899443, 0.7945907808650512, 
      1.4999842143799134`}, {-3.2202821558994756`, 1.5410574695232409`, 
      2.634817674955037}, {-3.617587965318304, 3.0138159692732103`, 
      2.5923147901556396`}}, 0.08]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.915707564899443, 0.7945907808650512, -1.4999842143799134`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.915707564899443, 0.7945907808650512, 1.4999842143799134`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.617587965318304, 3.0138159692732103`, -2.5923147901556396`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.617587965318304, 3.0138159692732103`, 2.5923147901556396`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.5505434974895222`, 
     1.4422987926418036`, -0.16739067719280462`}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.5505434974895222`, 1.4422987926418036`, 
     0.16739067719280462`}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.2202821558994756`, 1.5410574695232409`, -2.634817674955037},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.2202821558994756`, 1.5410574695232409`, 2.634817674955037}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.7130123779898347`, 1.537172771216797, -2.3964928425953147`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.7130123779898347`, 1.537172771216797, 2.3964928425953147`}, 
     0.2]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{-1.526, 0, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.2]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5505434974895222`, 1.4422987926418036`, 
      0.16739067719280462`}, {-3.915707564899443, 0.7945907808650512, 
      1.4999842143799134`}, {-3.2202821558994756`, 1.5410574695232409`, 
      2.634817674955037}, {-1.7130123779898347`, 1.537172771216797, 
      2.3964928425953147`}}, 0.08]}},
  Axes->False,
  Boxed->False,
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.70271832562436*^9, 3.7027183704064674`*^9}, 
   3.7027189222725267`*^9, 3.702720880930516*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Easy case using natural order", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"20", ",", "0.0", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeElapsed", "=", 
   RowBox[{
    RowBox[{"Timing", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "work"}], "}"}], "=", 
      RowBox[{"DGBPSolver", "[", 
       RowBox[{
        RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",",
         "True"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<TimeElapsed=\>\"", ",", "timeElapsed"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.693311450156807*^9, 3.693311476044976*^9}, {
   3.696338936452612*^9, 3.696338990378742*^9}, {3.6979845883633885`*^9, 
   3.697984617355788*^9}, {3.6979850347422743`*^9, 3.697985037135499*^9}, {
   3.6979953998165607`*^9, 3.6979954128237066`*^9}, {3.6979955008255515`*^9, 
   3.697995501469979*^9}, {3.698063057075743*^9, 3.6980630699679604`*^9}, 
   3.69807248124969*^9, {3.698258900635863*^9, 3.698259006148343*^9}, {
   3.698259380018849*^9, 3.6982593802355237`*^9}, {3.6982597311305723`*^9, 
   3.698259910722397*^9}, {3.69826115973089*^9, 3.698261179310876*^9}, {
   3.6982612672137356`*^9, 3.6982612687552586`*^9}, {3.698262268542156*^9, 
   3.698262269980609*^9}, {3.698262398805439*^9, 3.698262426512816*^9}, {
   3.698262569782508*^9, 3.6982625713080196`*^9}, {3.69826263228246*^9, 
   3.6982626331715517`*^9}, {3.6982682099045897`*^9, 3.698268212604455*^9}, {
   3.698268974378912*^9, 3.6982689818583913`*^9}, {3.6983225309017057`*^9, 
   3.698322539129117*^9}, 3.7003143257713733`*^9, {3.7005613624266267`*^9, 
   3.7005613782175703`*^9}, {3.7005614096460247`*^9, 3.700561462382221*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027184031529818`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Number of solutions: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031529818`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TimeElapsed=\"\>", "\[InvisibleSpace]", "0.078125`"}],
  SequenceForm["TimeElapsed=", 0.078125],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031529818`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7027184031529818`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Number of nodes      : ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031529818`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "104"}],
  SequenceForm["Number of edges      : ", 104],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031686077`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "8.426345393976772`*^-13"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 8.426345393976772*^-13}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031686077`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "4.4648054986119047`*^-14"}],
  SequenceForm["Mean relative error  : ", 4.4648054986119047`*^-14],
  Editable->False]], "Print",
 CellChangeTimes->{3.7027184031686077`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance with more than two solutions", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"DGEdgesMDGP", "[", 
     RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",", 
     "True"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982675435780106`*^9, 3.6982676849749393`*^9}, {
   3.6982677879648824`*^9, 3.69826778900282*^9}, 3.6982678486650257`*^9, {
   3.6982678894365683`*^9, 3.6982678923935056`*^9}, {3.698267923742344*^9, 
   3.6982679643030577`*^9}, {3.6982680118994756`*^9, 
   3.6982680172609124`*^9}, {3.6982682635398445`*^9, 
   3.6982682725164557`*^9}, {3.698268335835042*^9, 3.6982683377986155`*^9}, {
   3.6982683734273853`*^9, 3.69826837813604*^9}, {3.6982688333430157`*^9, 
   3.698268846448496*^9}, 3.698268908772118*^9, {3.698268995492119*^9, 
   3.6982690516700015`*^9}, {3.69832255207037*^9, 3.6983225532429857`*^9}, {
   3.7027184519543343`*^9, 3.7027184669269233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.7027184074239335`*^9, 3.702718455170966*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Number of solutions: ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7027184074239335`*^9, 3.702718455170966*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculating the number of solution as a function of the number of constraints \
(max distance)\
\>", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}, {3.698322580067991*^9, 
  3.698322582100933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"G", "=", 
  RowBox[{
   RowBox[{"DGRandomMDGP", "[", "10", "]"}], "[", "\"\<G\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSample", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"density", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5"}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"density", " ", "of", " ", "edges"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"generating", " ", "sample", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"allEdges", "=", 
  RowBox[{"EdgeList", "[", "G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "density", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"density", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", "nSample"}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "subgraph"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gij", "=", "G"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "allEdges", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ek", "=", 
             RowBox[{"allEdges", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], ">", "d"}], "&&", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", "3"}]}], ",", 
              RowBox[{"gij", "=", 
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"gij", ",", "ek"}], "]"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", "gij"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solve", " ", "instance"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"nodes", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "gij", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S", ",", "work"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"gij", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"nSols", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{"Length", "[", 
           RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "results"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"density", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"nSols", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"nSols", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Density of Edges\>\"", ",", " ", "\"\<Number of Solutions\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.696334028602558*^9, 3.6963341389390335`*^9}, {
   3.696334203814807*^9, 3.696334553004195*^9}, {3.6963345893136067`*^9, 
   3.6963346447828355`*^9}, {3.6963346937306294`*^9, 
   3.6963348195399055`*^9}, {3.6963348799142075`*^9, 
   3.6963348804536867`*^9}, {3.696334945896783*^9, 3.6963349840214233`*^9}, {
   3.696335032797847*^9, 3.6963351414831853`*^9}, {3.6963352043938837`*^9, 
   3.696335230724231*^9}, {3.696335343802195*^9, 3.6963353555009074`*^9}, 
   3.696335412777022*^9, {3.696339497682501*^9, 3.6963395030722947`*^9}, {
   3.696339541525276*^9, 3.6963395556060305`*^9}, {3.69634027449716*^9, 
   3.6963403350733366`*^9}, {3.6982620163546495`*^9, 
   3.6982620232827463`*^9}, {3.698262097986717*^9, 3.6982621670029964`*^9}, {
   3.6982698650202107`*^9, 3.6982699046144314`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 9, 18, 27, 36, 45, 54, 63, 72, 81, 90}, {{2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {1}, {2}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {
          5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {
          9}, {10}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {9}, {10}, {1}, {2}, {
          3}, {4}, {5}, {6}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {
          7}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {10}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}}}, Pattern}]}, {
      Properties -> {
        UndirectedEdge[1, 9] -> {
          "DistanceBounds" -> {3.6288429289501085`, 3.6288429289501085`}}, 
         UndirectedEdge[4, 7] -> {
          "DistanceBounds" -> {2.912534543351378, 2.912534543351378}}, 
         UndirectedEdge[3, 10] -> {
          "DistanceBounds" -> {1.7542072216616134`, 1.7542072216616134`}}, 
         UndirectedEdge[2, 8] -> {
          "DistanceBounds" -> {2.591587086440988, 2.591587086440988}}, 
         UndirectedEdge[7, 9] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[2, 4] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[6, 8] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[5, 8] -> {
          "DistanceBounds" -> {2.9381680267494255`, 2.9381680267494255`}}, 
         UndirectedEdge[9, 10] -> {
          "DistanceBounds" -> {1.5260000000000002`, 1.5260000000000002`}}, 
         UndirectedEdge[2, 10] -> {
          "DistanceBounds" -> {2.6084896720079196`, 2.6084896720079196`}}, 
         UndirectedEdge[2, 6] -> {
          "DistanceBounds" -> {2.367338792326011, 2.367338792326011}}, 
         UndirectedEdge[6, 7] -> {
          "DistanceBounds" -> {1.5260000000000002`, 1.5260000000000002`}}, 
         UndirectedEdge[3, 7] -> {
          "DistanceBounds" -> {3.5043630485634574`, 3.5043630485634574`}}, 
         UndirectedEdge[7, 8] -> {
          "DistanceBounds" -> {1.5260000000000005`, 1.5260000000000005`}}, 
         UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[3, 6] -> {
          "DistanceBounds" -> {2.9178124123755036`, 2.9178124123755036`}}, 
         UndirectedEdge[2, 5] -> {
          "DistanceBounds" -> {2.8069603927311624`, 2.8069603927311624`}}, 
         UndirectedEdge[7, 10] -> {
          "DistanceBounds" -> {2.7798322020762916`, 2.7798322020762916`}}, 
         UndirectedEdge[4, 9] -> {
          "DistanceBounds" -> {1.506197041210191, 1.506197041210191}}, 
         UndirectedEdge[2, 9] -> {
          "DistanceBounds" -> {2.962881520012161, 2.962881520012161}}, 
         UndirectedEdge[4, 10] -> {
          "DistanceBounds" -> {0.2758768747474827, 0.2758768747474827}}, 
         UndirectedEdge[5, 9] -> {
          "DistanceBounds" -> {2.5082636470725843`, 2.5082636470725843`}}, 
         UndirectedEdge[2, 7] -> {
          "DistanceBounds" -> {2.922109246025906, 2.922109246025906}}, 
         UndirectedEdge[1, 4] -> {
          "DistanceBounds" -> {2.895794872653459, 2.895794872653459}}, 
         UndirectedEdge[6, 9] -> {
          "DistanceBounds" -> {2.919105843109288, 2.919105843109288}}, 
         UndirectedEdge[3, 5] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[4, 6] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[1, 6] -> {
          "DistanceBounds" -> {1.5352808029973029`, 1.5352808029973029`}}, 
         UndirectedEdge[5, 10] -> {
          "DistanceBounds" -> {1.308221111110085, 1.308221111110085}}, 
         UndirectedEdge[8, 10] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[1, 7] -> {
          "DistanceBounds" -> {2.7203423864087926`, 2.7203423864087926`}}, 
         UndirectedEdge[1, 5] -> {
          "DistanceBounds" -> {2.3375989637383374`, 2.3375989637383374`}}, 
         UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[3, 8] -> {
          "DistanceBounds" -> {2.8902856823655, 2.8902856823655}}, 
         UndirectedEdge[1, 10] -> {
          "DistanceBounds" -> {2.8802385839094593`, 2.8802385839094593`}}, 
         UndirectedEdge[6, 10] -> {
          "DistanceBounds" -> {2.346384306726773, 2.346384306726773}}, 
         UndirectedEdge[1, 8] -> {
          "DistanceBounds" -> {3.1904105026427088`, 3.1904105026427088`}}, 
         UndirectedEdge[1, 3] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[4, 8] -> {
          "DistanceBounds" -> {2.5008153134192113`, 2.5008153134192113`}}, 
         UndirectedEdge[8, 9] -> {
          "DistanceBounds" -> {1.5260000000000005`, 1.5260000000000005`}}, 
         UndirectedEdge[4, 5] -> {
          "DistanceBounds" -> {1.5260000000000005`, 1.5260000000000005`}}, 
         UndirectedEdge[5, 7] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[3, 4] -> {
          "DistanceBounds" -> {1.5260000000000002`, 1.5260000000000002`}}, 
         UndirectedEdge[3, 9] -> {
          "DistanceBounds" -> {2.4141222277568075`, 2.4141222277568075`}}}, 
       EdgeWeight -> CompressedData["
1:eJxTTMoPSmVkYGDQBeKLSrd/1mX9sLe1E1gc+47Z4fSR/oZpWuwOhdGPRdM3
Mzl8PFMwq2nCD3uu5Jp7TodZHZYF8X782srp8MTL8Ow9dl4H+54rbbu42B3Q
zTk3pX7Z8hI2B5W9MkH+H5gcvmj+OF+VwO7w/v9ypkm7WRwYGT5b/t7M7lB/
yfOq/j0Wh0tQ/XZQ/fwKOzjWhbM7TFUor3vPweNw91afpJ88u8NjibYA+QBm
B2PJ8unWgn/sL6PpuxSg+PKeD7vD4qPNpasZWRxmuE0VTJL8YS9wfUPV9+UX
7S+iqXcN5bCNa2R3UEt83/5GgMXBurLJqfLdF3t095ju4dUKiWJ32PlypVLq
USYHdHvjPJJWSdiyYYjDzAEAp+qg6A==
        "]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.5877852522924737, 
       0.809016994374948}, {-0.9510565162951538, 
       0.3090169943749484}, {-0.9510565162951534, -0.30901699437494645`}, \
{-0.5877852522924726, -0.8090169943749468}, {6.049014748177263*^-16, -1.}, {
       0.5877852522924738, -0.8090169943749481}, {
       0.9510565162951539, -0.3090169943749485}, {0.9510565162951533, 
       0.30901699437494634`}, {0.5877852522924726, 
       0.8090169943749468}, {-7.044813998280222*^-16, 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{8, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
         DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
         DiskBox[9, 0.02261146496815286], DiskBox[10, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.7027184737352877`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"9", "\[UndirectedEdge]", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70271847415784*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{0.06793981481481481, 57.56}, {0.1, 24.32}, {0.2, 4.32}, {0.3, 
      4.08}, {0.4, 2.16}, {0.5, 
      2.64}}], {{}, {
       LineBox[{{0.1, 64.78677649628149}, {0.1, -16.14677649628149}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.1, 64.78677649628149}], 
         Offset[{-1.5, 0}, {0.1, 64.78677649628149}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.1, -16.14677649628149}], 
         Offset[{-1.5, 0}, {0.1, -16.14677649628149}]}]}, {
       LineBox[{{0.2, 10.421365967278694`}, {0.2, -1.7813659672786937`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2, 10.421365967278694`}], 
         Offset[{-1.5, 0}, {0.2, 10.421365967278694`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2, -1.7813659672786937`}], 
         Offset[{-1.5, 0}, {0.2, -1.7813659672786937`}]}]}, {
       LineBox[{{0.3, 8.643624290699954}, {0.3, -0.4836242906999546}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3, 8.643624290699954}], 
         Offset[{-1.5, 0}, {0.3, 8.643624290699954}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3, -0.4836242906999546}], 
         Offset[{-1.5, 0}, {0.3, -0.4836242906999546}]}]}, {
       LineBox[{{0.4, 2.7137749241945386`}, {0.4, 1.6062250758054617`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4, 2.7137749241945386`}], 
         Offset[{-1.5, 0}, {0.4, 2.7137749241945386`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4, 1.6062250758054617`}], 
         Offset[{-1.5, 0}, {0.4, 1.6062250758054617`}]}]}, {
       LineBox[{{0.5, 5.451879561195086}, {0.5, -0.17187956119508563`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, 5.451879561195086}], 
         Offset[{-1.5, 0}, {0.5, 5.451879561195086}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, -0.17187956119508563`}], 
         Offset[{-1.5, 0}, {0.5, -0.17187956119508563`}]}]}}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Density of Edges\"", TraditionalForm], 
    FormBox["\"Number of Solutions\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {0, 57.56}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.702718490219866*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBPSolver", "Subchapter",
 CellChangeTimes->{{3.6795571036686206`*^9, 3.679557113728629*^9}, {
  3.6811328435634823`*^9, 3.681132843691572*^9}, {3.682701946598136*^9, 
  3.682701963537011*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"DGIPBSubG", ",", "DGIBPSolver"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIPBSubG", "[", 
     RowBox[{"G_", ",", "k_", ",", "branch_", ",", "nslices_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "E", ",", 
        RowBox[{"W", "=", "G"}], ",", "nodes", ",", "ei", ",", "ej", ",", 
        "dij", ",", "lij", ",", "uij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", " ", "vertices", " ", "k"}], "+", "1"}], ",", "...",
         ",", "numberOfAtoms"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"k", "+", "1"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"G", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "W", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"uij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dij", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "set", " ", "weight", " ", "affected", " ", "by", " ", "branch"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ei", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ej", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ei", ">", "ej"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ei", ",", "ej"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"ej", ",", "ei"}], "}"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ej", "-", "ei"}], "\[Equal]", "3"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"uij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"lij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", "nslices"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "*", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", "ej", "]"}], "]"}]}], "+", 
               RowBox[{"lij", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "2.0"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{"E", ",", 
          RowBox[{"EdgeWeight", "\[Rule]", "dij"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"W", ",", 
               RowBox[{"E", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
             "\"\<DistanceBounds\>\""}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "W", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{"G_", ",", "nslices_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", "G", " ", "using", " ", "natural", " ", 
     RowBox[{"ordering", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "W", ",", "S", ",", "SW", ",", "work", ",", "locwork", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "IBPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", 
       RowBox[{"nslices", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"W", "=", 
          RowBox[{"DGIPBSubG", "[", 
           RowBox[{"G", ",", "k", ",", "branch", ",", "nslices"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SW", ",", "locwork"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"W", ",", 
            RowBox[{"DGNaturalOrdering", "[", "W", "]"}], ",", 
            RowBox[{"k", "\[NotEqual]", "numberOfAtoms"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "4"}], ",", 
           RowBox[{"i", "\[LessEqual]", "k"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{
            RowBox[{"work", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "+=", 
            RowBox[{"locwork", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SW", "[", "\"\<Points\>\"", "]"}], "]"}], "\[Equal]", 
           "0"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"unfeasible", " ", "subgraph"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[ibp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", " ", "\"\<   work=\>\"", ",", "work", ",", 
             "\"\< prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", 
               RowBox[{"SW", "[", "\"\<Points\>\"", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
                RowBox[{"nslices", "-", "1"}]}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "<", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGIBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6827019671531935`*^9, 3.6827019883797054`*^9}, {
   3.6827520058773313`*^9, 3.682752007842795*^9}, {3.682773523900758*^9, 
   3.6827739504220514`*^9}, {3.6827739820939207`*^9, 3.682773997290721*^9}, {
   3.6827748027586565`*^9, 3.6827748602420864`*^9}, {3.682774937541239*^9, 
   3.6827753481045656`*^9}, {3.6827754855464773`*^9, 3.682775768077546*^9}, {
   3.6827758431794395`*^9, 3.682775852191575*^9}, {3.6827761086040697`*^9, 
   3.6827761356665545`*^9}, {3.6827761799051275`*^9, 
   3.6827762569294157`*^9}, {3.682776288487507*^9, 3.6827764838117733`*^9}, {
   3.682776598677207*^9, 3.682776711866549*^9}, {3.682776757766048*^9, 
   3.682776806526044*^9}, {3.6827769820156193`*^9, 3.6827770574592137`*^9}, {
   3.6827771830672836`*^9, 3.6827772226146555`*^9}, {3.6827772538317227`*^9, 
   3.682777263271402*^9}, {3.6827775456748238`*^9, 3.682777546518789*^9}, {
   3.6827775797151136`*^9, 3.6827775984622955`*^9}, {3.682777657482841*^9, 
   3.6827777067571774`*^9}, {3.6827777903994412`*^9, 
   3.6827777968861074`*^9}, {3.682777869172826*^9, 3.682777869551065*^9}, {
   3.6827779315169716`*^9, 3.682777931686807*^9}, {3.682778028203849*^9, 
   3.6827780327785378`*^9}, {3.682778114875511*^9, 3.6827781151693735`*^9}, {
   3.6827786318985825`*^9, 3.6827786532106905`*^9}, {3.682778780232845*^9, 
   3.6827788150088916`*^9}, {3.682778860589865*^9, 3.682778918862643*^9}, {
   3.6827790426077757`*^9, 3.6827794809945264`*^9}, {3.6827795619985237`*^9, 
   3.682779590990248*^9}, {3.682779976097824*^9, 3.6827799798825316`*^9}, 
   3.6827800453274255`*^9, {3.6827800812274303`*^9, 3.6827801376397424`*^9}, {
   3.6827801817742767`*^9, 3.682780266523752*^9}, {3.6827805401257453`*^9, 
   3.682780661598824*^9}, {3.6827807301684313`*^9, 3.6827807439590216`*^9}, {
   3.6827807922573433`*^9, 3.682780825155981*^9}, {3.68278089072889*^9, 
   3.6827809003062625`*^9}, {3.6827809636600475`*^9, 
   3.6827809691730986`*^9}, {3.682781052145022*^9, 3.6827810576947823`*^9}, 
   3.6827811031071897`*^9, {3.68278114552192*^9, 3.682781148502773*^9}, {
   3.682781191030442*^9, 3.682781251899205*^9}, {3.682781354202553*^9, 
   3.6827813544128523`*^9}, 3.6827813991698384`*^9, {3.6827814442928348`*^9, 
   3.6827814467598443`*^9}, {3.682781487351517*^9, 3.6827814884135475`*^9}, {
   3.6827818109759817`*^9, 3.682781813545724*^9}, {3.6827853356617775`*^9, 
   3.682785337550229*^9}, {3.6827867368412943`*^9, 3.682786741159988*^9}, {
   3.682786807927786*^9, 3.682786819894947*^9}, {3.68278715946465*^9, 
   3.682787162255832*^9}, {3.6827874230740376`*^9, 3.6827874366378717`*^9}, {
   3.682789227649762*^9, 3.682789230497446*^9}, {3.6827893815529485`*^9, 
   3.6827893845262256`*^9}, {3.682874323027193*^9, 3.682874336182909*^9}, {
   3.6829343494785357`*^9, 3.682934438253458*^9}, {3.682934871900261*^9, 
   3.682934888830892*^9}, {3.6829350043195353`*^9, 3.6829350106554976`*^9}, {
   3.6829355309198093`*^9, 3.682935703315592*^9}, {3.6829357824619856`*^9, 
   3.682935807468607*^9}, {3.683022005274223*^9, 3.6830220091210856`*^9}, {
   3.683022039821942*^9, 3.683022086349081*^9}, {3.6830326439989023`*^9, 
   3.6830326466660814`*^9}, {3.6982787207453346`*^9, 
   3.6982787416320457`*^9}, {3.6982788335657873`*^9, 
   3.6982788373652954`*^9}, {3.6982788850684876`*^9, 3.698278897118658*^9}, 
   3.698279124824894*^9, {3.6982791582475395`*^9, 3.6982791711539445`*^9}, {
   3.698309861882863*^9, 3.698309882569612*^9}, {3.69831038648313*^9, 
   3.698310415785906*^9}, {3.698310468313056*^9, 3.6983104947750435`*^9}, {
   3.6983105670383787`*^9, 3.6983108051037474`*^9}, {3.6983108460196304`*^9, 
   3.69831084647191*^9}, {3.6983109559174995`*^9, 3.6983109779913588`*^9}, {
   3.6983110265178947`*^9, 3.698311291553689*^9}, {3.6983145988464184`*^9, 
   3.69831460419575*^9}, {3.6983146463789663`*^9, 3.698314707852988*^9}, {
   3.6983147821238956`*^9, 3.698314782640411*^9}, {3.6983150107432384`*^9, 
   3.698315047343246*^9}, {3.698315092713068*^9, 3.6983152004211903`*^9}, {
   3.698315232561533*^9, 3.698315260222073*^9}, {3.6983157676291466`*^9, 
   3.698315857264064*^9}, {3.6983164679800034`*^9, 3.6983164752378836`*^9}, {
   3.6983168783230886`*^9, 3.6983170132968063`*^9}, {3.698317121264511*^9, 
   3.698317124532487*^9}, {3.6983171651430187`*^9, 3.6983172096940494`*^9}, {
   3.6983172690091677`*^9, 3.698317285520046*^9}, {3.698317341261922*^9, 
   3.6983174086930933`*^9}, {3.6983175075561094`*^9, 
   3.6983175489928827`*^9}, {3.698317985726252*^9, 3.6983180308053017`*^9}, {
   3.6983180804420214`*^9, 3.698318153053418*^9}, {3.6983182050383067`*^9, 
   3.698318227520159*^9}, {3.6983184577908587`*^9, 3.698318459816066*^9}, {
   3.6983201490009527`*^9, 3.6983202171540594`*^9}, {3.6983202616319118`*^9, 
   3.698320359747717*^9}, {3.6983204038955097`*^9, 3.698320404847747*^9}, {
   3.6983204662064514`*^9, 3.6983204668746033`*^9}, {3.6983205699139247`*^9, 
   3.6983205727767935`*^9}, {3.6983206452559185`*^9, 
   3.6983207396592913`*^9}, {3.698320820824626*^9, 3.698320839575612*^9}, {
   3.6983210012734385`*^9, 3.698321017213336*^9}, {3.6983210938335676`*^9, 
   3.6983211554295063`*^9}, {3.698321266161542*^9, 3.6983213674918222`*^9}, {
   3.6983214012285056`*^9, 3.698321481513752*^9}, {3.6983215312120943`*^9, 
   3.6983216238692656`*^9}, {3.6983217143387938`*^9, 3.6983218106859655`*^9}, 
   3.6983218871641626`*^9, {3.6983221735633664`*^9, 3.6983221756940465`*^9}, {
   3.6983223206968775`*^9, 3.6983223430101957`*^9}, {3.6983226000175014`*^9, 
   3.698322604477955*^9}, {3.6983227729344378`*^9, 3.698322785837361*^9}, {
   3.6983228585817385`*^9, 3.6983230005510645`*^9}, {3.6983241502043796`*^9, 
   3.6983247033865213`*^9}, {3.6983247355954504`*^9, 
   3.6983247369419065`*^9}, {3.698324818157818*^9, 3.698324911463064*^9}, {
   3.6983251317568593`*^9, 3.6983251389555683`*^9}, {3.6983253273352985`*^9, 
   3.698325353730069*^9}, {3.6983253976947374`*^9, 3.6983254234251127`*^9}, {
   3.698325469724806*^9, 3.6983254824073663`*^9}, {3.6983256972091217`*^9, 
   3.6983257021931415`*^9}, 3.6983257621151047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.682777369516736*^9, 3.6827773754382195`*^9}, {
  3.6983259775553503`*^9, 3.6983259809093723`*^9}}],

Cell[CellGroupData[{

Cell["Check DGIBPSubG", "Subsection",
 CellChangeTimes->{{3.6983258405729327`*^9, 3.6983258521025915`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"branch", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nslices", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", "=", 
   RowBox[{"DGIPBSubG", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "4", ",", "branch", ",", 
     "nslices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", "W", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.698324758634654*^9, 3.6983248054901347`*^9}, {
  3.6983249364999857`*^9, 3.698324940575715*^9}, {3.698325054588522*^9, 
  3.698325054742776*^9}, {3.6983258176326985`*^9, 3.698325836345594*^9}, {
  3.6983258878299446`*^9, 3.6983259175102806`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "2.9005283313890855`", "2.610475498250177`", 
      "3.1905811645279942`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.266092759383957`", "3.8394834834455613`", 
      "4.692702035322353`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "3.8379224408009667`", "3.45413019672087`", 
      "4.221714684881063`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702718507676324*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.0455547479585396`", "2.610475498250177`", 
      "3.1905811645279942`"},
     {
      TagBox["4",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["5",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["6",
       HoldForm], "3", "4", "1.526`", "1.526`", "1.526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.702718507676324*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving a small instance using DGIBP ", "Subsection",
 CellChangeTimes->{{3.698325939397998*^9, 3.6983259605760155`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6798218509178233`*^9, 3.679821852271891*^9}, {
   3.6798220754379344`*^9, 3.6798220755372047`*^9}, {3.679822744321784*^9, 
   3.6798227445214615`*^9}, {3.6798231052765684`*^9, 3.679823107593405*^9}, 
   3.679823226558363*^9, {3.6798233451775875`*^9, 3.679823345308581*^9}, {
   3.679823525737986*^9, 3.679823549906366*^9}, {3.6798263139146395`*^9, 
   3.679826344570452*^9}, {3.6798288602280912`*^9, 3.6798288604903975`*^9}, {
   3.6798288950564623`*^9, 3.679828994620492*^9}, {3.679829044969572*^9, 
   3.6798290909698343`*^9}, {3.6798294100005565`*^9, 
   3.6798294105697436`*^9}, {3.6798295004715223`*^9, 
   3.6798295681002893`*^9}, {3.6798296319378924`*^9, 3.679829632507357*^9}, {
   3.6798299800985794`*^9, 3.6798299863477526`*^9}, {3.679830157933735*^9, 
   3.6798301597117043`*^9}, {3.6798302974701996`*^9, 
   3.6798303164031887`*^9}, {3.6798303891181116`*^9, 3.679830389302563*^9}, {
   3.6798304759096456`*^9, 3.679830478014727*^9}, {3.6799119298147106`*^9, 
   3.6799119406954846`*^9}, {3.679912001613147*^9, 3.679912019708365*^9}, {
   3.6799121456440763`*^9, 3.6799121778114533`*^9}, 3.679912535631927*^9, {
   3.6799174812432394`*^9, 3.6799174816978993`*^9}, {3.679918592547327*^9, 
   3.6799186296132526`*^9}, {3.6799255011209993`*^9, 
   3.6799255012742624`*^9}, {3.6799265772569237`*^9, 
   3.6799266196275845`*^9}, {3.679927091468864*^9, 3.6799271177650127`*^9}, {
   3.679927217233017*^9, 3.679927233987025*^9}, {3.679927271460558*^9, 
   3.679927271760435*^9}, {3.679927363032942*^9, 3.679927363786351*^9}, 
   3.6799274640577226`*^9, {3.6799274956489134`*^9, 3.6799275047564964`*^9}, {
   3.6802494864436903`*^9, 3.680249517698353*^9}, {3.680249838745507*^9, 
   3.680249885493765*^9}, {3.6802499632347374`*^9, 3.68024997989824*^9}, {
   3.6802500278218193`*^9, 3.680250042557376*^9}, {3.6802500816458673`*^9, 
   3.680250094230627*^9}, {3.6802501729429226`*^9, 3.680250245242584*^9}, {
   3.680250277069769*^9, 3.680250349656209*^9}, {3.6802561938862762`*^9, 
   3.680256217314024*^9}, {3.6802562822999315`*^9, 3.6802562845355077`*^9}, {
   3.680259514448849*^9, 3.68025956932335*^9}, {3.680259617915313*^9, 
   3.680259625069577*^9}, {3.6802596588968315`*^9, 3.6802596591149898`*^9}, {
   3.6802597057100697`*^9, 3.680259710865752*^9}, {3.680259778882868*^9, 
   3.680259779298339*^9}, {3.6802598345877275`*^9, 3.6802598347003174`*^9}, {
   3.6802634539441957`*^9, 3.6802634724224014`*^9}, {3.680264125324051*^9, 
   3.680264127539488*^9}, {3.680971309238633*^9, 3.6809713321665344`*^9}, {
   3.6809713775361547`*^9, 3.680971388619849*^9}, 3.680971453133582*^9, {
   3.6809717846377277`*^9, 3.6809717933103046`*^9}, 3.682752354734047*^9, 
   3.682757377902835*^9, {3.6827585847612524`*^9, 3.682758585270115*^9}, {
   3.682758922849889*^9, 3.6827589310888653`*^9}, 3.682758963373986*^9, {
   3.682777338739936*^9, 3.6827773397706623`*^9}, {3.6827773885972614`*^9, 
   3.682777509880164*^9}, {3.682777995186551*^9, 3.6827779952866464`*^9}, {
   3.682778057930979*^9, 3.6827780633222637`*^9}, {3.682778129241908*^9, 
   3.682778129377575*^9}, {3.682778697943698*^9, 3.682778699490327*^9}, {
   3.682778953526342*^9, 3.6827789556117177`*^9}, {3.682779505273485*^9, 
   3.682779536222084*^9}, {3.6827800751236987`*^9, 3.682780075207179*^9}, {
   3.682781360244443*^9, 3.682781393632818*^9}, 3.682781437277698*^9, {
   3.6830326521888623`*^9, 3.68303266619322*^9}, 3.6980724813342457`*^9, {
   3.698316545143901*^9, 3.698316631268173*^9}, {3.698316730685111*^9, 
   3.698316736404586*^9}, {3.6983167909271526`*^9, 3.698316800641884*^9}, {
   3.6983170748361397`*^9, 3.698317079814169*^9}, {3.698318182985692*^9, 
   3.6983181898300004`*^9}, {3.6983183336292505`*^9, 3.698318356878724*^9}, 
   3.6983187108076825`*^9, {3.6983189659733076`*^9, 3.6983189766865835`*^9}, 
   3.698324932826663*^9, 3.698325230415392*^9, {3.6983257987214537`*^9, 
   3.6983258007115965`*^9}, {3.6983259353272004`*^9, 3.698325936799776*^9}, {
   3.698325998727798*^9, 3.6983260250657864`*^9}, {3.7027185261646767`*^9, 
   3.7027185719281225`*^9}, {3.702718621203302*^9, 3.7027186541041775`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "2.897306807979195`", "2.6075761271812756`", 
      "3.187037488777115`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "2.4413553828652566`", "2.197219844578731`", 
      "2.6854909211517826`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "2.903025461950181`", "2.612722915755163`", 
      "3.1933280081451993`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{{3.7027186511525717`*^9, 3.702718654489603*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nslices", "=", "2"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "testing", " ", "increasing", " ", "the", " ", "the", " ", "number", " ", 
    "of", " ", "slices"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nslices", ",", "True"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702718576496505*^9, 3.702718618169186*^9}, 
   3.7027186645379457`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGIBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.7027185117406416`*^9, 3.7027186025984077`*^9}, 
   3.702718665038097*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Number of solutions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7027185117406416`*^9, 3.7027186025984077`*^9}, 
   3.702718665038097*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nslices", "=", "3"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "increasing", " ", "the", " ", "number", " ", "of", " ", "slices"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nslices", ",", "True"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7027186765200605`*^9, 3.702718693221716*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGIBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.702718677020678*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Number of solutions: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.702718677020678*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Illustrating the tree exponential growth", "Subsection",
 CellChangeTimes->{{3.697799201845194*^9, 3.6977992165628195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "IBP", " ", "Tree", " ", 
    RowBox[{"(", 
     RowBox[{"it", " ", "can", " ", "be", " ", "very", " ", 
      RowBox[{
       RowBox[{"slow", "!!"}], "!"}]}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfAtoms", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfSlices", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"or", " ", "2", " ", "at", " ", "max"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"node", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"node", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "5"}], ",", 
     RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"leafs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexDegree", "[", 
            RowBox[{"T", ",", "#"}], "]"}], "===", "1"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "leafs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"node", "=", 
          RowBox[{"leafs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"node", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "T", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Number of Vertex=\>\"", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697799241731846*^9, 3.697799254334177*^9}, {
   3.697799346715639*^9, 3.697799494692484*^9}, {3.6977995415977516`*^9, 
   3.697799554133665*^9}, {3.69779958568857*^9, 3.6977996515207334`*^9}, {
   3.6977997018072743`*^9, 3.6977998432952023`*^9}, {3.697800084682583*^9, 
   3.697800241626899*^9}, {3.6978002876775465`*^9, 3.697800679942664*^9}, {
   3.697805514452196*^9, 3.6978056518731575`*^9}, {3.697822288932176*^9, 
   3.6978223841049337`*^9}, {3.697822429222677*^9, 3.6978225315229197`*^9}, {
   3.697822594480259*^9, 3.6978225945599475`*^9}, {3.6978228346728067`*^9, 
   3.697822844849125*^9}, {3.6978235002195606`*^9, 3.6978235312395496`*^9}, {
   3.697823578517539*^9, 3.697823602359697*^9}, {3.697823669118662*^9, 
   3.697823677917166*^9}, {3.697824726940096*^9, 3.697824736486435*^9}, 
   3.6981575223574333`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl3EMQIEuzBtB/bNu2bdu2bVt3bNu2bdu2bdsz70y8xYne1aIjqqM6K/NL
0LBdxbYB/ve//1WJ8r//BfIMTBCCEozghCAkoQhNGMISjvBEICKRiIyl/heV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalE5X/vkqpU
ozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSj
Oz3oSS9604f/6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0
pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2
s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5z
g5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvOD
n/ziN3/4y/9s/gAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQk
F7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQW
talDXepRnwY0pBGNaUJTmtGcFrSkFa1pw7+Pdjva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8L6D9T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+/Edf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+HfoD
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/P/wBCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/Yl8AAhKIwAQhKMEITghC
EorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKS
itSkIS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK
0pShLOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orW
tKEt7WhPBzrSic50oSvd6E4PetKL3vThP/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/vKv0B+AgAQiMEEISjCCE4KQhCI0YQhL
OMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs6
0pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznK
U4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rT
gY50ojNd6Eo3utODnvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOHv/y75AtAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz78R1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZ
wlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nC
VraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/5d8AcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/+oy/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhL/+aewIQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+N
fQEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y7+m3gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V9DfwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8m+YJwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+TfIF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//BviDUBAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/g3wByAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/8I7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf8E9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv9CuAAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlX2BfAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yL6wzAAH/5X8SmCAEJRjBCUFIQhGaMIQl
HOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd
6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzl
qUBFKlE5yv9nqValGv8HVvJgbA==
      "], {CompressedData["
1:eJxF3VO4nVvWteE1bc8V27Zt27Zt27Zt27ZtZ8e2nXzJ3566/qP7oK6qXTtZ
a873HaP31uI3aFuhjTEiIqJSZETEPw0R/18TmtHCf2ZFG9rRwX/HiS50o4f/
LS/60I8B/hlBDGEYI/lnR8GoGA2j8/8pBsbEWBib/69xMC7Gw/j8OyTAhJgI
E/PvlgSTYjJMzr9zCkyJqTA1fxZpMC2mw/T8GWXAjJgJM/NnlwWzYjbMzp9p
DsyJuTA3f9Z5MC/mw/z8HRTAglgIC/N3UwSLYjEszt9ZCSyJpbA0f5dlsCyW
w/L8HVfAilgJK0fo774KVsVqWD1CPxM1sCbWwtoR+lmpg3WxHtaP0M9QA2yI
jbBxhH62mmBTbIbNI/Qz1wJbYitsHaGfxTbYFtth+wj9jHbAjtgJO0foZ7cL
dsVu2D1CP9M9sCf2wt4R+lnvg32xH/aP0O/AAByIg3BwhH43huBQHIbDI/Q7
MwJH4igcHaHfpTE4Fsfh+Aj9jk3AiTgJJ0fod28KTsVpOD1Cv5MzcCbOwtkR
+l2dg3NxHs6P0O/wAlyIi3BxhH63l+BSXIbLI/Q7vwJX4ipcHaHPgjW4Ftfh
+gh9RmzAjbgJN0fos2MLbsVtuD1Cnyk7cCfuwt0R+qzZg3txH+6P0GfQATyI
h/BwhD6bjuBRPIbHI/SZdQJP4ik8HaHPsjN4Fs/h+Qh9xl3Ai3gJL0fos+8K
XsVreD1Cn4k38CbewtsR+qz8D+/gXbwXoc/Q+/gAH+KjCH22PsYn+BSfRegz
9zm+wJf4KkKfxa/xDb7FdxH6jH6PH/AjforQZ/dn/IJf8VuEPtO/4w/8ib8i
9Fn/G//gvy/3fxoM+g4wognNaDHou8GKNrSjw6DvDCe60I0eg75LvOhDPwYM
fMdgCMMYadB3TxSMitEwukHfSTEwJsbC2AZ9V8XBuBgP4xv0HZYAE2IiTGzQ
d1sSTIrJMLlB33kpMCWmwtQGfRemwbSYDtMb9B2ZATNiJsxs0HdnFsyK2TC7
Qd+pOTAn5sLcBn3X5sG8mA/zG/QdXAALYiEsbNB3cxEsisWwuEHf2SWwJJbC
0gZ9l5fBslgOyxv0HV8BK2IlrGzQd38VrIrVsLpBzwQ1sCbWwtoGPSvUwbpY
D+sb9AzRABtiI2xs0LNFE2yKzbC5Qc8cLbAltsLWBj2LtMG22A7bG/SM0gE7
YifsbNCzSxfsit2wu0HPND2wJ/bC3gY96/TBvtgP+xv0DDQAB+IgHGzQs9EQ
HIrDcLhBz0wjcCSOwtEGPUuNwbE4Dscb9Iw1ASfiJJxs0LPXFJyK03C6Qc9k
M3AmzsLZBj2rzcG5OA/nG/QMtwAX4iJcbNCz3RJcistwuUHPfCtwJa7C1QY9
C67BtbgO1xv0jLgBN+Im3GzQs+MW3IrbcLtBz5Q7cCfuwt0GPWvuwb24D/cb
9Ax6AA/iITxs0LPpETyKx/C4Qc+sJ/AknsLTBj3LnsGzeA7PG/SMewEv4iW8
bNCz7xW8itfwukHPxDfwJt7C2wY9K/+Hd/Au3jPoGfo+PsCH+MigZ+vH+ASf
4jODnrmf4wt8ia8MehZ/jW/wLb4z6Bn9PX7Aj/jJoGf3z/gFv+I3g57pv+MP
/Im/DHrW/41/8N/L+z8NRr0DGNGEZrQY9W5gRRva0WHUO4MTXehGj1HvEl70
oR8DRr1jBDGEYYw06t0jCkbFaBjdqHeSGBgTY2Fso95V4mBcjIfxjXqHSYAJ
MREmNurdJgkmxWSY3Kh3nhSYElNhaqPehdJgWkyH6Y16R8qAGTETZjbq3SkL
ZsVsmN2od6ocmBNzYW6j3rXyYF7Mh/mNegcrgAWxEBY26t2sCBbFYljcqHe2
ElgSS2Fpo97lymBZLIfljXrHq4AVsRJWNurdrwpWxWpY3ah3whpYE2thbaPe
FetgXayH9Y16h2yADbERNjbq3bIJNsVm2Nyod84W2BJbYWuj3kXbYFtsh+2N
ekftgB2xE3Y26t21C3bFbtjdqHfaHtgTe2Fvo951+2Bf7If9jXoHHoADcRAO
NurdeAgOxWE43Kh35hE4EkfhaKPepcfgWByH4416x56AE3ESTjbq3XsKTsVp
ON2od/IZOBNn4Wyj3tXn4Fych/ONeodfgAtxES426t1+CS7FZbjcqHf+FbgS
V+Fqo84C1uBaXIfrjToj2IAbcRNuNursYAtuxW243agzhR24E3fhbqPOGvbg
XtyH+406gziAB/EQHjbqbOIIHsVjeNyoM4sTeBJP4WmjzjLO4Fk8h+eNOuO4
gBfxEl426uzjCl7Fa3jdqDORG3gTb+Fto85K/sM7eBfvGXWGch8f4EN8ZNTZ
ymN8gk/xmVFnLs/xBb7EV0adxbzGN/gW3xl1RvMeP+BH/GTU2c1n/IJf8ZtR
Zzrf8Qf+xF9GnfX8xj/473D+nwaTzoCMaEIzWkw6G7KiDe3oMOnMyIkudKPH
pLMkL/rQjwGTzpiCGMIwRpp09hQFo2I0jG7SmVQMjImxMLZJZ1VxMC7Gw/gm
nWElwISYCBObdLaVBJNiMkxu0plXCkyJqTC1SWdhaTAtpsP0Jp2RZcCMmAkz
m3R2lgWzYjbMbtKZWg7Mibkwt0lnbXkwL+bD/CadwRXAglgIC5t0NlcEi2Ix
LG7SmV0JLImlsLRJZ3llsCyWw/ImnfFVwIpYCSubdPZXBatiNaxu0plgDayJ
tbC2SWeFdbAu1sP6Jp0hNsCG2Agbm3S22ASbYjNsbtKZYwtsia2wtUlnkW2w
LbbD9iadUXbAjtgJO5t0dtkFu2I37G7SmWYP7Im9sLdJZ519sC/2w/4mnYEO
wIE4CAebdDY6BIfiMBxu0pnpCByJo3C0SWepY3AsjsPxJp2xTsCJOAknm3T2
OgWn4jScbtKZ7AycibNwtklntXNwLs7D+Sad4S7AhbgIF5t0trsEl+IyXG7S
me8KXImrcLVJZ8FrcC2uw/UmnRFvwI24CTebdHa8BbfiNtxu0pnyDtyJu3C3
SWfNe3Av7sP9Jp1BH8CDeAgPm3Q2fQSP4jE8btKZ9Qk8iafwtEln2WfwLJ7D
8yadcV/Ai3gJL5t09n0Fr+I1vG7SmfgNvIm38LZJZ+X/4R28i/dMOkO/jw/w
IT4y6Wz9MT7Bp/jMpDP35/gCX+Irk87iX+MbfIvvTDqjf48f8CN+Muns/jN+
wa/4zaQz/e/4A3/ir7/+O+v/jX/wfxf8BrPuAIxoQjNazLobsKIN7egw687A
iS50o8esuwQv+tCPAbPuGIIYwjBGmnX3EAWjYjSMbtadRAyMibEwtll3FXEw
LsbD+GbdYSTAhJgIE5t1t5EEk2IyTG7WnUcKTImpMLVZdyFpMC2mw/Rm3ZFk
wIyYCTObdXeSBbNiNsxu1p1KDsyJuTC3WXcteTAv5sP8Zt3BFMCCWAgLm3U3
UwSLYjEsbtadTQksiaWwtFl3OWWwLJbD8mbd8VTAilgJK5t191MFq2I1rG7W
nVANrIm1sLZZd0V1sC7Ww/pm3SE1wIbYCBubdbfUBJtiM2xu1p1TC2yJrbC1
WXdRbbAttsP2Zt1RdcCO2Ak7m3V31QW7YjfsbtadVg/sib2wt1l3XX2wL/bD
/mbdgQ3AgTgIB5t1NzYEh+IwHG7WndkIHImjcLRZd2ljcCyOw/Fm3bFNwIk4
CSebdfc2BafiNJxu1p3cDJyJs3C2WXd1c3AuzsP5Zt3hLcCFuAgXm3W3twSX
4jJcbtad3wpciatwtVl3gWtwLa7D9WbdEW7AjbgJN5t1d7gFt+I23G7WneIO
3Im7cLdZd417cC/uw/1m3UEewIN4CA+bdTd5BI/iMTxu1p3lCTyJp/C0WXeZ
Z/AsnsPzZt1xXsCLeAkvm3X3eQWv4jW8btad6A28ibfwtll3pf/hHbyL98y6
Q72PD/AhPjLrbvUxPsGn+MysO9fn+AJf4iuz7mJf4xt8i+/MuqN9jx/wI34y
6+72M37Br/jNrDvd7/gDf+Ivs+56f+Mf/Ddc90+DRXfARjShGS0W3Q1b0YZ2
dFh0Z+xEF7rRY9Fdshd96MeARXfMQQxhGCMtunuOglExGka36E46BsbEWBjb
orvqOBgX42F8i+6wE2BCTISJLbrbToJJMRkmt+jOOwWmxFSY2qK78DSYFtNh
eovuyDNgRsyEmS26O8+CWTEbZrfoTj0H5sRcmNuiu/Y8mBfzYX6L7uALYEEs
hIUtupsvgkWxGBa36M6+BJbEUljaorv8MlgWy2F5i+74K2BFrISVLdz9Y1Ws
htUtmgmogTWxFta2aFagDtbFeljfohmCBtgQG2Fji2YLmmBTbIbNLZo5aIEt
sRW2tmgWoQ22xXbY3qIZhQ7YETthZ4tmF7pgV+yG3S2aaeiBPbEX9rZo1qEP
9sV+2N+iGYgBOBAH4WCLZiOG4FAchsMtmpkYgSNxFI62aJZiDI7FcTjeohmL
CTgRJ+Fki2YvpuBUnIbTLZrJmIEzcRbOtmhWYw7OxXk436IZjgW4EBfhYotm
O5bgUlyGyy2a+ViBK3EVrrZoFmQNrsV1uN6iGZENuBE34WaLZke24Fbchtst
minZgTtxF+62aNZkD+7FfbjfohmUA3gQD+Fhi2ZTjuBRPIbHLZpZOYEn8RSe
tmiW5QyexXN43qIZlwt4ES/hZYtmX67gVbyG1y2aibmBN/EW3rZoVuY/vIN3
8Z5FMzT38QE+xEcWzdY8xif4FJ9ZNHPzHF/gS3xl0SzOa3yDb/GdRTM67/ED
fsRPFs3ufMYv+BW/WTTT8x1/4E/8ZdGsz2/8g/+G5/9psGoGyIgmNKPFqtkg
K9rQjg6rZoac6EI3eqyaJfKiD/0YsGrGKIghDGOkVbNHUTAqRsPoVs0kxcCY
GAtjWzWrFAfjYjyMb9UMUwJMiIkwsVWzTUkwKSbD5FbNPKXAlJgKU1s1C5UG
02I6TG/VjFQGzIiZMLNVs1NZMCtmw+xWzVTlwJyYC3NbNWuVB/NiPsxv1QxW
ASyIhbCwVbNZRbAoFsPiVs1slcCSWApLWzXLVQbLYjksb9WMVwWsiJWwslWz
X1WwKlbD6lbNhNXAmlgLa1s1K1YH62I9rG/VDFkDbIiNsLFVs2VNsCk2w+ZW
zZy1wJbYCltbNYvWBttiO2xv1YxaB+yInbCzVbNrXbArdsPuVs209cCe2At7
WzXr1gf7Yj/sb9UM3AAciINwsFWzcUNwKA7D4VbNzI3AkTgKR1s1SzcGx+I4
HG/VjN0EnIiTcLJVs3dTcCpOw+lWzeTNwJk4C2dbNas3B+fiPJxv1QzfAlyI
i3CxVbN9S3ApLsPlVs38rcCVuApXWzULuAbX4jpcb9WM4AbciJtws1Wzg1tw
K27D7VbNFO7AnbgLd1s1a7gH9+I+3G/VDOIBPIiH8LBVs4lH8Cgew+NWzSye
wJN4Ck9bNct4Bs/iOTxv1YzjBbyIl/CyVbOPV/AqXsPrVs1E3sCbeAtvWzUr
+R/ewbt4z6oZyvv4AB/iI6tmKx/jE3yKz6yauXyOL/AlvrJqFvM1vsG3+M6q
Gc33+AE/4ierZjc/4xf8it+smun8jj/wJ/6yatbzN/7Bf8tx/zTYNANqRBOa
0WLTbKgVbWhHh00zo050oRs9Ns2SetGHfgzYNGMaxBCGMdKm2dMoGBWjYXSb
ZlJjYEyMhbFtmlWNg3ExHsa3aYY1ASbERJjYptnWJJgUk2Fym2ZeU2BKTIWp
bZqFTYNpMR2mt2lGNgNmxEyY2abZ2SyYFbNhdptmanNgTsyFuW2atc2DeTEf
5rdpBrcAFsRCWNim2dwiWBSLYXGbZnZLYEkshaVtmuUtg2WxHJa3aca3AlbE
SljZptnfKlgVq2F1m2aCa2BNrIW1bZoVroN1sR7Wt2mGuAE2xEbY2KbZ4ibY
FJthc5tmjltgS2yFrW2aRW6DbbEdtrdpRrkDdsRO2Nmm2eUu2BW7YXebZpp7
YE/shb1tmnXug32xH/a3aQZ6AA7EQTjYptnoITgUh+Fwm2amR+BIHIWjbZql
HoNjcRyOt2nGegJOxEk42abZ6yk4FafhdJtmsmfgTJyFs22a1Z6Dc3Eezrdp
hnsBLsRFuNim2e4luBSX4XKbZr5X4EpchattmgVfg2txHa63aUZ8A27ETbjZ
ptnxLbgVt+F2m2bKd+BO3IW7bZo134N7cR/ut2kG/QAexEN42KbZ9CN4FI/h
cZtm1k/gSTyFp22aZT+DZ/Ecnrdpxv0CXsRLeNmm2fcreBWv4XWbZuJv4E28
hbdtmpX/D+/gXbxn0wz9fXyAD/GRTbP1j/EJPsVnNs3cP8cX+BJf2TSL/xrf
4Ft8Z9OM/nv8gB/xk02z+5/xC37FbzbN9H/HH/gTf/3136z/b/yD/1vgN9i1
A2BEE5rRYtdugBVtaEeHXTsDTnShGz127RJ40Yd+DNi1YxDEEIYx0q7dgygY
FaNhdLt2EmJgTIyFse3aVYiDcTEexrdrhyEBJsREmNiu3YYkmBSTYXK7dh5S
YEpMhant2oVIg2kxHaa3a0ciA2bETJjZrt2JLJgVs2F2u3YqcmBOzIW57dq1
yIN5MR/mt2sHowAWxEJY2K7djCJYFIthcbt2NkpgSSyFpe3a5SiDZbEclrdr
x6MCVsRKWNmu3Y8qWBWrYXW7dkJqYE2shbXt2hWpg3WxHta3a4ekATbERtjY
rt2SJtgUm2Fzu3ZOWmBLbIWt7dpFaYNtsR22t2tHpQN2xE7Y2a7dlS7YFbth
d7t2WnpgT+yFve3ademDfbEf9rdrB2YADsRBONiu3ZghOBSH4XC7dmZG4Egc
haPt2qUZg2NxHI63a8dmAk7ESTjZrt2bKTgVp+F0u3ZyZuBMnIWz7drVmYNz
cR7Ot2uHZwEuxEW42K7dniW4FJfhcrt2flbgSlyFq+3aBVqDa3EdrrdrR2gD
bsRNuNmu3aEtuBW34Xa7dop24E7chbvt2jXag3txH+63awfpAB7EQ3jYrt2k
I3gUj+Fxu3aWTuBJPIWn7dplOoNn8Ryet2vH6QJexEt42a7dpyt4Fa/hdbt2
om7gTbyFt+3alfoP7+BdvGfXDtV9fIAP8ZFdu1WP8Qk+xWd27Vw9xxf4El/Z
tYv1Gt/gW3xn147We/yAH/GTXbtbn/ELfsVvdu10fccf+BN/2bXr9Rv/4L9w
m38aHNoBM6IJzWhxaDfMija0o8OhnTEnutCNHod2ybzoQz8GHNoxC2IIwxjp
0O5ZFIyK0TC6QztpMTAmxsLYDu2qxcG4GA/jO7TDlgATYiJM7NBuWxJMiskw
uUM7bykwJabC1A7twqXBtJgO0zu0I5cBM2ImzOzQ7lwWzIrZMLtDO3U5MCfm
wtwO7drlwbyYD/M7tINXAAtiISzs0G5eESyKxbC4Qzt7JbAklsLSDu3ylcGy
WA7LO7TjVwErYiWs7NDuXxWsitWwukM7gTWwJtbC2g7tCtbBulgP6zu0Q9gA
G2IjbOzQbmETbIrNsLlDO4ctsCW2wtYO7SK2wbbYDts7tKPYATtiJ+zs0O5i
F+yK3bC7QzuNPbAn9sLeDu069sG+2A/7O7QDOQAH4iAc7NBu5BAcisNwuEM7
kyNwJI7C0Q7tUo7BsTgOxzu0YzkBJ+IknOzQ7uUUnIrTcLqDnUycibNwtkO7
mnNwLs7D+Q7tcC7AhbgIFzu027kEl+IyXO7QzucKXImrcLVDu6BrcC2uw/UO
7YhuwI24CTc7tDu6BbfiNtzu0E7pDtyJu3C3Q7ume3Av7sP9Du2gHsCDeAgP
O7SbegSP4jE87tDO6gk8iafwtEO7rGfwLJ7D8w7tuF7Ai3gJLzu0+3oFr+I1
vO7QTuwNvIm38LZDu7L/4R28i/cc2qG9jw/wIT5yaLf2MT7Bp/jMoZ3b5/gC
X+Irh3ZxX+MbfIvvHNrRfY8f8CN+cmh39zN+wa/4zaGd3u/4A3/iL4d2fX/j
H/wXXvdPg1M7wEY0oRktTu0GW9GGdnQ4tTPsRBe60ePULrEXfejHgFM7xkEM
YRgjndo9joJRMRpGd2onOQbGxFgY26ld5TgYF+NhfKd2mBNgQkyEiZ3abU6C
STEZJndq5zkFpsRUmNqpXeg0mBbTYXqndqQzYEbMhJmd2p3OglkxG2Z3aqc6
B+bEXJjbqV3rPJgX82F+p3awC2BBLISFndrNLoJFsRgWd2pnuwSWxFJY2qld
7jJYFsthead2vCtgRayElZ3a/a6CVbEaVndqJ7wG1sRaWNupXfE6WBfrYX2n
dsgbYENshI2d2i1vgk2xGTZ3aue8BbbEVtjaqV30NtgW22F7p3bUO2BH7ISd
ndpd74JdsRt2d2qnvQf2xF7Y26ld9z7YF/thf6d24AfgQByEg53ajR+CQ3EY
DndqZ34EjsRRONqpXfoxOBbH4Xinduwn4ESchJOd2r2fglNxGk53aid/Bs7E
WTjbqV39OTgX5+F8p3b4F+BCXISLndrtX4JLcRkud2rnfwWuxFW42qksgDW4
FtfheqcyAjbgRtyEm53KDtiCW3EbbncqU2AH7sRduNuprIE9uBf34X6nMggO
4EE8hIedyiY4gkfxGB53KrPgBJ7EU3jaqSyDM3gWz+F5pzIOLuBFvISXnco+
uIJX8RpedyoT4QbexFt426mshP/wDt7Fe05lKNzHB/gQHzmVrfAYn+BTfOZU
5sJzfIEv8ZVTWQyv8Q2+xXdOZTS8xw/4ET85ld3wGb/gV/zmVKbDd/yBP/GX
U1kPv/EP/gun/afBpQwII5rQjBaXsiGsaEM7OlzKjHCiC93ocSlLwos+9GPA
pYyJIIYwjJEuZU9EwagYDaO7lEkRA2NiLIztUlZFHIyL8TC+SxkWCTAhJsLE
LmVbJMGkmAyTu5R5kQJTYipM7VIWRhpMi+kwvUsZGRkwI2bCzC5lZ2TBrJgN
s7uUqZEDc2IuzO1S1kYezIv5ML9LGRwFsCAWwsIuZXMUwaJYDIu7lNlRAkti
KSztUpZHGSyL5bC8SxkfFbAiVsLKLmV/VMGqWA2ru5QJUgNrYi2s7VJWSB2s
i/WwvksZIg2wITbCxi5lizTBptgMm7uUOdICW2IrbO1SFkkbbIvtsL1LGSUd
sCN2ws4uZZd0wa7YDbu7lGnSA3tiL+ztUtZJH+yL/bC/SxkoA3AgDsLBLmWj
DMGhOAyHu5SZMgJH4igc7VKWyhgci+NwvEsZKxNwIk7CyS5lr0zBqTgNp7uU
yTIDZ+IsnO1SVsscnIvzcL5LGS4LcCEuwsUuZbsswaW4DJe7lPmyAlfiKlzt
UhbMGlyL63C9SxkxG3AjbsLNLmXHbMGtuA23u5QpswN34i7c7VLWzB7ci/tw
v0sZNAfwIB7Cwy5l0xzBo3gMj7uUWXMCT+IpPO1Sls0ZPIvn8LxLGTcX8CJe
wssuZd9cwat4Da+7lIlzA2/iLbztUlbOf3gH7+I9lzJ07uMDfIiPXMrWeYxP
8Ck+cylz5zm+wJf4yqUsntf4Bt/iO5cyet7jB/yIn1zK7vmMX/ArfnMp0+c7
/sCf+Ouv/7J+fuMf/F9Av8GtDCAjmtCMFreygaxoQzs63MoMcqIL3ehxK0vI
iz70Y8CtjKEghjCMkW5lD0XBqBgNo7uVSRQDY2IsjO1WVlEcjIvxML5bGUYJ
MCEmwsRuZRslwaSYDJO7lXmUAlNiKkztVhZSGkyL6TC9WxlJGTAjZsLMbmUn
ZcGsmA2zu5WplANzYi7M7VbWUh7Mi/kwv1sZTAWwIBbCwm5lMxXBolgMi7uV
2VQCS2IpLO1WllMZLIvlsLxbGU8VsCJWwspuZT9VwapYDau7lQlVA2tiLazt
VlZUHayL9bC+WxlSDbAhNsLGbmVLNcGm2Aybu5U51QJbYits7VYWVRtsi+2w
vVsZVR2wI3bCzm5lV3XBrtgNu7uVadUDe2Iv7O1W1lUf7Iv9sL9bGVgDcCAO
wsFuZWMNwaE4DIe7lZk1AkfiKBztVpbWGByL43C8WxlbE3AiTsLJbmVvTcGp
OA2nu5XJNQNn4iyc7VZW1xyci/NwvlsZXgtwIS7CxW5ley3BpbgMl7uV+bUC
V+IqXO1WFtgaXIvrcL1bGWEbcCNuws1uZYdtwa24Dbe7lSm2A3fiLtztVtbY
HtyL+3C/WxlkB/AgHsLDbmWTHcGjeAyPu5VZdgJP4ik87VaW2Rk8i+fwvFsZ
ZxfwIl7Cy25ln13Bq3gNr7uViXYDb+ItvO1WVtp/eAfv4j23MtTu4wN8iI/c
ylZ7jE/wKT5zK3PtOb7Al/jKrSy21/gG3+I7tzLa3uMH/Iif3Mpu+4xf8Ct+
cyvT7Tv+wJ/4y62st9/4B/+Vy/zT4FEGnBFNaEaLR9lwVrShHR0eZcY50YVu
9HiUJedFH/ox4FHGXBBDGMZIj7LnomBUjIbRPcqki4ExMRbG9iirLg7GxXgY
36MMuwSYEBNhYo+y7ZJgUkyGyT3KvEuBKTEVpvYoCy8NpsV0mN6jjLwMmBEz
YWaPsvOyYFbMhtk9ytTLgTkxF+b2KGsvD+bFfJjfowy+AlgQC2Fhj7L5imBR
LIbFPcrsK4ElsRSW9ijLrwyWxXJY3qOMvwpYESthZY+y/6pgVayG1T3KBKyB
NbEW1vYoK7AO1sV6WN+jDMEG2BAbYWOPsgWbYFNshs09yhxsgS2xFbb2KIuw
DbbFdtjeo4zCDtgRO2Fnj7ILu2BX7IbdPco07IE9sRf29ijrsA/2xX7Y36MM
xAE4EAfhYI+yEYfgUByGwz3KTByBI3EUjvYoS3EMjsVxON6jjMUJOBEn4WSP
shen4FSchtM9ymScgTNxFs72KKtxDs7FeTjfowzHBbgQF+Fij7Idl+BSXIbL
Pcp8XIErcRWu9igLcg2uxXW43qOMyA24ETfhZo+yI7fgVtyG2z3KlNyBO3EX
7vYoa3IP7sV9uN+jDMoDeBAP4WGPsimP4FE8hsc9yqw8gSfxFJ72KMvyDJ7F
c3jeo4zLC3gRL+Flj7Ivr+BVvIbXPcrEvIE38Rbe9pCViXfwLt7zKEPzPj7A
h/jIo2zNx/gEn+IzjzI3n+MLfImvPMrifI1v8C2+8yij8z1+wI/4yaPszs/4
Bb/iN48yPb/jD/yJvzzK+vyNf/Bfedw/DV5lgBrRhGa0eJUNakUb2tHhVWao
E13oRo9XWaJe9KEfA15ljAYxhGGM9Cp7NApGxWgY3atM0hgYE2NhbK+ySuNg
XIyH8b3KME2ACTERJvYq2zQJJsVkmNyrzNMUmBJTYWqvslDTYFpMh+m9ykjN
gBkxE2b2Kjs1C2bFbJjdq0zVHJgTc2Fur7JW82BezIf5vcpgLYAFsRAW9iqb
tQgWxWJY3KvM1hJYEkthaa+yXMtgWSyH5b3KeK2AFbESVvYq+7UKVsVqWN2r
TNgaWBNrYW2vsmLrYF2sh/W9ypBtgA2xETb2Klu2CTbFZtjcq8zZFtgSW2Fr
r7Jo22BbbIftvcqo7YAdsRN29iq7tgt2xW7Y3atM2x7YE3thb6+ybvtgX+yH
/b3KwB2AA3EQDvYqG3cIDsVhONyrzNwROBJH4WivsnTH4Fgch+O9ytidgBNx
Ek72Knt3Ck7FaTjdq0zeGTgTZ+Fsr7J65+BcnIfzvcrwXYALcREu9irbdwku
xWW43KvM3xW4Elfhaq+ygNfgWlyH673KCN6AG3ETbvYqO3gLbsVtuN2rTOEd
uBN34W6vsob34F7ch/u9yiA+gAfxEB72Kpv4CB7FY3jcq8ziE3gST+Fpr7KM
z+BZPIfnvco4voAX8RJe9ir7+ApexWt43atM5Bt4E2/hba+ykv/DO3gX73mV
oXwfH+BDfORVtvJjfIJP8ZlXmcvP8QW+xFdeZTG/xjf4Ft95ldH8Hj/gR/zk
VXbzZ/yCX/GbV5nO3/EH/sRfXmU9/8Y/+K8c9p8GnzKgjWhCM1p8yoa2og3t
6PApM9qJLnSjx6csaS/60I8BnzKmgxjCMEb6lD0dBaNiNIzuUyZ1DIyJsTC2
T1nVcTAuxsP4PmVYJ8CEmAgT+5RtnQSTYjJM7lPmdQpMiakwtU9Z2GkwLabD
9D5lZGfAjJgJM/uUnZ0Fs2I2zO5TpnYOzIm5MLdPWdt5MC/mw/w+ZXAXwIJY
CAv7lM1dBItiMSzuU2Z3CSyJpbC0T1neZbAslsPyPmV8V8CKWAkr+5T9XQWr
YjWs7lMmeA2sibWwtk9Z4XWwLtbD+j5liDfAhtgIG/uULd4Em2IzbO5T5ngL
bImtsLVPWeRtsC22w/Y+ZZR3wI7YCTv7lF3eBbtiN+zuU6Z5D+yJvbC3T1nn
fbAv9sP+PmWgD8CBOAgH+5SNPgSH4jAc7lNm+ggciaNwtE9Z6mNwLI7D8T5l
rE/AiTgJJ/uUvT4Fp+I0nO5TJvsMnImzcLZPWe1zcC7Ow/k+ZbgvwIW4CBf7
lO2+BJfiMlzuU+b7ClyJq3C1T1nwa3AtrsP1PmXEb8CNuAk3+5QdvwW34jbc
7lOm/A7cibtwt09Z83twL+7D/T5l0B/Ag3gID/uUTX8Ej+IxPO5TZv0JPImn
8LRPWfZn8Cyew/M+ZdxfwIt4CS/7lH1/Ba/iNbzuUyb+DbyJt/C2T1n5/+Ed
vIv3fMrQv48P8CE+8ilb/zE+waf4zKfM/ef4Al/iK5+y+F/jG3yL73zK6H+P
H/AjfvIpu/8zfsGv+M2nTP/v+AN/4i+fsv5/4x/8f+XvfzX41QFgRBOa0eJX
N4AVbWhHh1+dAU50oRs9fnUJeNGHfgz41TEQxBCGMdKv7oEoGBWjYXS/Ogli
YEyMhbH96iqIg3ExHsb3q8MgASbERJjYr26DJJgUk2FyvzoPUmBKTIWp/epC
SINpMR2m96sjIQNmxEyY2a/uhCyYFbNhdr86FXJgTsyFuf3qWsiDeTEf5ver
g6EAFsRCWNivboYiWBSLYXG/OhtKYEkshaX96nIog2WxHJb3q+OhAlbESljZ
r+6HKlgVq2F1vzohamBNrIW1/eqKqIN1sR7W96tDogE2xEbY2K9uiSbYFJth
c786J1pgS2yFrf3qomiDbbEdtvero6IDdsRO2Nmv7oou2BW7YXe/Oi16YE/s
hb396rrog32xH/b3qwNjAA7EQTjYr26MITgUh+FwvzozRuBIHIWj/erSGINj
cRyO96tjYwJOxEk42a/ujSk4FafhdL86OWbgTJyFs/3q6piDc3Eezverw2MB
LsRFuNivbo8luBSX4XK/Oj9W4Epchav96gJZg2txHa73qyNkA27ETbjZr+6Q
LbgVt+F2vzpFduBO3IW7/eoa2YN7cR/u96uD5AAexEN42K9ukiN4FI/hcb86
S07gSTyFp/3qMjmDZ/Ecnver4+QCXsRLeNmv7pMreBWv4XW/OlFu4E28hbf9
6kr5D+/gXbznV4fKfXyAD/GRX90qj/EJPsVnfnWuPMcX+BJf+dXF8hrf4Ft8
51dHy3v8gB/xk1/dLZ/xC37Fb351unzHH/gTf/nV9fIb/2BEQBoC6oAxognN
aAmoG8aKNrSjI6DOGCe60I2egLpkvOhDPwYCdMxgCMMYGVD3TBSMitEwekCd
NDEwJsbC2AF11cTBuBgP4wfUYZMAE2IiTBxQt00STIrJMHlAnTcpMCWmwtQB
deGkwbSYDtMH1JGTATNiJswcUHdOFsyK2TB7QJ06OTAn5sLcAXXt5MG8mA/z
B9TBUwALYiEsHFA3TxEsisWweECdPSWwJJbC0gF1+ZTBslgOywfU8VMBK2Il
rBxQ908VrIrVsHpAnUA1sCbWwtoBdQXVwbpYD+sH1CHUABtiI2wcULdQE2yK
zbB5QJ1DLbAltsLWAXURtcG22A7bB9RR1AE7YifsHFB3URfsit2we0CdRj2w
J/bC3gF1HfXBvtgP+wfUgTQAB+IgHBxQN9IQHIrDcHhAnUkjcCSOwtEBdSmN
wbE4DscH1LE0ASfiJJwcUPfSFJyK03B6QJ1MM3AmzsLZAXU1zcG5OA/nB9Th
tAAX4iJcHFC30xJcistweUCdTytwJa7C1QF1Qa3BtbgO1wfUEbUBN+Im3BxQ
d9QW3IrbcHtAnVI7cCfuwt0BdU3twb24D/cH1EF1AA/iITwcUDfVETyKx/B4
QJ1VJ/AknsLTAXVZncGzeA7PB9RxdQEv4iW8HFD31RW8itfwekCdWDfwJt7C
2wF1Zf2Hd/Au3guoQ+s+PsCH+Cigbq3H+ASf4rOAOree4wt8ia8C6uJ6jW/w
Lb4LqKPrPX7Aj/gpoO6uz/gFv+K3gDq9vuMP/Im/Aur6+o1/MCIoDUF1gBnR
hGa0BNUNZkUb2tERVGeYE13oRk9QXWJe9KEfA0F1jAUxhGGMDKp7LApGxWgY
PahOshgYE2Nh7KC6yuJgXIyH8YPqMEuACTERJg6q2ywJJsVkmDyozrMUmBJT
YeqgutDSYFpMh+mD6kjLgBkxE2YOqjstC2bFbJg9qE61HJgTc2HuoLrW8mBe
zIf5g+pgK4AFsRAWDqqbrQgWxWJYPKjOthJYEkth6aC63MpgWSyH5YPqeKuA
FbESVg6q+60KVsVqWD2oTrgaWBNrYe2guuLqYF2sh/WD6pBrgA2xETYOqluu
CTbFZtg8qM65FtgSW2HroLro2mBbbIftg+qo64AdsRN2Dqq7rgt2xW7YPahO
ux7YE3th76C67vpgX+yH/YPqwBuAA3EQDg6qG28IDsVhODyozrwROBJH4eig
uvTG4Fgch+OD6tibgBNxEk4OqntvCk7FaTg9qE6+GTgTZ+HsoLr65uBcnIfz
g+rwW4ALcREuDqrbbwkuxWW4PKjOvxW4Elfh6qC6ANfgWlyH64PqCNyAG3ET
bg6qO3ALbsVtuD2oTsEduBN34e6gugb34F7ch/uD6iA8gAfxEB4OqpvwCB7F
Y3g8qM7CE3gST+HpoLoMz+BZPIfng+o4vIAX8RJeDqr78ApexWt4PahOxBt4
E2/h7aC6Ev/DO3gX7wXVoXgfH+BDfBRUt+JjfIJP8VlQnYvP8QW+xFdBdTG+
xjf4Ft8F1dH4Hj/gR/wUVHfjZ/yCX/FbUJ2O3/EH/sRfQXU9/sY/GBGShpA6
II1oQjNaQuqGtKIN7egIqTPSiS50oyekLkkv+tCPgZA6JoMYwjBGhtQ9GQWj
YjSMHlInZQyMibEwdkhdlXEwLsbD+CF1WCbAhJgIE4fUbZkEk2IyTB5S52UK
TImpMHVIXZhpMC2mw/QhdWRmwIyYCTOH1J2ZBbNiNsweUqdmDsyJuTB3SF2b
eTAv5sP8IXVwFsCCWAgLh9TNWQSLYjEsHlJnZwksiaWwdEhdnmWwLJbD8iF1
fFbAilgJK4fU/VkFq2I1rB5SJ2gNrIm1sHZIXaF1sC7Ww/ohdYg2wIbYCBuH
1C3aBJtiM2weUudoC2yJrbB1SF2kbbAttsP2IXWUdsCO2Ak7h9Rd2gW7Yjfs
HlKnaQ/sib2wd0hdp32wL/bD/iF1oA7AgTgIB4fUjToEh+IwHB5SZ+oIHImj
cHRIXapjcCyOw/EhdaxOwIk4CSeH1L06BafiNJweUifrDJyJs3B2SF2tc3Au
zsP5IXW4LsCFuAgXh9TtugSX4jJcHlLn6wpciatwdUhdsGtwLa7D9SF1xG7A
jbgJN4fUHbsFt+I23B5Sp+wO3Im7cHdIXbN7cC/uw/0hddAewIN4CA+H1E17
BI/iMTweUmftCTyJp/B0SF22Z/AsnsPzIXXcXsCLeAkvh9R9ewWv4jW8HlIn
7g28ibfwdkhduf/hHbyL90Lq0L2PD/AhPgqpW/cxPsGn+Cykzt3n+AJf4quQ
unhf4xt8i+9C6uh9jx/wI34Kqbv3M37Br/gtpE7f7/gDf+KvkLp+f+MfjAhL
Q1gdwEY0oRktYXUDW9GGdnSE1RnsRBe60RNWl7AXfejHQFgdw0EMYRgjw+oe
joJRMRpGD6uTOAbGxFgYO6yu4jgYF+Nh/LA6jBNgQkyEicPqNk6CSTEZJg+r
8zgFpsRUmDqsLuQ0mBbTYfqwOpIzYEbMhJnD6k7OglkxG2YPq1M5B+bEXJg7
rK7lPJgX82H+sDqYC2BBLISFw+pmLoJFsRgWD6uzuQSWxFJYOqwu5zJYFsth
+bA6nitgRayElcPqfq6CVbEaVg+rE7oG1sRaWDusrug6WBfrYf2wOqQbYENs
hI3D6pZugk2xGTYPq3O6BbbEVtg6rC7qNtgW22H7sDqqO2BH7ISdw+qu7oJd
sRt2D6vTugf2xF7YO6yu6z7YF/th/7A6sAfgQByEg8Pqxh6CQ3EYDg+rM3sE
jsRRODqsLu0xOBbH4fiwOrYn4ESchJPD6t6eglNxGk4Pq5N7Bs7EWTg7rK7u
OTgX5+H8sDq8F+BCXISLw+r2XoJLcRkuD6vzewWuxFW4Oqwu8DW4Ftfh+rA6
wjfgRtyEm8PqDt+CW3Ebbg+rU3wH7sRduDusrvE9uBf34f6wOsgP4EE8hIfD
6iY/gkfxGB4Pq7P8BJ7EU3g6rC7zM3gWz+H5sDrOL+BFvISXw+o+v4JX8Rpe
D6sT/QbexFt4O6yu9P/wDt7Fe2F1qN/HB/gQH4XVrf4Yn+BTfBZW5/pzfIEv
8VVYXeyv8Q2+xXdhdbS/xw/4ET+F1d3+Gb/gV/wWVqf7d/yBP/FXWF3vv/EP
RkRKQ6Q64I1oQjNaItUNb0Ub2tERqc54J7rQjZ5Idcl70Yd+DESqYz6IIQxj
ZKS656NgVIyG0SPVSR8DY2IsjB2prvo4GBfjYfxIddgnwISYCBNHqts+CSbF
ZJg8Up33KTAlpsLUfy311zSYFtNh+r+W/msGzIiZMPNfy/w1C2bFbJj9r2X/
mgNzYi7M/ddyf82DeTEf5v9r+b8WwIJYCAv/tcJfi2BRLIbF/1rxryWwJJbC
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
       "], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwUWXk4lG8XtmXf9z1b9t0YY2bM3DPTIioqCqWQNpVkKdmSKFFZk4QkWeJn
q9AmpE2WkiJUElIhoQjV935/uY7nvM/7Ps85516u0fQ5uGEnDxcXl6scF9f/
/x5RcKEF81ljkwzs6lZZY2iKLT/cTcXf+nNmx/UtoevLl/FjzA4pk748GWlk
7LT09Thco4cn436vUkUsMewtO6300hxTo2HrpuapqOhdTDZ1ocHCjSNYZ2MI
6pujg/uk6dC48Wpt+rwOYvVPzewpomM9d0hX1bAu/m0OnGnUo6NdMeLWnWI6
vh3vz61eBNLKjc/u5bYCS1D8gdQxFtwT/ttXf8Ma5E+zi3J8LIzuI2WI3LKB
wbEpibVUICNMnJ/6igZ+Eu/V2n1aSOgWXEceMkD6tyNJJc9UQPkQ9sjZzArn
dH8IXG5ShdFdzcciuhYYpJa13XmmDIt3MhafvSzQethAcSLUHDevbBtiWwDH
B4yGNimZoUzc+mhZMhODX04YVlwyxs42y9WyyjTEP/rNvyneEB9WhA87BVBw
Jid1Ij+LAqfj3gvFj8zQeTthje5JW4h1Bmi79mmhXCCddmo3HTlOhXuvimtj
wif5MofORMrSLO4Ba11o3JQ9/e4wYFszbMoJMADcb6174mUH1SXN01Xa8rgZ
U/pexZSGhPYo+9AZWdSpCB2pPESBqqh98bIOFaTVmQ28CqBhU3G4SZy8KYTf
nn14bTkDygUhyuqdarjHOtf39TMVLn29jna3ldGXTmmJMgboUVcSn21ciuYI
iVk5Ozr0H//cOFkNKMSNOjP1aHhBPWLmZM7CNu1DiXpXGUjv/CUz0gT4Sap1
PSDZASJOpF6ibns8In89vcLGqf3eD9eGWqHmjuGarU8BNusQh0/bBJLyCy1b
TrJx903G2bYkazxrdxGoFWPhxvTWb+3OZqjxqWp6yWBj6I8st8tdW9wb/lj0
XoUN7qDc777ylvi2glTV5c3G7WO75UMFLfGe/2zTjSo2+D2+bpx8ZQONWNdj
Shw25PNldn9NJ0M1o1iisoCFo6n3JBlNNHQ3cmT4yCxI+VGyHy61xkvJnQ7D
cywcgUv23ngyZt+bf6i9AXQFb9Vm6TCRe2Llse5aFkbcFCynntFQ5RGXmf6T
ieTntxzaApg4/doxzV2cBaPnwZ828zOQB88Zrp8qWB89d9hUShel8z/Xtmpo
wj3RlpHvow3Td/2efTm6yE51Uxft0EQdR/R84nI5nL1nUFV6zRihHoOu+puk
YPhQLTnX1ApfbZ005J/I4p/rdqV+CRv4BFcyw1pUkLWgLkl+bIqB5A7eq3fF
kaF+LjBzHQnxsTP9sjFSWNkcPZ1cYIrY+h+GPl3SmBXK2BrlS8bT49UFV15K
oc13/YP/WBYoLnX77PlIEwV9u79fe6OHnj/7rF21pPD52zTffgVruHRJ/YyI
V4U+S+7aD3cD7BGLPrJGWxQV55pXysqSiLjv2vKHRB+2bT3pbWiC7ni9kBs5
hhg64x/j1gUI1LCs9xy3wj3aw2vHfFioVxkN/XvDFL33z3KV+LIQxzs6fSfe
HIsi02LcNSyEbNI0vXlFD9VWvU08ZMDh3aEXCvpGmDSysLivzMITzztzHW0W
iClJ+RCRYIddO5rMZA9ZQPHtZm/+EhYevxEtLWHrgit7cUWRhB36/vIFtQsZ
4E25vI71NVvoVs+6cfJN4HTD6bn9EBllh7Prsu+YYUqli6rwlYEFx39unzUN
EHR9gaRynIYsHtId8ZPamL8TC7czVLyQ3syVW2yCvz4bF2IOkrCY63DY+JAe
zFfvL8lWtYZXa3n+fWUbtDZ8ehNob4Zlpdrr03JtkLe8edQpwBwLddwDx1pt
IBUvaXiyisCbsgIpdSI/fdfXF36uFnjnusF1x2lb7OrTXRUWo47RFQKluU8o
6HpwOdFpTh0+vd2ifBkUtJbyH+U5qgpxkl2d4RYKGD7Hbz26rYZFe4ua+hI6
hKc/f7nmqg7TWycoLyXoePxZtXrVVzWkHEqvz1axA/NsTeA3Cw1IGA7VXRm1
Q2Vh7r3MVRpwYKR57NUBLLLOu+kJaYPLl3yELxzwmT13zJKIcwom5U0mgPZ3
Kiu6v+ig+pPx8/g7gP22MAlBYR2kbn27Qc6Nhdz12r9znhtCNkbu9bUKFvJf
5HUY3DAE3ehFqN5HFlqpX76fsjTG616f+ybdLLz+p3KiINUI704qlervYMD5
k9+78EQh/F3n83PqPwYCPgbwPPoqhITf4Qlhu+wgqf3IV86aH4yCOMbRSTtM
Jl4ftPbnh1QFafvyKiool99dYE/yIDJ21ESNjwovzsiCqwwvpi5l7k8l+ClU
pOL6JFsQr0IsJbcyaBgYHT3i/WcJjF/fontbkiErVOV9CbL4yt/3V3EnGdVl
g+I7/8hiIZD/9g+ODc7YvKZtfCOL5Mq5pIpJMnqsDpmHbJTFIj1EvWQ5DYWf
rVYJ3zJH6H1+6b4iGjQ9dTariVng++tzYZIrqShi+n0+sNocz1NSOBYNVNQU
vbmifMwcXvzvztenMeC3unb+S4QsXl1XvxY0zkBU31x1SbYsLsrGDwQ1MnEy
T6XlN7c8/Ja93R5ygolCT97HAjsV4PVONyNKjoYZvtq+Jfuksf/FviuT66hQ
HRG7Qf8nBfJyOapBrS2BG02etx5KQvKSoZBVBBG7VIRuuy+Be2/Kyg0JPLb8
/ilbdZkCRp/rXSh7BlCS9gRf1pNH7Y6wmxK2LLwZMcwN6VdE7n+ZI/c8WOhd
YdsmuVQZk6E6Uc+20VB7MOJhWTtAKtxh1J9JByt5VeNMEwux1Mya+HEa3H8c
r40YZEG5WXC/4jk6HDPtt7f7sZHoICuTZUiDSpIkoyWejfzauDgPChUJ4ctN
6yrZiEmQbd4YQsWI+TZtWhYbeetuXnr1mrjPK4FHtxCx4GLF9xINYL6FHefR
yIL12KEoezFAUln0+OW3LFjdU47irWFC/UlGnAgPG+/PH9H3TmRCo77r9zkK
G8FmbbcFCFzRs/Q5qbCejStvLg1+0rHD+0u+W55vYEPSPKZARp6BiTTFXBuC
p9Y43ImeUmfghd4zA7VNbCgIGdz+58/BB5We7I4AEk7KrfmucZwD+xGD8BRe
EjoPZu8mEeszg+c+Bb21BHmx77p1MAdfEz00t623gu/PRa1//oDrVs497bX6
YK/+e1R8ENALdEpPuqkP8ZqHTzPPE7H+vtOJj/QxEnPi7YAQC041VwYlSAYI
zWukvadyUJvzoKBfzwZGRyQG8jgczFNlf8uRbRBYmfnAjcRBsdU+Ps9tZAgq
ZcRvO8ZBWcMeR8Y+Mpznzpp7lQCDsTWPrDIJYbDvV0QFPwvJXctOerJNoFu4
yyp8NQt5DwIuF3sYoS5mUWZoCwtfVWu5+byMUH7+o/3pvWwsnLoyl/aUhl/V
F86WEnogK0FrVkGADlUb72fX7rBRNLd+fs0aGnyKjBp8X7JBr44y87xDg7fF
oi/7NRsb0ruWKtda4OZyjQx2Khurpf9Li19pgWlyQvmWPWzUKyc3pZ4xg+j2
PfdGiDj1H75aaZqhdFmccekrNiKj95ZdI+YvRkk/ao8QB1/cDlskDplDOm7F
A9pDok6P1XeueG+G22bBr8hEvtgB+d9+jmaw6hNwGgjnwOu/n/7DahRkFQTl
aFpysC+8olJ0jgIE7Gad2cDBryKTk6/5bJFQkuApT9TPLylbzM/EFk0ZR0za
BtgYM86KEXS3xt9tN6VX17IRZ5P4+KEVGR5lm6T5p9hYp+3wtrSW4GMtzqsw
MQ6s0z6+9SOT8UQu2LX6NQvnCmWpcQt26HWJOWg+xUJBwJr/HHQZePBstYT4
LAtbhTl27ON2yLylFovVxHlEb2c997TD/M9jDbp7WJB2Vun2/03CNpn93L2n
WFjmQI/9RfB1R079DY1VLIQ6Lim92GCFv5LsbXqOLAgV5FrWrbSCrUqh5RUB
NvpeUD/ZPbBBmssjEycyGxC18xHvswFvep25TBEbX5wulE8pW0Pju1QlXxwb
BSn/Wu8SPiI0KsJxhuCDU12BIruYwLMXhe+/a7PQpMfaJLMX6LBaFcc1ClgJ
xP5KIXhlIrT7gcIPgOoew+jZR+jQ/YtrfLzYGF7vsMtYkA6VPppR8hE2wvS+
N++tI3D1ycEzQwROqJfeePz3DA3SplzHIvLYmAs90v3mHQ1zySyDC3KEPnNO
dSosAwLTGDeVOpgIV7ggt6wO4A7AqhfcQNg4b88XH6BfNPliniYwx2y1aiwG
gnKG7iCOhRezSvPaHgys5coeX2hggeoYo/Gtj4HH1y2OXdFkwfFQbJGEExNr
Sp8PrN1B4GVAe93GNCbujT/8/adTHqtOe0j+clmGifR5/moZechdfHDo9lYd
TOx3URAKVsKfetGvP+S0kb1HXWZljAKO6xaaN2nr4L2k7cPvbloIaFn2NGWF
BurXzruHWWpCvv1zhluJOjQMB7KYc6rYnfF5L99dTQy9jNiYt20pukodZzrW
aeDSnvHEPZ/1MMAjtKh6SRUbLZ5kLHLrE/w9t3vbWRV0KYq+ztcxgHSC2Jf0
zSpwW9Yu0+hsgJkHzBP3ritDX+FqSpmcKAzXPf2nNGaM5OGdfmNdIuj//cRR
XIrQ7y/3/NFgCeKSYk7mOSEz5DHPstefFkGOpcFNmZWmyONJEv3FI4CGyVkW
9z4rOG/ZWVPaJII64ZvP1r+xwkDUxJtudX4cS5UkWU1aguvxRqpHlDD6kptX
7MyxxHIpLbn+j5JI4u1tqaunQCNjWbDqF3GkVnxZ4ulCQbNhzMGeWUmQ3i3i
+kZbGG/q42zWloabnOl/nRtsoRWZ2Bz8XRWmZ6zLjn81xMzyH2Q3KzVcSwhJ
h6Ih+Mpd3u+OU8KauQMJOVpGYLx8eKy3QgkF30SXtroYY+6Aq8gqaW6s+Pi5
RnY3CRSjkN6MX9zo3Wr1fMbGGpJzV6K7D/Nh4HLNF1tDazR8aegikf8wd64Q
nd8VRIL+qhWRl5OFIE99trO4yhiC/e3ho2H86O31P+cRaQL74dT4ezpC0LN4
MTY8aYTMO55nTZn88I9MfxLBMUFl19s0R1ERhPtnhr9rocD+6u6KZQ3CqPhd
eX2Tii0m5TffeuophHLtE658ERRQzk+E05eJwSHceYXsYVtQIsvPr3IXRpEb
N6PgqgUobzjvlN8LwLj8+ed3XebA4faBBitRcPXQ4pSGLJDsuHza1Y4fEofi
+JcutUBK0oTSJ4Y2Vr2e6H4voYU3f/6F7onXxpS12+DDO5pIvX8rmF2ghW1y
uqYpx7VhLV47rPNQG2cl83dSTbXh1fHQ406AMBhGkvtX/CQjr87CbG+dEC5x
VPbZHyH45e1/F+w3LcH7ctqLLd1kuKU4N1nR+dHfylK6yrLB/hXfZawU1KCt
+dH+H0MHZ754v658r45Tcu2Ra/9qw6f09ZWRGDXYJKtd1KYtg3G+8MWtZ5Wx
iSdKIJy5DMm/pMadh/8xD4//e9FWa42npS4vE/ZxwYWcvEFA2BqV3HfVbz1c
YKLP6VXLEAko5Tltf+gP0+6acF12pzX07ZNt7y2TRXx3aF4EyxD6I/dsou5L
4lH8wFXadQO0kv5VHzSVwp7nH1MllxnBOLz/gr+KFJZ23wgxrDDEKa6ePlsZ
wkcVRHY/4mMh2HQ+ffMTPUieXpW0m0nopla5orldesi04K68ys3C+/rHK1aW
6OGrHffpG5tYqI4Mf/fkFAk3SubW0O3YWGQoZ5C/k6DS4bdugyEbN3Zl7PLo
JcGg/uNpzScs5ATdrr4QZo1HgvcLv71kgdxh3HySSfj+bbm3fK+zcLj3cObJ
YmN0hcj29wmzEZX0WHIm1xSCfSuLRqdZKFwlxzA9bII1Jy/LrjBiw/g2Zcj+
hTm40o8/mPdho+5lUmytJeG3fCaNLwcRvJu48eIVB3NMjE6L6J1iQz/X0+/h
azNEaNAPZiWy0WB0T8TcQgfnRjt0zggAZgnV76xWaqPCYv0aYzdCR26UFKir
0sGV/P7kY9eBgzk2iGvSBuPVWxWhRkAnQTf9VqABNiy4XNr/hfCDvKeDzhQb
4FNosnFkJwvmmYnWRqX60OHtfLW6nYWKHeaBx5r0MdDB8Bj4zELl8+2f/C9Z
oqyVtMFZnY4h9hp2crgVYnV25IWH09FmJ7EkNNESc1Z3db+vs4Ox0lFdy3lL
3DwprzlKtsPQgFbJIUtLBG/xvTEZy8Yj+a9nRRssEPxL3Jdewca79hDtva+J
fHudl4/CifsxfrH7fjwRW1QFHLjNhue1lIiLyjoQS+I6ZlnKgMp2lWTtZdrI
iLi5rtSMgZc79K9U/NFC2xqP+NJ7djCSPqC8hkHM0xbHksb/7JDnsLZ+uaEu
zszajNz2tsXn0Zs376/VxbdbkuEJYxTsPaCVNjNtAA3rbUuZcbYI/E8gwSpX
H826WopvfSiIl9k9/rDTGPbBlb1XCXziG15jcdrNBM8Ec9IeuZJAPnlaMyTP
FEVishdsDcjgc/G2lHhtipvhD6OL20iwoXCvShQ0h/31s+s8ogFFvkoLqfvm
iPoWlrOvnPB5Il/sK2wsELRlm12yE1ATp7zOXcAcV26b64XqAbvf83haSemh
9bCX0FoVOiL1mnDnsh4m7CozLL4QsfPnZTxNBvD5kP/dQ8gOU7MFT+We6WMs
hTTHnWKHhO2CiXPqGhAUa/56L5+KdS6FIUUkDfReUN3a4U4j+vKTpEmoOlIj
Fsrbxegoq1B45XN7KR5I02t76HQEqUyeoRuao/AFqVG4zQoOJffe2v80g8jK
bslfVZZoEraWzjhgCqNXNdb2hL7UiXx+2PCRKfrDIqPfmlkitfTzqVQvXeh9
9iy2AAnlTo177c110XHJdHTKxQoGvnpNAUU6UHV3XHbysxXkO60O//m6DApv
ZMrzCT1fPnh208B6Mijq9bsWa03h9os21byFDBNTxTb7XabQ+Kbygu8CGb5/
Grx9iTnM3HmkYyiQjPWkRaG3283gtlbymd4BG1SkqBYciDCHXopk7qlEGzTH
ceztZ8xRl7d8qu4fgasKnZE6hJ6t6wzKkv1IRuCDLfW86eYoXuGcXTZrg56g
n0o/j1oi7PrWxzuO2iBUedfeDQlEn3oFidQetoF9k32OgZQlBCVkIkHoujN3
Lci9RpaQyHXlGkkhQ+JLBNOUuIFDHbJ3ddhkrPpxdvnAegucVt8XWOxLxjG7
iNV+RyxwJfzhx78vyfD03DSi3WKB7NUZDo5Btvjq/b7EyVcZ1ZxHhlJvbNF8
tIXpX6SMkT1Fxd4nbCGKv/3NT1TgUbhEOfMioZutq6mRo0qQvf3o80grBYUD
KzOrFVXgXJTGlUChYJ1W123yGxXc/Nv9hnSZAq/02kdl25VxLPbYrtOnKcin
dp3gtlVB8UrVU7m/bfCGv/Vi/iMFPDTyw6gIBaEfDCor3RSR7nf5vEEgBemv
k3btO6qApyvO3aldTuwnkChrR1LAna92pwQJ3Zs8fGCj4gUlxLeE018NEPdV
dbLrX5MSsuu3jf3+boP3Q36CemlKULlYfcU4zQbRwveC9zgoI0vl9x6eGjoi
ko2cLKjKuLhfV9PzHx1v9NcWH7qhhD0bwuf8SHaYDPe0XlathF9NWevLB+g4
XCqXeOuXIvxuSUkb19PAM1MRvSNeCfUOtm1agzS0Z+7RmLZSRpq3a1rnMjp0
mlt0YwSU8bgnHbGjNMQ7UWji4UqYWmogduqpHTZtP3LQoUAVc38ZTXtS7eA2
8cOsZlQV81qK16l5dogv4cr781AFhdXxw84udrDvVmV6hasiU/zNgYokBm7e
bHhGkSDyN0a27O5moLyZd8lTRzXkfhqbH2pgQNnAY+F9rSpiDw14ZMYxID1G
febcowr6K+vr9o7AOqFVA4vqmnBZFL3lFAR82RP0Na5Gk7jfBD6lWMBha9j8
VIkmLt2Wq2cQuv/It3P66gKauD96T2PyPaA8ORXH/10D6ZUBEWYfCR9xyiGP
Ha4Jw5QN06fmgJIZ29VufZqgdos3ZhH+4XrzDvfkeE0cdfvY157DwtDyLtEE
WR3Mz58fYxPx7wNprpoV2sh59XTM6hwL+q58vEPR2gi44XQhJ5eFy+vI+65x
dOD80jLoFouF7OAoPfYmLfjTRu6c2sBCWbSZyfb7WpgJdbBeJHi880yU8X+N
Wlj+T3ELbSMLxuxz1vaq2qiTbU/oJnj4dUjDS91sQwTeNbzadYPwb61BSgpr
jbA8hfNn5gULA4057XavDaHV6rzG4BsL4QI/unqPGaLp0T/Xn65sBLyn9302
MMLRwzMX4gPY0FFcq6+RYAi92Zd83kzCT2qpsN12G2Hsn13eWjU2gY9fsz7k
GiGypD3kXg4bSWHy7xhGJmgp0AiOTPo/7+vct2KZQFqN1aB3muAtkz6uzUkm
mHeI7/hWyYb2i8vRH1eYINp2uGjXOYLHH3zlv3/KGCt15X4MRbPBdzB+8+81
xpD/mbGhYDsbLWpO15d9INbV9qVdJnhRUrP9q0WvEXa9aOlqC2Qg/unNnisr
uGF5O2f0gRgTAxrnP27cxA3DTap2QXQmvHIo7okGf5iDJqueryhnQDG7Y3UP
ichXWXtn9DATiu+vLO7P5MaxueyB0xuZqHyYvpvvzF9mdLZIV9wFJuoO9NoW
jnAjfyPvAP8/4vkW38aIJC4MzG+PznG0A1dLwWbXwV/MM5IPvbkv2sHZuXW6
SmuWuX9NRzfZh4iXDHpTH/1iFhvom25zt8OAf7EO4ol8V9lvW7kYiM7kP+/e
P8ucN9jleGwLA1yS/y5JZfxk+sUJuVQqM5Bc2Wm71WeOuS9xfyi/OwOSYR/e
1e/6zZzilUj0dafC/MG3fsa3KWZ98uadidVUeBkrs1esGGP+2dheUu9Ahcbr
wK7PZ8eYl/uUbkQFE+vd/y7p9I8xY0JPad7dYouGiMCjug8mmJS9dy+Srtki
72PyGRGlCeareUWlj4TPyZO2yKhym2SGpKvelY6wJeq2Un08+DuTxtrdNyFP
8KTnfdWS2D/M2sCkrU2Eb858rLx11pYL00OvZj3yaKictfvEiVlkJvcrWGRu
p6GhUtOnIOIf86qYYR99iAquFVONrKx55q2g4rsq52kI8D5g+++/OWZL2fgq
a0sif1d2W8XzWeaSmOo8RRcaEM/XeY0yx5TQsJk67WYNxazgIS8ZCey/4Vy0
SCN8E3d31MxZCUwGv952ldDhko5fnUbWSKItbqXzYbI15tbkuz6pEQdHmLS3
0dsadQ3iRhIzkuhcN2Pz+KQ18sjS3bQBSaSmr9F6l22Nrqw1r45MS2I0+Flc
rqc1fHtPHRg4KIVgf+XmEYIfA1rHrwU4SUI/qXTtmUdkVGoq//i1VQreiWM3
12SQkS55RKitWwqX4mI3Rx4m455i/tjUQWkoJhw2X9hHRmib8bNkBQmEy9pe
+qpChupt50a6jRTUq5LLWnTIqHPafh1bJLGW0+Eeso6MZL9/BjuzJcESidz1
eJGKK6ExyWaJFlByW/TdmUyDxQbvo3cNCD/GGHgWpEVDylb9BwUpFqA13noY
Y0eD0Xu7o+PlFvgR1d44+o8GvhWPqvsnLPD3I4zOX6Bh5J990HcZS/QMThzW
VaLDQsfV6Mo3CzS11GxvF6bDfjFTyP2WBQ7uSi/KbrHF1BnHi51XzXEvLGU7
+70tJvy4rNyFLeC+57o4/01bXKRuyU9KIfRDkrDXhrO2GPv9YndBjDmKTpum
pKZQcUZybK/GOguMB5Lj9vpRIWboN/vF2AK3/77tnj5CRWu4hkZSrzkKPrwN
obhQETWrfFBxlQWGbwk2Z/xk4N7ZfNlN8ZLQklr31vo9A3kUNzWjKgmUPW2I
ZWYzsEf1EUcxVQIjI157h7YxsN+n0KedSxKxet62P54yMSdzTAuOEijfMSPn
GsWEc+vjE41nxPFCllSyLp+J0aSSNzkJErhTuK70RQ8xr0mFp9TUJUDpcSh6
sgZoddU9J/hHCr/KPMOGfAEuDfYmNYY0BjtL79NMAdWDPWZ7LkrB8o/Ex0tq
gLni1ub/II2km1cOZugAEGL1bt8hi/XD2qm+UoQvKeK20siSgatmht7VNiaa
y/ezL+yVgfKKbRwJYr9tpI7FC9Fy0HDS9xH7TUUADnrd7xeB0exHSusRGtwO
fMvQeCCCdfHXixPX0CD4eFq2c1gMYS6nnJttiXnyt/k+bSCCmPK12l5fiHkO
GnVyyxfGWq+fv2wXCd9vXW1s4ieCu529q0GjosfkQ2twmxCk3jc1/Lahwp72
X+FEkAj+GPDp7JAg8k3qIw/wCkGpe2FS1d4WPZnnNv8Q5Qc9b2H3bn9bSFrM
nuRN4IeO/PR2yigFyczcThtjQUTtcw4u6KAQfmqqpbiMD5aRO4ey8ilwLjG1
YVXyIVNt1w3/RxTMuR5WUPmPeP7xVNy3H0T8umtwkzAfHLZLNOn7snDGXt78
nqAMvvza5XslmoX+o+TEixMycI7tKHWMJHyaunuXaK40nkiq1/05yYJXrON3
dREZ1I020jX1WfA9fiFT760UBv9ItgZqsTB6dSBNUVcaOnIJYksFWEjPcRm+
/1MSIhcGouSlWJCMritI3imF+/Y1PWu7Wci49S/Y7Zgc9rrd/x7TSnwP3+qi
+6vkUO4VsVq6goWaLx/rjqvI49ygl8f1KhbySm7YPZaUw98cEZbQJOHDeUKs
82uJ9dLVnzs/sbDL+Vrcl1AF+F/xkr61hI1RtfHTnPcKWGz+wq4aZ4HCodS8
+6sA6bpTI2e4aJDtey/ynxkLTZdXkQ2NiPr3xBoYKLMQ27l3ZaAbDfRbcaT7
PCz8mIl8TLpJQ9XDI5/eCLGw/r+AkIpYOnJ3BU9qOBF+P+FG+AFeO4Q/frZe
2ZLw256O4du/0iErnjAX68BGicIPnf8q6RjJCwtKXceG6sZXZ/9OEe97t0hW
DGRjk8XC4xgC/8u0d62qIPzqaLBJFWOSRpzzP4ufEWwUDT49cimDhpqohK3h
R9hI6/qd/ieIjtUq21xcNDmICjkqnD5Hh/etI2kH3Tkwz7h0JuE6HRkdoRfq
13PgGPWHyXhFx5T7BuuZlcR61hENQTYNyu2Bb19QOVi4JL1CO5KGsYMKppor
OFBt2rmBRif4R41/ja0xEQ8dyhqxoWFR79ZtcWK9V2fL0PMqWyjOzbOq/DmQ
9sv6Gv3bFp8sJxc2JHHw4aDUofB3tti/tGpz7QEORookcsMsqCicCEvLTeQg
fnwmpk6Mil13js/HuHDAklunfN6MimIe47XSGziI7eIbblxPha7QwsrnThzk
mzaiI56KssRNDrUhHMixuquvEvzssyWIdUOWAy3aBGV/JxXinZY/6onzK5c9
lZCqouJSsbhDEBELqfzX8988FQzDwCsfdnFgs5dm1F8I9ASLuXuy2Zi4UCBd
Q+CRopnf/qXL2RiczbSYSwY6S06bRi9lw+P3emHhM0B9esnzWrChZJyzwAkH
5s/6C6v5spGbckvHg9DPmd+kHl08xIZo5XNzbwZQ6as34ETosEFVxl/3MCD9
6u1hLqIfolaatVvzAufCHvk0ZbBBTSZZ/HjMxL2dloYzkYROW/h6WN8KEFBs
j9K8yMbTAL39KWxAt3H85Nk7bIwIidwmFTIxX7bD7MZbon90qvc+FwBinLYt
nObhoPNvrRovEec5XV9qMs2Gw+dLOW7SACVB9cnINzbmYzWWOv6wQ2b93dpJ
aeK+Gzx7Mors0HE8bfe7r2w856rP2+tlh8rOY4Ybhtj460TZkPPCDksm1Fv4
iP1Vf+yJJp+wg/yW5i/lYsT9V7o9XS5ghzCZ/XXzE2yUr79TIEW3Q5dZyk2q
Igfnprs7mwk/Jbs25nQ3HwfVj7MVT9EZEJSLHbv3lI3mtB1bbO8zYNJJeSVE
vN+aa9+OrEQG/Bm8w1F5bLzeuvvfr9OEnlvZel1diNiPvMzxvzYG+n/+Ir0i
4g6Dk5z6qww0X629gCk2zPReTHG5MTAu/m9jizAHH8mJAtkhDMwLWK1qnGFD
q1y7qewJ0Vf5UWWWMtYwEn+2WbuamKNc3dO+JSRQqWnr7Yk46xN3jI2hNXp7
/BKfyC7Hni8/1g/cJaGPMrNGo4yD7y8chUPOkuDwxE/scQkHxaRpyvoqEp6S
dxhHiS/HQnADz9QPK1AE0rd/N1qOV6tk7jXqk0BfUaTJ1cfBkr+T3D+8LMHX
1Lols5YD5oax+weOW0L4ErfQwwUO1E71zkkmW+JLj4nlgXIOzjTbjRh9tMSd
Vb7tay5z4C8YXtL4nxVe03i8+e5wYNlV41E4Zoko6J1we82BgUx+0vIDVvhM
rb6mO0/MxULS2jGGFbYcb91JXBfG1pR7HRxfhj/BfsGqfoB+i+AlpbJl+GWY
2t18HPj24AXPxaxlONlp9k2Q4NvtyYd9xvfrYo/Qu+JEBRZUA3p4h0/qoih/
P393JjD6evz4icN60Fu9nblI4Gb195333Si6OLSFLqMtQuD3+bOR0x66UK81
etBHzBP7tuTE3zxdNPQVdtvUAmkp9Lvxp3Uha5nld4WYv3de3yi5m3QhnZ2r
k+0DHCy51Xbhty4uuX3dFivLwmZh+sWs7Xo4OOHNphN+86CQxpfCRD0ophyY
WbWZhXMP0oyPuOihTlrWeLkfC5NbZFjjonpgH+gxPtnNAWfQwXh9tQ182m/f
6rjLQbM0fZjCQ8Gi+v7xS3s4wMl/v/l7bRBqfjq5K5+Ddv1vCh0DNpAUCdp3
1J6DI0dDOofkKBiuyfqWUETgXP1SO09hCn5pXyqpIPrrw2ItJ/K2DYzSLrxv
aOZA84MR7RSR3x7nY0Gr52Dnti4+iyNkUN1OHjMicJNX0GjwzkcyJOR+ixwn
cPNmu6/thwEyHCOMrV6cJepHOvaz+g4ZpO4w0aVE/+0sXaM8KWODzcqyp4w1
l0P4hln+SkI3z1xP5b82SfQP5QX91l8yCtrN6XxE/S26uulWfWTs0vjqxdkO
TFW8lg79awTSV/bbS9uA3uSYFVGuRtBs/3He8hSw1Szjdfe4IXz3rzx9rI+w
D9vMyZXDhrg3t1k/8Q/xvDz9VvK0EQ74fzj68C2BpxqxbUc8jeEu0XvhwioW
ehMvBR00NcY9sehAm79A9uVIvkODxqjxPOn4/QILgyOzy6FmgB4zzin5Eyzk
XJ1te+liAMrDdtX5Ryw4al1T2ZBmANNlJ9arfgQClhyMu+RuiJfPlseq6BH9
tVpimP7SAHtFKtQUn7EQfeKKzE4PA8wF5PPfz2ChrWVJFLIM4Hj9sH9jOAvd
qtPLQ1gG6BrqHBAvY6P1+TOpHbfp8PnCH2N3mY3G1ENCBoN0SG7MGkwicFP8
b9lv8Tw6Qnd8qS2tInB/hpZeMU5H/RI5yWFxDjyqu66vNiNwtGpfu908wRMf
SIyulXZwUdDQVj3PRnh3oPHSP3T0/MickyIAfGTwjp6GpB30C9q14cVBamyM
75k2Gob/MLatWs2BfXrMt0XCN2R5a19eJHiNzjekEC5Jx8ob6+439LGRIVns
uWhN7BfdnX6Zn4OmDeUyzj103FM4lLrvOhtBEyubFQhd0jL028aZw4H7IYd5
7lw61LP4n90ieFWHmfGZ3EwH6fix6M0WHLzl5vlP/4AFFIpCLvN7c1CnHaPR
GG2BqLaiBP9FNh5cs99dnWMB2Uzj1i0f2BhSE/h0otUCJ0dGxv4j4jusps8+
hL/I23aGP6GCjR2VL54H3DDHoErJqaH9bGxIyn+996c5TNfsX7lUgAO3QAfN
Q0oWOKAchN5QNg6+KWrarm2CsyVDS3N92FB7OPP+BsMEh+e+sX6fZePKt6BQ
fUcTcNFjTAo72dBu9zRcEW0CcpXYp3UED6Yuvruk2WWCdF+VyQ0BhK46I/hg
i70xSFuTrO4R37MpYXqJjBPRf7WtE48InRV7L0Qz77gxCpqbtR0iOHAddKcF
nTZH9q4yAU1wEPO7VvmDqTnMHmS/+0HUI9VQpVFriTmW34yP6QngEL71zoSY
ojmm3828NSV4Rf/Sv6gndHOc9KuhS2hzYDxUupEtaY67EbyNktEED6uNKufm
mIPMmAq2J+ItaWvXuBw0x+xibqo40S9eX4a4PhwxAXVyyU6dR2wcrU7lGV0w
wd5nSrw2xPdUhKYfXMs0xfnHv7jJywg+OnO6X0zIFHrPXGo21xC64aHj483i
JojNsvTsV+dg9krMZvmrxqDVjfEcIHReoQJXZhexf7YYfdVmCQ7yHIJOFbwy
RlglKXaawKdZGea8/GMK7j94Y1dP8E2CmXYax4iC8T8eFs+JmETdJKr30wbt
ii1mzQT+BPoNvx4m8C+Q/8grTUJHzaqkfHettUWOxkTR2XMchDxIzM79TcGM
fZfXCV/ifk3kW7ak2UJBJuB0KnGep+9N1jqV2YK/3Cjv4XkO9ki9W/3OzRbl
g/xWYo0cTG3g0je/ZQtGnunXzv848GxuqrrYaouaMIsX0j4cFGymJVzxs4Xr
Uv+JhmEOvnne+HaI2D879cW7dZUEH7bU1b+Wp4L1sV/3fRcHfnu7Voik26J7
KbOr9SkH3PJerWVLCB16gdqhRuhakcBQ7sebrfEkbCz1PjFPNcJVvt6FJPzq
j/MfO8jB3shvFV/rSfBizIW+DeLAd8fW/OwREkS17bLLXrJR4Fw740kho6Hn
8KTkOzYY6kPyzz5bYyDnQ23xbzbOv7/YVt1sjULpQj8ZJQ6W/VD5GOlAxi9a
WJWDCAcPHz1r3Mqxgeq1IAenBA4OL2NU+yaRQXf0XLO1iY2zv70iWqbJUNko
t7OWmM8qO/accgUZng+7Os8R9WD0pvDbaBL4vmDsLbOPA/5Djv8t3LPGU+ex
84VEfxU4lu5k55ExuiEzkxbDga7LZsvSYWvEHzZfv1uOjX6f33f8LZjwi5Ws
GGpjYVvk8Cs+KSYWNQ6wdBTY2D0YodmhxsRLa2mZlxZsnFux4l++IhNTtSOb
vtkTOnZNG+OYDxMfBs7tTVVlo7u7vmRVGBM+L1MiLrmyQUl8dl1zBxM15A97
joywUD4feHCpBhN3hVVOeu1iI+F2xwfPIwzspiVu+2lK6NIRd5PIvQwUblmw
m55lIbhy4Dd1CwPK03Lxe8TYME8o2HjImoHR0G9PQwhdXeaj3Wz0xQ7JrU2v
+QmduN+X1FtJY4Dj3/2SmsXGl96X4t1/7DCfMku+TuBFT/uOT1FbGaB67P85
ZchCVfiHkqf//922OjSfks6C5e6aDbQ2EqFnE3e017Mg47GXa/c4Cbedrh/y
ymVBdmd47lF/a3RqH50ZbWahr+CdnPNRK7iGJQ2pEPx1+/XZlHt5Vpgtb95y
KpEFfoNjbkLNVgjt3a9xZpSFrUtS7dJzrTCWG1x1LZgFv6mVrmdFrHA7vU49
/zILngaN/1ZLWuHcPu32nwR/Ms6VKJkTRiD9tFPeAqG3RNJGPB6cs0KSkH/H
MScWEkyX/P6zzRIPHG9ZNp5hoad2v3WauyW2nlEe1SKzECnW/U4y3hL648Zn
PIJYkOCjrlQi9GbgC+GVz18Tfv98Qf/rHRS4eUVc86GyMXyh817McQoG7L63
yHLYsCTXtTHHbfDqsN+hu8T9e9fLXJvnUHCPh11y8AQbC8yOd7xOBH4sGd0U
T9RLetfUXUkNCh4cNd5ge5KNq9+Olx6PpcBsUmflGmM21LvsowZqKODzWLsh
juC3vJxBPa3XJCRf/llJ6mDjx/Efnp1aJFSJK0X8GiV8xJLlq1RtCT1+sy53
rQbBh9TGi9tjSdDj8d/wjJeDgR36F6q3kLBStHvlxV9sOA7TcrtMSLjuKcHe
Xc9GPjmavWE1CW+nXil35LBxfdunP2kZJExnpaUdWcLC/H6dgJePAfqOIz+q
BYn7GHiX8P4+kPx3iUY58f9orjNV/pGA1un8oHvqLNSU3fEJvQGsyeVjMM+y
0BFp6773GaDBelk3k8zCRPeF3NPdQMFo0G4NQp/mO/W26QwC17ivymwIZOFQ
UqqqXz+Qe2RBfOAioYceuJJzCR86ZR+Zu3cLC0fTKk62jhI664jjy+xeYI4V
b756FpjxUbkTJM7CkwZ4kYQI3d31gvbBkYXtl+vpKc8BkYfUl3y3ie9WPPLI
t5rwfa9jZhvfEOfyWfF6awPx/gIHgQEjFsa2rl2hvUD43N8nnnmMEfM8tFFN
wpnQDzEdQba1bIR23hX9IEuHS0vc/OYLxLxxbq961UBDtJn0p52EvqB01bRP
h9Nxc9/Q5ahKNpb6Nld2H6Shwcf9ltogGwGBt+hF4nScnH5CepXKxkWhApuH
djT4P2jZ7CjHwdXqJxWxb2hQP02JdnxA6K3Fy5uZVjQkzzTtP074NtGsjHED
Hxp81MZj/foJfFBrHL9K7Kej4/81ncDTGfIDq5luGsadP9xt0Sf0V7uLb0sq
DQEeWzqX6XEgrv7f3DleOvDyZa7PJzbe2D9vVymj47lH8du7RP6zwp8HrUtp
CDUWSarUYkI/gO/XvnUs/Crd7bIpjQHju21HRYk+KEgKsNeaZiAix7XxOo2F
18pW/defMuBy+FRJLIkFBeOu/E/8QPgveY8WNjGXvaE3j+cxIX+iLzPIloWG
wACL2mkm8hqX79GyJ56P8zwjSeDiqc13M02IPpoJWqGleJuJMgnRtStygKrD
QhQBWyBFmXdBkajn4UPfadmWwLlXwizSC2De3atCKJGJgdv7BEMSgODLvA8V
3IDWmTtJneZEHxfxvz04xET3y7ULo78IHb+Ox63akbiGqz1btYj3PT532OsL
CzhDq/6WZMmC60Y69Qqhv6eqr95eIcHAmrxb6hsIv9S0zGxZlx8DVo9D8jsF
2Kgpmv2ae4sBnsyUFDqxQQ8nbEuQORP8d5927SfmuVVH6cVbGhPxA4V6llEs
3NSPXVn/i4GcE1vbGEw2Vh8Z3XTdkAnZIidYaLKh4Rm3c96fCfvbsd1/CTzT
3se3MraYicrfmiIXIlmQP/m9n08M4HUqzi8i6qBqopgy08+Ey9olCYVEHVZL
VNV7KQDOf8Wq+yksqMi9a/XmBdxzBRLns1kgfTz7coRJ+EDqwQe2u1lw399h
+FeZmNenzQ6WhJ8of7lc8hIZEKUUJiwqyyFtB2u79sIy2Ns5Xm7/KYOX4xlT
LqLLEOst6GohIYOUcon3TUt1sI7vlK36Kzls5omajs7VwczTj78/B0pj4xC/
d8FpbWSesGsQ6pNBwM6Dgj+dtOH7jFWTGycN/sqlR8+56UARRSE7mmVxl6Hq
x5TUxl/nkKJNCQo40lig7u6gjbAk7fKyaTlYTJPDys01YfrLpDCOTwl0Jv9/
Ml80cNOiLWF0vSLGgiv+Gdtqwt5+X7tfliw0yG3yovXayLp8I1+tWAFhcR1+
WRwi/n3q3J9LctCSrvQw5NbBr8By5908cnhDnVNUzdTCtzzzvX7jWhi4dGHs
XqwaEu4zi58MaaHBKVumbFwVpvsU/fXmNVGvUjd7UEwVXmW2pZ0vNNFaulFC
o1YFH1rfBiut1YLGH+oWlwQVKIxvLzgQogH5OjbP3F5VPJ2v8bfK0kDrUIGf
sqIy3EQ/wqpEExPyjE2+G5Qx9iBCZc1TJZyPuTBruF0DYStcyf8MVcD9yhr2
oVrINs7Tqd+tjCQdmfPntbTw+L7p46xvyvh5XEnRWV0DNbuDTpYaqMLZ4FT6
ZcZS/Doo+zb3kjqiH0Ll9iF1mB/ofPGlVx35Zcbfu++qYpfH6vapJHV0Gg1m
krPUQPMZKjjxQg/OjQrlW0sVIK8rO5lwQw88wQ7b92YrwmT9U3oZrz60vOuv
brusCBmNulW/JA3w5sfHtQspSqhz9dkZzWuAqM1NhZY3FfCEX321P0Ufb8b2
3u85pABHtzsfdj7Xh9+W95197QpY8OH6sC9EH/5+8Uly9grw53PR6NtgiKcn
BB/G3ZJHxVCatoaIIeL9vUmNw/KQ7fs2udLTEM3ZHj2H1RWw2ThL6Vm3AVY+
nbXviJbHxLuKNfFLjJCdI80lUi8P8ZuZJucjDTGftvI9IXKRYVVQNCduhMKt
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
j4uHmtnw1Vqek1toAOv+Eoe339jIvMiZ3yVpgIqqkqPFZDxfdfy3oEAfmxVf
a1wKYENrYEM5hWoE3RcBj/6eYIPtspsmLGyEm58LwnmL2Tiu3mvTPmCA1r7f
M68KSXvZ92LkzhkgPjeG0slji8ept7USYg1w+4/aV15ZWxxzFRQ5EKWPayKR
Rz04bGFQu9425bIBFOsiXnNI2SJrvOTqW5o+firprVcUYsLTuvH8K10uUDbi
u9YVJigKkZWKMgsEbSTV6txOJpJWly9PM/xLyObSLnpVMdHVZpT3sX2ayGtR
trlmT+4jF/MjNpXOE9G3B98nbSTIefbvfvf5BaJl2YGdHUEERKM7zQVn/hJq
yQMhDsEEmv68Hbt9eo646PnykOZVAmhbYLtdGiOierUH2nMIPHGN9Nuwe4yI
X2HrJ5BPYKxFsW4keYrQEE78sjGR3IfUPz/Y+mSEuHs/oJq5jokmnu8t8we4
cGLuopXJHybQ8nR5y/wCwfnRZsXDLCaCnnhHf3X8jzg2csQx4x/p/+R74lTE
NFFoLKD6L4FAvaOZ910nDui9O5eBYdK/qpYjGQszhFaWcZPl5//5u99IUf8f
ceOH3+3uMdIf5lvxT9ZzxEDKyfIHyQTcHgkXndoxSRxRrD774D0BX67Cr1YJ
E0TM65JvrFukvKJGfXXaFBEiOntFrpiASnJ3YZ/LBGFZ++O0/1MCKa63o4sU
uVDHIxq2XhgYu1kfrZQwT8j3Wugqk/biPLcV2HNzonZkc+EFIYCjIFRLlXuO
mPqgJk+Mk/ENhZf7vF8g7K3jZX2MyPxk1q+x2zxL1PLJ6zeokPm1a67hODpP
qH39kqyylqSvfqNxuUwRfffC7y6K2CApPbuY9/EYkbTpjqRtkA18m+oq1n/o
I/4WXHdnmJL7/X+OT6u/jxBNrWy7bQEk/+z0Pt7+LuJjxf5NL0ptwFFFv1Gg
PUhcvx1wueGzDaI4ZfwtX3UTJZWyTZ8//Q8f2nz4PtdLJEuq51J/kfyrpl3D
r3oJJjO3yt6MPM/y05ami4NEQ9W2e7fI/T0qf9n6jZe6iJzeK5Xid0jaw2Lq
tXIPEZAhfybkkg0q327+S+HpJW44fglP4iL1eYzj+SpmCT2+Ev0DDiR/ukWw
YeMvomBrb3WfP+mfns72HtMBgik6HePtQ8p/k3orx+gl5O++POcwZgNoS7G9
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
pWriMH+mo8i5jw6dm0/PhKkKQ+eJ7bvmRDrCqUTlDnVh7Nu9XlD0JB0DiwJS
VxOFoMsSVAvRpENR1/i9RqMoYiNDdKkedHQ1mSvJj4kgRke/Yy8XGc8G0d6D
P8Rx+t29ZflsOtycipUf2ovi3VWl3HvOdLJfRLxiL+eHm8mfgSjSn9bvQyYr
pvnQvdk6Z/w/MyTNP1lQkhXFydfc1wNtyfOSe87vO8SHH7cgZfzEDCX7fZuI
IFFkLoYOXakzg6xGdVrKojCyl9leUSsk71ugu6rxB2Ecd9RSW5g3w1heY2C4
kBBC5wL/KDaS9XZ+7nLiqyCI353VB8pJfc+HVn8mBOH8Ns7iZBtpP9ZvJlZc
CFpu720dp8wgOshSP/uJHzWfzvFzD5qhNXF9Iu8DMj8H3tma/CPv66F7fWuS
hTExLPnBrt0MXTj8JMdJDIM9Stkp2nSIGvMJqT8XgOs091XNcUtQ/k62j1ZT
kbiGyvfS3grS/HalVyyoWFRz/xQgZ4VnF6/VreiiwiaH1zudZoWUlGiD9ZpU
RLz+UFnrb4UsupTdzlgqmiWn3Js7Sb5t3JbsfgpoJjss3kZY4ZJe2HLVy1SI
crZaub+zguG6Sw9/u1Hxe/xlWRKfFRItXz95/40KAa4baTNkvw75E/OA6wfp
z5SHR9FnS8TP67z2Jmh4+JvP79R2KyQs/1DJVUrFr3suy48GWaHYv110/39U
aH5Zbnj0lhUI46rNHfepiNn/lLPUywpvn5W6reamwT1lq1JKqhX4vxRdb0uk
wnT26vvYKStY8Wy+PxFEw0nPH+v++VujQ/PArJ42Dfs9Rp+/57fG8gMnj86F
0bAQa/DMysMazvYbt9So0CBrLW56mZwnK0T17eiZNOhHKHgcfW4Ft9W/13Sv
p6G8LCPgE+mvidruduO7NDg4BcU3fST7b/N6yikfGipnsnbMxlnD9JH6tVAB
GtJWdTwOumyNuIt7e/W+k/k1evVf8Qpr/MirUfLdSsM9IuCVBSn/V+ElwfWa
iqusMrqDnjU0K88sPa5KQ5OwmIhWgDX2+NzMm4mnYq/ycZ58QWtEaCr9KdSk
wSDy0ked7dYwPoQbS8up8O3TFJDPtAAv7SIlMICCU6WlH2PLLJBEi5jfHU5B
dltH2vlzFjAsenZSTIvMV1IoXfueBfbcN6967UbBmGvnkBBJG55PKKmNpuJi
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
zAd5OqHZFOxUjHf5P9PCI6vhVwUTFDpnTo2unaoFIfWhg0rkPg1x+Wr5ver4
67GNI03yp5iTHfbtjzr8prs+mu9PYf1DtwYjQQ0kLRoTjDtM/O6ZP1cEOtSx
IV981gWyfhH9oXHdWg3IyxRc1CX1LesNOt0/ro59El+4ueQ8D7VmRz1RDdTe
CtgqLUTm55x7C6NkNXB2rcgmfQ0KgYbpllOYmnAasBo5eZzCgvnGb5YbakDK
8CHNvEqhen5V8TVjDVhdWDwvporMt7cxN9ds1UDPw/qgX1403M9cTQ24qIu0
7ksF9D0armEPfXO36WLFNlfzLcQP3jp4r6Q5TBdvAqoHR1rJfErbtOroDl3I
bx2f0bWdxu/Bb9XHxHVxpPRPfCnhx4Tda6rn1eqgPflB2ZQiGgNSKd9OvNbB
VyfL8Z5LxM+6TV8m8EkHG5LmpPPJfF109kOu1hkdXBd5NVvzGJlXYT8l61br
YNY7hpAqwavlbpGnU7fooExfbuAq4ZOkD1phDa46ONn17rwiiXcqCzpCiTow
l7z5mXefxszhbr1Xu3Tgf5iyGCV89myJeGdToQ5KL9z/avyExuUoIf7yAh3U
HF39Ipjg7fFNB5lgI120p4pcv/ObwrtEff0lorp4NO95S6QuDRvFG4NxJN56
ax3eym000gbLW3Sm6GKNupAt+xmFRdkVn6ZPJf2+x2xcS4nGiqcC8jbeOlir
Ica6QfTKTtOp+nmeOrCZjJKX2Uz88e8aVVNaB3vzM1PUDtN4E9TZ6FxP8lf1
rLnlIA2HGbsC9wfqYuR2jvZqMr+nHPNJCbXUxd5Kbp3SOxrSfR/cnT10IdVq
aTdzDY2r6XpOsnt0Ifna5OGuuzQkIsRuDWjo4kr1vbL6szTiZSJ9I0g967oK
wnPI/SMepbJmkft633HZnPmQ6A/Jny+6wzWxZ7Z0nL02jVnCFyYYDDIPHgbs
0m0m+LH5tyn8kiaWWl1dPo/w1ff0G0Fp1ppYcyX0Z3Mu0Vd5t47ez9BCt+za
4hEyT3vLdsgfCNCCWIzRousV//++eiYr4akmHl24upFN5vORyD2pbv3En7xd
tfx/Pq6vME+rz9SCZVxUhtxWGotFjq7J4GrhuJvshkZSv1uvO6MmD2hBcSDL
pD6axqve415eu7XgledX/XeIwvjnT9k1RVqQU7o1MF2CJjxoZ5CoqoVNCqeb
4sn8G3y7r7rrqya26X/4u4/gy3+TlMABC9K/MxsvSq0g82Oi9dfwRi2U5h5f
KZdFoTJ1dp9znway8z64rftG9NK18jzHMeL/tN8tWkz4oXpoR+bcFg3Mbnp3
7Zk0wdOMyOvzSD8lffznVc2kkbvl0I7XwRr4PSzhb6hDI1Mhb44PpYE8w3vZ
dUQv/T3/4s+XAxq4lfoxvYfg21QlPGzJDU30PGjL2+RO9GfE/VX9ZN5ORAZ2
RhM98F38UvuM3Zp4Pj9w52Jy/7Vpsv1PST38Rb+JlpB5aPnHI+8fqd+TJQXh
i4h+8qR2RPslasD/003lcnK+b8m+/pAjGtgQ73tAlvB1vvNsf/Yg8Y8xoc9O
BtJoTSvVs3jHxCqJDvFzX2lYeW05qjaNBZWLipWiX4geSFwh67eQhWlhzMEq
ITNoKDXkqE0wsfMxQttqCT9bBW/2+2aMzteuQotMzWCXvyWQqczEyg+yo9/0
zLBdoPxU/2ImZsdn5V02MYN5dXBB/Romrs9YfWWLmBnqHaLFHjQbg+POcEgh
72Pe3zvFdcYQrZl2fSF5PmW7JD6XGCPIfbXzfh0zOCY96BnrNIZAgveyBQQf
bQs2rJQfNsa9vTsU04g+Elj651nBiDHyCgveHkylsXSoP0vqtjF49sfGfz+g
0ewQ9vvEY2OMaXP1HNRpRD7ZW8Z4wsLrXaxXyjtpMEf29/rKsFH2a9XteUQf
K7omcXdLsqG5n6Vg3UyD8byk+PAECw6nLqpyQ2l8K74WdKOeiaim8OMTZL1V
Mn2y5QMThq92RIk9o5HzdXKG9x8m0uwrK51e0ni55SlXWoaFv593FFzxJeex
C9VPtLEQmduQPIXMg5CalPz7d1iwGprauZBD5v36+ya1lSykjrn3fThC4/4K
X7FnX1jYVLInliZ6JsJkxfKQHywEvy+1lyT9bnPp6WTJJAvnpU+HbCH4PZ3N
ueuXSfbPEggZXUv81jRPMU9RNoKGdxd4soi+CxhX+WXIwsjWxSn2RL+9tFj5
7SfNgva6TZt9KmgYpP42qTrHgqOyZ7TwNDO42JdwA0+wYF4jMPwymIbSy/Zt
iS9YoD6V9Rhf+T/+GzaWJB77+Jps7/lmMMuPyHf4yUL7aO0G5iIzxOy/ZaE4
kw2j2vRKkWzC17vedL3UZiPvuHFNVg0NOxcreUk1NuhlquXlsTS2CFpcLlzG
Btc3JvTNJI3XX9w19y5g44rEhnodog+Fb9VZz/NjYdiq+4zsOvI8LNbAOJYF
kTPPEp2jyHxd4iI3O5CFXL7Bp6pIcv+Zq4SDyH3kK1ezfUtpHK0tbxYpZmFN
jdfFLZJmyDrrNyOc1CPtQ8a1B2TN7hnpKMpjIdPh+8qyJWaQZ3ydRZWyULas
p2RKC43rNjPFWDFsPLQonLbqFQ2Vs0la2w6T+K9NxnkR/Xv7lKhbGoeNtHXd
FxgdNJSH9lELdrPR4uTq5P2Ghrym9yrr+yz8O1RzJXWQzPs5CmqynSwUD5pc
MK4k/vGgx9GKKBZ+fX3IiVM0Q/jeewN/GlkQVTTYrEbyff6vR/VBLzYeFJ1e
soDwrfJHwaLTtmyYbT978dl3Gg03lHxZDmyUSoyaWpP7KGpeX6Bhx0blaFlR
CdGzu45mvDlyxhBiAuVT/nGJnjf0rfzgYYgNNquzfclzk8wZsc2HDWHTFbk9
mvSXe9EJvU/rDLHK946dLtFLMRKPbCMjGPC/mVzWRfgyXkh/zMaRgSDh8J4b
xjTUnNJ/iVgy4BKa4rzWjMZoIWO3zQEG9pw6OUeIPM858TZGIoGBmB1aPlHX
iF+Y//n03x0MrIhdJdZ/i/jP4qf0elcGXvgo7I4g+Dh8peNJaigDf5ylPHaR
+1fuMxAViGSg/+GkLPs2jWsxb8e3X2BA96vSyG5bwgeSWN5RxYBUqvmKD3U0
xP4yK7bXMZCwbNn73cQ/FPosaT6sbAT5jddE/xB/Jr1I/1SfnxHah8S3vXhB
QS7tn53aAiPERKoeyST5+LGzY38xwwi+sg3mg0RfbSiUvhlcbYgtxgudW8n7
hvH1KnUVhji6MOhDtiKN59XDF8wnDJEW0LIlcJjCklYbs+l3DOEYosgIJPwx
+HVTmV2wITaxe+arSxH/qnz8i+tuQxQk6KQv+EBhz5c7C9ROGeLI1kN2O8g8
l3xTNnaywRDQrpTe2k9B52XU2a0WRph+OPBOHtnP5886j88BRpD1eaj9w4UG
/13H5G0YIUhn08wgDxpZl+4Fr7E2wuia5YOihRQGjv1uU15mDM8V71TfLaFx
84FWYvJJY2gHCZ1n65H3JxMWPw00xvUXBzepEP5ilnwUfh1sDJuQC5criJ9v
FlBsGbcywtT5Kv3v8oje+vlxsMvLCGKaTrtliX9tkNn4vM7FCEOL1V7QEzRk
4mbe/77PCCpBimX/fIh/k76YubTaCLsfJB5YfIdC9vO79WZqxvB4z0nXI/r/
CFu8+8YMY9R0Qj/rJwWb/GXHBwyNkTpt+/mv/+uxw3bvWsKMUBco5mL7/+9a
JcalVzUYIXdDgI2zPY0Si+0R9B0j3Opv62l+SOaBmsZslVtGKBWd9daC8Omq
bqO2pElDNPyZtsqFzOfmy7/71isYoTffX2w64cuPi4a3+Sw0AudST+XLdhK/
VEXPxZlGyGF7przYQvjhSUX9KtIvJ62Wl9wja/8u51dCYYaQ3ej3WyidzKN6
yfsXDhmCcedKVzPp597k4DVtBYbYmlFYO5foz2LphgC5GCOIu70Jmugl/qDn
NFPiuRG27jx65i3x3/NLhO93PzVCSPSGbY5EL2j4Bz7QKTOC0mzH0WayXhLo
OHGy1BCSOqvXbr5JQ1uVI7yd4GNNe7bqjCQaXJcTHk4XDXFG0eArY5To5ayF
obc6DdH1onut6jAflq0v/tQnmGIeI/lbO/F7RjeU3vIemGLvZMfCvC98nHEX
XpIaYQqfoR0EwRS2j9qo9b4yhaWNdevjcD6+3NHdJ/2Oh3De1hset/mwyzY/
cOCoKRqfrEgeH+Bjz/jB41Ovm2K863vgwm98yJ69FTb3pim2rtKsnydI4YpS
lnnwWfL++aWqbusoyPucGHXKNUWDZgTr9VwKojrpT6MumkJ+l0CuI/GLj84q
Vk8n+zUs5DB3SRH8blhdrbzPFEYNbSL7VCg4zwlf8y7LFCPhDulX91BQG30+
rTjZFO3+Y6NfYig4DHu+2XfZFBXGBQf3E/030t0b8K7bFFGzxn2fEL9dZBbY
8fCvKY58nc7z1KKgnSQfFfvcFJ4je6sPxFLI+qfJKP5hChcv6dUfZSiU7/gl
Zi8CpKqoXD+vRmGertrhsBnA9+6JqlVTiX+ti+iMGif3M1949P+/FzXIH5zF
kQC8P1vttKTI/lZNg0+GTNH0M/HQ1XgKBYpfnTsFgV/9/YkaxA/GCZU6bxQA
Fj59b6FF+uFHxwz7phFT1D5MWWp3k493gzsnKjeaIsba6eC6ej4mO+Tilu83
RUlAqOyqKj6ONJxRjllnis4mAdk5Syisrqr5VtFM6me5/vf3NApi0Hx19hUP
7cVzutfXUHhOOdfyp5niVf7J+4MEn57m44tqPvFgt8D9rjyZ9+F6OldERU3x
duWflOr5FE7u81xyuIyHadMNRv/ZUPhSa3BV+S8Pn26OrDL6x4fwTLG5O8/y
0OB2cN0kqd+Ue8Fn21p4CB3rr3h2neAjNFdoNpeH4qfferVFKAw/z8w3beVB
+vgP0bsTfHAYpvlHGgm+SjcsfqVP4rlelbn4CQ8s6yXDDQ/5uDCpIVIozkOy
mtzD4cUUfH98ycoI5uFy3MptzuJEry+4bfM0lIdEgSOStVyCt0VqFYdu8HDs
0nHtuGXEb3PXLnuazUXoxsf2nEDi30VKzszX4sFWRun+flIfZYPLsd4DXPSr
LjWxvUzm0YPMH689eJjX2qD+5zGFuS0ewavJ/R3KpvWOvqYQNbz6p94JHjTf
DDRTZP1ES6FwQSoPTObHwAXPyfmfZWM+5fGg7DEg+Jf4/+KjCZNTmTwsFc84
3hpN6rE51zNbguTnRNbRvDoKthrZM91IPOpz/Bo2kvpYrF+7fIDmgTHNtrTt
NIU37HMSS4J4WJv1Kn35G9Ivn6xWZD3iIfjpywi6kYLAywhZLsknccxP9hB+
0X6j0LW4mwcJfozwLEE+XtmKq/8sZ+BujOee0j9A83jAz4HnDMg3GrJ+cvnY
Zbpxb/oEAxNOfl9Sl/FR5RSwZ4aBIbSswwcf+/CRGOBUcymNAcuJS6cNLvPh
Yndb7l4WA3GZVcJKt/g4eCxJTbyUAYOxH/L+heS8P5uPbRhn4JtUAuv6Gz6M
ts4LMqlkEL1BFza/4mPpw/q2pBmG8PTWMLL5ykdx0slF1r0M/H638OsvMk+4
XrFTzv9koGf3ylZeGR+r5Mw8VpF52mE4bcmjOD7qU67Jca8a4qxl55wnZ/mI
WHZDXSzOEAamOry2Bj6etfbdvpliiEx5Z14ywU9c1kbpIg0DnLuqG/OOnHc1
cJeznokBhkriTv58yccvqV3Tc5YZwG6+3s8Zv/iY1nI+9autAaSST5qkb+PD
2d66j7fHAFFvzjAm9pN8uK0eKrljgIgazmbHZD4U0qdEjDkZoEOwa0zuFB9r
5GYoTXU3gObHbWf87cn+GT5hv7MMsEw3rsKvmI+/rksVOm8ZQEKp4YtAOh9b
UxcHBCcZwO/UNov3pJ/jbEYHL7w3AFvONmRUmUKrwqzNVvkGYDQfCPIl/d2Y
dTRC2dcAMp5T7itpUBjb0L+F72+ACenGH2XqFIaGnqfMjzPAUwWNNK4fH6Kn
ogKmFOmjNkNIsziBD/vukafqjfo4uXHTmjWZfLS6X5HY+1AflU4fN+Zd4qNz
xpmlPu/1sSg/zOR+KR+1XVHLu3P1Mdd/VORLBx9PY8J6y56T9+tZMeItfEhd
ZSvYVeujcIrZ96LXZL+j39mDn/Rx8ejrzZQxH5+uCtw/3acPMWvDpOnL+bCq
WZL+aEgf5R+Xb7zoxkcbd69y5Fd9bB/6x360hY8c0+Z70uT8hkVu/BPjQOux
C/5sVwPMf8wouCrHR2rTB5bkLgPUTp1v+u07YBI67tN42gDrh48szZUk8bbP
ebDT2gC26rk3LFhkfgTPWXd9RA8Zs/xkDrvz8TWWtrOerg+HE1eaPaz4yKO+
TFSP6UFAjTLWceTDJj2rRmz4/997yr4ke4aPczppA6OteuDHOd7uIfWzPRf2
XKZXD3OUH7vIELxH6d99sfynHmQ37/I2JXjTv1ahXiGjjyOHVERny/Kxb+nP
tc1cffSv3/F4vhkfO60imWYa+piVnOEoQuLb3qsl1cbSB29Y4qe3Jh8tV0xz
j6vr4+Dnm4eiSH3awo+onpHVh+2N3eHh8XxEu7fcUxHWR/upFxv2BvIxs0J1
a+2AHt7r4pdzBB8r9+y9VjiqB9dGF9uCLD6uma942rqXCbv1vk2LO/mYHfXD
2rmEiZBFW/cmPObjkfi9ivRHTARtiTooTvrB562Sd8F9Ji7PvXv9gQeFXEG7
F/+eMSElW1+a7Ev4YIbQ5pqXTEyZnv1z9XrCf9297/d1MbF3gYGcgzOFS2u3
SPUOkefd51oOkPlrKxIqJtpuDDP/kqzPPDK/NuQ3eDUYY+O7Fy0hnhRk8vXL
zKSZqB36hoQDFPw2WT4JFGGi/toBnn0bH74L9yn6aDFhG8uVvWFEoTZR56v7
eSZcN0nO1ST9kX9uZN2KC0wslL/BkDOkUDrLkT66kwnr+sgUIxLvMY/pcf/I
Wnmb9kAi8QMJZ34fDEtnoq5Xu6gtm8LHO69Gb7kx8TZWeP3sIgrw+pYScIKJ
vvdCesFFfMhJOyJi3BhTVTe9tu7nQ0ZztpmZDRNfVzA7NX8TPH9WmttD9teV
OPAinOgZ713ajBayX3fCUmH/IHJ/xuy5n28xsdHNbM+xKgpnBT57ZNcxsSft
T9udEgrqBVUyz1qZEGZekQsj/B9n1fry7CATAoXaW5II/1adHhxNnM4CR6wr
8qcchd+OdwtWLGKhsmK5153pFB776qRP/cbEcqE77Q2bKGwefV5/aSkLF1h3
MoVHSH3aM4pm32TgyeVTTWeJ/3uWN/XmAbKeGrPEVm4h8Q/Zh258O8lAX/rr
DSnEzz4Pvz0cc42BTn3eyt//65HCJX/q7hvAc/cHoy2dFOjj+jYxFw0QnxGz
ZuUTCiurb135cMUAr/cMrGkVoRGdmMNvvG0AcfmKyY+5FIJ+6OutHzMAZ3F8
nAQ575t8wujOWgNkPf18WIZNQ+RykTQlxABzVZ51yjzip+e/jSl/ZoAq/ix2
8wDBy136p9tGBg45jr795UjD4rlenKYZA5PvZ9ScCqIh/nmTZrQTA+q+5w84
hRC9PJ3Z8WUVA5r7RM/+lKNRT9U1Fk4aoHlq9NshJxr64h3b5FUYqLFc2Zes
QQPXr8UrfCXz46Dj5STif/J9VAcNljFA1eWllfRRGLz+o3sXmffxC9/r7reg
cW7Fu807XhjAdyan/YUVDftPhuO7vhlgx7IcFy/yPLQvZYfJgAGq5b+KWWVR
CAzYedlcmIHystTSIqKvilszTlZ9NMBwXZld8ReCBzuxT9YiDJyLj4qq+krh
q9cGIxcSz6FQp4hqos9sBby49ptIvQqrV/EeEr9aRutX+zBQokqZbnAj/ai4
J9p4LwMnuwIuWTwl+lPgUZZ/MgOO9y/vPTkEqBWFHj/5FOjT38p6R+Zl98kS
rZw+QH3T6XwLBh89hlKNlDgfaw/1fsnW4ePGQ/1gkwV8FNxX9PERJvPjYHJB
znugPMqkcTv4GNytZfhJhA/lidIpsS8B81UyPRJk/w0mF/dMMAlflr3pPvAX
2DQl8I3WacAhXCz15gag8GDGs7zXwLyN3zPPJpD1qvsfcl4ARlNdi4NzgPBy
NSwh834ieEHatEKg07UiKX06Hxkf8sa0k4GLi630FpvzoWN04kdrJ4n/raZB
82o++loePpL8CTDkp1hb2BK9EK5FtZN9ZL+s2+u4l492112WIs+AgctiV4pz
+Lhe32oy5QEwzcNO0ZXoF9/4p/3/PgPPnrRmrarlQ8RTQieanNvdvcHIOozo
7eRX+xaVAQlLVc/ak/m7xHjLuinSfEzc8LHf1cqHYL+o67kpfMxNdxn51cTH
MeOP6XfFyFwV/bd/pRAfNbM3m4yr8hF49MDK07P5+Hwl/dkPBT7844TnryJ5
1dwgdcvrMbDkGr10WIboCUbOq2+EN2aufNJZQfjghsCiiA9pwLH5z+ssCJ+P
8DuPa5G6jM4Uf/O6nI9IvaNV6kS3nfRStC66xkfv7q6yeA3CW4KLyjs2A2f/
zct5uwM4c8hQ5TKpR+EKly25zUB8Iqcp5QTQ8kt78ur/dZw+sKXhLrBf5uWZ
AZK/eM8fS65u5YNnL3j4ThNg9WmlX+85Ptz7P1zcSHhWMttj67NDfDQJ7rPS
EiV11yh++Z7oMbsU94JCgit2U9RQ43Fgwd3T7lHXgMFcO+EdZP9TtbbnLUm8
/tvKxFNIfqyHHwhHbuSjbEXqt/Nz+Hhz0PfxDsLLokc/6UmoEb3BtjZYQnTB
muiHvw4Y8HGZ+Wrhbks+1jXqrjaV5yM96Uq74ErC+33pS3+u4SOo9Fwi14Xo
zD/V5VpE36bmF/TIXAGK5gp6WJHPcdTalf+MAK5xv57E+fMhZLp+XQXJB2fZ
b+7tKD70egQnSxaROgS9WKbnBxz/OL7lvTdwb6XAsHMKcP9s18W31YC+86c8
1yf///tuE1eFf8QPtosukfkAbPtteLKM6O7J0DXvWKXk/r8uOo0WAJXdC/6d
ugHccVbpayX5RGzxzCSyZnSMlV8iOJDz3J69gOTDa7pZndNcPmIiV4hPjgJJ
bskRd8l/BedrXBQkOOMsv2oQv4QPsAQPzNhJ8LG4C8GkL2IiTq0848rH/k0p
eU1r+ZCO+LRRZQWNKbSKy+koDhYnxLun29Do7cozKDjMwWyFsmlL/p9n649N
jNZxEPRg6taWzTTeJIhQjiUczN1oKmBC+L8jM6Y284EJnjSt/OP3nkJs4HTe
w58mmCN391w8mVcBKlWVj3kcDAre3LN6Cg2JI/WhJww46BVsHT6yhvjN33Ul
YyEm8H9a9mI18bsni3r3W2eb4MjOAOmqZgryEbe4dXkm+BKsMy79gcw/7z7W
9W4THL6tpNhA/H2aervhvl0cGAnW9D1oojB1VbWQ/HkOkqVfV1XeoNBjo/TH
vogDi0NZzQ/HKEwIVa3484iDc1tPmVi6UKj4j6Lrjqf6e+PX3ntf69ozO+vi
8zYyioxURDIaKnxpSEuiREUqSslIKiSpVJLQ1jRaSFJGysje43d+fz6vc85z
nnWe5/3GdRUKRqfMmbA8cX7nLJm3qs5nFLtsmHg+dvbGV9Lf99Ja2zQCmeCu
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
D7KHU/o=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.5], Arrowheads[0.00692590432665045], 
         ArrowBox[CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
          "], 0.11338981485158617`]}, 
        {Hue[0.625, 0.5, 0.7], PointBox[CompressedData["
1:eJwl3FMQIDu3BtB/bNu2bdu2bVtnbNu2bdu2bdszd03dh1V5y0NXddKd7P0l
aNiuYtsA//vf/6pE+d///o0BCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZEz5
v6hEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOF
rGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUq/3um
VKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50
pRvd6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/r38AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWo
SS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGf4t3O9rTgY50ojNd6Eo3utOD
nvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvOHv/zb+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38f
/QEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y78f/gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85d9hXwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8u+gPwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+XfJF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//LvgD0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/hX3BCAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/wr7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf0W9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv4L+AAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlXzNPAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yr5EvAAEJRGCCEJRgBCcEIQlFaMIQlnCE
JwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQn
AxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
FalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd
6URnutCVbnSnBz3pRW/68B996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYw
kUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCR
TWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU98
5gtf+cZ3fvCTX/zmD3/518QbgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIy
UYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZ
yEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehK
N7rTg570ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4Wp
TGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1s
Yzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zj
Oje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7
P/jJL37zh7/8a+APQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJ
QUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clB
TnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFN
alGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU96
0Zs+/Edf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxk
FrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQX
u9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3
ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5
w1/+hXcEICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c
4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7y
ko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepS
j/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f/qMv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//gnsC
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/oV0BCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/wL4ABCQQgQlCUIIRnBCE
JBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQk
FalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2tGeDnSkE53pQle60Z0e9KQXvenDf/SlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje8
5R3v+cBHPvGZL3zlG9/5wU9+8Zs//OVfWGcAAhKIwAQhKMEITghCEorQhCEs
4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3p
SE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUo
TwUqUonKUf4/U/X/AGYyX5g=
          "]]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{
  3.702718734251876*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vXV4HdmdJqxtoaEhMJPZzexmni/7ZXczO5lkkg7MJGlMt7vt7jaDLNlC
CyxmS7IkW8zMzExXjBYzWkbZsmRmZsvw1VvnnKpTV9c9f33P02pLdesWnB+9
PzzfmLpZW9qbutmYm/7Tly6mTtY25q7/9IWji3BI+79oaf2XK8LPmX/Swu9v
tLTY/94I/725iv/hyP9Pv/8f8Xf9Xy9dup+aXXl03czJ6zii+FtHPGc1jlXG
5U00RmSO4jg7x7Z9YJE/Xs5d/n+Lv+v9w90Hz57ucW96s8upAT9DfvGDrwxd
Gt7BH1qrPj5+5pZ4ovCDU58Z41TnBnK6c8OykWujFjlXRz7u1IDvlXF3+1/i
77p4sGMeYT30VBX+xReFrxsEVLWcZi847hPT92ank3Qb/K4nnqbNThN/Srhb
/ILcAk/53Ih7SuGrWrrku5tHZ6+yt8BTCzdfTW4jPw7OfGXo3Mh+v2/m1YLv
lK24lZ5Jz+gFxVMKl3hm7NakIz8pO4Wu0Sp+jV7tcm7s9YntebnbtZHc3anh
i9lTN7XKV9xK2+DF8qsFh6Bu8ZnJtVYvG7o0smvh57FARjwpzj3lEnqELRx5
HF3+1vgRF5JwgbaCqfy42/9P8XcdnsFSMytmKS2efmNVfDihuEc86R1yqcSs
ilm2IPRJ9eRFIj/Lu50b8aT/TfyKwY7hqSvH3cN7yhLyJxacgrpGfWP7wLrs
iXQ5ygrLy5baQ9V1Vusg97A/l1lawaeUwuRhdJ+R5W54YejccP/DnVGbOwZP
amkTQcLSPTN0UckPyxiCLPWrnU6qL8bmLmprWDZNx94jx351/soDdinC7oT5
9IVXOKMu1I7NvefET7XJIvMiqOW94nW1eS6kC25wa59PG357vd2xfsjIsyA0
rXy03cK3+MJfTWKN67pmiN5YFR2R1bG83bGWnOpQP2NyoOInt+49Pr7dueDU
19Yp/3DzzkNKV4PP5uZvvtwtc1x9VNYYHpcpkHc0PO0a8oRZ6aUz7Gta+oQK
EEVZ7zg3VMXkTmhxgvM9b/zuz27cefLa0FmizkuBGRxKGicDcmsnT62zSr7z
4Y5wh/z60TS/xMbzH5vEGjb0HKWq0uCDBw+ftpgfLH76p13xy/+8MWh4u2sW
Pjm2wSYF574j89oLI9dGnhHo4uqGlTScWCFIa2Xqt4Snj4nnG5DXqRNWSv0a
d008pVd/vNezGffT8l35qiJxuXtdNzvQePdT05TsA3H1reYHi+7/29aw8Ijs
9oM51eO3tjmWpUXn9GoReXm30iumcXmdRf6Tz0wyru10qYBInTX3rjtj6FrK
mE2+PtEVlOl0gyqaTl2y9W8XBcXItWnXwNQlRk5JvnYybtbSXxY5QybJI1OP
luqYvMnX3DWvbncqe031HLMRGt5ZB0J40hX6S+BKSW7fv/2JSeq5rQ6Fz3Y4
1Vw28qh+tdulgalNXIqXIfKIbo3SsmtTRcTpQJuOwfMPBOUui6NoJR6aeLZs
G5658sqQaBktTYxtQGyzBgPQgDe+/9W+HHpLg0X7w53PjYRHUTvvubCqD7+w
yNbWwPOEV3WgF5k+xFu5cGv1/5LnUOfFq4Yulbx9JlfXjyqqP8FbeelrMnn0
1ZX0S7K+/DnacQW1x5lYsGN5qcUz0pPri/9fC1oUJRVP81L6Zoej6tLnZkkz
Gx0zzu8PaOfZTs06vhC4qcc3rufkTteiB0au9Th21/xAqygluhp0qiYaOa4w
YwZ4rAzBfF2wO9Qp0nqvR/OwR2Qne036Rs+MXZuIFpYuvToxu2J20SGwizGl
uEIiTJCtwzOBzNpMx0unNAh2u1MJkUSeBU0MZIkSycNJy/LnptmTmx0yjeq7
ZiPDc9ofbbQt0ZL41Fm8xHOBRFe+3Z//QkZh2hU+ca1YB0iRlh4hiqyAJXKo
BIjVL9oopxUS+CN1UDhmE6DK8Y5v8MitGSUWWObjR8IaZhxObVv79Nkyk1pg
pvTgzE68PX0u/SG7wIaPj52+OeUa1hmbXDLsUtEyVx6S1stpRXF5eA3xjmy2
tYHJRC3EsZlSO1L52+5Q9/i32yLmNtimwn5NbXXOfkWxHb3UtLW/Kio8q2Nh
h3MR4+LqkNR+NfmTTLl59+h5svQ6GvjMfsX66aprbVG4KcQ4WNF8cmC3V0G9
e0SjW07NSHxQeusfp09exKeMbvg+ea5Vc9b+UBWSIcqMzRuadgxquWbj107J
qWJ2k5dgxg44h6EMyg5reAUL0NjsFtF078MdEXd/ty2sc++Bgt/PL955stWh
kmPH9+4Zudb12ByurnOPUgkqshlHnwga9pdLl+/y7gavgTlYoHg0TSpPwyry
jylJPyGNbqlzePXst7apHSbeBZHh2e3RoZltdIUVrweQN+IU0sIL3isqtgSC
Uc7byYNjiVMUhCarZ4BjP7l99/HRbc55LzbalL/a5lBzwiagkelLjlEMXkpm
0UnlXt50VClY7DZ6U16RvTy/CKulkrW3NnwKifUdVhgBbUncZd7V3dHcN1dv
dagkwyehYVP70Emr0uYJpjpx/hFz39IXu10lPllm0I4z6oKD0nB5t1v1nV0u
1Y+/tMi59/sdkdd3OVfxFkFBRF2ly7prcOqS4KTIFkD+nl6nf3xv26HEfqX4
OquoJihJyJ+UpEgyEO/xpk0kpfBzb92+rNf0KtDMy4aukovAQCrPXf9CHtWq
rHki8XBq846m3mOeGZUDBs+eL9MXMOi1D6rn6XHa3Lv2AkVDUPbkadbyTMV+
v/uZWfoys5yyCykyr56MLXntymt99pWne9yavPJVky+F5eNVz+r8lKJpmLDr
+3xbJduj5oPKoEnvmQBzOz0iWj3rus7yi6eJv22/3+/jPTFBr2b6xKvCI3I7
9tZ0zPzvhYs36dqtdsmrG31s6FInvoWguEYMPfKGTLxLTu0PaBl0C29TPoEi
aPBsi10lZavC5KJpiaX1OHebo8otSzg5kpTAEP3s5p0nOE1YMmFNiNev/8LI
TVKfTs0955KSikbumnk3v5Ywn5buSbMDNXgry67h82o0UQIcfpH+h4wqOkJS
R5YEpOdb034afzdEZI29oqyvaa2JqtLZ2dQ7V+oUVmVV2jTxZf/kWbKGegbP
ny/3WPpVnNx/qDWgoG46Jjyr85UsHK+py6aELbo3drvV3Dd2VzG1LupLgjDe
1aRLm1zCVNc22hf+j2u3HpYdjG/92dWb93E2ix9ocebXgCI1Ba/nphRPMQRH
1/r1TkfVhycXbuA6WzqGTz7aLaC3nQrfRxvAR+N6/ncZDbEIjqyeXEV09FbV
Qxd07eMnz+tsDpeFRud2QOVxoQOiiciqLRh7VknBCegMQYc/FbQhMRkuDU93
udTTuxzb6Vp4dJdrIfxi6gEZ8Aq3cV9A8c0/7or8+fmrdzpMfAp0Xr58RZ1I
qJRu28M1Ta7hDa51nfOirWY05Ph+xCu6R4M4yKsvhuH+9dS5q4vrbTInBes/
Y+1ff3ePh3jaPWYa7VYupYbYwGplsEvWUHDweVmnK2pR0TZVaxtYFhKd14kX
0uFcH04YC+NyR884BXfzkYurO5zLb+xwrlg0cq9kx559YZbzTefIKfEqJDyi
W+EYXLn0sRiZmK2yD6n44P6jpzTsoPPLM+dv9O32yC0RDH5CcvHoWyJKtSFp
A9CVb/FlwCr+aRUDr2QKaFs2956WCGm/Yu1E+HHamYbRdilY+H2sH8JvAzYB
ddA5gopRhEWPekT0sHUES7aZ+ham+ic2iopShwq5cP15p+AuhqQ2d4+ewapS
6PCaYnyRxHtJtAB4+uoGm2xc8n3ylFvaBk/0GHvk/erUuWt7azpnwH507f4O
a1dvc6g0+0BsfUBCSd+TXc519G5NT3eS3+8JUL3IM0ZV4J/YdsvYvf7+5+bp
L3Y61fH267mxa3NlTM7YcUvf+v8UvP2McF50fs2cxHnU5hcdTu48/eW+xKjC
+uO8zSJvrANiOOfUDPfvcs/5unf8DDWXgxYHK7J9E1Qfjx5dxJot2h3qYLL7
YrerIgTa6RPbDSSjSeW+SxhqQ/fY6b7d7rmfjMwurj8yNk/YfO0/CsovODqv
C1o43zO61rq0eXx/a9+5q4auVae2uxTEZJZNHrULbJrf4VqMyAILJv7NLHt5
B1HHj/Z6tsDTZyL+eLerite3vEP6j4QH+JjFV9MnbjAURDX6EY/ItmMb7TOX
eVecaFodEADBLMFHzIgMy2onq7XWJ7Wsr2+3Zw5WC0cgSzGJRUM5IendiaEZ
7TfNDjQxjhuxDazXRE66Un8dn1sa3u6SBRaDh0JWSu+fLl27GyVA7k3tgycR
hvrN6aWbHNKXomYykNQeNfUu29M5tJAfmzdCmUFnwCW0xaJ7+EJGZvmsGPbk
VuenmoGSYAQa6evrHXcMaj9h4avgUxkM6N03o0pRuNCh+MIj09/ZpUF7UQT8
p+kTF099aZX0xcDkWSota/48cew8OEAloOa44PSWXiv/SvOq9ukcn/iGq/t8
W3hSahHp0/m/80vXpzbap5sJ50G2yRLpYolSApKbrEuaxxMDU5vNuofPs8if
ump6aOrZwtbk6L6D9XColhXIQde2rX+RXweRrR1WrJeOQidLNlkR9HosgCQ1
DHh+u3NpbGLJsKgHqdb98Z17j6/+zSylLjR9EMShDvFvz124e3eLfYlXadMs
PXX1j+/cfwzbkHMgti71UHLj3HqblM9GZs7B+uZ5xtRtG5i4gEt/QK6MpTn6
jW2qW1b1IL5KVuyHvz6xcLXCK6ZpzvZQY0xS8XCFd2zzc2KQVc8Ejnpo5KZi
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
fx7UGIZ6f4+HTiKRSNP5MM1HHeiS7UldKWEZXaIAqy7ycKpH2fW3FyR+/eHS
7Auz1pbcmysYjRWr0LBYoN9zS41GNuCgAjX7FuK1OfYYALQIRPzlkVXZ75NW
2oN/Y/epq9m+Tckb42oEskUJCnYdsoXOJXiFfilFwupYzev8joVG2cz1vGHM
lQMMuJlf1yIHa5QYmZs0jCXBTqO/FRMLuAQpkifhcGNsBPo7qcycHxTTEL01
pQEacVt4ZjMeT6HiNe7mo25rsu++uzDVutpq9Cnlay+bN+XRzNVa2yn+/9Ae
NftlVgwQ4SoJsKGO4YDOovyYnANstpRD5/KQinNTvXJosciR/nyyV+EzHQj9
CrdOsEBPJ0vqA1A43nNHM6yXDcpgR0RWOybn7QjLaEYQJALW0ZLhCYMCwkJ3
N9iD6lKceGDmqW+QwmIAzwGSF5+QsuKEhQePD+aJbIna07pjV3qzpel5Xdco
RGZGgiK0u9FTd1rW1HNJtcIJILdQZD+wEA41aYN3i4RH7emq3xTbuSmzYhC/
ay6SEg78u8dtTZpQP0o4wB4F5Qi+McwLFnUXiWl33jvHL/fhh0uyH7t5V2oR
8nTeVGxI2XhzKzCmzmdnTUFQdP3NN2dHrC6uPZzns6s8YntqA3SUFrfLB1Op
PHM3iliV3Jis/aU7d/d9IloctCveEdPf1dKpptagrPID+cHxzU91UXoJ+HB8
Oc7FYlvr8X2rtzdUrIuoTQmKtiHmRf/AjOq2wynro6sQC4sZjaqIjjvVIEhq
27G1yUExVZgal7ghvhqE1LTthiBWdTkZKMY2ydd+efbSnbsL5eAzwnJREzp+
wJyqdtwwje9VZYeUFGBeop4CcoDTqQmd3HABzwPhB/Ii+JjCSwFrir4QKA6w
XYrYSLWO4luHj8JzvCnGk+h6YTTzSTGcUQV6mg9wZEVwzemFgZXHpq3OhheN
Pig48v/AN9zEYqVYK+zeBB5L2qZh+T9dfcJj0Zp2WP/Pjy9eu8PbHLoWBRV3
zPLN6Jzpm1Houa14qn09sX0b4vI6sEDj9cOhzYtR5JFYz8x1kRVZa8MrJjb1
nlAbbZiC/LcW4chGuc5m1xIUFRQ5PbcgcycjYNj1b2iR8Chn78qWU/xDNKFO
jjUdg4VGsUtLETMDAe8akZg627pnqZ+1MYnJeQc+e2dRqhYSm8l19OPteE9F
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
F1GLaarmYyy0Axt/pwUEBtG0GnXt2Owb1vCMjZVR1RcARM66rc77bI5vpaZB
Z+hSnZKYf9DKmVBCSKgQYCQINAIAEv5tFkIDf68SQmhdxAXidYu5uIxLDIL0
07OXP/9i9lpNDut3JO3V1kCG/K4gieLnsm5HUv/dSR756TuS29LD0rrU06Aa
8fmflmQwq+7En1DLqymo1ZsHj1+9r3iuwPIgHFCdLivRHuhwy8VP0Jzm3nNI
GCRHZWkaAcoUD426v3B7eX3gt7oa5PVNwtUoRC0Q8aCVY86CE5+2Z6r/Ob0w
2okq1r/m0rtmewOQPGjfRF9B+M70psvLNzXyhJKBVE1x2Cggi3nNxbQHmkPC
ZPzGVO+CZ7yCqt5TaDdPVByTQ+pOf6qthvQgXXlNEqsQtTW5DngvEjMr5SHD
GSMOTkqeIJDxSS/r+/J/ZsXefts9Kds3ogJ/aZgfuOfJr9yiT3shVNS4EQx2
WUrasPb1Z/pivRSaXLhP63K0G5BFDV3nnry/KEswgk4fnlASndpq7AkFzrag
6CbMl6ncnNChz7NwJNN3366YAT+Vd8iaydTJTcjdjyM3oX3gzB3ZjoiWtqo3
D50U1fd0/8hKmGzuuRvsjGz8deLFTS37qUigzUBANGCh2UxwN4q5n9LVs8h6
Y7GeTvOqoOzvZ9O9S4jxFI+BM+aXVr53dkP36Yqw3ftqQ1P6iXrbElGsJFJ1
0hvubPRwxaKnMVwwi/2WiMtZN57xCI+BQb4i+sYlRKB9fmDuzTdmhp2Y4pW1
KyK7g3MCWLSuu3CfCyHmmvTSXmzOymyN589opNV0asuSIkubauGxjIle/sfL
1z5/8Cu3iCfvLcxCdRKvnp64Mu3puwsz3Zt6LzzR2p/lM5Ihf9ciblGPHqVG
POGx3Lr3X+F2DSk6oX9HW/gUCjfAfXYKqWjyLMt7G8at0QlB5wNUEtBO3dPW
pjd6bCkPSCoSwGYsTXtARGtiSuFBywK3kl9udjT5VT3Gw4ZBJBX0H/lweSIw
ZLj2IzaG56tZa8xMKC49PqGN0duSG+7N9RVq98v5vnX7AiO7uNrMi80a1MYW
KDXN6blFDeDW7fvUS6i4Mcy8TdtzKo6MGi0KZK5qHKAhDEKk+1/nrtzVvRFH
rhGQeJJukxBPAUeAfXmn58C5pQU1A+V2XUOriK4szVBLAR7HtS+VkpAIQRp5
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
Rl/VY3Ki/KU43cCgr/jAeJJJa0v5e/PTD4twx32tmmOjo7K6D832y38+eZVg
KQOA4ekUWToFWFXwFEpjOsbQJWs/eagdYE+RK8O9ilYm1huBCPOQ3652UpP8
OZGBXtBqV6sjl9ldYdhTA6NsTfMCs1G1Bkk7kgHaLARdmslI4xWmrZ1bN0Z3
ci3buC2xT0dgiUlQABs1rt1Vp+5kvKELR234D+0r2zknIEensveuis0oO/JE
z9QqWghxla/mKl9QVuIF+AX+ZXRCnkb5oHTTSy+me1YV70jpBkHkww+X5pir
rSLh4mESe+U6YxGBgmTtEY4AUCQFxVbTIn1/xACayalOBsFdUk7AJX0nrgA5
mItXAXcm5vdh5+Y0953XJuEZU/YOX6vc1zPdiI69Mse3rME9KCc3KLoO+Xgi
3DJTVZl4FAXflDogiNWhf4WudtTtLxUkTQfEQTeE+u0jWG/02m7LXRsOmG1z
fHB8Tal3aDnms2tlhAlL86JSiyRn2njdHSKeExwIHFRc7xV9xfQqvmE1xhCg
mkamCGpAhf000ac7TWjbe7p+/vpsbDMmtqFLZdSfpHtr7hUTZfHpalrQLD2j
M6IF/o7yx+1nG9+NROmvhk5d09U+J+V1BDP5nXfcU43aT+RaOPcQsNd4orek
04LUxLK8moGPmvtP6eOd19SgLZnsNRctUqDNG2M6h9ksdQ4AdkDcJn4brcsH
aItWZlftJTS9wYNR0Bd6bWlD93kz0wNNSecdBXpfjDXK1pUfFEtv5O6EpXvO
vrckkfVGjuelIqoxgkHrgmLGQabFI696cP9c/3w9qa6x7tGCfENXa0ThRmtk
IExX8yLNDch0PhSDtUb1py+B81fvL8q89+bM6HML/MtjYrK7QSBZHBzXYlFG
xU1J6XfGZhDYBll7KETcpOxfcQIj8jm7ad+7PrJTUCjq1K2uQMRhv3jPJeJ7
UGvikZ3041e+IqQA6F14i7BFuKo8GsOo41JT8ocGfHe2lu9I7eUZLitrpBJX
xH+FBfvJifM3BcRYCduq8qbj73cNnmMOngPGtTYtWJ8jLP0I443FddSsZTiZ
GDwhLP4LiWpETY6wmcPTmg7cDSKWBSwEjGQIuGOVXoRi8Ukr6UWJeKS2NBIl
0VZgN/qM+92AocFPQ3BcJ2Xp4UiUe+woOzLHr3BEeJc6FPIYjjOFWaKt7Kzn
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
sUFVsEXG3BNZ/3zhA/ktnTiYuWgPU/bHtp7zCe699nCEf5nN4LsWZ1ccMCbG
7j+bFbSm5LXL12/pQvQcPLNOIc5v72eJv/72ysDVLrBu/t3ZSzdIDH31agke
MwwcHruRZKMkslFZkce8dOSIQm7Qa6KI4w71Qa0AImRdLdrDjn69nXAUXiaU
NhwEVlnL+ve3+5n4zTAhlkYjb/eG5YmkrUxqXBqXI+YTkhH7ycFTl3cPC0xb
kVKw7z/2H6ep5GLKN/bnL/cdOr9xedIO6IKs4PUuvah59Q/TkuNWJ9fqCRfD
evezCkkIni9PWFwGnWpHFPTK9yl1OUJngHJ2qb+mC6OnAcC3qEfP+C9v9Ktp
PdcYtqHp0vvztum0kJwWwubHWFtI0cyKJtHKhB6657Wsv2Qpwcaozbs171qM
imTCW/ZnYUTxUDcmKEYWD1DEqvNRX7leBcbfPzhz8Tr4w7ivXHMiVTDDQqfF
yCqpr/WN6xvi8vDAfJuHVaF5WIPRN5MRuqlKxOGdRy5mL42vv0jt9LcnLaoZ
vrvnqjGrGpCj9x0UNhlzJGKGVbUeQeineBekrRII/qaxwRkfuG2Beo2wPHYn
4NY7M7bt/9OcxI6JIbnMZmB6kTZom3hNda4LUlr1oV5UxClbcnpsatA01IbE
+YpuWZHiNmOZp/oNcLu7Tc6RN0Rw188SD5y0z16dF50Vm6hkuf+vEUn03zc3
qnLnuMXb6ieFZd+cJEPkLwijyeg4PQyFLG12a2ngpeAGQdmJLyoa8Ui4dCSC
Tbh6EXHVhm1o/GRySDXJV8PyLR2fT5bkTMxQWbksriUiPqsZo7JzA6OL0L6F
k7Ev4+TuOOX1pHh5s0cL5ff6xY8/Y+IYkrC8gFVF8ESMXmSHAW2wWdB0PR8G
pImEhlIjvk+19XUKV7S1dubSIhUO3WAnxVYFX0JqDSE9bOuqjdtafNgmnd7P
hs0TfgRzxXKKkJQfRAh5zZi1aQ3ntZFw4mqEqbY3SpvMeIaTVBKyoXa0q/FQ
jDuG+dW+Q+daZ0QWxa5MrpVC1V9XSpzES1u8oVy8KoTpaw7uPmkonbNHgS1f
oXjI/SQuz1iyg9cIbsnkHa2nd02PLP6MIpU74xZWa1CX/pdmyyd3d9z8qln5
O/ZD8wDTLc7r7eDBknjB+52ZU9WpixcLP4sZg48oUYOBjUluk8HFfq7/+lgB
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
xo9eAGzpsHdcHUhzcr1j6+FXUD8mJLtWkn7WKcdtU99mzzyf1NJ+OItEvnnZ
IahTKWnIbjJtJZdKNGuJcSz6+fVd4Z+vsi+Ub/Y7MoJF/mib44Fa1M3oOJyy
C2x+vHpvxZnNHmWfr95XWhaROaDU9YT5nxAUMfPjUdd5WgTaFx5IE7PYZkcc
QpvpOoSEQXQjbUX1vMuBToU7i3up8Jzfn56/yWSaI9VjDcynLMsr9DkJpYvj
uUpdfMHGr/HCKofcI9u8K3RCwfwxSZ4vC8oP9pwAVtLtBla2nOh2DqeCyPIH
79jkJcUdHsCdUPv79vruY99qUzLMnddTFTOfYL1zHSG++cuQp8qDGYPU4PBU
RaosKz2UNfz/t3blQVVdZ5yGVWtiMmknnelM+0dn8kfbyXTaZCbGpJmaVk1c
6gpRQBYFHyLwHiAYUEFRAghuLAr4VJB957HIpqgootQFFXEJuENARTAaURR7
v3POd8+55136V/9gHuJ79917zne+9ff9PvADVudUteNMzBFle0ndU91qlZde
rLVihjAjclfV0N8Wx+FdsrwKfDo/OL4kJTqttjg6+bDm5tF/oDwP74g+LPCm
5IQklGWFJ5XDNC8Q5bMLAtMVv2EI3g1inWeKL4XMPdtUSHfBADQCPWc5D5lP
XWiwcZAZNfqcjWTIDfaFOQeWv2JjMyAtzETzsXto5YEt6Yd1JhvpjQUnZXhU
rzhpDy0MoLlhjqQAMrYTmai4/dUnjWfN+FlUVvWqWRhhymQRlqjkZmRrQ1vM
cjwin/x9w4YGVuQRb+C097oi5JGDLqfBGT6ZEPCxMmtDQN3xnosh3ze9EYqP
x6J3nYhML2kdAJwQz7tlZuR3DCsx6Gu20tD1f8J7XQFrnhKXklTlR1ypqw5+
xkfddx9BC/n2zel1QLO5a3vWiUrFZH54t29YZtLQLWyyjtbkRPPR0ZkrDhTH
Z54Ua2iAcoW62KXZq9J+1/tg+MmyNdTuwHBgyL9QuZ0sq4fCdTvr4NAWGONK
EuP3NrQ6BxO6RyQBAAHNUKJPklZiwgtTSDfuyjlCmONpzOSwsLG1C7B9eNDv
+JJBWRYdkMSPHmGVinmzKF5DpVZytCV1B33zJrSSOAGU5P5M34zAg5Xt4uxT
4hIJVWNr0J1maBVcUiOf46bz5WEx7AsAymaobr4mIJzt1F4mDYGv7UPPsKqa
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
\
\>"]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Vertex=\"\>", "\[InvisibleSpace]", "5461"}],
  SequenceForm["Number of Vertex=", 5461],
  Editable->False]], "Print",
 CellChangeTimes->{3.702718734482459*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Number", " ", "of", " ", "nodes", " ", "on", " ", "IBP", " ", "tree"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NumberOfIBPVertex", "[", 
      RowBox[{"numberOfAtoms_", ",", "numberOfSlices_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "numberOfSlices"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"numberOfAtoms", "-", "2"}], ")"}]}], "-", "1"}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "numberOfSlices"}], ")"}], "-", "1"}], ")"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"NumberOfIBPVertex", "[", 
    RowBox[{"9", ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6978228548611045`*^9, 3.697822917604511*^9}, {
  3.6978229575375485`*^9, 3.6978231634677305`*^9}, {3.6978236566561227`*^9, 
  3.697823659776985*^9}}],

Cell[BoxData["127"], "Output",
 CellChangeTimes->{3.702718742512623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NumberOfIBPVertex", "[", 
        RowBox[{"9", ",", "i"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Number of Vertex on IBP Tree\>\""}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.697823173590905*^9, 3.6978232361668634`*^9}, {
  3.697823267024607*^9, 3.6978232863122206`*^9}, {3.697823356320365*^9, 
  3.6978234212662773`*^9}, {3.697823707493438*^9, 3.697823746026819*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 4.844187086458591}, {2., 8.605387202152153}, {3., 
      10.93287479991082}, {4., 12.610180165866266`}, {5., 
      13.920870973622096`}, {6., 14.996451247809466`}, {7., 
      15.908451940358823`}, {8., 16.700070850850967`}, {9., 
      17.399388959583536`}, {10., 18.025686934930246`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.887465323263068},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.611537753638338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.89921982609012, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.304684934198283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.458835614025542`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.592367006650065`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.710150042306449`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.508657738524219`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.914122846632385`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.201804919084164`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.424948470398375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.60727002719233, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.761420707019587`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.89495209964411, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.012735135300492`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.811242831518264`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.216707939626428`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.50439001207821, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.72753356339242, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.909855120186375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.064005800013632`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.197537192638155`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.31532022829454, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.11382792451231, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.519293032620475`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.806975105072254`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.030118656386467`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.21244021318042, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.36659089300768, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Number of Vertex on IBP Tree\"", TraditionalForm],
  PlotRange->{{0, 10.}, {4.111881539321277, 18.025686934930246`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{6.907755278982137, 
      FormBox["1000", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {9.210340371976184, 
      FormBox[
       TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {16.11809565095832, 
      FormBox[
       TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {4.605170185988092, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.298317366548036, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.703782474656201, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.991464547107982, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.214608098422191, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.396929655216146, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.551080335043404, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.684611727667927, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.802394763324311, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {7.600902459542082, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.006367567650246, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.294049640102028, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.517193191416238, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.699514748210191, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.85366542803745, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.987196820661973, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.104979856318357, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.903487552536127, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.308952660644293`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.596634733096073`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.819778284410283`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.002099841204238`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.156250521031495`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.289781913656018`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.407564949312402`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.206072645530174`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.611537753638338`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.89921982609012, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.122363377404328`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.304684934198283`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.458835614025542`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.592367006650065`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.710150042306449`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {14.508657738524219`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {14.914122846632385`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.201804919084164`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.424948470398375`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.60727002719233, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.761420707019587`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.89495209964411, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.012735135300492`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.811242831518264`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.216707939626428`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.50439001207821, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.72753356339242, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.909855120186375`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.064005800013632`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.197537192638155`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.31532022829454, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.11382792451231, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.519293032620475`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.806975105072254`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.030118656386467`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.21244021318042, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.36659089300768, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{3.702718748381711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Top", " ", "1"}], ":", " ", 
    RowBox[{
    "Sunway", " ", "TaihuLight", " ", "at", " ", "93", " ", "petaflops", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "^", "15"}], " ", "flops"}], ")"}], " ", "on", " ", 
     "November", " ", "2016"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"NumberOfIBPVertex", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"365", "*", "24", "*", "3600", "*", 
            RowBox[{"(", 
             RowBox[{"93", "*", 
              RowBox[{"10", "^", "15"}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "40"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"xy", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Time to compute IBP tree on 93 petaflops\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Number of Atoms\>\"", ",", "\"\<Years\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697823996331522*^9, 3.697824013870758*^9}, {
  3.69782413901967*^9, 3.6978242355134754`*^9}, {3.697824272133033*^9, 
  3.6978242812725134`*^9}, {3.6978243603271613`*^9, 3.6978243609971724`*^9}, {
  3.697824393211303*^9, 3.6978244203256054`*^9}, {3.697824458619769*^9, 
  3.697824517973592*^9}, {3.6978245542102156`*^9, 3.697824700730853*^9}, {
  3.698157868126751*^9, 3.698157870975642*^9}, {3.6981579468509655`*^9, 
  3.6981579486031284`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQEcDtlz4mRdtH0OQPgCDlZnNpeyCnlD+SIOeWG/
wsTYvKB8CQced0flzb89oHwZh9WdfP8bPrpD+QoOny5J/g557gblKzl4i6jt
1rzrCuWrOLREbpr875ILlK/mcHaeX/7lE85QvoaD6BMf7xX7nKB8LYe4zHD1
2i2OUL6Ow/KyZOagVQ5Qvp7Dg8z7+3wd7KF8A4eNn76Xfde2hfINHbhrBfQX
iltD+UYOU9k1n3sxW0L5xg5qkxznf3lnBuWbOOyQiQqfd8sEyjd18FxexO9x
zAjKN3O4bdh9/ONGAyjf3OFmhft/M2tdKN/C4U9vRX6XkCaUb+kgv3jl/bsv
VaB8KwenHbf8DQ8qQPnWDqdmiTdwGkpC+TYOAkcrEzbcF4DybR3W3dveuE6G
Ecq3c+g+xzNfoH7dfgjf3sGyYv+frRoMDhC+g8O1iX9lt6QKQPgNDg4T0mfb
8m6XgMo7OiydN0fPuEUBKu/o0NSZve/+GhWovJNDfImVX89VDai8k4N1POc9
i386UHlnBx7VN9uKJhtA5Z0dqmdd/ndiuRFU3sXhJf9uN/k9Jg4Aff+mvg==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Atoms\"", TraditionalForm], 
    FormBox["\"Years\"", TraditionalForm]},
  AxesOrigin->{0, -61.93201471186605},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{-55.262042231857095`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "24"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-52.95945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-50.65687204586901, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-48.35428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-43.74911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-41.44653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-39.14394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Time to compute IBP tree on 93 petaflops\"", TraditionalForm],
  PlotRange->{{0, 40.}, {-60.619842220592936`, 20.734852238339872`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{-55.262042231857095`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "24"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-52.95945713886305, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-50.65687204586901, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-48.35428695287496, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-43.74911676688687, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-41.44653167389282, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-39.14394658089878, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-20.72326583694641, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-16.11809565095832, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-6.907755278982137, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-4.605170185988091, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {0., 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.302585092994046, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.605170185988092, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.907755278982137, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.210340371976184, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.512925464970229`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.11809565095832, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.72326583694641, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {23.025850929940457`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{3.7027187552974377`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4) Solving Manually", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["Solving Manually: Continuos Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
  3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
  3.696000958663651*^9}, {3.69827002677421*^9, 3.698270028592888*^9}}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766607424917`*^9, 3.698276672021037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGByHandGetX", ",", "DGByHandErrorMatrix"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandGetX", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"d", "=", "1.526"}], ",", 
        RowBox[{"\[Phi]", "=", "1.91"}], ",", "a", ",", "b", ",", "c", ",", 
        "i", ",", "p", ",", "u", ",", "v", ",", "x"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "\[Theta]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "d"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", 
            RowBox[{"d", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", ",", "0"}], "}"}]}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dihedral", " ", "rotation", " ", "axis"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"u", "=", 
           RowBox[{"Normalize", "[", 
            RowBox[{"b", "-", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", " ", 
           RowBox[{"c", "+", 
            RowBox[{"d", "*", " ", "u"}]}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"b", "-", "c"}], ",", 
             RowBox[{"a", "-", "c"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{"\[Phi]", ",", "v", ",", "c"}], "]"}], "[", "p", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"dihedral", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", "c"}], "]"}], 
            "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "p"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandErrorMatrix", "[", 
     RowBox[{"G_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "edges", ",", "M", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "-", "dij"}], 
              ")"}], "/", "dij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "9"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGByHandGetX", "[", "\[Omega]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"DGProblem", "[", "x", "]"}], "[", "\"\<G\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xrange", ",", "yrange", ",", "zrange"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RotationAction", "\[Rule]", "\"\<Clip\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Mean(error):\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"DGByHandErrorMatrix", "[", 
                RowBox[{"G", ",", 
                 RowBox[{"DGByHandGetX", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", 
                    "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", ",", 
                    "\[Omega]8", ",", "\[Omega]9"}], "}"}], "]"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"BoxStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"DGByHandErrorMatrix", "[", 
          RowBox[{"G", ",", 
           RowBox[{"DGByHandGetX", "[", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", ",",
               "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
              "\[Omega]9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Torsion", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Torsion Angles\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]4", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]5", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]6", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]7", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]8", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]9", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Bounding", " ", "boxes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Bounding Limits\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"OpenerView", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Solution\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]4  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]5  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]6  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]7  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "7", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]8  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]9  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "9", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, 3.698072481114099*^9, {
   3.69827040072288*^9, 3.6982704392809677`*^9}, {3.6982704767129464`*^9, 
   3.698270486055981*^9}, {3.69827075311152*^9, 3.6982707839129333`*^9}, {
   3.6982708784692116`*^9, 3.6982710009520674`*^9}, {3.6982715503151693`*^9, 
   3.6982715571021194`*^9}, {3.698272298434101*^9, 3.6982723177884903`*^9}, {
   3.6982723607627*^9, 3.69827240129832*^9}, {3.6982724730876207`*^9, 
   3.6982724852625875`*^9}, {3.6982730960285783`*^9, 
   3.6982731030891294`*^9}, {3.6982731437015963`*^9, 3.698273157638199*^9}, {
   3.6982732033569045`*^9, 3.698273255405436*^9}, {3.698273380784088*^9, 
   3.6982733865643682`*^9}, {3.6982736799909735`*^9, 
   3.6982737316605234`*^9}, {3.698273897730236*^9, 3.6982739858410864`*^9}, {
   3.698274019835471*^9, 3.6982740332992177`*^9}, {3.698274112747086*^9, 
   3.698274124762021*^9}, {3.6982742677501135`*^9, 3.698274306521473*^9}, {
   3.698274498396601*^9, 3.6982745027545166`*^9}, {3.698274571764159*^9, 
   3.6982745897139077`*^9}, {3.6982746688748364`*^9, 3.698274741074173*^9}, {
   3.6982747716472054`*^9, 3.6982747847418785`*^9}, {3.6982748189324727`*^9, 
   3.6982748841478977`*^9}, {3.698274926542649*^9, 3.698274949153207*^9}, {
   3.698275160206649*^9, 3.698275187277109*^9}, {3.6982752501926146`*^9, 
   3.698275267361329*^9}, {3.698275308349368*^9, 3.6982753398186407`*^9}, {
   3.6982760798753653`*^9, 3.6982761022060823`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0174744877829944`", ",", "1.9013942435095377`", ",", 
   RowBox[{"-", "1.952782425550498`"}], ",", "2.9472402013226535`", ",", 
   "0.4353796993094079`", ",", "0.14336878867035807`", ",", 
   RowBox[{"-", "0.2918313388640481`"}], ",", "2.4265153411036966`", ",", 
   "0.4426926456410243`"}], "}"}]], "Output",
 CellChangeTimes->{3.7027187853859634`*^9}],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`xrange$$ = {-3, 
     3}, $CellContext`yrange$$ = {-3, 3}, $CellContext`zrange$$ = {-3, 
     3}, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
     0, $CellContext`\[Omega]6$$ = -0.7539822368615505, \
$CellContext`\[Omega]7$$ = 0, $CellContext`\[Omega]8$$ = 
     2.28079626650619, $CellContext`\[Omega]9$$ = -0.6597344572538564, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["Torsion Angles", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`\[Omega]4$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]5$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]6$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]7$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]8$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]9$$], 0}, -Pi, Pi}, {
       Hold[
        Style["Bounding Limits", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`xrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`yrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`zrange$$], {-3, 3}}, -10, 10}, {
       Hold[
        OpenerView[{
          Style["Solution", Bold, Medium], 
          Column[{
            Row[{"\[Omega]4  ", 
              Slider[2.9472402013226535`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]5  ", 
              Slider[0.4353796993094079, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]6  ", 
              Slider[0.14336878867035807`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]7  ", 
              Slider[-0.2918313388640481, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]8  ", 
              Slider[2.4265153411036966`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]9  ", 
              Slider[0.4426926456410243, {-Pi, Pi}, Enabled -> False]}]}]}]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     65135., {288., 295.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`\[Omega]4$369653$$ = 
     0, $CellContext`\[Omega]5$369658$$ = 0, $CellContext`\[Omega]6$369659$$ =
      0, $CellContext`\[Omega]7$369660$$ = 
     0, $CellContext`\[Omega]8$369661$$ = 0, $CellContext`\[Omega]9$369662$$ =
      0, $CellContext`xrange$369663$$ = 0, $CellContext`yrange$369664$$ = 
     0, $CellContext`zrange$369665$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      3, StandardForm, 
       "Variables" :> {$CellContext`xrange$$ = {-3, 
          3}, $CellContext`yrange$$ = {-3, 3}, $CellContext`zrange$$ = {-3, 
          3}, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
         0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
         0, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[Omega]4$$, $CellContext`\[Omega]4$369653$$, 0], 
         Hold[$CellContext`\[Omega]5$$, $CellContext`\[Omega]5$369658$$, 0], 
         Hold[$CellContext`\[Omega]6$$, $CellContext`\[Omega]6$369659$$, 0], 
         Hold[$CellContext`\[Omega]7$$, $CellContext`\[Omega]7$369660$$, 0], 
         Hold[$CellContext`\[Omega]8$$, $CellContext`\[Omega]8$369661$$, 0], 
         Hold[$CellContext`\[Omega]9$$, $CellContext`\[Omega]9$369662$$, 0], 
         Hold[$CellContext`xrange$$, $CellContext`xrange$369663$$, 0], 
         Hold[$CellContext`yrange$$, $CellContext`yrange$369664$$, 0], 
         Hold[$CellContext`zrange$$, $CellContext`zrange$369665$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
         Graphics3D[{{Red, 
            Tube[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}, {
            PointSize[Large], Blue, 
            Point[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}}, 
          PlotRange -> {$CellContext`xrange$$, $CellContext`yrange$$, \
$CellContext`zrange$$}, RotationAction -> "Clip", Axes -> True, 
          AxesLabel -> {"x", "y", "z"}, PlotLabel -> {"Mean(error):", 
            NumberForm[
             Max[
              $CellContext`DGByHandErrorMatrix[$CellContext`G, 
               $CellContext`DGByHandGetX[{
                0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]], {3, 2}]}, BoxStyle -> Directive[Dashed], 
          ImageSize -> Medium], 
         MatrixPlot[
          $CellContext`DGByHandErrorMatrix[$CellContext`G, 
           $CellContext`DGByHandGetX[{
            0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]], ColorFunction -> (ColorData["TemperatureMap"][
            Rescale[#, {0, 1}]]& ), ColorFunctionScaling -> False]}, 
       "Specifications" :> {
         Style[
         "Torsion Angles", Bold, Medium], {{$CellContext`\[Omega]4$$, 0}, -Pi,
           Pi}, {{$CellContext`\[Omega]5$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]6$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]7$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]8$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]9$$, 0}, -Pi, Pi}, 
         Style[
         "Bounding Limits", Bold, 
          Medium], {{$CellContext`xrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`yrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`zrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 0.1}, 
         OpenerView[{
           Style["Solution", Bold, Medium], 
           Column[{
             Row[{"\[Omega]4  ", 
               Slider[2.9472402013226535`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]5  ", 
               Slider[0.4353796993094079, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]6  ", 
               Slider[0.14336878867035807`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]7  ", 
               Slider[-0.2918313388640481, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]8  ", 
               Slider[2.4265153411036966`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]9  ", 
               Slider[0.4426926456410243, {-Pi, Pi}, Enabled -> False]}]}]}]},
        "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
      ImageSizeCache->{32782., {328., 337.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.702718786348168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722543998664*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225440636835`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225440985956`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NumberForm\\\", \\\"::\\\", \
\\\"sigz\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225441454725`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.70272254606352*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225461012955`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722546170312*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NumberForm\\\", \\\"::\\\", \
\\\"sigz\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722546201577*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722546471133*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722546502385*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225465679026`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NumberForm\\\", \\\"::\\\", \
\\\"sigz\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722546618287*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225614133635`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702722561451129*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NumberForm", "::", "sigz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"In addition to the number of digits requested, one or more \
zeros will appear as placeholders. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NumberForm/sigz\\\", \
ButtonNote -> \\\"NumberForm::sigz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225614980116`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NumberForm\\\", \\\"::\\\", \
\\\"sigz\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7027225615513973`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Manually: Discrete Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
   3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
   3.6960009726613865`*^9}, 3.6969455372420783`*^9}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766832687664`*^9, 3.6982766889084167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGByHandTreeFromBranches", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandTreeFromBranches", "[", 
     RowBox[{"G_", ",", "branch_", ",", "branches_", ",", "check_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "T", ",", "X", ",", "k", ",", "i", ",", "n", ",", "b", ",", "x", ",", 
        "y", ",", "z", ",", "dx", ",", "dy", ",", "dz", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"v", "=", 
         RowBox[{"{", "}"}]}], ",", "styVertex", ",", 
        RowBox[{"styEdges", "=", 
         RowBox[{"{", "}"}]}], ",", "m", ",", "color", ",", "valid", ",", 
        "nodes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"DGNaturalOrdering", "[", "G", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"VertexList", "[", "G", "]"}], "]"}], "-", "3"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"creating", " ", "edges"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{"2", "k"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{
              RowBox[{"2", "k"}], "+", "1"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"highlighting", " ", "current", " ", "branch"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "0"}], ",", 
         RowBox[{"k", "\[LessEqual]", "n"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"v", ",", 
            RowBox[{"FromDigits", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "k"}], "]"}], "]"}]}], "]"}], ",", "2"}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"styEdges", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"coloring", " ", "visited", " ", "nodes", " ", 
         RowBox[{"(", "branches", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"styVertex", "=", 
        RowBox[{"{", "LightGray", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "branches", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "branches", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"X", "=", 
              RowBox[{"DGBPXinit", "[", 
               RowBox[{"G", ",", 
                RowBox[{"nodes", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"b", "=", 
              RowBox[{"branches", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"check", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"checking", " ", "partial", " ", "solutions"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"valid", "&&", 
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], "<", "0.001"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"valid", " ", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Red"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "checking", " ", "only", " ", "final", " ", "solution"}], " ",
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], ">", "0.001"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{"valid", ",", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    RowBox[{"color", "=", "Red"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "b"}], "]"}], ",", "2"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ","}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"T", "=", 
        RowBox[{"TreeGraph", "[", "\[IndentingNewLine]", 
         RowBox[{"edges", ",", "\[IndentingNewLine]", 
          RowBox[{"VertexStyle", "\[Rule]", "styVertex"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"EdgeStyle", "\[Rule]", "styEdges"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GraphLayout", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<LayeredEmbedding\>\"", ",", 
             RowBox[{"LayerSizeFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"8", "&"}], ")"}]}]}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "minimal", " ", "edge", " ", "set"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "=", 
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"9", ",", "0.0", ",", "0.0"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "it", " ", "must", " ", "be", " ", "a", " ", "graph", " ", "with", " ", 
    "9", " ", "nodes"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"EdgeList", "[", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"add", " ", "extra", " ", "constraints"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"Union", "[", 
     RowBox[{"edges", ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "9"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"init", " ", "graph"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{
     RowBox[{"DGProblem", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DGRandom3DBackbone", "[", "9", "]"}], "[", "\"\<Points\>\"", 
        "]"}], ",", "edges"}], "]"}], "[", "\"\<G\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "order"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"branches", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"{", "}"}]}], ",", "node", ",", 
     RowBox[{"X", "=", 
      RowBox[{"DGBPXinit", "[", 
       RowBox[{"G", ",", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DGByHandTreeFromBranches", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}], ",", "branches", ",",
           "BP"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DGPlotAdjacencyMatrix", "[", 
            RowBox[{"G", ",", "Sym"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Tube", "[", "X", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
                RowBox[{"Point", "[", "X", "]"}]}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"s", ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\[Omega]4\>\"", ",", "\"\<\[Omega]5\>\"", ",", 
                  "\"\<\[Omega]6\>\"", ",", "\"\<\[Omega]7\>\"", ",", 
                  "\"\<\[Omega]8\>\"", ",", "\"\<\[Omega]9\>\""}], "}"}]}], 
               "}"}]}]}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Branches", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Branches\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]5", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]6", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]7", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]8", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]9", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Try\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"node", "=", "1"}], ",", 
           RowBox[{"node", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"node", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"node", "+", "3"}], "]"}], "]"}], "=", 
             RowBox[{"DGBPGetX", "[", 
              RowBox[{"G", ",", "X", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "node", "]"}], "]"}], ",", "nodes", ",", 
               RowBox[{"node", "+", "3"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"branches", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7",
              ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Options\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"BP", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sym", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"show", " ", "solutions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Solutions\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Show\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"DGBPSolver", "[", 
             RowBox[{"G", ",", "nodes"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Branches\>\"", "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"branches", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"branches", ",", "s"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]",
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Reset\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"G", "=", 
          RowBox[{
           RowBox[{"DGProblem", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DGRandom3DBackbone", "[", "9", "]"}], "[", 
              "\"\<Points\>\"", "]"}], ",", "edges"}], "]"}], "[", 
           "\"\<G\>\"", "]"}]}], ",", 
         RowBox[{"branches", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, {3.6960012909403973`*^9, 
   3.6960012938883305`*^9}, {3.696156255994712*^9, 3.6961562650100794`*^9}, {
   3.696156295886201*^9, 3.6961563106886444`*^9}, {3.6961564013359656`*^9, 
   3.6961564517039223`*^9}, {3.6961565250416493`*^9, 
   3.6961566543467717`*^9}, {3.6961567288961554`*^9, 
   3.6961568441226873`*^9}, {3.6961568909910555`*^9, 3.696156903900296*^9}, {
   3.6961569672255335`*^9, 3.696156969304701*^9}, {3.6961571034179225`*^9, 
   3.696157110312049*^9}, {3.696160282114659*^9, 3.696160302223087*^9}, {
   3.6961605625418644`*^9, 3.6961606222501583`*^9}, {3.696160658944554*^9, 
   3.6961606778289185`*^9}, {3.6961609283775125`*^9, 
   3.6961609808174286`*^9}, {3.6961610459570017`*^9, 
   3.6961610477260633`*^9}, {3.696161209739623*^9, 3.6961613158159175`*^9}, {
   3.696161357319108*^9, 3.69616136948481*^9}, {3.696162431625352*^9, 
   3.6961624330647745`*^9}, {3.6961628027014465`*^9, 
   3.6961628571260533`*^9}, {3.696162900512824*^9, 3.6961629049376287`*^9}, {
   3.6961642456888447`*^9, 3.696164270507456*^9}, {3.6961649316798134`*^9, 
   3.696164998676358*^9}, {3.696165041400201*^9, 3.696165083729754*^9}, {
   3.6961651566015034`*^9, 3.696165206769026*^9}, {3.6961652700456624`*^9, 
   3.696165289007637*^9}, {3.6961653864122925`*^9, 3.696165497141945*^9}, {
   3.696165743808255*^9, 3.696165799254837*^9}, {3.696165845290099*^9, 
   3.696165990776334*^9}, {3.6961661230691767`*^9, 3.696166191968793*^9}, {
   3.6961662871277575`*^9, 3.696166327478566*^9}, {3.696166386078822*^9, 
   3.6961664236976624`*^9}, {3.696166496850869*^9, 3.6961664989856625`*^9}, {
   3.6961665602905154`*^9, 3.69616677076039*^9}, {3.69616684916016*^9, 
   3.696166888844514*^9}, {3.696166989227959*^9, 3.6961669927334337`*^9}, {
   3.696167046616452*^9, 3.696167051273269*^9}, {3.6961670863546443`*^9, 
   3.69616711698417*^9}, {3.696168089856365*^9, 3.696168121062352*^9}, {
   3.69616818237259*^9, 3.6961682224238987`*^9}, {3.6961683411240253`*^9, 
   3.696168384465231*^9}, 3.6961684150385275`*^9, {3.6961684819548564`*^9, 
   3.6961685051447563`*^9}, {3.696168568475537*^9, 3.696168570263974*^9}, {
   3.6961686351296844`*^9, 3.6961686370314665`*^9}, {3.696168686385473*^9, 
   3.696168691443553*^9}, {3.6961687468176303`*^9, 3.6961688101433983`*^9}, {
   3.6961689711518*^9, 3.6961690483381233`*^9}, {3.696169125123598*^9, 
   3.696169175323496*^9}, {3.69616950254916*^9, 3.696169563303851*^9}, {
   3.6961696075874076`*^9, 3.6961696257426414`*^9}, {3.69616969935327*^9, 
   3.6961697070144925`*^9}, 3.6961697386375637`*^9, {3.696169815828497*^9, 
   3.6961698450990944`*^9}, {3.696169882730567*^9, 3.6961699262763777`*^9}, {
   3.6961699622860117`*^9, 3.6961699750439024`*^9}, {3.6961700134511185`*^9, 
   3.696170017009848*^9}, {3.6961700553549232`*^9, 3.696170086868808*^9}, {
   3.696170163107408*^9, 3.6961701814566517`*^9}, {3.6961702450598593`*^9, 
   3.6961702610064096`*^9}, {3.6961705582279353`*^9, 3.6961705711466084`*^9}, 
   3.6961706335282717`*^9, {3.6961707824291086`*^9, 3.6961707949249997`*^9}, {
   3.696170828378927*^9, 3.6961708451917305`*^9}, {3.6961775244960194`*^9, 
   3.696177536639609*^9}, {3.6961777114223776`*^9, 3.6961778726060057`*^9}, {
   3.6961779536871257`*^9, 3.696178001287077*^9}, {3.6961780446438513`*^9, 
   3.6961780491063614`*^9}, {3.69617808066495*^9, 3.6961782203938217`*^9}, {
   3.696178433914888*^9, 3.6961784492746*^9}, {3.696178482911583*^9, 
   3.6961785279941273`*^9}, {3.6963358148945017`*^9, 3.696335824944496*^9}, {
   3.696336702720662*^9, 3.696336711565955*^9}, {3.6963367506934752`*^9, 
   3.696336898626133*^9}, {3.6963369663555574`*^9, 3.6963370245934205`*^9}, {
   3.6963370579884453`*^9, 3.6963370911332693`*^9}, {3.69633713867729*^9, 
   3.69633714758457*^9}, {3.6963371784547625`*^9, 3.696337330668229*^9}, 
   3.696337506286955*^9, {3.696342030265442*^9, 3.696342055614204*^9}, {
   3.6965973436925826`*^9, 3.6965973584907165`*^9}, {3.6965973978907404`*^9, 
   3.6965974400600586`*^9}, {3.6965980687982664`*^9, 3.696598082182392*^9}, {
   3.6965987379952097`*^9, 3.69659875237007*^9}, {3.6965991595664005`*^9, 
   3.696599161357998*^9}, {3.6966041446608152`*^9, 3.6966042105828886`*^9}, {
   3.696604264613673*^9, 3.69660426850031*^9}, {3.6966042987761164`*^9, 
   3.696604362039445*^9}, {3.696604415473429*^9, 3.696604443979203*^9}, {
   3.6966044989890485`*^9, 3.6966045013103867`*^9}, {3.696610914922676*^9, 
   3.6966109153078117`*^9}, {3.696950003267107*^9, 3.69695000492143*^9}, 
   3.697995540885202*^9, {3.69799566194641*^9, 3.69799566224811*^9}, {
   3.6979957004319425`*^9, 3.6979958659780674`*^9}, {3.697995991555769*^9, 
   3.6979960054415*^9}, {3.6979962537211037`*^9, 3.697996260026286*^9}, {
   3.6979963909522963`*^9, 3.6979964058568335`*^9}, {3.698058369377993*^9, 
   3.6980584397127724`*^9}, {3.698072481305226*^9, 3.698072481323738*^9}, {
   3.6982767055230107`*^9, 3.6982769867686496`*^9}, {3.6982770477143927`*^9, 
   3.698277084070335*^9}, {3.698277363050057*^9, 3.698277378524715*^9}, {
   3.6982777503800545`*^9, 3.698277789489343*^9}, {3.6982778195086*^9, 
   3.698277825100151*^9}, {3.6982781608132734`*^9, 3.6982782111922708`*^9}, {
   3.698278364609772*^9, 3.6982783666122537`*^9}, 3.698278459380054*^9, {
   3.700314326154815*^9, 3.7003143261704407`*^9}, {3.70272171574891*^9, 
   3.702721775415797*^9}, {3.7027219332196655`*^9, 3.702721937385425*^9}, {
   3.7027220174543805`*^9, 3.702722189843503*^9}, {3.702722228626461*^9, 
   3.702722237594743*^9}, {3.70272227525725*^9, 3.7027224005488477`*^9}, {
   3.7027224342108183`*^9, 3.702722472304862*^9}, {3.702722543345603*^9, 
   3.7027225659706087`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`branches$$ = {{0, 0, 1, 0, 0, 0}, {1, 1, 0, 1,
   1, 1}}, $CellContext`b$$ = {}, $CellContext`s$$ = {{0, 0, 1, 0, 0, 0}, {1, 
  1, 0, 1, 1, 
  1}}, $CellContext`node$$, $CellContext`X$$ = {{0, 0, 
   0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 0}, {0, 0, 
   0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`BP$$ = True, $CellContext`Sym$$ = 
     False, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
     0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
     1, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["Branches", Bold, Medium]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[$CellContext`\[Omega]4$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]5$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]6$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]7$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]8$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]9$$], {0, 1}}, {
       Hold[
        Button[
        "Try", {$CellContext`b$$ = {$CellContext`\[Omega]4$$, $CellContext`\
\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}, 
          
          For[$CellContext`node$$ = 1, $CellContext`node$$ <= 
           Length[$CellContext`b$$], 
           Increment[$CellContext`node$$], 
           Part[$CellContext`X$$, $CellContext`node$$ + 
              3] = $CellContext`DGBPGetX[$CellContext`G, $CellContext`X$$, 
              
              Part[$CellContext`b$$, $CellContext`node$$], \
$CellContext`nodes, $CellContext`node$$ + 3]; Null], 
          
          AppendTo[$CellContext`branches$$, {$CellContext`\[Omega]4$$, \
$CellContext`\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}]}, Background -> 
         RGBColor[0.87, 0.94, 1]]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Style["Options", Bold, Medium]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[$CellContext`BP$$], {False, True}}, {
       Hold[$CellContext`Sym$$], {False, True}}, {
       Hold[
        Style["Solutions", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Button["Show", {$CellContext`s$$ = Part[
            $CellContext`DGBPSolver[$CellContext`G, $CellContext`nodes], 1][
           "Branches"], $CellContext`s$$ = Table[
            Part[
             
             Part[$CellContext`s$$, $CellContext`i], $CellContext`j], \
{$CellContext`i, 
             Length[$CellContext`s$$]}, {$CellContext`j, 4, 
             9}], $CellContext`branches$$ = 
          Union[$CellContext`branches$$, $CellContext`s$$]}, Background -> 
         RGBColor[1, 0.85, 0.85]]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Button["Reset", {$CellContext`G = $CellContext`DGProblem[
            $CellContext`DGRandom3DBackbone[9]["Points"], $CellContext`edges][
           "G"], $CellContext`branches$$ = {}, $CellContext`b$$ = {}, \
$CellContext`s$$ = {}}, Background -> RGBColor[1, 0.85, 0.85]]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     974., {255.5, 264.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`\[Omega]4$442712$$ = 
     False, $CellContext`\[Omega]5$442713$$ = 
     False, $CellContext`\[Omega]6$442714$$ = 
     False, $CellContext`\[Omega]7$442715$$ = 
     False, $CellContext`\[Omega]8$442716$$ = 
     False, $CellContext`\[Omega]9$442717$$ = 
     False, $CellContext`BP$442718$$ = False, $CellContext`Sym$442719$$ = 
     False}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`BP$$ = False, $CellContext`Sym$$ = 
         False, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
         0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
         0, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[Omega]4$$, $CellContext`\[Omega]4$442712$$, 
          False], 
         Hold[$CellContext`\[Omega]5$$, $CellContext`\[Omega]5$442713$$, 
          False], 
         Hold[$CellContext`\[Omega]6$$, $CellContext`\[Omega]6$442714$$, 
          False], 
         Hold[$CellContext`\[Omega]7$$, $CellContext`\[Omega]7$442715$$, 
          False], 
         Hold[$CellContext`\[Omega]8$$, $CellContext`\[Omega]8$442716$$, 
          False], 
         Hold[$CellContext`\[Omega]9$$, $CellContext`\[Omega]9$442717$$, 
          False], 
         Hold[$CellContext`BP$$, $CellContext`BP$442718$$, False], 
         Hold[$CellContext`Sym$$, $CellContext`Sym$442719$$, False]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Row[{
          $CellContext`DGByHandTreeFromBranches[$CellContext`G, \
{$CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}, $CellContext`branches$$, $CellContext`BP$$], 
          Column[{
            $CellContext`DGPlotAdjacencyMatrix[$CellContext`G, \
$CellContext`Sym$$], 
            Graphics3D[{{Red, 
               Tube[$CellContext`X$$]}, {
               PointSize[Large], Blue, 
               Point[$CellContext`X$$]}}], 
            
            MatrixForm[$CellContext`s$$, 
             TableHeadings -> {
              None, {"\[Omega]4", "\[Omega]5", "\[Omega]6", "\[Omega]7", 
                "\[Omega]8", "\[Omega]9"}}]}]}], "Specifications" :> {
         Style[
         "Branches", Bold, Medium], {$CellContext`\[Omega]4$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]5$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]6$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]7$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]8$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]9$$, {0, 1}, 
          ControlType -> SetterBar}, 
         Button[
         "Try", {$CellContext`b$$ = {$CellContext`\[Omega]4$$, $CellContext`\
\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}, 
           
           For[$CellContext`node$$ = 1, $CellContext`node$$ <= 
            Length[$CellContext`b$$], 
            Increment[$CellContext`node$$], 
            Part[$CellContext`X$$, $CellContext`node$$ + 
               3] = $CellContext`DGBPGetX[$CellContext`G, $CellContext`X$$, 
               
               Part[$CellContext`b$$, $CellContext`node$$], \
$CellContext`nodes, $CellContext`node$$ + 3]; Null], 
           
           AppendTo[$CellContext`branches$$, {$CellContext`\[Omega]4$$, \
$CellContext`\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}]}, Background -> 
          RGBColor[0.87, 0.94, 1]], Delimiter, 
         Style[
         "Options", Bold, Medium], {$CellContext`BP$$, {False, True}, 
          ControlType -> Checkbox}, {$CellContext`Sym$$, {False, True}, 
          ControlType -> Checkbox}, Delimiter, 
         Style["Solutions", Bold, Medium], 
         Button["Show", {$CellContext`s$$ = Part[
             $CellContext`DGBPSolver[$CellContext`G, $CellContext`nodes], 1][
            "Branches"], $CellContext`s$$ = Table[
             Part[
              
              Part[$CellContext`s$$, $CellContext`i], $CellContext`j], \
{$CellContext`i, 
              Length[$CellContext`s$$]}, {$CellContext`j, 4, 
              9}], $CellContext`branches$$ = 
           Union[$CellContext`branches$$, $CellContext`s$$]}, Background -> 
          RGBColor[1, 0.85, 0.85]], 
         Button["Reset", {$CellContext`G = $CellContext`DGProblem[
             $CellContext`DGRandom3DBackbone[9][
             "Points"], $CellContext`edges][
            "G"], $CellContext`branches$$ = {}, $CellContext`b$$ = {}, \
$CellContext`s$$ = {}}, Background -> RGBColor[1, 0.85, 0.85]]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{1115., {297., 306.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  ControlPlacement -> Left,
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.7027188095897207`*^9, 3.702718966700674*^9, 3.7027208047040443`*^9, 
   3.702721776963258*^9, 3.702721938186657*^9, 3.7027224912880907`*^9, {
   3.702722552327898*^9, 3.702722568171224*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5) Solving IMDGP using Rotations", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}, {3.698572390735381*^9, 
   3.6985723924870296`*^9}, {3.6985725480912857`*^9, 
   3.6985725546008253`*^9}, {3.7026482856328583`*^9, 3.702648293701703*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["DGRotAngleInterval", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.702667202900814*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGGetRotAngleInterval", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGetRotAngleInterval", "[", 
   RowBox[{
   "dab_", ",", "dac_", ",", "dbc_", ",", "dax_", ",", "dbx_", ",", "lcx_", 
    ",", "ucx_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "r", ",", "q", ",", "\[Omega]", ",", 
      "\[Theta]", ",", "\[Chi]", ",", "\[Rho]", ",", "lcxMin", ",", "ucxMax", 
      ",", 
      RowBox[{"verbose", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"creates", " ", "the", " ", "base", " ", "triangle"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"{", 
       RowBox[{"dab", ",", "0", ",", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dab", "^", "2"}], "+", 
          RowBox[{"dac", "^", "2"}], "-", 
          RowBox[{"dbc", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "dac", "*", "dab"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"dac", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{a,b,c}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "intersection", " ", "of", " ", "the", " ", "circunference", " ", 
        "and", " ", "the", " ", "positive", " ", "quadrant", " ", "of", " ", 
        "XY"}], "-", "Plane"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dab", "^", "2"}], "+", 
          RowBox[{"dax", "^", "2"}], "-", 
          RowBox[{"dbx", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "dab", "*", "dax"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Theta]=\>\"", ",", "\[Theta]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"dax", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";", 
     " ", 
     RowBox[{"(*", " ", "intersection", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"q", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"circle", " ", "radius"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{q,r}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"q", ",", "r"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{daq,dbq}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"a", "-", "q"}], "]"}], ",", 
           RowBox[{"Norm", "[", 
            RowBox[{"b", "-", "q"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"circunference", " ", "parametrization"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]", "[", "\[Theta]_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"r", "*", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", "*", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{lcx,ucx}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"lcx", ",", "ucx"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lcxMin", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"lcx", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"c", "-", 
          RowBox[{"\[Chi]", "[", "0.01", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ucxMax", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"ucx", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"c", "-", 
          RowBox[{"\[Chi]", "[", 
           RowBox[{"\[Pi]", "-", "0.01"}], "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{lcxMin,ucxMax}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"lcxMin", ",", "ucxMax"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calculates", " ", "rotation", " ", "angle", " ", "given", " ", "a", 
       " ", "distance", " ", "to", " ", "point", " ", "c"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Rho]", "[", "\[Delta]_", "]"}], ":=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", 
          RowBox[{"\[Delta]", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "r", "*", 
          RowBox[{"c", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]", "[", "lcxMin", "]"}], ",", 
        RowBox[{"\[Rho]", "[", "ucxMax", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7025849436368012`*^9, 3.702585225357638*^9}, {
   3.7025852591754107`*^9, 3.7025857138940496`*^9}, {3.7025857565632687`*^9, 
   3.702585903118622*^9}, {3.7025860436832285`*^9, 3.7025860476533823`*^9}, {
   3.7025861635004416`*^9, 3.7025863147989535`*^9}, {3.702586430620968*^9, 
   3.702586445561121*^9}, {3.70258657487226*^9, 3.702586575756974*^9}, {
   3.7025866391056137`*^9, 3.7025867215501156`*^9}, {3.7025867527108927`*^9, 
   3.7025867916388707`*^9}, 3.702587331764036*^9, {3.702587459676263*^9, 
   3.7025874659953156`*^9}, {3.7025875826488247`*^9, 
   3.7025875858814373`*^9}, {3.7025876481335454`*^9, 3.702587649270815*^9}, {
   3.702588255078732*^9, 3.702588292389495*^9}, {3.702630969216283*^9, 
   3.702631072151683*^9}, {3.7026311378776245`*^9, 3.702631214363267*^9}, {
   3.702631260295026*^9, 3.702631519663731*^9}, {3.7026315518069363`*^9, 
   3.7026316225921144`*^9}, {3.702634362216016*^9, 3.7026343818031397`*^9}, {
   3.702634422481219*^9, 3.7026344364337544`*^9}, {3.7026344933507614`*^9, 
   3.7026345371882915`*^9}, {3.7026349425169935`*^9, 
   3.7026349810576572`*^9}, {3.702644783859481*^9, 3.7026447841389008`*^9}, {
   3.7026448331592035`*^9, 3.702644901939868*^9}, 3.7026453149856663`*^9, {
   3.702648300284288*^9, 3.702648347022227*^9}, {3.702661215483858*^9, 
   3.702661225833205*^9}, {3.7026612564268284`*^9, 3.7026612993293605`*^9}, {
   3.7026614086918707`*^9, 3.7026614836580124`*^9}, {3.702661515331992*^9, 
   3.7026618629115076`*^9}, {3.702661911599752*^9, 3.7026619271410403`*^9}, {
   3.702662046008308*^9, 3.7026622347484393`*^9}, {3.702662396744067*^9, 
   3.702662501452999*^9}, {3.7026625645682664`*^9, 3.702662568861965*^9}, {
   3.70266265335056*^9, 3.7026628004748645`*^9}, {3.702662839687356*^9, 
   3.702662880985922*^9}, {3.7026629460938168`*^9, 3.70266308084925*^9}, {
   3.702663124856131*^9, 3.7026631638642344`*^9}, {3.7026633593211184`*^9, 
   3.7026633662045236`*^9}, {3.702663684901252*^9, 3.7026638076941195`*^9}, {
   3.7026638379649143`*^9, 3.7026640065720806`*^9}, {3.7026640557126565`*^9, 
   3.702664241092295*^9}, {3.7026643351504836`*^9, 3.702664449793388*^9}, {
   3.702664589938775*^9, 3.702664736540487*^9}, {3.7026647674144564`*^9, 
   3.7026650052647977`*^9}, {3.702665122778717*^9, 3.7026654088639297`*^9}, {
   3.7026659169400883`*^9, 3.7026659633030586`*^9}, {3.702666134124052*^9, 
   3.702666134255231*^9}, {3.70266616661606*^9, 3.702666227237485*^9}, {
   3.7026663558776674`*^9, 3.702666425489391*^9}, 3.7026664829392333`*^9, {
   3.70266652751575*^9, 3.7026665284225044`*^9}, {3.7026665703184357`*^9, 
   3.7026666700317545`*^9}, {3.7026668892991433`*^9, 3.702666896318932*^9}, {
   3.702666959854605*^9, 3.702666977200746*^9}, {3.7026672968919373`*^9, 
   3.7026673108613815`*^9}, {3.7026674288436193`*^9, 
   3.7026674419812307`*^9}, {3.702667581808366*^9, 3.702667664519201*^9}, {
   3.702668108800061*^9, 3.7026681347733264`*^9}, {3.702668186733611*^9, 
   3.7026682207794943`*^9}, {3.7026683310922623`*^9, 
   3.7026683401459484`*^9}, {3.7026684008277397`*^9, 
   3.7026684303024073`*^9}, {3.702675060885282*^9, 3.702675112744052*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"calculating", " ", "rotation", " ", "angle", " ", "bounds"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"b", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"c", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0"}], "}"}]}], ";", 
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dab", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "b"}], "]"}]}], ";", 
    RowBox[{"dac", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "c"}], "]"}]}], ";", 
    RowBox[{"dbc", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"b", "-", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dax", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "x"}], "]"}]}], ";", 
    RowBox[{"dbx", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"b", "-", "x"}], "]"}]}], ";", 
    RowBox[{"dcx", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"c", "-", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ucx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "*", "dcx"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lcx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Epsilon]"}], ")"}], "*", "dcx"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Omega]", "=", 
    RowBox[{"DGGetRotAngleInterval", "[", 
     RowBox[{
     "dab", ",", "dac", ",", "dbc", ",", "dax", ",", "dbx", ",", "lcx", ",", 
      "ucx"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7026655093224525`*^9, 3.702665554563734*^9}, {
   3.7026655902521696`*^9, 3.7026657447290707`*^9}, {3.7026657949966373`*^9, 
   3.7026658281277657`*^9}, 3.702665892123801*^9, {3.7026659690715313`*^9, 
   3.7026659883743114`*^9}, 3.702666085747013*^9, {3.7026662804870453`*^9, 
   3.70266628066825*^9}, {3.702667120041193*^9, 3.7026671205853405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2817898986213951`", ",", "1.8912529808444947`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.702675122012528*^9, 3.702720232608081*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGGetAllRotAngleInterval", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.7026672225036063`*^9}, {
  3.7026744325981674`*^9, 3.7026744339580617`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGGetAllRotAngleInterval", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGGetAllRotAngleInterval", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "natoms", ",", "\[Omega]", ",", "dab", ",", "dac", ",", "dbc", ",", 
       "dax", ",", "dbx", ",", "lcx", ",", "ucx", ",", "i", ",", "j"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"natoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "natoms"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", "natoms"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dab", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dac", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dbc", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dax", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dbx", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lcx", ",", "ucx"}], "}"}], "=", 
          RowBox[{"DGEdgeDistanceBounds", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Omega]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"DGGetRotAngleInterval", "[", 
           RowBox[{
           "dab", ",", "dac", ",", "dbc", ",", "dax", ",", "dbx", ",", "lcx", 
            ",", "ucx"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[Omega]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702666989546089*^9, 3.702666997100268*^9}, {
  3.7026670869120684`*^9, 3.702667087138389*^9}, {3.7026672321214447`*^9, 
  3.7026672373297553`*^9}, {3.7026684671240573`*^9, 3.7026684979152117`*^9}, {
  3.702674906228129*^9, 3.7026749065957527`*^9}, {3.7026751297842484`*^9, 
  3.702675133116129*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "problem"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"5", ",", "0.1", ",", "5", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", "G", "]"}], "\[IndentingNewLine]", 
   RowBox[{"\[Omega]", "=", 
    RowBox[{"DGGetAllRotAngleInterval", "[", "G", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.702644906261314*^9, 3.7026449100171323`*^9}, {
   3.702645036161538*^9, 3.702645094031803*^9}, {3.7026451246550045`*^9, 
   3.7026451295210896`*^9}, {3.702645169536258*^9, 3.7026451721829042`*^9}, {
   3.702662516787837*^9, 3.702662527822175*^9}, {3.7026626074976935`*^9, 
   3.702662617656565*^9}, 3.70266550309933*^9, {3.7026670078134966`*^9, 
   3.702667009583333*^9}, {3.702667074676117*^9, 3.7026670821914744`*^9}, {
   3.7026751439485674`*^9, 3.7026751464737434`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {PointSize[Medium], 
    PointBox[{{2, 5}, {3, 5}, {4, 5}, {5, 5}, {3, 4}, {4, 4}, {5, 4}, {4, 
     3}, {5, 3}, {5, 2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 5}, {5, 1}}]}},
  Axes->True,
  AxesOrigin->{1, 1},
  GridLines->Automatic,
  ImageSize->{92.59259259259244, Automatic},
  Ticks->{Automatic, {{1, 
      FormBox["5", TraditionalForm]}, {2, 
      FormBox["4", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["2", TraditionalForm]}, {5, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.7026451664241695`*^9, 3.702645173358182*^9}, 
   3.702662618247024*^9, 3.7026664907720385`*^9, {3.702667009946682*^9, 
   3.7026670616008396`*^9}, 3.702674923279357*^9, {3.7026751365053864`*^9, 
   3.702675146938216*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3836497315887714`", ",", "1.4492465058604425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.390625812787948`", ",", "1.4532091552367306`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7026451664241695`*^9, 3.702645173358182*^9}, 
   3.702662618247024*^9, 3.7026664907720385`*^9, {3.702667009946682*^9, 
   3.7026670616008396`*^9}, 3.702674923279357*^9, {3.7026751365053864`*^9, 
   3.70267514694621*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGSolverRot", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.7026672225036063`*^9}, {
  3.7026744325981674`*^9, 3.7026744339580617`*^9}, {3.702674958850687*^9, 
  3.7026749624664736`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGSolverRot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGSolverRot", "[", 
   RowBox[{"G_", ",", "\[Beta]_", ",", "nodes_", ",", "nsample_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "natoms", ",", "\[Omega]", ",", "i", ",", "j", ",", "\[Theta]", ",", 
      "\[Phi]", ",", "\[Rho]", ",", "\[Epsilon]", ",", "a", ",", "b", ",", 
      "c", ",", "n", ",", "p", ",", "q", ",", "x", ",", "dab", ",", "dac", 
      ",", "dbc", ",", "dax", ",", "dbx", ",", "dcx", ",", "X", ",", 
      "isSolution"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"natoms", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"DGGetAllRotAngleInterval", "[", "G", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"set", " ", "the", " ", "first", " ", "triangle"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"dab", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dac", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"1", "\[UndirectedEdge]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dbc", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"X", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"isSolution", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nsample"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "natoms"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"dab", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dab", "^", "2"}], "+", 
             RowBox[{"dac", "^", "2"}], "-", 
             RowBox[{"dbc", "^", "2"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "dac", "*", "dab"}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "=", 
         RowBox[{"dac", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[1]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[2]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[3]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"select", " ", "random", " ", "rotation", " ", "angles"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "4"}], ",", 
          RowBox[{"i", "\[LessEqual]", "natoms"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"get", " ", "distances"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dab", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dac", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dbc", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dax", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"dbx", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<dax=\>\"", ",", "dax"}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
           RowBox[{"b", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "2"}], "]"}], "]"}]}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "3"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"circunference", " ", "center"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dab", "^", "2"}], "+", 
                RowBox[{"dax", "^", "2"}], "-", 
                RowBox[{"dbx", "^", "2"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "dab", "*", "dax"}], ")"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"p", "=", 
            RowBox[{"a", "+", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"b", "-", "a"}], "]"}], "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "dax"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{\[Theta],p}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "p"}], "}"}]}], "]"}], ";"}], "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "intersection", " ", "of", " ", "circunference", " ", "and", " ", 
             "the", " ", "triangle", " ", "abc"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"n", "=", 
            RowBox[{"Cross", "[", 
             RowBox[{
              RowBox[{"b", "-", "a"}], ",", 
              RowBox[{"c", "-", "a"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"q", "=", 
            RowBox[{"p", "+", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"Cross", "[", 
                RowBox[{"n", ",", 
                 RowBox[{"b", "-", "a"}]}], "]"}], "]"}], "*", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "dax"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{n,q}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "q"}], "}"}]}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{daq,dbq}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", "q"}], "]"}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", "q"}], "]"}]}], "}"}]}], "]"}], ";"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"random", " ", "rotation", " ", "angle"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"\[Phi]", "=", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Rho]", "=", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], "^", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "*", "\[Phi]"}], ",", 
              RowBox[{"b", "-", "a"}], ",", "a"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"\[Rho]", "[", "q", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"X", ",", "x"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzmlI0wEcxvGpICxkq0wzGYGsyIYX6YtKEbdi4dwY/V1sHrU1CGuYSzwq
UqIX2aVdyASDLaPDICKPiSZk5tC1MCRwaKcplKgdhIsgZ+37f/Hj8+L38PCk
2J3CkWiJRLItcvhr3vNC51pUBzdce4U7hn1hrNqrkBZFrA0MytFkK0zEG5ta
k3HC7VGi/bYqHTPK8zNx2ZOZjTUv9wuYOD1cgg71m3IxN7JQjWkdz2rxcejT
BZx7625HoULvEXvMPzowv6vhPra6ZI8wL5TrFf9/FkW/d2r9Yn9M9DjumTkV
FvdpjTF69k2q4jBj6Uk8njjzeSPWFRxVoFQ+lorrTZfSsDTqpB4bvLMGFHST
gphTjx5Af7DtIH4rnqvE37uSLuPKg5Yr+HRt7HXc8s7iwvqbhls48bHxLs7+
7e/GGeV5Lw4UnB3AYPrqIL6/2jKGP895/aia6ltCy+7OELb7VsK4dcG9ikb7
Q5kh4tDre3LU1JiLbBGtx5yiljtOM/4b2W7H0tgPQ/i1rek51ktPT+EXWfU0
appz1hymd9wfhxatMgEDVYHNeMjUlYPWZYcG+3p0+3CnwliIWRetZTjv67Xh
unCxA7ubjcfxP6VxQUA=
  "]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "problem"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"natoms", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"natoms", ",", "0.1", ",", "5", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", "G", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nodes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "natoms"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "natoms"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGSolverRot", "[", 
      RowBox[{"G", ",", "\[Beta]", ",", "nodes", ",", "10"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.702644906261314*^9, 3.7026449100171323`*^9}, {
   3.702645036161538*^9, 3.702645094031803*^9}, {3.7026451246550045`*^9, 
   3.7026451295210896`*^9}, {3.702645169536258*^9, 3.7026451721829042`*^9}, {
   3.702662516787837*^9, 3.702662527822175*^9}, {3.7026626074976935`*^9, 
   3.702662617656565*^9}, 3.70266550309933*^9, {3.7026670078134966`*^9, 
   3.702667009583333*^9}, {3.702667074676117*^9, 3.7026670821914744`*^9}, {
   3.7026751439485674`*^9, 3.7026751464737434`*^9}, {3.7026783946413198`*^9, 
   3.7026784394789658`*^9}, {3.7026784992743807`*^9, 3.702678522562768*^9}, {
   3.70272017770084*^9, 3.7027201780690255`*^9}, 3.7027205533181133`*^9, {
   3.70272129436683*^9, 3.702721318408942*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {PointSize[Medium], 
    PointBox[{{2, 5}, {3, 5}, {4, 5}, {5, 5}, {3, 4}, {4, 4}, {5, 4}, {4, 
     3}, {5, 3}, {5, 2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 5}, {5, 1}}]}},
  Axes->True,
  AxesOrigin->{1, 1},
  GridLines->Automatic,
  ImageSize->{92.59259259259244, Automatic},
  Ticks->{Automatic, {{1, 
      FormBox["5", TraditionalForm]}, {2, 
      FormBox["4", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["2", TraditionalForm]}, {5, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.7026451664241695`*^9, 3.702645173358182*^9}, 
   3.702662618247024*^9, 3.7026664907720385`*^9, {3.702667009946682*^9, 
   3.7026670616008396`*^9}, 3.702674923279357*^9, {3.7026751365053864`*^9, 
   3.702675146938216*^9}, 3.7026785239520397`*^9, 3.702719080324108*^9, {
   3.7027201575998797`*^9, 3.702720178719222*^9}, 3.702720538902342*^9, 
   3.7027206193614874`*^9, {3.7027207317525067`*^9, 3.702720761511318*^9}, 
   3.7027210512426453`*^9, {3.7027210890475054`*^9, 3.702721104737157*^9}, {
   3.7027212777342305`*^9, 3.7027213192615037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{"x", ",", "0.2", ",", "0.08"}], "]"}]], "Input",
 CellChangeTimes->{{3.7027207842406006`*^9, 3.7027207881272287`*^9}, 
   3.702721111023469*^9, {3.7027211477836103`*^9, 3.7027212137574453`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.1742594759762148`, 2.280749601319949, 0.938872557449914}, {
      1.0999243614397167`, 1.6027293855026805`, 2.3039508986779738`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.2653182725529315`, 2.248620309982802, 1.0405640575198785`}, {
      1.5585316387911443`, 1.6953483090361972`, 2.4321789521037918`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.4056200087983042`, 2.199116082731817, 1.1646539965512173`}, {
      1.3319265333571622`, 1.2867294371942253`, 2.3856355200486323`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.4118252681989325`, 2.196926611811922, 1.1694013050381455`}, {
      1.4013178054724003`, 1.3027335940809368`, 2.405922408888866}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.518969703222003, 2.1591216451593054`, 1.2430471091740505`}, {
      1.1724645506610032`, 1.1324922383755616`, 2.317589914452433}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.5370251771086432`, 2.152750930823702, 1.254019016842083}, {
      1.468981015415135, 1.159301536483066, 2.4103512757294894`}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.6934540497820354`, 2.0975563860612914`, 1.3338808671689033`}, {
      2.3770603916646453`, 1.3353734668455588`, 2.465444195928571}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.7159409052613512`, 2.0896220979077844`, 1.343288412716399}, {
      1.4933063637561752`, 1.0045689118642012`, 2.392940471441313}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {1.7540444050283757`, 2.0761776148813897`, 1.3581252078121717`}, {
      2.389925303945514, 1.2293614677819233`, 2.4568671681486056`}}, 0.08]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{0.06455326826600183, 1.5113433890246748`, 1.5244795123635912`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{0.9883923432323425, 2.346331175889702, 0.6424405340006277}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.0999243614397167`, 1.6027293855026805`, 2.3039508986779738`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.1724645506610032`, 1.1324922383755616`, 2.317589914452433}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.1742594759762148`, 2.280749601319949, 0.938872557449914}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.2653182725529315`, 2.248620309982802, 1.0405640575198785`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.3319265333571622`, 1.2867294371942253`, 2.3856355200486323`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.4013178054724003`, 1.3027335940809368`, 2.405922408888866}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.4056200087983042`, 2.199116082731817, 1.1646539965512173`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.4118252681989325`, 2.196926611811922, 1.1694013050381455`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.468981015415135, 1.159301536483066, 2.4103512757294894`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.4933063637561752`, 1.0045689118642012`, 2.392940471441313}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.518969703222003, 2.1591216451593054`, 1.2430471091740505`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.5370251771086432`, 2.152750930823702, 1.254019016842083}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.5585316387911443`, 1.6953483090361972`, 2.4321789521037918`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.6934540497820354`, 2.0975563860612914`, 1.3338808671689033`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.7159409052613512`, 2.0896220979077844`, 1.343288412716399}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{1.7540444050283757`, 2.0761776148813897`, 1.3581252078121717`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{2.03375551090897, 1.4390484151485559`, 0.}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{2.3770603916646453`, 1.3353734668455588`, 2.465444195928571}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{2.389925303945514, 1.2293614677819233`, 2.4568671681486056`}, 
     0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{1.526, 0, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{2.03375551090897, 1.4390484151485559`, 0.}, 0.2]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 0}, {1.526, 0, 0}, {2.03375551090897, 1.4390484151485559`,
       0.}, {0.9883923432323425, 2.346331175889702, 0.6424405340006277}, {
      0.06455326826600183, 1.5113433890246748`, 1.5244795123635912`}}, 0.08]}},
  Axes->False,
  Boxed->False,
  ImageSize->{421.56412964075326`, 400.8927460791206},
  ViewPoint->{-0.43721529126467706`, -3.227609399591483, 0.9172678740439213},
  ViewVertical->{-0.8860781661711539, -0.3185582862805066, 
   0.40309633209617435`}]], "Output",
 CellChangeTimes->{
  3.702720792112635*^9, 3.7027211115385485`*^9, {3.7027211502984343`*^9, 
   3.7027212141414385`*^9}, {3.702721296852043*^9, 3.7027213224955015`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 827},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "er" -> 
  SubscriptBox["e", "r"], "es" -> SubscriptBox["e", "s"], "e0" -> 
  SubscriptBox["e", "0"], "e1" -> SubscriptBox["e", "1"], "e2" -> 
  SubscriptBox["e", "2"], "e3" -> SubscriptBox["e", "3"], "einf" -> 
  SubscriptBox["e", "\[Infinity]"], "I5" -> SubscriptBox["I", "5"]},
Magnification:>1.35 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 156, "Title"],
Cell[CellGroupData[{
Cell[837, 30, 458, 6, 119, "Chapter"],
Cell[CellGroupData[{
Cell[1320, 40, 671, 12, 117, "Subchapter"],
Cell[CellGroupData[{
Cell[2016, 56, 149, 2, 93, "Section"],
Cell[2168, 60, 31286, 770, 3579, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[33491, 835, 176, 2, 73, "Section"],
Cell[CellGroupData[{
Cell[33692, 841, 344, 6, 69, "Input"],
Cell[34039, 849, 395, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34471, 863, 1756, 38, 150, "Input"],
Cell[CellGroupData[{
Cell[36252, 905, 2279, 72, 217, "Print"],
Cell[38534, 979, 1797, 62, 217, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40380, 1047, 1737, 42, 150, "Input"],
Cell[42120, 1091, 1591, 50, 103, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43748, 1146, 1863, 46, 177, "Input"],
Cell[45614, 1194, 1593, 50, 103, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47244, 1249, 1273, 31, 123, "Input"],
Cell[CellGroupData[{
Cell[48542, 1284, 401, 10, 28, "Print"],
Cell[48946, 1296, 395, 10, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49414, 1314, 557, 10, 144, "Subchapter"],
Cell[CellGroupData[{
Cell[49996, 1328, 98, 1, 93, "Section"],
Cell[50097, 1331, 61732, 1346, 4851, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111866, 2682, 97, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[111988, 2687, 237, 5, 69, "Input"],
Cell[112228, 2694, 545, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112810, 2711, 1395, 38, 96, "Input"],
Cell[114208, 2751, 169, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114414, 2761, 719, 21, 69, "Input"],
Cell[115136, 2784, 167, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115340, 2794, 693, 20, 69, "Input"],
Cell[116036, 2816, 385, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116458, 2832, 370, 9, 69, "Input"],
Cell[116831, 2843, 1393, 37, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118261, 2885, 680, 16, 96, "Input"],
Cell[118944, 2903, 2342, 73, 70, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121323, 2981, 1117, 27, 123, "Input"],
Cell[122443, 3010, 88, 1, 70, "Output"],
Cell[122534, 3013, 2347, 73, 70, "Print"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124942, 3093, 258, 6, 113, "Subchapter"],
Cell[CellGroupData[{
Cell[125225, 3103, 98, 1, 93, "Section"],
Cell[125326, 3106, 11453, 272, 1446, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[136816, 3383, 95, 1, 73, "Section"],
Cell[CellGroupData[{
Cell[136936, 3388, 796, 18, 96, "Input"],
Cell[137735, 3408, 1285, 30, 456, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139057, 3443, 467, 12, 96, "Input"],
Cell[139527, 3457, 1240, 27, 506, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140840, 3492, 339, 5, 119, "Chapter"],
Cell[CellGroupData[{
Cell[141204, 3501, 479, 10, 117, "Subchapter"],
Cell[CellGroupData[{
Cell[141708, 3515, 149, 2, 93, "Section"],
Cell[141860, 3519, 16015, 398, 2266, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157912, 3922, 93, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[158030, 3927, 1952, 49, 231, "Input"],
Cell[159985, 3978, 1668, 43, 120, "Output"],
Cell[161656, 4023, 3299, 81, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164992, 4109, 1835, 43, 150, "Input"],
Cell[CellGroupData[{
Cell[166852, 4156, 423, 6, 30, "Print"],
Cell[167278, 4164, 223, 5, 28, "Print"],
Cell[167504, 4171, 225, 5, 28, "Print"],
Cell[167732, 4178, 283, 7, 28, "Print"],
Cell[168018, 4187, 226, 5, 28, "Print"]
}, Open  ]],
Cell[168259, 4195, 224, 5, 40, "Output"],
Cell[CellGroupData[{
Cell[168508, 4204, 423, 6, 30, "Print"],
Cell[168934, 4212, 226, 5, 28, "Print"],
Cell[169163, 4219, 228, 5, 28, "Print"],
Cell[169394, 4226, 362, 8, 28, "Print"],
Cell[169759, 4236, 270, 6, 28, "Print"]
}, Open  ]],
Cell[170044, 4245, 413, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170494, 4258, 1149, 31, 123, "Input"],
Cell[171646, 4291, 87, 1, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171794, 4299, 433, 8, 117, "Subchapter"],
Cell[CellGroupData[{
Cell[172252, 4311, 193, 2, 93, "Section"],
Cell[CellGroupData[{
Cell[172470, 4317, 99, 1, 65, "Subsection"],
Cell[172572, 4320, 9226, 214, 717, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181835, 4539, 151, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[182011, 4545, 181, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[182217, 4551, 3544, 81, 204, "Input"],
Cell[CellGroupData[{
Cell[185786, 4636, 1533, 49, 103, "Print"],
Cell[187322, 4687, 3377, 93, 212, "Print"],
Cell[190702, 4782, 2098, 50, 101, "Print"]
}, Open  ]],
Cell[192815, 4835, 1553, 49, 160, "Output"],
Cell[CellGroupData[{
Cell[194393, 4888, 425, 6, 30, "Print"],
Cell[194821, 4896, 226, 5, 28, "Print"],
Cell[195050, 4903, 226, 5, 28, "Print"],
Cell[195279, 4910, 329, 7, 33, "Print"],
Cell[195611, 4919, 273, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195945, 4932, 291, 3, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[196261, 4939, 2808, 64, 339, "Input"],
Cell[CellGroupData[{
Cell[199094, 5007, 1699, 52, 103, "Print"],
Cell[200796, 5061, 3550, 98, 212, "Print"],
Cell[204349, 5161, 870, 25, 101, "Print"],
Cell[205222, 5188, 425, 6, 30, "Print"],
Cell[205650, 5196, 226, 5, 28, "Print"],
Cell[205879, 5203, 226, 5, 28, "Print"],
Cell[206108, 5210, 318, 7, 28, "Print"],
Cell[206429, 5219, 229, 5, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206719, 5231, 156, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[206900, 5237, 1609, 47, 177, "Input"],
Cell[CellGroupData[{
Cell[208534, 5288, 2226, 71, 217, "Print"],
Cell[210763, 5361, 6768, 185, 350, "Print"],
Cell[217534, 5548, 2047, 49, 101, "Print"]
}, Open  ]],
Cell[219596, 5600, 1533, 48, 160, "Output"],
Cell[CellGroupData[{
Cell[221154, 5652, 425, 6, 30, "Print"],
Cell[221582, 5660, 226, 5, 28, "Print"],
Cell[221811, 5667, 226, 5, 28, "Print"],
Cell[222040, 5674, 327, 7, 33, "Print"],
Cell[222370, 5683, 271, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222702, 5696, 289, 3, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[223016, 5703, 1541, 39, 312, "Input"],
Cell[CellGroupData[{
Cell[224582, 5746, 2501, 76, 217, "Print"],
Cell[227086, 5824, 7018, 194, 350, "Print"],
Cell[234107, 6020, 868, 25, 101, "Print"],
Cell[234978, 6047, 423, 6, 30, "Print"],
Cell[235404, 6055, 224, 5, 28, "Print"],
Cell[235631, 6062, 226, 5, 28, "Print"],
Cell[235860, 6069, 318, 7, 28, "Print"],
Cell[236181, 6078, 229, 5, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236495, 6092, 113, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[236633, 6097, 229, 3, 65, "Subsection"],
Cell[236865, 6102, 173, 3, 41, "Input"],
Cell[237041, 6107, 4563, 120, 501, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241641, 6232, 95, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[241761, 6237, 1907, 56, 177, "Input"],
Cell[CellGroupData[{
Cell[243693, 6297, 423, 6, 30, "Print"],
Cell[244119, 6305, 224, 5, 28, "Print"],
Cell[244346, 6312, 224, 5, 28, "Print"],
Cell[244573, 6319, 371, 9, 33, "Print"],
Cell[244947, 6330, 272, 6, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245268, 6342, 1896, 52, 339, "Input"],
Cell[CellGroupData[{
Cell[247189, 6398, 1699, 52, 103, "Print"],
Cell[248891, 6452, 423, 6, 30, "Print"],
Cell[249317, 6460, 224, 5, 28, "Print"],
Cell[249544, 6467, 224, 5, 28, "Print"],
Cell[249771, 6474, 371, 9, 33, "Print"],
Cell[250145, 6485, 269, 6, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[250441, 6495, 3886, 85, 420, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254376, 6586, 429, 5, 93, "Section"],
Cell[CellGroupData[{
Cell[254830, 6595, 101, 1, 65, "Subsection"],
Cell[254934, 6598, 5119, 127, 474, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260090, 6730, 98, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[260213, 6735, 255, 4, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[260493, 6743, 2898, 76, 528, "Input"],
Cell[263394, 6821, 1117, 29, 66, "Output"],
Cell[CellGroupData[{
Cell[264536, 6854, 4028, 120, 426, "Print"],
Cell[268567, 6976, 626, 9, 30, "Print"],
Cell[269196, 6987, 427, 8, 28, "Print"],
Cell[269626, 6997, 429, 8, 28, "Print"],
Cell[270058, 7007, 532, 10, 33, "Print"],
Cell[270593, 7019, 479, 9, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271133, 7035, 232, 3, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[271390, 7042, 754, 22, 123, "Input"],
Cell[CellGroupData[{
Cell[272169, 7068, 504, 8, 30, "Print"],
Cell[272676, 7078, 309, 7, 28, "Print"],
Cell[272988, 7087, 313, 7, 28, "Print"],
Cell[273304, 7096, 407, 9, 33, "Print"],
Cell[273714, 7107, 354, 8, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274177, 7126, 463, 7, 119, "Chapter"],
Cell[CellGroupData[{
Cell[274665, 7137, 337, 7, 117, "Subchapter"],
Cell[CellGroupData[{
Cell[275027, 7148, 99, 1, 65, "Subsection"],
Cell[275129, 7151, 8251, 202, 2411, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[283417, 7358, 230, 4, 52, "Subsection"],
Cell[CellGroupData[{
Cell[283672, 7366, 187, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[283884, 7372, 1698, 37, 96, "Input"],
Cell[285585, 7411, 2424, 58, 276, "Output"],
Cell[CellGroupData[{
Cell[288034, 7473, 466, 13, 28, "Print"],
Cell[288503, 7488, 314, 7, 28, "Print"],
Cell[288820, 7497, 220, 5, 28, "Print"],
Cell[289043, 7504, 317, 7, 28, "Print"],
Cell[289363, 7513, 298, 7, 28, "Print"],
Cell[289664, 7522, 466, 13, 28, "Print"],
Cell[290133, 7537, 301, 7, 28, "Print"],
Cell[290437, 7546, 220, 5, 28, "Print"],
Cell[290660, 7553, 317, 7, 28, "Print"],
Cell[290980, 7562, 298, 7, 28, "Print"],
Cell[291281, 7571, 466, 13, 28, "Print"],
Cell[291750, 7586, 288, 7, 28, "Print"],
Cell[292041, 7595, 220, 5, 28, "Print"],
Cell[292264, 7602, 317, 7, 28, "Print"],
Cell[292584, 7611, 298, 7, 28, "Print"],
Cell[292885, 7620, 466, 13, 28, "Print"],
Cell[293354, 7635, 260, 6, 28, "Print"],
Cell[293617, 7643, 220, 5, 28, "Print"],
Cell[293840, 7650, 317, 7, 28, "Print"],
Cell[294160, 7659, 298, 7, 28, "Print"],
Cell[294461, 7668, 466, 13, 28, "Print"],
Cell[294930, 7683, 260, 6, 28, "Print"],
Cell[295193, 7691, 220, 5, 28, "Print"],
Cell[295416, 7698, 315, 7, 28, "Print"],
Cell[295734, 7707, 296, 7, 28, "Print"]
}, Open  ]],
Cell[296045, 7717, 169, 3, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296263, 7726, 138, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[296426, 7731, 2619, 54, 150, "Input"],
Cell[299048, 7787, 18485, 306, 276, "Output"],
Cell[CellGroupData[{
Cell[317558, 8097, 505, 13, 28, "Print"],
Cell[318066, 8112, 314, 7, 28, "Print"],
Cell[318383, 8121, 218, 5, 28, "Print"],
Cell[318604, 8128, 365, 9, 28, "Print"],
Cell[318972, 8139, 309, 7, 28, "Print"],
Cell[319284, 8148, 503, 13, 28, "Print"],
Cell[319790, 8163, 299, 7, 28, "Print"],
Cell[320092, 8172, 218, 5, 28, "Print"],
Cell[320313, 8179, 365, 9, 28, "Print"],
Cell[320681, 8190, 322, 7, 28, "Print"],
Cell[321006, 8199, 503, 13, 28, "Print"],
Cell[321512, 8214, 286, 7, 28, "Print"],
Cell[321801, 8223, 218, 5, 28, "Print"],
Cell[322022, 8230, 365, 9, 28, "Print"],
Cell[322390, 8241, 309, 7, 28, "Print"],
Cell[322702, 8250, 503, 13, 28, "Print"],
Cell[323208, 8265, 258, 6, 28, "Print"],
Cell[323469, 8273, 218, 5, 28, "Print"],
Cell[323690, 8280, 365, 9, 28, "Print"],
Cell[324058, 8291, 340, 8, 28, "Print"],
Cell[324401, 8301, 503, 13, 28, "Print"],
Cell[324907, 8316, 258, 6, 28, "Print"],
Cell[325168, 8324, 220, 5, 28, "Print"],
Cell[325391, 8331, 367, 9, 28, "Print"],
Cell[325761, 8342, 324, 7, 28, "Print"],
Cell[326088, 8351, 505, 13, 28, "Print"],
Cell[326596, 8366, 260, 6, 28, "Print"],
Cell[326859, 8374, 218, 5, 28, "Print"],
Cell[327080, 8381, 365, 9, 28, "Print"],
Cell[327448, 8392, 322, 7, 28, "Print"],
Cell[327773, 8401, 503, 13, 28, "Print"],
Cell[328279, 8416, 257, 6, 28, "Print"],
Cell[328539, 8424, 220, 5, 28, "Print"],
Cell[328762, 8431, 365, 9, 28, "Print"],
Cell[329130, 8442, 309, 7, 28, "Print"],
Cell[329442, 8451, 503, 13, 28, "Print"],
Cell[329948, 8466, 258, 6, 28, "Print"],
Cell[330209, 8474, 218, 5, 28, "Print"],
Cell[330430, 8481, 367, 9, 28, "Print"],
Cell[330800, 8492, 298, 7, 28, "Print"]
}, Open  ]],
Cell[331113, 8502, 205, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331355, 8512, 6113, 116, 166, "Input"],
Cell[337471, 8630, 3745, 81, 276, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[341289, 8719, 342, 7, 117, "Subchapter"],
Cell[341634, 8728, 15980, 404, 1421, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357651, 9137, 364, 7, 117, "Subchapter"],
Cell[CellGroupData[{
Cell[358040, 9148, 103, 1, 65, "Subsection"],
Cell[358146, 9151, 22725, 420, 1257, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380908, 9576, 97, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[381030, 9581, 216, 3, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[381271, 9588, 2228, 60, 204, "Input"],
Cell[CellGroupData[{
Cell[383524, 9652, 1957, 61, 160, "Print"],
Cell[385484, 9715, 1604, 52, 160, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387149, 9774, 291, 4, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[387465, 9782, 2894, 74, 204, "Input"],
Cell[CellGroupData[{
Cell[390384, 9860, 1525, 47, 125, "Print"],
Cell[391912, 9909, 449, 6, 30, "Print"],
Cell[392364, 9917, 250, 5, 28, "Print"],
Cell[392617, 9924, 249, 5, 28, "Print"],
Cell[392869, 9931, 347, 7, 33, "Print"],
Cell[393219, 9940, 294, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393574, 9953, 113, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[393712, 9958, 3850, 93, 231, "Input"],
Cell[397565, 10053, 169, 3, 40, "Output"],
Cell[CellGroupData[{
Cell[397759, 10060, 447, 6, 30, "Print"],
Cell[398209, 10068, 248, 5, 28, "Print"],
Cell[398460, 10075, 250, 5, 28, "Print"],
Cell[398713, 10082, 346, 7, 33, "Print"],
Cell[399062, 10091, 293, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399440, 10106, 202, 3, 89, "Subchapter"],
Cell[CellGroupData[{
Cell[399667, 10113, 98, 1, 93, "Section"],
Cell[399768, 10116, 35638, 660, 1888, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435443, 10781, 165, 2, 93, "Section"],
Cell[CellGroupData[{
Cell[435633, 10787, 155, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[435813, 10793, 3270, 85, 420, "Input"],
Cell[439086, 10880, 243, 5, 40, "Output"],
Cell[CellGroupData[{
Cell[439354, 10889, 271, 3, 30, "Print"],
Cell[439628, 10894, 296, 6, 28, "Print"]
}, Open  ]],
Cell[439939, 10903, 4222, 112, 191, "Output"],
Cell[444164, 11017, 626, 16, 40, "Output"],
Cell[444793, 11035, 3408, 75, 603, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448250, 11116, 117, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[448392, 11121, 2228, 48, 150, "Input"],
Cell[CellGroupData[{
Cell[450645, 11173, 197, 2, 30, "Print"],
Cell[450845, 11177, 222, 5, 28, "Print"],
Cell[451070, 11184, 219, 5, 28, "Print"],
Cell[451292, 11191, 425, 6, 30, "Print"],
Cell[451720, 11199, 228, 5, 28, "Print"],
Cell[451951, 11206, 230, 5, 28, "Print"],
Cell[452184, 11213, 326, 7, 33, "Print"],
Cell[452513, 11222, 276, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[452850, 11235, 175, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[453050, 11241, 1747, 43, 177, "Input"],
Cell[CellGroupData[{
Cell[454822, 11288, 221, 2, 30, "Print"],
Cell[455046, 11292, 246, 5, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455353, 11304, 289, 6, 65, "Subsection"],
Cell[CellGroupData[{
Cell[455667, 11314, 6382, 162, 771, "Input"],
Cell[462052, 11478, 10470, 180, 529, "Output"],
Cell[472525, 11660, 2353, 48, 91, "Output"],
Cell[474881, 11710, 3230, 73, 252, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478184, 11791, 199, 3, 89, "Subchapter"],
Cell[CellGroupData[{
Cell[478408, 11798, 98, 1, 93, "Section"],
Cell[478509, 11801, 20588, 447, 1861, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499134, 12253, 165, 2, 93, "Section"],
Cell[CellGroupData[{
Cell[499324, 12259, 107, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[499456, 12264, 1060, 27, 177, "Input"],
Cell[CellGroupData[{
Cell[500541, 12295, 2346, 73, 217, "Print"],
Cell[502890, 12370, 1820, 57, 141, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504771, 12434, 127, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[504923, 12439, 4366, 63, 69, "Input"],
Cell[509292, 12504, 2422, 74, 217, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511751, 12583, 555, 15, 69, "Input"],
Cell[CellGroupData[{
Cell[512331, 12602, 250, 3, 30, "Print"],
Cell[512584, 12607, 274, 6, 28, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512907, 12619, 505, 14, 69, "Input"],
Cell[CellGroupData[{
Cell[513437, 12637, 196, 2, 30, "Print"],
Cell[513636, 12641, 220, 5, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[513917, 12653, 130, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[514072, 12658, 4275, 102, 663, "Input"],
Cell[CellGroupData[{
Cell[518372, 12764, 315940, 5191, 485, 166815, 2744, "CachedBoxData", \
"BoxData", "Print"],
Cell[834315, 17957, 218, 5, 28, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[834582, 17968, 1129, 32, 123, "Input"],
Cell[835714, 18002, 72, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835823, 18008, 745, 19, 69, "Input"],
Cell[836571, 18029, 35962, 859, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[872570, 18893, 1787, 45, 96, "Input"],
Cell[874360, 18940, 21833, 521, 285, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[896278, 19470, 452, 7, 119, "Chapter"],
Cell[CellGroupData[{
Cell[896755, 19481, 272, 3, 89, "Subchapter"],
Cell[CellGroupData[{
Cell[897052, 19488, 93, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[897170, 19493, 23803, 528, 2067, "Input"],
Cell[920976, 20023, 395, 7, 40, "Output"],
Cell[921374, 20032, 7891, 148, 687, "Output"],
Cell[929268, 20182, 484, 10, 30, "Message"],
Cell[929755, 20194, 486, 10, 30, "Message"],
Cell[930244, 20206, 486, 10, 30, "Message"],
Cell[930733, 20218, 567, 12, 30, "Message"],
Cell[931303, 20232, 483, 10, 30, "Message"],
Cell[931789, 20244, 486, 10, 30, "Message"],
Cell[932278, 20256, 484, 10, 30, "Message"],
Cell[932765, 20268, 565, 12, 30, "Message"],
Cell[933333, 20282, 484, 10, 30, "Message"],
Cell[933820, 20294, 484, 10, 30, "Message"],
Cell[934307, 20306, 486, 10, 30, "Message"],
Cell[934796, 20318, 565, 12, 30, "Message"],
Cell[935364, 20332, 486, 10, 30, "Message"],
Cell[935853, 20344, 484, 10, 30, "Message"],
Cell[936340, 20356, 486, 10, 30, "Message"],
Cell[936829, 20368, 567, 12, 30, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[937457, 20387, 254, 3, 89, "Subchapter"],
Cell[CellGroupData[{
Cell[937736, 20394, 95, 1, 93, "Section"],
Cell[CellGroupData[{
Cell[937856, 20399, 30213, 618, 2985, "Input"],
Cell[968072, 21019, 9330, 183, 625, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[977475, 21210, 619, 9, 119, "Chapter"],
Cell[CellGroupData[{
Cell[978119, 21223, 106, 1, 65, "Subsection"],
Cell[978228, 21226, 9908, 226, 744, "Input"],
Cell[CellGroupData[{
Cell[988161, 21456, 102, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[988288, 21461, 2264, 63, 231, "Input"],
Cell[990555, 21526, 176, 4, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[990792, 21537, 167, 2, 52, "Subsection"],
Cell[990962, 21541, 3819, 96, 420, "Input"],
Cell[CellGroupData[{
Cell[994806, 21641, 102, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[994933, 21646, 1115, 23, 150, "Input"],
Cell[996051, 21671, 833, 19, 157, "Output"],
Cell[996887, 21692, 665, 17, 40, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[997613, 21716, 205, 3, 52, "Subsection"],
Cell[997821, 21721, 11412, 283, 1257, "Input"],
Cell[CellGroupData[{
Cell[1009258, 22008, 102, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[1009385, 22013, 1904, 45, 231, "Input"],
Cell[1011292, 22060, 1159, 23, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012488, 22088, 253, 4, 41, "Input"],
Cell[1012744, 22094, 5621, 116, 561, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

