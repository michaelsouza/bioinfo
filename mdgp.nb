(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    875288,      18216]
NotebookOptionsPosition[    864235,      17859]
NotebookOutlinePosition[    864778,      17880]
CellTagsIndexPosition[    864735,      17877]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DG Package", "Title",
 CellChangeTimes->{{3.6793495261201363`*^9, 3.6793495384395885`*^9}, 
   3.679349644788345*^9, 3.67934974754046*^9, {3.698080393349868*^9, 
   3.698080394373047*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Aborting", " ", "after", " ", "first", " ", "error"}], " ", "-", 
    " ", 
    RowBox[{
    "Put", " ", "the", " ", "following", " ", "two", " ", "lines", " ", "at", 
     " ", "the", " ", "top", " ", "of", " ", "every", " ", 
     RowBox[{"notebook", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"messageHandler", "=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Last", "[", "#", "]"}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], "&"}]}], ";", "\n", 
    RowBox[{"Internal`AddHandler", "[", 
     RowBox[{"\"\<Message\>\"", ",", "messageHandler"}], "]"}], ";"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.679757497923143*^9, 3.679757497925144*^9}, {
  3.679757553203314*^9, 3.6797575703583574`*^9}, {3.6798207857498636`*^9, 
  3.6798207957920666`*^9}, {3.6815755003341312`*^9, 3.6815755057314215`*^9}, {
  3.6816410775004396`*^9, 3.681641077953618*^9}, {3.68605379297364*^9, 
  3.6860538180843325`*^9}}],

Cell[CellGroupData[{

Cell["1) Instance Creation, Plot Routines", "Chapter",
 CellChangeTimes->{{3.6793500520209*^9, 3.679350065056984*^9}, {
   3.6950585832964363`*^9, 3.6950585871556697`*^9}, {3.695721180314636*^9, 
   3.695721206866439*^9}, 3.698079604394558*^9, {3.6980801756029487`*^9, 
   3.698080180840421*^9}, {3.6980803985611115`*^9, 3.698080400318778*^9}, 
   3.698157038028053*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: DG\n",
 StyleBox["DGAllEdges, DGEdgeWeight, DGEdgeDistanceBounds, DGProblem, \
DGSaveProblem, DGGraphGetIJD", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698064786393987*^9, 3.6980648085765533`*^9}, {
   3.6980677551920414`*^9, 3.698067772324468*^9}, 3.6980678077804627`*^9, {
   3.6980730442932186`*^9, 3.698073084912524*^9}, {3.6980731592026176`*^9, 
   3.698073183521519*^9}, {3.698135205349147*^9, 3.698135224691476*^9}, {
   3.698135487529049*^9, 3.6981354882540293`*^9}, {3.6981356287527127`*^9, 
   3.6981356329327507`*^9}, {3.6982407844204545`*^9, 3.698240789311618*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.698067812774536*^9, 3.698067816768963*^9}, {
  3.6981354925538797`*^9, 3.6981354928866024`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
    RowBox[{
    "DGAllEdges", ",", "\[IndentingNewLine]", "DGEdgeWeight", ",", 
     "\[IndentingNewLine]", "DGEdgeDistanceBounds", ",", 
     "\[IndentingNewLine]", "DGProblem", ",", "\[IndentingNewLine]", 
     "DGPrintGraph", ",", "\[IndentingNewLine]", "DGPrintX", ",", 
     "\[IndentingNewLine]", "DGSaveProblem", ",", "\[IndentingNewLine]", 
     "DGGraphGetIJD"}], "\n", "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGAllEdges", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", 
        RowBox[{"k", " ", "=", " ", "0"}], ",", " ", "pij"}], "}"}], ",", 
      "\n", "   ", 
      RowBox[{
       RowBox[{"pij", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ")"}], "/", 
             "2"}]}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "<=", " ", "n"}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"i", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
            RowBox[{"j", " ", "<=", " ", "n"}], ",", " ", 
            RowBox[{"j", "++"}], ",", "\n", "      ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", "\n", "      ", 
             RowBox[{
              RowBox[{"pij", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"i", " ", "<->", " ", "j"}]}], ";"}]}], "\n", "      ", 
           "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "pij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeWeight", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Gets", " ", "edge", " ", 
       RowBox[{"weight", ".", " ", "'"}], 
       RowBox[{"E", "'"}], " ", "can", " ", "be", " ", "a", " ", "single", 
       " ", "edge", " ", "or", " ", "a", " ", "list", " ", "of", " ", 
       "edges"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "eij", ",", "wij", ",", " ", 
        RowBox[{"D", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"FailureQ", "[", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", " ", 
               RowBox[{"E", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
             "EdgeWeight"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "E", " ", "is", " ", "a", " ", "list", " ", "of", " ", "edges"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], ",", " ", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eij", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
               RowBox[{"eij", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
              RowBox[{"eij", " ", "=", " ", 
               RowBox[{
                RowBox[{"eij", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
                RowBox[{"eij", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FailureQ", "[", 
               RowBox[{"wij", "=", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
                  "EdgeWeight"}], "]"}]}], "]"}], ",", 
              RowBox[{"Throw", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"D", ",", " ", "wij"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"E", " ", "is", " ", "a", " ", "single", " ", "edge"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", "E"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{
              RowBox[{"eij", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
              RowBox[{"eij", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FailureQ", "[", 
             RowBox[{"D", " ", "=", " ", 
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"G", ",", " ", "E"}], "}"}], ",", " ", 
                "EdgeWeight"}], "]"}]}], "]"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "D", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeDistanceBounds", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eij", " ", "=", " ", "E"}], ",", " ", "Lij", ",", " ", "Uij",
         ",", " ", "Vij"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eij", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
          RowBox[{"eij", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"eij", " ", "=", " ", 
          RowBox[{
           RowBox[{"eij", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
           RowBox[{"eij", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"Vij", " ", "=", " ", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
          "\"\<DistanceBounds\>\""}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "Vij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGProblem", "[", 
     RowBox[{"x_", ",", " ", 
      RowBox[{"eij_:", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"dijEps_:", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Creates", " ", "a", " ", "problem", " ", "P", " ", "such", " ", "that",
        " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "is", " ", "the", " ", 
       "problem", " ", "graph", " ", "and", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}], " ", "is", " ", "a", " ", 
       "problem", " ", "solution"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", " ", "j", ",", " ", "d", ",", " ", "dij", ",", " ", "k", ",",
         " ", "numberOfAtoms", ",", " ", "G", ",", " ", "E", ",", " ", 
        "DijEps"}], "}"}], ",", "\n", "   ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "default", " ", "values"}], " ", "*)"}], "\n", 
      "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "eij", "]"}], " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"E", " ", "=", " ", "eij"}], ",", " ", 
         RowBox[{"E", " ", "=", " ", 
          RowBox[{"DGAllEdges", "[", 
           RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], "]"}], ";", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dijEps", "]"}], " ", ">", " ", "0"}], ",", 
         " ", 
         RowBox[{"DijEps", " ", "=", " ", "dijEps"}], ",", " ", 
         RowBox[{"DijEps", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "unpacks", " ", "the", " ", "edges", " ", "and", " ", "calculate", 
         " ", "distances"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"i", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"j", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"j", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"numberOfAtoms", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"i", ",", " ", "j"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
       "\n", "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"Infinity", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}]}], 
         "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}]}], "\n", "    ", "]"}], ";", 
       "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "the", " ", "graph"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"WeightedAdjacencyGraph", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"adds", " ", "distance", " ", "bounds"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "DijEps", "]"}], " ", "!=", " ", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", " ", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidInput: eij and dijEps must have the same size\>\"", 
          "]"}]}], "]"}], ";", " ", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"dij", " ", "=", " ", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", " ", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "<->", " ", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", " ", 
               RowBox[{
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "<->", " ", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", " ", 
             "\"\<DistanceBounds\>\""}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}], ",", " ", 
              RowBox[{"(", 
               RowBox[{"1", " ", "+", " ", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], "}"}], "*", 
            "dij"}]}]}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<X\>\"", " ", "->", " ", "x"}], ",", " ", 
          RowBox[{"\"\<G\>\"", " ", "->", " ", "G"}]}], "|>"}], "]"}]}]}], 
     "\n", "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintGraph", "[", "G_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", "table", ",", "eij", ",", "i", ",", "j", ",", "k", ",", 
        "Lij", ",", "Uij", ",", "Dij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"table", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", "=", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "Dij", ",", "Lij", ",", "Uij"}], 
            "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", 
         RowBox[{"table", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\"", ",", 
               "\"\<lij\>\"", ",", "\"\<uij\>\""}], "}"}]}], "}"}]}]}], "]"}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintX", "[", "X_", "]"}], ":=", 
    RowBox[{"TableForm", "[", 
     RowBox[{"X", ",", " ", 
      RowBox[{"TableHeadings", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}],
           "}"}]}], "}"}]}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPrintDistanceMatrix", "[", 
    RowBox[{"X_", ",", "edges_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"E", "=", "edges"}], ",", "table", ",", "i", ",", "j", ",", 
       "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"table", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\""}], 
             "}"}]}], "}"}]}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintDistanceMatrix", "[", "X_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "edges", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"DGAllEdges", "[", 
         RowBox[{"Length", "[", "X", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DGPrintDistanceMatrix", "[", 
        RowBox[{"X", ",", "edges"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSaveProblem", "[", 
     RowBox[{"P_", ",", " ", "fname_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Create", " ", "the", " ", "files", " ", 
       RowBox[{"fname", ".", "csv"}], " ", "and", " ", 
       RowBox[{"fname_xsol", ".", "csv"}], " ", "with"}], ",", " ", 
      "respectively", ",", " ", 
      RowBox[{
      "the", " ", "DG", " ", "constraints", " ", "given", " ", "by", " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "and", " ", "one", " ", 
       "associated", " ", "solution", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", " ", "fid", ",", " ", "table", ",", " ", "eij", ",", " ",
         "i", ",", " ", "j", ",", " ", "k", ",", " ", "X", ",", " ", "G", ",",
         " ", "Dij", ",", " ", "Lij", ",", " ", "Uij"}], "}"}], ",", "\n", 
      "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "and", " ", "saves", " ", "solution", " ", "table"}], 
       " ", "*)"}], "\n", "   ", 
      RowBox[{
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"P", "[", "\"\<X\>\"", "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "3"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<_xsol.csv\>\""}], "]"}]}], ";", "\n",
        "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving solution file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "creates", " ", "and", " ", "saves", " ", "constraints", " ", 
         "table"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";", "\n", "   ", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "5"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j"}], "}"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", " ", "Uij"}], "}"}], " ", "=", " ", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"Dij", " ", "=", " ", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j", ",", " ", 
             RowBox[{"N", "[", "Dij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Lij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Uij", "]"}]}], "}"}]}]}]}], "\n", "    ", 
        "]"}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<.csv\>\""}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving constraints file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<I\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<D\>\"", ",", 
            " ", "\"\<L\>\"", ",", " ", "\"\<U\>\""}], "}"}]}]}], "]"}], 
       ";"}]}], "\n", "   ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGraphGetIJD", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "d", ",", "E"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"E", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980648378091593`*^9, 3.698064854788249*^9}, {
   3.698064906159929*^9, 3.698064909325801*^9}, {3.698064955176897*^9, 
   3.698064986006858*^9}, {3.698065109038253*^9, 3.698065150671424*^9}, {
   3.69806518659297*^9, 3.698065193368532*^9}, {3.6980654001540194`*^9, 
   3.6980654244181046`*^9}, {3.6980655393665404`*^9, 3.698065555128313*^9}, {
   3.6980659794963894`*^9, 3.6980660041682944`*^9}, {3.698066341867444*^9, 
   3.6980663567706394`*^9}, {3.6980665592012296`*^9, 
   3.6980666992461824`*^9}, {3.69806673177922*^9, 3.698066780054468*^9}, {
   3.6980668153666925`*^9, 3.69806686656289*^9}, {3.69806701658186*^9, 
   3.698067018994828*^9}, {3.698067996394244*^9, 3.698068042764223*^9}, {
   3.698068155902776*^9, 3.6980682384338694`*^9}, {3.6980684167789364`*^9, 
   3.6980684192427177`*^9}, 3.6980700592523394`*^9, {3.6980704236155825`*^9, 
   3.6980707185421805`*^9}, {3.6980707610011263`*^9, 3.698070854882349*^9}, {
   3.6980708951572204`*^9, 3.69807095084225*^9}, {3.698070990102256*^9, 
   3.6980710197514257`*^9}, {3.69807108328992*^9, 3.6980710851061954`*^9}, {
   3.698071134927409*^9, 3.6980711366806107`*^9}, {3.6980714781002245`*^9, 
   3.698071690621649*^9}, 3.6980717752567205`*^9, {3.698071824174859*^9, 
   3.698071835213976*^9}, {3.698071886342635*^9, 3.6980718929859667`*^9}, {
   3.698072224182354*^9, 3.6980722489870024`*^9}, {3.698072475433307*^9, 
   3.698072476001685*^9}, {3.698072507681114*^9, 3.6980725095555162`*^9}, {
   3.698072661011775*^9, 3.698072730186365*^9}, {3.698072802711589*^9, 
   3.698072810574417*^9}, {3.6980747631397576`*^9, 3.6980747665630274`*^9}, {
   3.698078742239861*^9, 3.6980787427962303`*^9}, {3.6980788044556255`*^9, 
   3.698078886289402*^9}, 3.698079529602953*^9, {3.698079562825487*^9, 
   3.6980795628394966`*^9}, {3.6980841826292048`*^9, 
   3.6980841893896885`*^9}, {3.6981352488359904`*^9, 3.698135531631914*^9}, {
   3.698135642417054*^9, 3.6981356548828564`*^9}, {3.698135687148699*^9, 
   3.69813569447806*^9}, {3.6982216004241915`*^9, 3.698221739589205*^9}, {
   3.6982218524675703`*^9, 3.698221872903125*^9}, {3.6982219257613215`*^9, 
   3.6982220862061243`*^9}, {3.698222983461506*^9, 3.6982231253506966`*^9}, {
   3.698223285203043*^9, 3.698223303981498*^9}, {3.698232826843835*^9, 
   3.6982329751758366`*^9}, {3.6982330643710318`*^9, 
   3.6982331580395837`*^9}, {3.6982332202168217`*^9, 
   3.6982332369894466`*^9}, {3.6982333007459803`*^9, 
   3.6982333251156435`*^9}, {3.6982334452210298`*^9, 3.69823386830234*^9}, {
   3.698233971233729*^9, 3.6982341107259865`*^9}, {3.698234157087762*^9, 
   3.698234166227824*^9}, {3.6982342008682995`*^9, 3.6982342078039*^9}, {
   3.698240819715974*^9, 3.6982408474903955`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:", "Section",
 CellChangeTimes->{{3.6980677784161177`*^9, 3.6980677937658424`*^9}, {
  3.6980678280050044`*^9, 3.6980678367016196`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGAllEdges", " ", "*)"}], "\n", 
  RowBox[{"DGAllEdges", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.69806784107166*^9, 3.698067885891185*^9}, {
   3.698072476059723*^9, 3.698072476069231*^9}, 3.6980795296114593`*^9, {
   3.698079659259447*^9, 3.6980796592649527`*^9}, 3.698079723959221*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "complete", " ", 
    "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintDistanceMatrix", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6980678514006224`*^9, {3.6980679034188004`*^9, 3.698067938519929*^9}, {
   3.698070087795181*^9, 3.6980701309785995`*^9}, {3.6980701806363125`*^9, 
   3.6980701917162457`*^9}, {3.6980707240828867`*^9, 3.698070728339967*^9}, {
   3.698071156019414*^9, 3.698071173038784*^9}, {3.698071267726063*^9, 
   3.698071268937364*^9}, {3.698071306434246*^9, 3.6980713142584715`*^9}, {
   3.69807140802295*^9, 3.698071409104385*^9}, {3.698072476108756*^9, 
   3.698072476123766*^9}, 3.6980795296284704`*^9, {3.6980796656206665`*^9, 
   3.698079665626671*^9}, 3.6982328268823624`*^9, 3.698233064406555*^9, {
   3.6982338813554974`*^9, 3.6982339037413445`*^9}, {3.6982342329371486`*^9, 
   3.698234244522332*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "<->", " ", "2"}], ",", " ", 
       RowBox[{"2", " ", "<->", " ", "3"}], ",", " ", 
       RowBox[{"3", " ", "<->", " ", "4"}], ",", " ", 
       RowBox[{"4", " ", "<->", " ", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij"}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698070175421965*^9, 3.698070175861757*^9}, {
   3.698070213177312*^9, 3.698070315300525*^9}, {3.6980713539418945`*^9, 
   3.6980713662326765`*^9}, {3.6980714206781745`*^9, 
   3.6980714208693013`*^9}, {3.698072476186808*^9, 3.698072476201317*^9}, 
   3.698079529705022*^9, {3.698079678277562*^9, 3.6980796782830653`*^9}, 
   3.698232826904878*^9, 3.69823306442557*^9, {3.6982342604183755`*^9, 
   3.6982342641588564`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "inexact", " ", 
    "distances"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "<->", " ", "2"}], ",", " ", 
       RowBox[{"2", " ", "<->", " ", "3"}], ",", " ", 
       RowBox[{"3", " ", "<->", " ", "4"}], ",", " ", 
       RowBox[{"4", " ", "<->", " ", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dijEps", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0.1", ",", " ", "0", ",", " ", "0.2"}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij", ",", " ", "dijEps"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980720809289303`*^9, 3.6980721673125477`*^9}, {
   3.698072476261857*^9, 3.698072476270364*^9}, {3.698074794128626*^9, 
   3.698074795245368*^9}, 3.6980795297355413`*^9, {3.6980796883057127`*^9, 
   3.698079688311717*^9}, 3.698232826928891*^9, 3.698233064442582*^9, 
   3.6982342864456387`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DDGroblem", " ", "with", " ", "limited", " ", 
    "edge", " ", "size"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"N", "[", 
        RowBox[{"Sqrt", "[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980723031999965`*^9, 3.6980723765051374`*^9}, 
   3.698072412150936*^9, {3.698072476306887*^9, 3.6980724763218966`*^9}, 
   3.698079529762559*^9, {3.698079700608243*^9, 3.698079700608243*^9}, 
   3.6982328269514103`*^9, 3.698233064459597*^9, 3.6982342864606485`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Saves", " ", "a", " ", "DGProblem"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\n", 
   RowBox[{"DGSaveProblem", "[", 
    RowBox[{
    "P", ",", " ", 
     "\"\<c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_\
problem_small\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980724323259354`*^9, 3.6980724456790857`*^9}, 
   3.6980724763684278`*^9, {3.6980725466797047`*^9, 3.6980726421410055`*^9}, {
   3.6980727654041586`*^9, 3.6980727682410746`*^9}, 3.698078867840667*^9, 
   3.6980795298060875`*^9, {3.6980797088881145`*^9, 3.6980797089077563`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: MDGP\n",
 StyleBox["DGSetXByCartesianSystem, DGSetXByHomogeneousCoords, \
DGRandom3DBackbone, DGRandomMDGP, DGCalculateProteinAngles, \
DGCalculateProteinAnglesForAtomAtPosition, DGCalculateTorsionAngles", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
  3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
  3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
  3.6980731201361957`*^9, 3.6980731887764435`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980732060967464`*^9, 3.698073211231152*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGSetXByCartesianSystem", ",", "\[IndentingNewLine]", 
    "DGSetXByHomogeneousCoords", ",", "\[IndentingNewLine]", 
    "DGRandom3DBackbone", ",", "\[IndentingNewLine]", "DGRandomMDGP", ",", 
    "\[IndentingNewLine]", "DGPlaneAndTorsionAngles"}], "\[IndentingNewLine]",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByCartesianSystem", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "rotations", " ", "and", " ", "translations", " ", 
        "explicitly"}], ";", "\[IndentingNewLine]", "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "            ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "        ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}],
           FontWeight->"Plain"], " ", "\[IndentingNewLine]"}]}]}]}]}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "i", ",", "v", ",", "n", ",", "R", ",", 
        "X", ",", "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "positions"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"b", "-", "c"}], "]"}]}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"a", "-", "b"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "creation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"R", "[", "v", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "apply"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "apply", " ", "torsion", " ", "rotation", " ", "and", " ", 
            "translation"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{
            RowBox[{"R", "[", "v", "]"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "v"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByHomogeneousCoords", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "transformation", " ", "matrices"}], ";", "\[IndentingNewLine]", 
       "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         StyleBox["    ",
          FontWeight->"Plain"], "        "}]], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["        ",
        FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
             RowBox[{"angle", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "2"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}], ";"}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "\[IndentingNewLine]"}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "B", ",", "B1", ",", "B2", ",", "B3", ",", "X", ",", "i", ",", "di", 
        ",", "ct", ",", "st", ",", "cw", ",", "sw", ",", "v", ",", 
        "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ct", ",", "st"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "ct"}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "st"}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "first", " ", "transformation", " ", "matrices"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"B1", "=", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"B2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"di", "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "ct"}], ",", 
            RowBox[{"-", "st"}], ",", "0", ",", 
            RowBox[{
             RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"st", ",", 
            RowBox[{"-", "ct"}], ",", "0", ",", 
            RowBox[{"di", "*", "st"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "coordinates"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"B1", ".", "B2", ".", "B3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ct", ",", "st"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cw", ",", "sw"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"di", "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"concatenate", " ", "transformation", " ", "matrices"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "ct"}], ",", 
                RowBox[{"-", "st"}], ",", "0", ",", 
                RowBox[{
                 RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "cw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "cw"}], ",", 
                RowBox[{"-", "sw"}], ",", 
                RowBox[{"di", "*", "st", "*", "cw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "sw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "sw"}], ",", "cw", ",", 
                RowBox[{"di", "*", "st", "*", "sw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "transformation", " ", "at", " ", "origin"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandom3DBackbone", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"algorithm_:", "\"\<HomogeneousCoords\>\""}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Generates", " ", "a", " ", "random", " ", "backbone", " ", "in", " ", 
       "tridimensional", " ", "Euclidean", " ", "space"}], ";", 
      "\[IndentingNewLine]", "   ", 
      StyleBox[
       RowBox[{"Input", " ", "parameters"}],
       FontVariations->{"Underline"->True}], 
      StyleBox[";",
       FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "algorithm", " ", "to", " ", "be", " ", "applied", " ", "during", " ",
          "coordinates", " ", 
         RowBox[{"calculation", ".", " ", "The"}], " ", 
         RowBox[{"options", " ", "'"}], "are", " ", 
         RowBox[{"HomogeneousCoords", "'"}], " ", 
         RowBox[{"or", " ", "'"}], 
         RowBox[{"CartesianSystem", "'"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", "the", 
         " ", "current", " ", "time", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "the", " ", "local", " ", "variables"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "d", ",", "\[Theta]", ",", "\[Omega]", ",", "X", ",", "output", ",", 
        RowBox[{"\[Epsilon]", "=", "0.05"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"seed", ">", "0"}], ",", 
         RowBox[{"SeedRandom", "[", "seed", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"length", " ", "of", " ", "covalent", " ", "bonds"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.526", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"plane", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.91", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"torsion", " ", "angles"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "Degree"}], ",", 
              RowBox[{"180", "Degree"}], ",", 
              RowBox[{"300", "Degree"}]}], "}"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Epsilon]"}], ",", "\[Epsilon]"}], "}"}], 
              "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "remaining", " ", "3", "d", " ", 
         "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "algorithm", ",", "\[IndentingNewLine]", "\"\<HomogeneousCoords\>\"", 
         ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByHomogeneousCoords", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<CartesianSystem\>\"", ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByCartesianSystem", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"Throw", "[", 
          RowBox[{"\"\<InvalidAlgorithm:\>\"", ",", 
           RowBox[{"OptionValue", "[", "algorithm", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "output"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "->", "X"}], ",", 
         RowBox[{"\"\<TorsionAngles\>\"", "\[Rule]", "\[Omega]"}], ",", 
         RowBox[{"\"\<CovalentBondLengths\>\"", "->", "d"}], ",", 
         RowBox[{"\"\<PlaneRotationAngles\>\"", "\[Rule]", "\[Theta]"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"dijEps_:", "0.0"}], ",", 
      RowBox[{"dijMax_:", "Infinity"}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Generates", " ", "a", " ", "random", " ", "MDGP", " ", 
       RowBox[{"instance", "."}]}], ";", " ", "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        StyleBox["dijEps",
         FontSlant->"Italic"], 
        StyleBox[":",
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"the", " ", "upper", " ", 
          RowBox[{"(", "uij", ")"}], " ", "and", " ", "lower", " ", 
          RowBox[{"(", "lij", ")"}], " ", "constraints", " ", "boundaries", 
          " ", "are", " ", "generated", " ", "using", " ", "the", " ", 
          "formulae", " ", "lij"}],
         FontWeight->"Plain"]}], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dijEps"}], ")"}], " ", "and", " ", "uij"}], " ",
          "=", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "dijEps"}], ")"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["dijMax",
        FontSlant->"Italic"], ":", 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "all", " ", "distances", " ", "greater", " ", "than", " ", "dijMax", 
         " ", "are", " ", "dropped"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{"defines", " ", "the", " ", "method", " ", 
         RowBox[{"(", "algorithm", ")"}], " ", "used", " ", "to", " ", 
         "calculate", " ", "the", " ", "pairwise", " ", 
         RowBox[{"distances", ".", " ", "The"}], " ", "options", " ", "are", 
         " ", "\"\<DistanceMatrix\>\"", " ", "and", " ", "\"\<Nearest\>\""}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", 
         "current", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "X", ",", "D", ",", "E", ",", "dij", ",", 
        "DijEps"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{
         RowBox[{"DGRandom3DBackbone", "[", 
          RowBox[{
          "numberOfAtoms", ",", "\"\<HomogeneousCoords\>\"", ",", "seed"}], 
          "]"}], "[", "\"\<Points\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DijEps", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "distance", " ", "bounds"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", "numberOfAtoms"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"exact", " ", "distances"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "3"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "0"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"N", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"X", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "<", 
                   "dijMax"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"E", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"DijEps", ",", "dijEps"}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DGProblem", "[", 
         RowBox[{"X", ",", "E", ",", "DijEps"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"A_", ",", "B_", ",", "C_", ",", "D_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "the", " ", "plane", " ", "and", " ", "torsion", " ",
        "for", " ", "3", "D", " ", "points", " ", "A"}], ",", " ", "B", ",", 
      " ", 
      RowBox[{"C", " ", "and", " ", "D", " ", "in", " ", "that", " ", 
       RowBox[{"order", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nabc", ",", " ", "nbcd", ",", "\[Theta]", ",", "\[Omega]"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"centered", " ", "at", " ", "C"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"B", "-", "C"}], ",", 
          RowBox[{"D", "-", "C"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Theta]):Angle[BCD]  =\>\"", ",", "\[Theta]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"centered", " ", "at", " ", "B", " ", "and", " ", "C"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nabc", ",", "nbcd"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"A", "-", "B"}], ",", 
            RowBox[{"C", "-", "B"}]}], "]"}], ",", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"B", "-", "C"}], ",", 
            RowBox[{"D", "-", "C"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{"nabc", ",", "nbcd"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Omega]):Angle[ABCD] =\>\"", ",", "\[Omega]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"X_", ",", "i_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles", 
       " ", "of", " ", "i"}], "-", 
      RowBox[{"th", " ", 
       RowBox[{"atom", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlaneAndTorsionAngles", "[", "X_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Omega]", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
         RowBox[{"DGPlaneAndTorsionAngles", "[", 
          RowBox[{"X", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679334396696954*^9, 3.6793344197378874`*^9}, {
   3.679334459021727*^9, 3.6793344614910192`*^9}, {3.679334506573509*^9, 
   3.67933450744427*^9}, 3.679334554859289*^9, {3.6793347748775415`*^9, 
   3.6793348146727505`*^9}, {3.6793348683176303`*^9, 
   3.6793349148147354`*^9}, {3.679335216182414*^9, 3.679335270449379*^9}, {
   3.679335358320606*^9, 3.6793353855927134`*^9}, {3.679335422113183*^9, 
   3.679335422860292*^9}, {3.679335467322652*^9, 3.6793354718670073`*^9}, {
   3.679335502941807*^9, 3.6793355176517873`*^9}, {3.6793359308181715`*^9, 
   3.6793359602458916`*^9}, {3.6793359984610925`*^9, 3.679336011029911*^9}, {
   3.679336355941925*^9, 3.679336390681263*^9}, {3.679336436703087*^9, 
   3.679336440913059*^9}, {3.6793364973777227`*^9, 3.679336508943397*^9}, {
   3.679337482798051*^9, 3.6793374878195066`*^9}, {3.679337531710136*^9, 
   3.679337679993342*^9}, {3.679337711180924*^9, 3.6793377943636985`*^9}, {
   3.679337830273183*^9, 3.6793379235522385`*^9}, {3.6793380600889235`*^9, 
   3.679338107718841*^9}, {3.679338168311281*^9, 3.6793381690922422`*^9}, {
   3.679338254307039*^9, 3.679338327393572*^9}, {3.6793384127916727`*^9, 
   3.679338418720523*^9}, {3.6793384657072325`*^9, 3.679338788372825*^9}, {
   3.679338898441475*^9, 3.6793389990638256`*^9}, {3.6793390477861385`*^9, 
   3.679339051499843*^9}, {3.6793391446277075`*^9, 3.6793392599804153`*^9}, 
   3.6793393742092657`*^9, {3.6793395780321927`*^9, 3.6793398587893867`*^9}, {
   3.6793398957561593`*^9, 3.6793399605794096`*^9}, {3.67934000207397*^9, 
   3.6793400630782733`*^9}, {3.6793401514655437`*^9, 
   3.6793403347497687`*^9}, {3.6793403699550896`*^9, 3.67934037140318*^9}, {
   3.679340563130898*^9, 3.6793405841237473`*^9}, {3.6793406189939303`*^9, 
   3.6793406823092556`*^9}, {3.6793413087872534`*^9, 
   3.6793413117913976`*^9}, {3.6793414144409704`*^9, 
   3.6793414780425982`*^9}, {3.6793415857352*^9, 3.679341749056054*^9}, {
   3.6793418327409945`*^9, 3.6793418417524166`*^9}, {3.679341876481241*^9, 
   3.6793418824052687`*^9}, {3.679341997125859*^9, 3.6793420172739105`*^9}, {
   3.67934205563032*^9, 3.6793420821291895`*^9}, {3.679342117275077*^9, 
   3.6793421196924405`*^9}, {3.6793421834981775`*^9, 3.679342183855644*^9}, {
   3.6793422500684495`*^9, 3.6793422840007253`*^9}, {3.6793424043195424`*^9, 
   3.6793424350150757`*^9}, {3.679342585125659*^9, 3.679342801705634*^9}, {
   3.679342833323803*^9, 3.6793428396110015`*^9}, {3.6793429405557547`*^9, 
   3.6793429972575336`*^9}, {3.679343068573412*^9, 3.6793430980621653`*^9}, 
   3.6793431423230133`*^9, {3.6793431858227177`*^9, 3.6793432209529057`*^9}, {
   3.6793432860551014`*^9, 3.6793433042354126`*^9}, {3.6793433545087633`*^9, 
   3.6793433652364955`*^9}, {3.6793452969963503`*^9, 3.6793453088097954`*^9}, 
   3.6793461153501606`*^9, {3.6793473536334457`*^9, 3.6793473954665585`*^9}, {
   3.6793477301073675`*^9, 3.679347763333604*^9}, {3.6793478591437263`*^9, 
   3.6793478625984306`*^9}, {3.6793480121537013`*^9, 
   3.6793482720333853`*^9}, {3.67934834772797*^9, 3.6793483523074236`*^9}, {
   3.6793484687244396`*^9, 3.679348489631818*^9}, {3.679348535732118*^9, 
   3.6793485836744003`*^9}, {3.679348656480409*^9, 3.6793486600900903`*^9}, 
   3.6793492489231615`*^9, {3.6793494190708942`*^9, 3.679349419296319*^9}, 
   3.6793494823993444`*^9, {3.6793500975888023`*^9, 3.6793501010398235`*^9}, {
   3.6793503502988024`*^9, 3.679350357442238*^9}, {3.679350388693789*^9, 
   3.6793504609919558`*^9}, {3.679350512381988*^9, 3.6793505224916997`*^9}, {
   3.6793505658690414`*^9, 3.679350573203977*^9}, {3.6793920543569756`*^9, 
   3.6793923209393916`*^9}, {3.679392352626535*^9, 3.6793925381168537`*^9}, {
   3.6793926280473437`*^9, 3.679392661685611*^9}, {3.679392696383786*^9, 
   3.679392699025669*^9}, {3.6793928383564887`*^9, 3.6793934549091573`*^9}, {
   3.679393586505351*^9, 3.679393616703784*^9}, {3.6793939133345203`*^9, 
   3.6793939143222685`*^9}, 3.6793940696010857`*^9, {3.679394099668668*^9, 
   3.6793944506348133`*^9}, {3.679394784056423*^9, 3.67939534176003*^9}, {
   3.679395381425836*^9, 3.679395503566868*^9}, {3.6793955684350924`*^9, 
   3.6793955734567842`*^9}, {3.6793957804079714`*^9, 
   3.6793958367041416`*^9}, {3.6793960807594223`*^9, 3.679396100513118*^9}, {
   3.67939616157646*^9, 3.679396197364892*^9}, {3.6793962497184567`*^9, 
   3.679396282906206*^9}, {3.679396609090597*^9, 3.6793966167836933`*^9}, {
   3.679396648625914*^9, 3.6793966543985653`*^9}, {3.679396740943916*^9, 
   3.679396768582145*^9}, {3.679396857866257*^9, 3.6793968963813653`*^9}, {
   3.6793969336171*^9, 3.6793970905785065`*^9}, {3.6793971251566105`*^9, 
   3.6793971298515577`*^9}, {3.679397221304947*^9, 3.67939722410863*^9}, {
   3.6793972641763353`*^9, 3.679397266225936*^9}, {3.6793983203128195`*^9, 
   3.6793983706649785`*^9}, {3.679398435449253*^9, 3.6793984477299423`*^9}, {
   3.6793984907409554`*^9, 3.6793985421648207`*^9}, {3.679398593771634*^9, 
   3.6793986705180993`*^9}, {3.6793989235435977`*^9, 3.67939893434542*^9}, {
   3.679403394164427*^9, 3.6794034018166647`*^9}, {3.679403783825127*^9, 
   3.6794037864835734`*^9}, {3.6794038759602175`*^9, 
   3.6794040830475106`*^9}, {3.679404119305796*^9, 3.679404298238202*^9}, 
   3.679404382036023*^9, {3.679404653274694*^9, 3.6794046842305584`*^9}, {
   3.6794050293859835`*^9, 3.6794050557043276`*^9}, {3.6794051146048007`*^9, 
   3.679405116722584*^9}, {3.679405184367193*^9, 3.6794052171029243`*^9}, {
   3.679405498432304*^9, 3.679405569807764*^9}, {3.679405690984426*^9, 
   3.6794056940269375`*^9}, {3.679405754352635*^9, 3.6794057624882355`*^9}, 
   3.679405828952403*^9, {3.6794059773823776`*^9, 3.679406037058329*^9}, {
   3.679406078458248*^9, 3.6794061638320656`*^9}, {3.6794064355972614`*^9, 
   3.679406619068183*^9}, {3.67940666239577*^9, 3.679406687383835*^9}, {
   3.679406724763648*^9, 3.6794067251687045`*^9}, 3.6794068172515316`*^9, {
   3.679406863506428*^9, 3.679406872901106*^9}, {3.679406930446825*^9, 
   3.679406948401491*^9}, {3.6794070040861063`*^9, 3.6794070065561094`*^9}, {
   3.679407312344544*^9, 3.679407314713808*^9}, {3.679407430180848*^9, 
   3.679407458271701*^9}, 3.6794078238766403`*^9, {3.679407878354503*^9, 
   3.6794082035777364`*^9}, {3.679566685353998*^9, 3.67956669759547*^9}, 
   3.679568153295287*^9, {3.6795682979748397`*^9, 3.679568399913588*^9}, {
   3.679568451510522*^9, 3.679568495166552*^9}, {3.6795691795206947`*^9, 
   3.679569250499019*^9}, {3.679569280716798*^9, 3.6795693785712852`*^9}, {
   3.6795925633128986`*^9, 3.679592673970081*^9}, {3.679592721867278*^9, 
   3.6795927229374475`*^9}, {3.679594988131906*^9, 3.679595118982105*^9}, {
   3.679738892130002*^9, 3.679738904422254*^9}, {3.6797389527800984`*^9, 
   3.6797389661620564`*^9}, {3.6797390238401327`*^9, 
   3.6797390636940556`*^9}, {3.6797391569629755`*^9, 3.679739218024413*^9}, {
   3.679739321633385*^9, 3.6797393341911097`*^9}, {3.6797394358016376`*^9, 
   3.679739498369319*^9}, {3.679739592363925*^9, 3.6797396087330103`*^9}, {
   3.6797405277538753`*^9, 3.6797405906735935`*^9}, {3.679741837482974*^9, 
   3.679741856061937*^9}, {3.6797530753347263`*^9, 3.679753080740266*^9}, {
   3.679822610411623*^9, 3.6798226951736937`*^9}, {3.6798262757554946`*^9, 
   3.6798262950500765`*^9}, {3.6798304972475395`*^9, 3.679830500587058*^9}, {
   3.6798305863580213`*^9, 3.6798306115801296`*^9}, {3.679830653827534*^9, 
   3.679830659160823*^9}, {3.679830750679475*^9, 3.679830778729604*^9}, {
   3.6798309380103083`*^9, 3.679831207376337*^9}, {3.6798312397643733`*^9, 
   3.6798313536889253`*^9}, {3.6798313849934535`*^9, 3.679831403721264*^9}, {
   3.6798314534696703`*^9, 3.6798315710288057`*^9}, {3.6798316592417555`*^9, 
   3.6798317372267046`*^9}, 3.679831789061343*^9, {3.679831822090675*^9, 
   3.679831828828328*^9}, {3.6798318972804823`*^9, 3.6798319051885147`*^9}, {
   3.679831945915737*^9, 3.6798319534838204`*^9}, {3.679831984167186*^9, 
   3.679831996593215*^9}, {3.6798321399538794`*^9, 3.6798321522301235`*^9}, {
   3.6798322802409973`*^9, 3.6798322901002426`*^9}, {3.679832475527353*^9, 
   3.6798324791745257`*^9}, {3.679832515937626*^9, 3.6798325272304134`*^9}, {
   3.6798328341287575`*^9, 3.6798328453074446`*^9}, {3.679832936913255*^9, 
   3.6798329499211493`*^9}, 3.6798329836635427`*^9, 3.6799120745739098`*^9, {
   3.68096946640281*^9, 3.680969506471238*^9}, {3.6809695943663626`*^9, 
   3.6809695983006277`*^9}, {3.680971291386725*^9, 3.680971292487916*^9}, {
   3.6810483453596783`*^9, 3.6810483658374515`*^9}, {3.681049666557871*^9, 
   3.681049672721483*^9}, {3.681049746015087*^9, 3.6810497473331203`*^9}, {
   3.681050036116782*^9, 3.6810503893437195`*^9}, {3.681050439415736*^9, 
   3.681050443570201*^9}, {3.6810508388119097`*^9, 3.681050853163069*^9}, {
   3.6810508894027395`*^9, 3.681050893808611*^9}, {3.681050960791823*^9, 
   3.6810510981120815`*^9}, {3.68105113216866*^9, 3.6810511668364615`*^9}, {
   3.681051291204856*^9, 3.6810512973216534`*^9}, {3.681051343040867*^9, 
   3.6810513458639803`*^9}, {3.6810514354795513`*^9, 
   3.6810514424265547`*^9}, {3.6810515295113626`*^9, 3.681051567230074*^9}, 
   3.681051692501606*^9, {3.681051791144629*^9, 3.681051837795389*^9}, {
   3.6810519974251823`*^9, 3.6810521036048183`*^9}, {3.681052180564599*^9, 
   3.6810521932444377`*^9}, {3.681052498724401*^9, 3.6810525317013626`*^9}, {
   3.681052601514738*^9, 3.6810526020129356`*^9}, {3.681130097135313*^9, 
   3.6811301355329266`*^9}, {3.6811306071661057`*^9, 
   3.6811306080939198`*^9}, {3.681569293340601*^9, 3.681569317434729*^9}, 
   3.681569384549055*^9, {3.6815694300305977`*^9, 3.6815694757801313`*^9}, {
   3.681569563306698*^9, 3.681569588540775*^9}, {3.6827030876800084`*^9, 
   3.682703262424608*^9}, {3.6827033351522703`*^9, 3.682703415951787*^9}, {
   3.6827036928979535`*^9, 3.6827037232224236`*^9}, {3.682751730525303*^9, 
   3.6827517963283806`*^9}, {3.6827518694423895`*^9, 3.682751938368969*^9}, {
   3.682752027328513*^9, 3.682752222908455*^9}, {3.6827522575518446`*^9, 
   3.682752305498808*^9}, {3.682752343269593*^9, 3.682752354684014*^9}, {
   3.682755918271523*^9, 3.6827559318206263`*^9}, {3.6827559727179627`*^9, 
   3.682756087687999*^9}, {3.682756145721592*^9, 3.682756179708579*^9}, {
   3.6827562427576885`*^9, 3.682756246343544*^9}, {3.6827562838961797`*^9, 
   3.682756361155776*^9}, {3.6827564050716653`*^9, 3.682756407820393*^9}, {
   3.6827568065792284`*^9, 3.682756817610793*^9}, {3.6827569799864893`*^9, 
   3.682757046769945*^9}, {3.6827571010926585`*^9, 3.68275714115174*^9}, 
   3.6827572933922772`*^9, {3.682757377968191*^9, 3.6827573780054502`*^9}, {
   3.682757430656029*^9, 3.682757430938339*^9}, {3.682757538765318*^9, 
   3.6827575688045273`*^9}, {3.6827576062534266`*^9, 
   3.6827577481318636`*^9}, {3.6827581645482197`*^9, 
   3.6827581925304317`*^9}, {3.6827582367544127`*^9, 
   3.6827582371612177`*^9}, {3.682758608097464*^9, 3.682758623028547*^9}, {
   3.6827587073678665`*^9, 3.682758772728657*^9}, {3.682758834124054*^9, 
   3.682758836456462*^9}, {3.682782233662289*^9, 3.6827822447829604`*^9}, {
   3.682782320018792*^9, 3.682782487834862*^9}, {3.682782529947446*^9, 
   3.6827825314122334`*^9}, {3.682782623878173*^9, 3.6827826814501777`*^9}, {
   3.6827827337311916`*^9, 3.682782750069191*^9}, {3.682782896362369*^9, 
   3.6827828993756037`*^9}, {3.6827829353820267`*^9, 3.682782936614396*^9}, {
   3.6827852963565493`*^9, 3.6827852984977875`*^9}, {3.6827871345324674`*^9, 
   3.6827871372960124`*^9}, {3.6827873158456683`*^9, 3.682787318082534*^9}, 
   3.6860539435781755`*^9, {3.689601466774104*^9, 3.6896015532256894`*^9}, {
   3.6896016488772197`*^9, 3.6896017962777505`*^9}, {3.689601830847403*^9, 
   3.689601843970112*^9}, {3.689601972787878*^9, 3.689601987554659*^9}, {
   3.6896020823447723`*^9, 3.689602177412902*^9}, {3.689602219625367*^9, 
   3.6896025123406606`*^9}, {3.689602553886554*^9, 3.689602618506301*^9}, {
   3.6896026500310593`*^9, 3.6896026586156025`*^9}, {3.6896026945036297`*^9, 
   3.6896028712580557`*^9}, {3.6896029047014227`*^9, 
   3.6896029083520837`*^9}, {3.689602966711435*^9, 3.689603058571074*^9}, {
   3.6896030932120867`*^9, 3.689603098139574*^9}, {3.6896031601944327`*^9, 
   3.6896031778706956`*^9}, {3.692621083267871*^9, 3.692621091669281*^9}, {
   3.6926212289569902`*^9, 3.6926212863157787`*^9}, {3.6926213497820015`*^9, 
   3.692621425637977*^9}, {3.6926214644408817`*^9, 3.6926214670573387`*^9}, {
   3.692621527200048*^9, 3.6926216897906265`*^9}, {3.692627410197031*^9, 
   3.6926275455290575`*^9}, {3.692627745145838*^9, 3.6926277852211*^9}, {
   3.692627821712092*^9, 3.692627853727536*^9}, {3.693051401128996*^9, 
   3.693051427295449*^9}, {3.6930549156980915`*^9, 3.6930551127231016`*^9}, {
   3.6930552622573557`*^9, 3.693055266815773*^9}, {3.693055339369998*^9, 
   3.693055342949571*^9}, {3.6930554341310496`*^9, 3.693055503513935*^9}, {
   3.6930556414092984`*^9, 3.693055671403966*^9}, {3.6930558447268047`*^9, 
   3.693055926052605*^9}, {3.69305610697759*^9, 3.693056188778535*^9}, {
   3.6930563054950542`*^9, 3.6930563090177827`*^9}, {3.693056360765195*^9, 
   3.693056364987186*^9}, {3.693056410841975*^9, 3.6930564674928303`*^9}, {
   3.693056544238221*^9, 3.6930565494853306`*^9}, {3.6930566103966265`*^9, 
   3.6930566475710416`*^9}, {3.693056687192659*^9, 3.6930566953123307`*^9}, {
   3.6930567877264233`*^9, 3.6930568950334253`*^9}, {3.6930570764514155`*^9, 
   3.693057081922228*^9}, {3.6930571431816697`*^9, 3.6930572655759053`*^9}, {
   3.693057312085458*^9, 3.6930573768320684`*^9}, {3.6930574682013035`*^9, 
   3.693057478075393*^9}, {3.6932296110918107`*^9, 3.6932296491465197`*^9}, {
   3.6932296904250884`*^9, 3.6932297134186444`*^9}, {3.693229748263383*^9, 
   3.6932297809611044`*^9}, {3.6932308110630655`*^9, 3.693230887986189*^9}, 
   3.693231311160925*^9, {3.6932313870086255`*^9, 3.693231387261767*^9}, {
   3.693300257298705*^9, 3.693300990881487*^9}, {3.6933010948551283`*^9, 
   3.6933011038372164`*^9}, {3.6933011352536983`*^9, 3.693301291501009*^9}, {
   3.693301360678998*^9, 3.693301846650869*^9}, {3.6933018835332117`*^9, 
   3.6933019831666975`*^9}, {3.6933020216715317`*^9, 3.693302099051983*^9}, {
   3.6933021369545527`*^9, 3.6933023594457426`*^9}, {3.693315004372259*^9, 
   3.693315011074277*^9}, {3.6944413361908827`*^9, 3.694441336907129*^9}, {
   3.6950542188467774`*^9, 3.695054222592431*^9}, {3.6950542990197506`*^9, 
   3.695054307656605*^9}, {3.695055223340433*^9, 3.695055253120858*^9}, {
   3.695055384838611*^9, 3.6950553878557982`*^9}, {3.6950554421005893`*^9, 
   3.6950555642412815`*^9}, {3.695055732966177*^9, 3.6950557465022993`*^9}, {
   3.6950558046684055`*^9, 3.695055961220101*^9}, {3.695055998668761*^9, 
   3.6950560162157063`*^9}, {3.695056048840163*^9, 3.695056146211532*^9}, {
   3.6950561862654486`*^9, 3.695056188190776*^9}, {3.6950562373677807`*^9, 
   3.6950562879516363`*^9}, {3.6950563517744646`*^9, 3.695056360712323*^9}, {
   3.69505860651243*^9, 3.695058635588434*^9}, {3.695058684806075*^9, 
   3.6950588940516233`*^9}, {3.6957164552525945`*^9, 
   3.6957164560312014`*^9}, {3.6957168591079035`*^9, 
   3.6957169851976123`*^9}, {3.695717024315192*^9, 3.695717055967568*^9}, {
   3.695717541243352*^9, 3.695717560925682*^9}, 3.6957176038835087`*^9, {
   3.6957178788805103`*^9, 3.6957178831140776`*^9}, {3.6957179221867228`*^9, 
   3.6957179708748155`*^9}, 3.695718071534438*^9, {3.69571902099082*^9, 
   3.695719034182557*^9}, {3.695719110436449*^9, 3.69571912465912*^9}, {
   3.6959981424530063`*^9, 3.695998143402657*^9}, {3.695998201800911*^9, 
   3.6959982211236086`*^9}, 3.696161679540288*^9, {3.696332885830512*^9, 
   3.69633291986983*^9}, {3.6963330735158176`*^9, 3.6963330774044304`*^9}, {
   3.6963331566111712`*^9, 3.6963331767939215`*^9}, {3.696592128005638*^9, 
   3.696592200325493*^9}, {3.696592280079686*^9, 3.696592300895893*^9}, {
   3.696592360614642*^9, 3.6965924391532173`*^9}, {3.696592549000717*^9, 
   3.6965926737509665`*^9}, {3.6965927230303907`*^9, 3.696592776632204*^9}, {
   3.696592858783024*^9, 3.6965928838162374`*^9}, {3.6965929149072313`*^9, 
   3.696592957987955*^9}, {3.6965930011830645`*^9, 3.696593001767194*^9}, {
   3.6965931015144644`*^9, 3.6965931654384584`*^9}, 3.6965931976879473`*^9, {
   3.6965932301462927`*^9, 3.6965932334864273`*^9}, {3.6965933569359655`*^9, 
   3.6965933577742367`*^9}, {3.696593390597328*^9, 3.6965934361026325`*^9}, {
   3.69659349189392*^9, 3.696593496582985*^9}, {3.6965935305307894`*^9, 
   3.696593532985401*^9}, {3.6965936048453135`*^9, 3.6965936500412455`*^9}, {
   3.696593703183982*^9, 3.6965937451325016`*^9}, {3.6965938330555153`*^9, 
   3.696593888009883*^9}, {3.696593996396145*^9, 3.6965943945158587`*^9}, {
   3.696594455320829*^9, 3.6965947103520412`*^9}, 3.696594768684037*^9, {
   3.696594815028183*^9, 3.696594823298046*^9}, {3.6965948702502565`*^9, 
   3.696595114616662*^9}, {3.6965951697312756`*^9, 3.6965953069777794`*^9}, {
   3.6965953500124445`*^9, 3.696595353751785*^9}, {3.6965953948831806`*^9, 
   3.6965954213916507`*^9}, {3.696595542553995*^9, 3.6965955448754787`*^9}, {
   3.6965956361847277`*^9, 3.69659568404626*^9}, {3.696595734352703*^9, 
   3.6965957496578636`*^9}, {3.696595795766102*^9, 3.6965958031733503`*^9}, {
   3.696595870299922*^9, 3.6965959033890886`*^9}, {3.69659594497962*^9, 
   3.6965960170554657`*^9}, {3.696596069740856*^9, 3.6965960719006443`*^9}, {
   3.696596115793432*^9, 3.6965961457518997`*^9}, {3.6965962116946173`*^9, 
   3.6965962545251417`*^9}, {3.696596513453669*^9, 3.696596515787285*^9}, 
   3.696596667129428*^9, {3.696596717699503*^9, 3.696596905098714*^9}, {
   3.6965969520835447`*^9, 3.696597023631856*^9}, {3.6965971034463863`*^9, 
   3.696597122891425*^9}, {3.6965975434946456`*^9, 3.696597546602838*^9}, {
   3.696597678096383*^9, 3.696597688330096*^9}, {3.6965978572829094`*^9, 
   3.6965979026996202`*^9}, {3.6965980212576485`*^9, 3.6965980251793203`*^9}, 
   3.6966112031725936`*^9, {3.696611352492113*^9, 3.6966113711786222`*^9}, {
   3.6966114660470867`*^9, 3.6966114941486444`*^9}, {3.696611603631793*^9, 
   3.6966117017799177`*^9}, {3.696700266768712*^9, 3.696700288898875*^9}, {
   3.6967004337486825`*^9, 3.6967004344970875`*^9}, {3.696700470331721*^9, 
   3.696700811186071*^9}, 3.6967008770696635`*^9, {3.69806251910773*^9, 
   3.6980625541108*^9}, 3.6980625975942183`*^9, {3.698062632771715*^9, 
   3.6980628199497538`*^9}, 3.6980632337317467`*^9, {3.6980648304601855`*^9, 
   3.6980648325027876`*^9}, {3.698065066304674*^9, 3.698065079166938*^9}, {
   3.698065285455764*^9, 3.6980652965729313`*^9}, {3.6980653380167575`*^9, 
   3.6980653446492004`*^9}, {3.6980654471979094`*^9, 3.6980655292188916`*^9}, 
   3.6980655608374662`*^9, {3.698065604769106*^9, 3.698065619074422*^9}, {
   3.6980656675506783`*^9, 3.6980657993549433`*^9}, {3.6980658534383354`*^9, 
   3.698065966443425*^9}, {3.6980660365747347`*^9, 3.6980662024756727`*^9}, {
   3.6980662555999365`*^9, 3.698066332245663*^9}, {3.698066967983133*^9, 
   3.698067007227691*^9}, {3.6980670546053877`*^9, 3.698067056006934*^9}, {
   3.6980670908888907`*^9, 3.6980671669030037`*^9}, {3.6980724764654927`*^9, 
   3.698072477326563*^9}, 3.698072882773279*^9, {3.698072926956035*^9, 
   3.698073002792399*^9}, {3.6980735228888316`*^9, 3.6980736363143997`*^9}, {
   3.6980736736873636`*^9, 3.6980736762855873`*^9}, {3.698073733371315*^9, 
   3.6980738176139774`*^9}, {3.698074115673706*^9, 3.698074151883384*^9}, {
   3.6980741951740847`*^9, 3.698074199709016*^9}, {3.6980745246005197`*^9, 
   3.6980745474711885`*^9}, {3.698074601676409*^9, 3.69807460485203*^9}, {
   3.6980746715422163`*^9, 3.6980746777413116`*^9}, {3.6980791312936554`*^9, 
   3.69807925534293*^9}, {3.698079396933419*^9, 3.698079417484049*^9}, 
   3.6980842057440357`*^9, {3.6982409454848895`*^9, 3.6982412171955957`*^9}, {
   3.698241250091914*^9, 3.698241286441023*^9}, {3.698241327342353*^9, 
   3.6982413450801177`*^9}, {3.6982415966143312`*^9, 3.698241607293414*^9}, {
   3.698241638323495*^9, 3.6982416395132837`*^9}, {3.6982416887425785`*^9, 
   3.698241696773405*^9}, {3.698241822416162*^9, 3.6982418436196356`*^9}, {
   3.6982418853778315`*^9, 3.6982419724720964`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980732393627605`*^9, 3.6980732540080023`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.698073269371405*^9, 3.6980732758917685`*^9}, {
  3.6980733132091875`*^9, 3.698073412714217*^9}, {3.698073837244851*^9, 
  3.6980738825713406`*^9}, {3.6980739630820827`*^9, 3.6980739865670257`*^9}, {
  3.6980740243601036`*^9, 3.698074078671706*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", 
   RowBox[{"x", ",", "4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980740869154997`*^9, 3.698074087535412*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", "x", "]"}]}]}], "Input",
 CellChangeTimes->{{3.698074093754369*^9, 3.698074100719349*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "backbone"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"x", "=", 
   RowBox[{"DGRandom3DBackbone", "[", 
    RowBox[{"5", ",", "\"\<HomogeneousCoords\>\"", ",", "0"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980743791997128`*^9, 3.6980744057210426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "exact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698074330586739*^9, 3.698074347158475*^9}, {
   3.698074722476389*^9, 3.6980747337900963`*^9}, {3.6980789816254253`*^9, 
   3.6980789916984963`*^9}, 3.698232826976427*^9, 3.698233064477606*^9, 
   3.69823428647866*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.027071751387198`", "3.027071751387198`", 
      "3.027071751387198`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "3.8290586386543537`", "3.8290586386543537`", 
      "3.8290586386543537`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "3.013436127155934`", "3.013436127155934`", 
      "3.013436127155934`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.526`", "1.526`", "1.526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.698241303318109*^9, 3.6982413522626467`*^9, 
  3.6982415086807766`*^9, 3.6982416486181555`*^9, 3.6982418514333177`*^9, 
  3.698241905694807*^9, 3.6982419615248356`*^9, 3.6982421654179096`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "inexact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"5", ",", "0.1", ",", "4.0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980789964236283`*^9, 3.6980790439016924`*^9}, {
   3.698079080507471*^9, 3.6980791021393194`*^9}, 3.698232826999941*^9, 
   3.6982330644946165`*^9, 3.6982342864951715`*^9, {3.698241389853842*^9, 
   3.6982414361845713`*^9}, {3.6982421743828087`*^9, 3.698242181708167*^9}}],

Cell[BoxData["4.358257932000492`"], "Output",
 CellChangeTimes->{
  3.6982414426263437`*^9, 3.6982415104989824`*^9, {3.698242169196369*^9, 
   3.698242191709801*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "2.916144608965488`", "2.916144608965488`", 
      "2.916144608965488`"},
     {
      TagBox["4",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["5",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["6",
       HoldForm], "2", "5", "3.835207694980367`", "3.835207694980367`", 
      "3.835207694980367`"},
     {
      TagBox["7",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["8",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["9",
       HoldForm], "4", "5", "1.526`", "1.526`", "1.526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{{3.698241366516601*^9, 3.6982413909590755`*^9}, 
   3.69824144263535*^9, 3.698241510506488*^9, {3.6982421692063756`*^9, 
   3.698242191719308*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot Routines\n",
 StyleBox["DGPlot3DBackbone, DGPlotAdjacencyMatrix", "Subitem",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698067020384124*^9, 3.6980670292797318`*^9}, {
  3.69807933406898*^9, 3.6980793390359116`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980799303095355`*^9, 3.698079937820016*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGPlot3DBackbone", ",", "\[IndentingNewLine]", "DGPlotAdjacencyMatrix"}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlot3DBackbone", "[", "X_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plots", " ", "the", " ", "points", " ", "using", " ", "the", " ", 
     "coordinates", " ", "of", " ", 
     RowBox[{"X", "[", "\"\<Points\>\"", "]"}], " ", "property"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Tube", "[", "X", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"Rest", "[", "X", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", "Green", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"First", "[", "X", "]"}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"DiagonalCovering_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "n", ",", "ei", ",", "ej", ",", "edges", ",", 
       "primitives", ",", "add"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"inverting", " ", "edges", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"n", "-", 
            RowBox[{
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"primitives", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", "edges", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plot", " ", "diagonal", " ", "covering"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"DiagonalCovering", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "edges", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"add", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "edges", "]"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ej", "=", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"add", ",", "\[IndentingNewLine]", 
              RowBox[{"PrependTo", "[", 
               RowBox[{"primitives", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Red", ",", 
                  RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "ei", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"primitives", ",", "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "+", "1", "-", "i"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698067066932127*^9, 3.6980670691426945`*^9}, {
  3.6980671902539835`*^9, 3.698067204062685*^9}, {3.698072477390606*^9, 
  3.698072477433634*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980799499995937`*^9, 3.698079957872316*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "a", " ", "simple", " ", "a", " ", "backbone"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGRandom3DBackbone", "[", "5", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{"x", "[", "\"\<Points\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698079970912464*^9, 3.698080010863962*^9}, {
  3.6980800447884617`*^9, 3.6980800500019207`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "adjacency", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "True"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698080062339603*^9, 3.6980801360647244`*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2) Check Solution and Standard Solvers", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution Analysis\n",
 StyleBox["DGRelativeError, DGLDME, DGRMSD", "Item",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698080472408944*^9, 3.6980804768391886`*^9}, {
  3.6980819993394966`*^9, 3.6980819997147427`*^9}, {3.69808505769368*^9, 
  3.698085064416663*^9}, {3.6980850988719807`*^9, 3.6980851081311226`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980817616089787`*^9, 3.6980817644118385`*^9}, {
  3.698081995870195*^9, 3.698081997682396*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGRelativeError", ",", "DGRMSD", ",", "DGLDME"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeError", "[", 
     RowBox[{"G_", ",", "X_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "k", ",", "lij", ",", "uij", ",", " ", "dij", ",", 
        "numberOfEdges", ",", "E", ",", "error"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numberOfEdges", "=", 
        RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfEdges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "numberOfEdges"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"j", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"error", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"lij", "-", "dij"}]}], "}"}], "]"}], "/", "lij"}], 
             ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"dij", "-", "uij"}]}], "}"}], "]"}], "/", "uij"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"Solution\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"Quality\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of nodes      : \>\"", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of edges      : \>\"", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Relative error bounds: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "error", "]"}], ",", 
              RowBox[{"Max", "[", "error", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Mean relative error  : \>\"", ",", 
            RowBox[{"Mean", "[", "error", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "error", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeError", "[", 
     RowBox[{"G_", ",", "X_", ",", "i_", ",", "nodes_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculates", " ", "the", " ", "relative", " ", "error", " ", "of", " ", 
      "the", " ", 
      StyleBox[
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}],
       FontSlant->"Italic"], " ", "considering", " ", "only", " ", "the", " ", 
      RowBox[{"nodes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eij", ",", "j", ",", "k", ",", "V", ",", "Xi", ",", "Xj", ",", "Dij", 
        ",", "Lij", ",", "Uij", ",", "errorDij", ",", "nid"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"current", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Xi", "=", 
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "indentifies", " ", "which", " ", "nodes", " ", "has", " ", "been", 
         " ", "already", " ", "fixed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nid", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "i"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "i"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nid", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", "k"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "considering", " ", "only", " ", "the", " ", "precedent", " ", 
         "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"V", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"nid", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<V=\>\"", ",", "V"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"errorDij", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "V", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"neighbor", " ", "index"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"V", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"neighbor", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Xj", "=", 
           RowBox[{"X", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"actual", " ", "distance"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"Xi", ",", "Xj"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"distance", " ", "bounds"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"error", " ", "Dij"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"eij", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Lij", "-", "Dij"}], ")"}], "/", "Lij"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dij", "-", "Uij"}], ")"}], "/", "Uij"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "error"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eij", ">", "errorDij"}], ",", 
            RowBox[{"errorDij", "=", "eij"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "errorDij", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGLDME", "[", 
     RowBox[{"G_", ",", "X_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "E", ",", 
        RowBox[{"ldme", "=", "0"}], ",", "lij", ",", "uij", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ldme", "+=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lij", "-", "dij"}], ",", 
              RowBox[{"dij", "-", "uij"}], ",", "0"}], "]"}], "^", 
            "2"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"ldme", "/", 
          RowBox[{"Length", "[", "E", "]"}]}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRMSD", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xc", ",", "yc", ",", "x", ",", "y", ",", "U", ",", "D", ",", "V", ",", 
      "rmsd"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"calculating", " ", "centers"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xc", "=", 
      RowBox[{"Mean", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yc", "=", 
      RowBox[{"Mean", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "translation", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "xc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "yc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "svd", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "D", ",", "V"}], "}"}], "=", 
      RowBox[{"SingularValueDecomposition", "[", "V", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"U", ".", 
       RowBox[{"Transpose", "[", "V", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"x", ".", "V"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rmsd", "=", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"x", "-", "y"}], ",", "\"\<Frobenius\>\""}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"rmsd", ",", "V", ",", "x", ",", "y"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.694502972960245*^9, {3.698067367481141*^9, 3.698067395833313*^9}, {
   3.698067426273737*^9, 3.6980674351745768`*^9}, {3.698067476857498*^9, 
   3.698067483945337*^9}, {3.698072477617757*^9, 3.6980724776993113`*^9}, {
   3.698080496562684*^9, 3.698080532662128*^9}, {3.6980805663762627`*^9, 
   3.6980805821927524`*^9}, {3.6980806901517887`*^9, 3.698080796669462*^9}, {
   3.6980808393943543`*^9, 3.698080998395549*^9}, {3.6980810288677597`*^9, 
   3.698081062766244*^9}, {3.6980810944827795`*^9, 3.6980812551239653`*^9}, {
   3.6980812941803694`*^9, 3.698081718035078*^9}, 3.698081759366491*^9, {
   3.6980821303298736`*^9, 3.698082131928934*^9}, {3.6980823171869106`*^9, 
   3.6980823242021375`*^9}, {3.6980824851120887`*^9, 3.6980824974522734`*^9}, 
   3.6980826051157875`*^9, {3.698082694063882*^9, 3.698083018317852*^9}, {
   3.698083054638441*^9, 3.698083067468951*^9}, {3.698083643291038*^9, 
   3.698083685250867*^9}, {3.698084961578022*^9, 3.6980849783856697`*^9}, {
   3.6980850110823555`*^9, 3.6980850259131927`*^9}, {3.6980850881383624`*^9, 
   3.6980851960959663`*^9}, 3.698085227318336*^9, {3.698085299672714*^9, 
   3.69808532412243*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.679350148964155*^9, 3.679350152549901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGRMSD", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.814700", ",", "0.097500", ",", "0.157600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.905800", ",", "0.278500", ",", "0.970600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.127000", ",", "0.546900", ",", "0.957200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.913400", ",", "0.957500", ",", "0.485400"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.632400", ",", "0.964900", ",", "0.800300"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.167723", ",", "5.509229", ",", "5.376972"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.921716", ",", "5.625914", ",", "6.161379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.265461", ",", "5.705450", ",", "6.339958"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.936486", ",", "6.432611", ",", "5.883000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.680966", ",", "5.982123", ",", "5.893736"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "X", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "Y", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmsd", ",", "Q", ",", "x", ",", "y"}], "}"}], "=", 
     RowBox[{"DGRMSD", "[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"rmsd", ",", 
     RowBox[{"MatrixForm", "[", "Q", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.698085535985145*^9, 3.6980855913598733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "relative", " ", "error"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGRelativeError", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGRelativeError", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
     RowBox[{"x", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], ",", "True"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980818764703417`*^9, 3.698081886967304*^9}, {
   3.698081945433242*^9, 3.698081988827022*^9}, 3.698082060929844*^9, {
   3.6980820951910677`*^9, 3.6980820983881884`*^9}, {3.6980821446609993`*^9, 
   3.6980822671425567`*^9}, {3.6980825518738685`*^9, 3.698082555863014*^9}, {
   3.6980830370027437`*^9, 3.6980830414366865`*^9}, {3.6980830871540065`*^9, 
   3.6980830909235086`*^9}, {3.69808533986487*^9, 3.698085364223053*^9}, 
   3.698085405098055*^9, {3.6980854633787403`*^9, 3.698085468666749*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "+=", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGRelativeError", "[", 
  RowBox[{
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "4", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6980825719787025`*^9, 3.6980825962794266`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Methods\n",
 StyleBox["DGNSolve, DGAllInstancesSolver, DGOptSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6944402487750998`*^9, 3.694440261776547*^9}, {
  3.6950520111428094`*^9, 3.695052013723016*^9}, {3.6980831506880984`*^9, 
  3.6980831767769136`*^9}, {3.698133371312555*^9, 3.6981333836562414`*^9}, {
  3.698135930449641*^9, 3.698135948486604*^9}}],

Cell[CellGroupData[{

Cell["DGNSolve - Nonlinear equations", "Section",
 CellChangeTimes->{{3.695980774599187*^9, 3.6959807890422645`*^9}, {
   3.698083438792361*^9, 3.6980834456569133`*^9}, 3.6981342346777525`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGNSolve", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNSolve", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "i", ",", "j", ",", "d", ",", "d12", ",", "eqs", ",", "xi", 
       ",", "xj", ",", "x", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "i", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<x\>\"", ",", 
            RowBox[{"ToString", "[", "xi", "]"}], ",", 
            RowBox[{"ToString", "[", "xj", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xj", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "i", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xi", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xj", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eqs", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "some", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"d12", "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"eqs", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "d12"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<eqs=\>\"", ",", 
        RowBox[{"TableForm", "[", "eqs", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"x", "=", 
        RowBox[{"NSolve", "[", 
         RowBox[{"eqs", ",", "x", ",", "Reals"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<x=\>\"", ",", 
        RowBox[{"TableForm", "[", "x", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "convert", " ", "relations", " ", "to", " ", "scalar", " ", "matrix"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "1"}], ",", 
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959807931988735`*^9, 3.6959808651195087`*^9}, {
   3.695981319470448*^9, 3.6959816654278154`*^9}, {3.695981696802899*^9, 
   3.69598193790523*^9}, {3.6959820413830986`*^9, 3.695982084209268*^9}, {
   3.695982167030732*^9, 3.6959821710191383`*^9}, {3.6959822184038534`*^9, 
   3.695982247628214*^9}, {3.695982304465785*^9, 3.6959823353580503`*^9}, {
   3.695982376103098*^9, 3.6959823800191355`*^9}, {3.695982800673107*^9, 
   3.695982828060028*^9}, {3.6959828702427034`*^9, 3.695982871401049*^9}, {
   3.6959829164454274`*^9, 3.6959830004868164`*^9}, {3.6959888042983994`*^9, 
   3.695988828501298*^9}, {3.695988895041767*^9, 3.695988955372898*^9}, {
   3.6959890712644*^9, 3.695989072049646*^9}, {3.695989103696677*^9, 
   3.6959891990099096`*^9}, {3.695989270528079*^9, 3.695989273022993*^9}, {
   3.6959893888410683`*^9, 3.695989444627164*^9}, {3.695989528041983*^9, 
   3.695989547018861*^9}, {3.695989592844425*^9, 3.6959896880344257`*^9}, {
   3.695989726077453*^9, 3.695989755804819*^9}, {3.695989869082122*^9, 
   3.6959899107177277`*^9}, {3.695989946606575*^9, 3.695989951887924*^9}, {
   3.695989995530915*^9, 3.6959901298385134`*^9}, {3.6959901809553523`*^9, 
   3.695990198460229*^9}, {3.6959902513619356`*^9, 3.695990370372473*^9}, {
   3.6959904207088675`*^9, 3.695990423239892*^9}, {3.6959904662502933`*^9, 
   3.6959905066632338`*^9}, {3.6959905389614973`*^9, 3.695990555189827*^9}, {
   3.695990592406352*^9, 3.6959905969143476`*^9}, {3.695990862448014*^9, 
   3.6959908807504*^9}, {3.696000226158333*^9, 3.6960002763225875`*^9}, 
   3.696000556861759*^9, 3.698072480850925*^9, {3.6980831666521983`*^9, 
   3.6980831691908817`*^9}, {3.6980832306786633`*^9, 3.698083358132863*^9}, {
   3.698083461150189*^9, 3.698083470133647*^9}, {3.698083534682835*^9, 
   3.6980835526362424`*^9}, {3.698083691959817*^9, 3.6980837054017324`*^9}, 
   3.6980838454526196`*^9, {3.6980839403088937`*^9, 3.6980839490326786`*^9}, {
   3.6980843544733815`*^9, 3.698084438317992*^9}, {3.6980845362034473`*^9, 
   3.6980845613631344`*^9}, {3.6980846745877323`*^9, 
   3.6980846848488035`*^9}, {3.698084721247966*^9, 3.698084721453601*^9}, {
   3.698084817232126*^9, 3.6980848637684917`*^9}, {3.6981335546141305`*^9, 
   3.698133654313637*^9}, 3.6981337103556285`*^9, {3.698133846774843*^9, 
   3.6981338552489643`*^9}, {3.698133886967635*^9, 3.698133943451098*^9}, {
   3.698135573538377*^9, 3.698135617321416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.6981342657108355`*^9, 3.698134272655942*^9}, {
  3.6981343900066195`*^9, 3.6981343928237734`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959821725045357`*^9, 3.6959822057965155`*^9}, {
   3.695982268679414*^9, 3.6959823441443806`*^9}, {3.695982920850732*^9, 
   3.6959829209352903`*^9}, {3.6959889733898363`*^9, 
   3.6959890309626265`*^9}, {3.6959890820892334`*^9, 
   3.6959890852169228`*^9}, {3.6959894614439697`*^9, 
   3.6959894618659773`*^9}, {3.695990141312871*^9, 3.6959901626141343`*^9}, {
   3.6959902092902546`*^9, 3.695990213653076*^9}, {3.6959906056694627`*^9, 
   3.6959907132884865`*^9}, {3.69599074403419*^9, 3.6959908171476326`*^9}, {
   3.695990848691627*^9, 3.695990848783781*^9}, {3.6959909472498837`*^9, 
   3.695990958030756*^9}, {3.6959909990686064`*^9, 3.6959911014281673`*^9}, {
   3.6959913603925343`*^9, 3.695991378520133*^9}, {3.695991433093545*^9, 
   3.6959914428903313`*^9}, 3.695991528666456*^9, {3.69599293111237*^9, 
   3.6959929457414904`*^9}, {3.6959998819368143`*^9, 
   3.6959998966497583`*^9}, {3.6980724808624325`*^9, 3.698072480872939*^9}, {
   3.698083371004901*^9, 3.6980833815779133`*^9}, {3.6980834763637805`*^9, 
   3.6980835167999725`*^9}, {3.698083560105197*^9, 3.698083627113807*^9}, {
   3.698083718150687*^9, 3.698083729336606*^9}, {3.6980837656231737`*^9, 
   3.6980837817648787`*^9}, {3.6980839882216706`*^9, 3.698083993838396*^9}, {
   3.698084540828515*^9, 3.698084565599944*^9}, {3.6980849011127596`*^9, 
   3.6980849128890715`*^9}, {3.698133031309068*^9, 3.698133037710814*^9}, {
   3.698133273852414*^9, 3.6981332754589806`*^9}, 3.6981338077458096`*^9, {
   3.6981339586967115`*^9, 3.6981339613164473`*^9}, 3.6981341845189857`*^9, 
   3.698134282590531*^9, 3.6981347590256243`*^9, 3.6982328270239544`*^9, 
   3.6982330645126257`*^9, 3.6982342865056777`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.698134374303359*^9, 3.6981343879453526`*^9}, {
  3.6981344825839243`*^9, 3.6981345190736256`*^9}, {3.6981347408180485`*^9, 
  3.6981347432411566`*^9}, {3.6981349406590924`*^9, 3.698134953907379*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959914809267282`*^9, 3.6959914981254253`*^9}, {
   3.695991562961543*^9, 3.6959916431277523`*^9}, {3.6959920787623296`*^9, 
   3.695992087048052*^9}, {3.696946214015137*^9, 3.69694621608445*^9}, {
   3.6980724808839464`*^9, 3.698072480897456*^9}, {3.698084028617964*^9, 
   3.698084105895296*^9}, {3.6980858921917467`*^9, 3.6980858944297314`*^9}, {
   3.698085934280164*^9, 3.6980859343897343`*^9}, {3.6980859899040556`*^9, 
   3.698086052129326*^9}, {3.6981330460023603`*^9, 3.698133057702621*^9}, 
   3.6981330886126213`*^9, {3.6981331326739793`*^9, 3.6981331488507085`*^9}, {
   3.698133253865158*^9, 3.698133296529955*^9}, {3.698133447048286*^9, 
   3.6981334486803684`*^9}, {3.698133997471426*^9, 3.698133999296138*^9}, {
   3.6981342041044755`*^9, 3.698134209840279*^9}, {3.6981343631304502`*^9, 
   3.6981343650707364`*^9}, {3.698134496173938*^9, 3.6981345005568447`*^9}, {
   3.6981345313367596`*^9, 3.6981345910158415`*^9}, 3.6981346249008155`*^9, 
   3.698134701853427*^9, {3.6981348637946124`*^9, 3.6981349007781425`*^9}, 
   3.698232827103007*^9, 3.698233064531138*^9, 3.6982342865161858`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981347628831825`*^9, 3.698134786324731*^9}, 
   3.698134823515397*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981348054584217`*^9, 3.698134807957579*^9}, 
   3.698232827128024*^9, 3.69823306454965*^9, 3.6982342865201874`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.6981343377716303`*^9, 3.6981343538603*^9}, {
  3.6981344661054945`*^9, 3.698134480170825*^9}, {3.698134734934148*^9, 
  3.6981347357797074`*^9}, {3.6981350119238586`*^9, 3.6981350132437344`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698134194580659*^9, 3.6981342001503525`*^9}, {
   3.698134310771722*^9, 3.698134331373887*^9}, {3.6981350004322367`*^9, 
   3.6981350190771027`*^9}, 3.698232827151539*^9, 3.6982330645676622`*^9, 
   3.698234286524191*^9}]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGOptSolver - Optimization", "Section",
 CellChangeTimes->{{3.6981358277685385`*^9, 3.698135859657689*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6945082211811686`*^9, 3.6945082350165057`*^9}, {
   3.694508353277437*^9, 3.694508357986554*^9}, {3.694509485037609*^9, 
   3.6945095303971586`*^9}, 3.6981358145867968`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOptSolverFobj", ",", "DGOptSolver"}], "]"}]], "Input",
 CellChangeTimes->{{3.69813587956089*^9, 3.698135900942071*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DGOptSolverFobj", "[", 
   RowBox[{"i_", ",", "j_", ",", "d_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "=", "0"}], ",", "numberOfAtoms", ",", "ncols", ",", 
      "nrows", ",", "k", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"f", "+=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "^", 
            "2"}]}], ")"}], "^", "2"}]}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGOptSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "f", ",", "y", ",", "v", ",", "w", ",", "i", ",", 
      "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "z", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"z", ",", 
        RowBox[{"3", "*", "numberOfAtoms"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", ":=", 
      RowBox[{
       RowBox[{"DGOptSolverFobj", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "#"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "y"}], "}"}], "=", 
      RowBox[{"NMinimize", "[", 
       RowBox[{
        RowBox[{"f", "[", "y", "]"}], ",", "y"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", "iloc", "]"}], "]"}], "[", 
          RowBox[{"[", "jloc", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwl0G1IU3EUBvC10AqKEBGNcuxmiDJ1mHmFJdF6AbdCxrq9KFrOUJsKRY3I
EExmJisj8u72cvU65wcjkGEur9SHcBGVisxc2IvaWFtik2WNBk2D7vPvw+EH
h4dzOIeqPm+skctksjyp4Fqvq+pBe1jb4XGaoCFovQrtqmXizOn7LZB2jbVC
YSHDBtnsA7dJXk874I9kfhTm3PjkgRWLCa+gWagMkfn2CeKkmPobKjL3EQ3b
N8Rh73iMWG7ZuvEh9vhWNsES2yIHvy5HiGyQEuGH0rwx+Cdr+v2wZOeV8Cxc
mW7yw2bhUgie6vtucEsyujNGGOj/XAan1EMm+C5WXgcHXzc1ws2HuGdwMuoh
+oTxl/CcanYGptd756FbTy1B+fqEKNxd4FyF1KO3257iDm9zOuzv2ZEFM125
anh5z7oCWE2XFMI5pVsDb70o3gvv0kVaWDGceASqjmsqYd1jtgauFVnNsCfp
ZgP8q/logQwTb4PxnwsdUMm334P5J8Vu6IvxLpLjDo7AtIYyEW4RlkKwS6b4
Bdt0zCr0MmeJ81qHfETyy2FdErwgpKRA/9CxNFh/LaKEiYHSDNK/cyIbPndU
EVkfT8NgzgCxNrCzGEbMtcTuCfuUiL9wrV64q1BhsXaGtUdH/2szDpqcknPJ
T4iUwJmhJnSxEer96hb4Zv83Yn70ehfU9fEs/AeJrpd4
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.694443377092915*^9, 3.69444339110975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"C", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "5", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"DGOptSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeError", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "y", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6981360211258264`*^9, 3.6981360483600693`*^9}, {
  3.6981360788457885`*^9, 3.6981360876976595`*^9}, {3.6981362425377584`*^9, 
  3.6981362793146505`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGOptSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698136335320798*^9, 3.698136365971901*^9}, 
   3.698136419643999*^9, {3.6981365233312697`*^9, 3.6981365309578285`*^9}, 
   3.6982328271785564`*^9, 3.698233064588676*^9, 3.6982342865286937`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"D", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "100", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "It", " ", "can", " ", "take", " ", "a", " ", "lot", " ", "of", " ", 
    RowBox[{
     RowBox[{"time", "!!"}], "!"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", "100"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "k", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"MDGAllPairs", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"eij", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"0.50", 
           RowBox[{"Length", "[", "eij", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"MDGCreateInstanceFromSolutionAndPairs", "[", 
        RowBox[{"x", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"MDGOptSolver", "[", 
        RowBox[{"i", ",", "j", ",", "d"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"CheckMDGSolution", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "y", ",", "False"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"f", ">", "0.01"}], ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"k", ",", "10"}], "]"}], "\[Equal]", "0"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{Seed,Error}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "f"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.694509866767895*^9, 3.6945098916890173`*^9}, {
   3.694510093362407*^9, 3.6945101089935975`*^9}, {3.694510169324609*^9, 
   3.6945101956066246`*^9}, {3.69451025730608*^9, 3.6945103028323336`*^9}, {
   3.694510333348612*^9, 3.6945103372228565`*^9}, {3.694510375701194*^9, 
   3.6945103983735256`*^9}, {3.6945104397134395`*^9, 
   3.6945105412985134`*^9}, {3.6945116235631905`*^9, 
   3.6945117051807966`*^9}, {3.694511748936102*^9, 3.694511751267356*^9}, {
   3.694511828015873*^9, 3.69451182813148*^9}, {3.6945118732869487`*^9, 
   3.6945119184429393`*^9}, {3.694512052222779*^9, 3.694512063708476*^9}, {
   3.694512108959667*^9, 3.694512122482854*^9}, {3.6945122224563627`*^9, 
   3.6945122549831843`*^9}, {3.6945122929003396`*^9, 3.6945123044169874`*^9}, 
   3.6945123946710157`*^9, {3.6945124631794453`*^9, 3.6945125052038*^9}, {
   3.6945126788009663`*^9, 3.6945126790627346`*^9}, {3.6945130547371454`*^9, 
   3.6945130548839865`*^9}, {3.6945135081915073`*^9, 3.694513508353938*^9}, {
   3.694519946259391*^9, 3.6945199465126286`*^9}, {3.6945256242761097`*^9, 
   3.6945256246907053`*^9}, {3.694525800598526*^9, 3.6945258010835543`*^9}, {
   3.6957188810695877`*^9, 3.695718892192297*^9}, {3.6959992062308846`*^9, 
   3.695999250403311*^9}, {3.69807248104105*^9, 3.6980724810570617`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGAllIstancesSolver - Solver for complete distance matrices", "Section",
 CellChangeTimes->{{3.694440270104432*^9, 3.6944402903355665`*^9}, {
  3.694508362021762*^9, 3.6945083745408287`*^9}, {3.6945086248727016`*^9, 
  3.694508627838993*^9}, {3.6945094785730658`*^9, 3.6945094800751905`*^9}, {
  3.6945095153284197`*^9, 3.6945095197760963`*^9}, {3.6981344064787574`*^9, 
  3.6981344229460754`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698135035451965*^9, 3.6981350399559503`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGAllInstancesSolver", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGAllInstancesSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "k", ",", "m", ",", "\[Lambda]", ",", "v", ",", 
      "x", ",", "i", ",", "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "i", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"j", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"\[Lambda]", ":", 
       RowBox[{"eigenvalues", " ", "and", " ", "v"}], ":", "eigenvectors"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "iloc", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "iloc", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}]}], ")"}], "/", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "v"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"m", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"getting", " ", "solution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "[", 
          RowBox[{"[", "iloc", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6945071563672113`*^9, 3.694507320236541*^9}, {
   3.694507374181988*^9, 3.6945074899994063`*^9}, {3.694508412302476*^9, 
   3.694508475668783*^9}, {3.694508530004429*^9, 3.694508561182579*^9}, {
   3.6959987033856926`*^9, 3.695998723358347*^9}, 3.698072480922473*^9, {
   3.6981333587577276`*^9, 3.698133359033911*^9}, {3.698133390002452*^9, 
   3.6981334023261256`*^9}, {3.698135717156601*^9, 3.6981357371274214`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.698135059085639*^9, 3.6981350698968105`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints where DGNSolve fails", \
"Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136136952828*^9, 
  3.6981361465947227`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGAllInstancesSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698135080509349*^9, 3.6981351226262827`*^9}, {
   3.698135768710869*^9, 3.698135776496533*^9}, 3.698232827201572*^9, 
   3.698233064605688*^9, 3.6982342865326967`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: 100 points all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136155945425*^9, 
  3.6981361596994143`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGAllInstancesSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981361619569116`*^9, 3.69813618311895*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3) Ordering, BuildUP and BP ", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordering\n",
 StyleBox["DGOrdering", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.696934517173864*^9, 3.6969345185367727`*^9}, 
   3.6969346750258846`*^9, 3.6981366777421827`*^9, {3.698220137774626*^9, 
   3.698220138030796*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.696934578835677*^9, 3.696934581103756*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGOrdering", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G_", ",", "C_", ",", 
    RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Finds", " ", "an", " ", "order", " ", "such", " ", "that", " ", "all", 
     " ", "atoms", " ", "could", " ", "be", " ", "determined", " ", "by", " ",
      "following", " ", "it"}], ";", " ", "\[IndentingNewLine]", "   ", 
    RowBox[{
     StyleBox["C",
      FontSlant->"Italic"], 
     StyleBox[":",
      FontSlant->"Italic"], " ", 
     StyleBox[
      RowBox[{
       StyleBox[
        RowBox[{"I", "nitial"}]], " ", "clique", " ", "used", " ", "to", " ", 
       "start", " ", "the", " ", "ordering"}],
      FontSlant->"Italic"]}], 
    StyleBox[";",
     FontSlant->"Italic"], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], 
    StyleBox["   ",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"G", ":", " ", 
      RowBox[{"Instance", " ", "graph"}]}],
     FontSlant->"Italic"], 
    StyleBox[";",
     FontSlant->"Italic"]}], 
   StyleBox["\[IndentingNewLine]",
    FontSlant->"Italic"], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "k", ",", "neighs", ",", "nAtoms", ",", 
      "nFixedAtoms", ",", "nFixedNeighs", ",", "atomsToBeFixed", ",", 
      "atomOrder", ",", " ", "order", ",", "minNeighsToBeFixed"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"minNeighsToBeFixed", "=", 
      RowBox[{"Length", "[", "C", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nAtoms", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFixedNeighs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"atomOrder", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"atomsToBeFixed", "=", "C"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nFixedNeighs", "[", 
       RowBox[{"[", "C", "]"}], "]"}], "=", "Infinity"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFixedAtoms", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "atomsToBeFixed", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<nFixedNeighs=\>\"", ",", "nFixedNeighs"}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<atomsToBeFixed=\>\"", ",", "atomsToBeFixed"}], "]"}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"i", "=", 
         RowBox[{"First", "[", "atomsToBeFixed", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"remove", " ", "the", " ", "first", " ", "element"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"atomsToBeFixed", "=", 
         RowBox[{"Rest", "[", "atomsToBeFixed", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"skipped", ":", " ", 
          RowBox[{"already", " ", "fixed"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"atomOrder", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"Continue", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Fixing: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"atomOrder", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"++", "nFixedAtoms"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<atomOrder=\>\"", ",", "atomOrder"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"update", " ", "neighs", " ", "score"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"neighs", "=", 
         RowBox[{"AdjacencyList", "[", 
          RowBox[{"G", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<neighs=\>\"", ",", "neighs"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "neighs", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"neighs", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nFixedNeighs", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "++"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"atomOrder", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"nFixedNeighs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
               "minNeighsToBeFixed"}], " ", "&&", 
              RowBox[{"Not", "[", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nFixedAtoms", "\[NotEqual]", "nAtoms"}], ",", 
       RowBox[{
       "Throw", "[", 
        "\"\<InvalidOrdering: It has not been possible the set ordering.\>\"",
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"order", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"order", "[", 
       RowBox[{"[", "atomOrder", "]"}], "]"}], "=", "order"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "order", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980611506193595`*^9, 3.698061152492004*^9}, 
   3.698072481134613*^9, {3.698136626484687*^9, 3.6981366266763134`*^9}, {
   3.69813681557358*^9, 3.698136816036886*^9}, {3.698137537734437*^9, 
   3.698137590182723*^9}, {3.698235991898496*^9, 3.6982360627464857`*^9}, {
   3.6982361166922655`*^9, 3.698236179383627*^9}, {3.6982362219318867`*^9, 
   3.698236263425408*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{
  3.696335250480235*^9, {3.6963366417863913`*^9, 3.6963366443081226`*^9}, {
   3.69693446673809*^9, 3.6969344703216915`*^9}, {3.6969345925486455`*^9, 
   3.6969345996344643`*^9}}],

Cell[CellGroupData[{

Cell["Simple Example: The initial ordering is ok!", "Subsubsection",
 CellChangeTimes->{{3.696934614705723*^9, 3.6969346254263096`*^9}, {
  3.6981609206416388`*^9, 3.698160922002041*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6963351391970744`*^9, 3.6963351781245375`*^9}, {
   3.6963352250157614`*^9, 3.6963352441326723`*^9}, {3.6966991356467*^9, 
   3.6966991599848185`*^9}, {3.696699212467594*^9, 3.696699212567856*^9}, 
   3.696699760565385*^9, {3.69669979452897*^9, 3.6966998652771873`*^9}, {
   3.6967008913917418`*^9, 3.696700901880651*^9}, {3.696934477541465*^9, 
   3.6969344787881804`*^9}, {3.6969346029648733`*^9, 
   3.6969346047214565`*^9}, {3.6969459408755083`*^9, 3.696945941822027*^9}, 
   3.6980724811436186`*^9, {3.698136903087622*^9, 3.698136916136277*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Harder Example: The initial ordering is not valid", "Subsubsection",
 CellChangeTimes->{3.696934653673157*^9, 3.698160925305233*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.696699222452924*^9, 3.6966993598737216`*^9}, {
   3.6966993928242817`*^9, 3.69669964645918*^9}, {3.6966996846742587`*^9, 
   3.6966996863586435`*^9}, {3.696699787441859*^9, 3.6966997902261276`*^9}, {
   3.696699983277195*^9, 3.696700066799402*^9}, {3.6967001159283457`*^9, 
   3.6967001463737307`*^9}, {3.696700378130589*^9, 3.696700406037734*^9}, {
   3.6967008496726646`*^9, 3.696700855375781*^9}, {3.6967012062244864`*^9, 
   3.6967012420923347`*^9}, {3.6967013615844746`*^9, 3.696701364078554*^9}, {
   3.6967014049615245`*^9, 3.6967014090833235`*^9}, {3.696934481921709*^9, 
   3.696934483419512*^9}, 3.698072481153125*^9, {3.698136927274665*^9, 
   3.698136934192253*^9}}]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intersection of spheres\n",
 StyleBox["DGIntersect3Spheres, DGIntersect4Spheres", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6982194666379185`*^9, 3.6982194765995255`*^9}, {
   3.698220168167163*^9, 3.6982202742700357`*^9}, {3.698220398059785*^9, 
   3.698220406529903*^9}, 3.698220659834761*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGIntersect3Spheres", ",", "DGIntersect4Spheres"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIntersect3Spheres", "[", 
     RowBox[{"a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_"}],
      "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Gets", " ", "the", " ", "2", " ", "solutions", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "a"}], "||"}], "=", "ra"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "b"}], "||"}], "=", "rb"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "c"}], "||"}], "=", "rc"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "   ", 
       StyleBox["Input",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], 
       StyleBox[";",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
       StyleBox["a",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox["b",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      RowBox[{
       RowBox[{
        StyleBox["c",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"sphere", " ", "centers"}],
         FontWeight->"Plain"]}], ";", "\[IndentingNewLine]", "   ", "ra"}], 
      ",", "rb", ",", 
      RowBox[{
       RowBox[{"rc", ":", " ", 
        StyleBox[
         RowBox[{"respective", " ", "sphere", " ", "radius"}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox["   ",
        FontWeight->"Plain"], 
       StyleBox["Output",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], ";", "   ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["x",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"the", " ", "two", " ", "intersections", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ":", " ", 
            RowBox[{"positive", " ", "chirality", " ", "and", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ":", " ", 
            RowBox[{"negative", " ", "chirality"}]}], ")"}]}],
         FontWeight->"Plain"]}], ";"}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "A", ",", "x", ",", "p", ",", "dp", ",", "u", ",", "v", ",", 
        "w", ",", "du", ",", "dv", ",", "dw", ",", "dpu", ",", "AbsCos", ",", 
        "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "select", " ", "the", " ", "most", " ", "perpendicular", " ", "vertex",
         " ", "angle", " ", 
        RowBox[{"(", "stability", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"AbsCos", "[", 
         RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{"u", ",", "v"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Norm", "[", "u", "]"}], "*", 
           RowBox[{"Norm", "[", "v", "]"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v", ",", "w", ",", "du", ",", "dv", ",", "dw"}], 
         "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"MinimalBy", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"AbsCos", "[", 
                 RowBox[{
                  RowBox[{"b", "-", "a"}], ",", 
                  RowBox[{"c", "-", "a"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "a", ",", "b", ",", "c", ",", "ra", ",", "rb", ",", "rc"}], 
                 "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"AbsCos", "[", 
                 RowBox[{
                  RowBox[{"c", "-", "b"}], ",", 
                  RowBox[{"a", "-", "b"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "b", ",", "c", ",", "a", ",", "rb", ",", "rc", ",", "ra"}], 
                 "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"AbsCos", "[", 
                 RowBox[{
                  RowBox[{"a", "-", "c"}], ",", 
                  RowBox[{"b", "-", "c"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "c", ",", "a", ",", "b", ",", "rc", ",", "ra", ",", "rb"}], 
                 "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
            "First"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"normal", " ", "to", " ", "the", " ", "plane", " ", 
         RowBox[{"(", 
          RowBox[{"u", ",", "v", ",", "w"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Normalize", "[", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"v", "-", "u"}], ",", 
           RowBox[{"w", "-", "u"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"A", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"v", "-", "u"}], ",", 
          RowBox[{"w", "-", "u"}], ",", "n"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Dot", "[", 
              RowBox[{"v", ",", "v"}], "]"}], "-", 
             RowBox[{"Dot", "[", 
              RowBox[{"u", ",", "u"}], "]"}], "-", 
             RowBox[{"dv", "^", "2"}], "+", 
             RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Dot", "[", 
              RowBox[{"w", ",", "w"}], "]"}], "-", 
             RowBox[{"Dot", "[", 
              RowBox[{"u", ",", "u"}], "]"}], "-", 
             RowBox[{"dw", "^", "2"}], "+", 
             RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
          RowBox[{"Dot", "[", 
           RowBox[{"n", ",", "u"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{"A", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "select", " ", "the", " ", "factor", " ", "with", " ", "minimal", " ",
          "canceling", " ", "effect", " ", 
         RowBox[{"(", "stability", ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "du"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"MaximalBy", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ra", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "a"}], "]"}]}], ")"}], "/", "ra"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "ra"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"rb", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "b"}], "]"}]}], ")"}], "/", "rb"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "rb"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"rc", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "c"}], "]"}]}], ")"}], "/", "rc"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "rc"}], "}"}]}], "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "First"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dpu", "=", 
        RowBox[{"Norm", "[", 
         RowBox[{"p", "-", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dp", "=", 
        RowBox[{"N", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"du", "+", "dpu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"du", "-", "dpu"}], ")"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dp", "=", 
        RowBox[{"Re", "[", "dp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "+", 
           RowBox[{"dp", "*", "n"}]}], ",", 
          RowBox[{"p", "-", 
           RowBox[{"dp", "*", "n"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calculating", " ", "max", " ", "relative", " ", "errors", " ", "of", 
         " ", "each", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "ra"}], 
                ")"}], "/", "ra"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rb"}], 
                ")"}], "/", "rb"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"c", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rc"}], 
                ")"}], "/", "rc"}]}], "}"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIntersect4Spheres", "[", 
    RowBox[{
    "a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_", ",", "d_",
      ",", "rd_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "=", 
       RowBox[{"DGIntersect3Spheres", "[", 
        RowBox[{"a", ",", "ra", ",", "b", ",", "rb", ",", "c", ",", "rc"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "d"}], "]"}], "-", "rd"}], 
          "]"}], "<", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "d"}], "]"}], "-", "rd"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"error", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"error", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982194867257423`*^9, 3.6982194896711955`*^9}, {
   3.6982195521886597`*^9, 3.6982195574006166`*^9}, {3.698219658452036*^9, 
   3.6982197616420813`*^9}, {3.6982197929738626`*^9, 3.698220066685677*^9}, {
   3.6982202502951345`*^9, 3.6982206319197464`*^9}, {3.698220667243675*^9, 
   3.698220668644104*^9}, {3.6982374927691836`*^9, 3.6982376692978663`*^9}, {
   3.6982376993873615`*^9, 3.6982377116575003`*^9}, {3.6982377427296095`*^9, 
   3.6982378010688024`*^9}, {3.698238162700093*^9, 3.69823821610886*^9}, {
   3.698238503550205*^9, 3.6982385061164074`*^9}, {3.6982394287569656`*^9, 
   3.6982395461318145`*^9}, {3.6982396045652046`*^9, 
   3.6982396143261786`*^9}, {3.6982396607885056`*^9, 
   3.6982397285916595`*^9}, {3.6982397636183057`*^9, 3.698239783426839*^9}, {
   3.6982399533225765`*^9, 3.698239972728856*^9}, {3.6982400966089387`*^9, 
   3.6982401012365484`*^9}, 3.6982427393374405`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["BuildUpSolver", "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6808787874069276`*^9, 3.6808787932715735`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGBuildUpInitX", ",", "\[IndentingNewLine]", "DGBuildUpSetX", ",", 
    "\[IndentingNewLine]", "DGBuildUpSolver"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpInitX", "[", 
     RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i1", ",", "i2", ",", "i3", ",", "i4", ",", "d12", ",", "d13", ",", 
        "d14", ",", "d23", ",", "d24", ",", "d34", ",", "A", ",", "X21", ",", 
        "X31", ",", "X32", ",", "X41", ",", "X42", ",", "error"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
        "basis"}], ";", "\[IndentingNewLine]", 
       RowBox[{"d12", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i1", "\[UndirectedEdge]", "i2"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d13", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i1", "\[UndirectedEdge]", "i3"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d14", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i1", "\[UndirectedEdge]", "i4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d23", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i2", "\[UndirectedEdge]", "i3"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d24", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i2", "\[UndirectedEdge]", "i4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d34", "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"i3", "\[UndirectedEdge]", "i4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "four", " ", "atoms", " ", "in", " ", "the", " ", "basis"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "d12"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X21", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d13", "^", "2"}], "-", 
           RowBox[{"d23", "^", "2"}], "+", 
           RowBox[{"X21", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "X21"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X31", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"d13", "^", "2"}], "-", 
          RowBox[{"X31", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i4", "]"}], "]"}], ",", "error"}], "}"}], "=", 
        RowBox[{
         RowBox[{"DGIntersect3Spheres", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i1", "]"}], "]"}], ",", "d14", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i2", "]"}], "]"}], ",", "d24", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i3", "]"}], "]"}], ",", "d34"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpSetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "basis", ",", "x", ",", "i1", ",", 
        "i2", ",", "i3", ",", "i4", ",", "d1", ",", "d2", ",", "d3", ",", 
        "d4", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "4"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"basis", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{"neighs", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "basis", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
           RowBox[{"basis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"d1", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i1", "\[UndirectedEdge]", "k"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d2", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i2", "\[UndirectedEdge]", "k"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d3", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i3", "\[UndirectedEdge]", "k"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d4", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i4", "\[UndirectedEdge]", "k"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "error"}], "}"}], "=", 
           RowBox[{"DGIntersect4Spheres", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i3", "]"}], "]"}], ",", "d3", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i4", "]"}], "]"}], ",", "d4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"error", "<", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "3"}], ")"}]}]}], ",", "Break"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G_", ",", "nodes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"DGBuildUpInitX", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "remaining", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "5"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"nodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"DGBuildUpSetX", "[", 
          RowBox[{"G", ",", "X", ",", "nodes", ",", "i"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.680878796715887*^9, 3.6808788985008335`*^9}, {
   3.6808789677890434`*^9, 3.680879020711442*^9}, {3.6808790793750415`*^9, 
   3.68087932980835*^9}, {3.6808794433580427`*^9, 3.680879452768545*^9}, {
   3.680879482957798*^9, 3.6808798572569814`*^9}, {3.6808801823844533`*^9, 
   3.6808802178347673`*^9}, {3.6808811493834057`*^9, 
   3.6808816352290897`*^9}, {3.6808816739789124`*^9, 3.680882032196274*^9}, {
   3.6808820912500343`*^9, 3.6808821757453947`*^9}, {3.680882211133314*^9, 
   3.680882378871024*^9}, {3.6808824342608643`*^9, 3.680882434823531*^9}, {
   3.680883747151867*^9, 3.680883922885659*^9}, {3.680883972978032*^9, 
   3.680884390920006*^9}, {3.6808844300037193`*^9, 3.6808845512584267`*^9}, 
   3.68088461521344*^9, {3.6808846535514545`*^9, 3.6808847349773226`*^9}, {
   3.6808850013417034`*^9, 3.6808850118309097`*^9}, {3.680885071364455*^9, 
   3.680885338050998*^9}, {3.680885369092225*^9, 3.6808854465825834`*^9}, {
   3.6808858161521587`*^9, 3.6808858165517445`*^9}, {3.680885969295744*^9, 
   3.680886034427628*^9}, {3.680886171713134*^9, 3.6808863538065033`*^9}, 
   3.6808863990841804`*^9, {3.6808864612464943`*^9, 3.680886529813063*^9}, {
   3.6808869456867824`*^9, 3.680886961764923*^9}, {3.6808870123576927`*^9, 
   3.680887019550462*^9}, {3.680887114898735*^9, 3.6808871182675095`*^9}, {
   3.680887181162428*^9, 3.680887187111746*^9}, {3.680887251367427*^9, 
   3.680887273892291*^9}, {3.680887323898876*^9, 3.680887325082522*^9}, {
   3.680887456347989*^9, 3.6808874620826855`*^9}, {3.6808875561244335`*^9, 
   3.680887573091951*^9}, {3.680887721148032*^9, 3.6808878253963804`*^9}, {
   3.680887892923795*^9, 3.680887895438401*^9}, {3.6808883279068727`*^9, 
   3.6808883742127953`*^9}, {3.6808887446347*^9, 3.6808888009663877`*^9}, {
   3.680888843084072*^9, 3.68088888217283*^9}, {3.6808889672984886`*^9, 
   3.680888980048806*^9}, {3.680889012873393*^9, 3.680889017001927*^9}, {
   3.6809607127676287`*^9, 3.680960713931309*^9}, {3.680963627939675*^9, 
   3.6809636936788006`*^9}, {3.680963725032446*^9, 3.68096375932222*^9}, {
   3.680963996232436*^9, 3.680964178133572*^9}, {3.680964213180361*^9, 
   3.6809642748716707`*^9}, {3.680964349959564*^9, 3.6809643607069154`*^9}, {
   3.6809643998686404`*^9, 3.680964423431587*^9}, {3.6809649940240765`*^9, 
   3.6809650555320835`*^9}, {3.680965297215009*^9, 3.680965374687066*^9}, {
   3.680965746541073*^9, 3.680965840873766*^9}, {3.680966028202756*^9, 
   3.6809661594200068`*^9}, {3.680966229724207*^9, 3.6809662777779217`*^9}, {
   3.6809663143619595`*^9, 3.680966336214636*^9}, {3.68096644404537*^9, 
   3.6809666533585944`*^9}, {3.680966782656155*^9, 3.68096684043402*^9}, {
   3.6809669531870036`*^9, 3.680967156904188*^9}, {3.6809672053008804`*^9, 
   3.680967224729057*^9}, {3.680967332314844*^9, 3.680967339149928*^9}, {
   3.6809673783050733`*^9, 3.6809674245168176`*^9}, {3.6809676623088226`*^9, 
   3.6809678364166517`*^9}, {3.6809683681222277`*^9, 
   3.6809686165290656`*^9}, {3.6809686831482697`*^9, 3.680968684388035*^9}, {
   3.680968722806388*^9, 3.6809688286478157`*^9}, {3.6809688660650325`*^9, 
   3.6809688731104565`*^9}, {3.680968922304273*^9, 3.680968979206273*^9}, {
   3.6809690865346055`*^9, 3.680969130012158*^9}, {3.680969781989382*^9, 
   3.680969872823762*^9}, {3.6809699400381446`*^9, 3.680970004489729*^9}, {
   3.6809700536833115`*^9, 3.6809700682716103`*^9}, {3.6809710208681808`*^9, 
   3.680971077002434*^9}, {3.680971109326406*^9, 3.680971115550733*^9}, {
   3.6809711907370863`*^9, 3.680971216592291*^9}, {3.680971278912956*^9, 
   3.6809712801192245`*^9}, {3.6809718771352825`*^9, 3.680971944993314*^9}, {
   3.6809720034773016`*^9, 3.6809720732264376`*^9}, {3.6809724406934075`*^9, 
   3.68097248602604*^9}, {3.6809726599472265`*^9, 3.6809726602954173`*^9}, {
   3.6809727230464745`*^9, 3.6809727291279593`*^9}, {3.680973017680879*^9, 
   3.6809730380391974`*^9}, {3.6809731227303166`*^9, 
   3.6809731466993895`*^9}, {3.680973762644851*^9, 3.6809737679144526`*^9}, {
   3.680973813745384*^9, 3.6809738243622527`*^9}, {3.6809739095062947`*^9, 
   3.680973940278738*^9}, {3.680973995792797*^9, 3.6809740011452093`*^9}, {
   3.6809740466010485`*^9, 3.680974060123784*^9}, {3.6809753469202642`*^9, 
   3.680975657929818*^9}, {3.680975695072091*^9, 3.6809758501681805`*^9}, {
   3.6809758996673946`*^9, 3.6809762262710686`*^9}, {3.680976301712438*^9, 
   3.6809763299510756`*^9}, {3.6809763746469035`*^9, 3.680976380499403*^9}, {
   3.6809764218826056`*^9, 3.6809765347847033`*^9}, {3.680976581667529*^9, 
   3.680976597026043*^9}, {3.680976666398885*^9, 3.6809766669610734`*^9}, {
   3.6809767210323706`*^9, 3.680976781558323*^9}, {3.6809768323302093`*^9, 
   3.680976846514173*^9}, {3.680976911357921*^9, 3.6809769209581203`*^9}, {
   3.680977049628893*^9, 3.6809771526850805`*^9}, {3.6809773883553143`*^9, 
   3.6809774793566475`*^9}, {3.6809775209278545`*^9, 3.680977521665044*^9}, {
   3.6809776512633805`*^9, 3.6809776515167046`*^9}, {3.680977712319936*^9, 
   3.6809777460168*^9}, {3.6810531539619203`*^9, 3.681053166959158*^9}, {
   3.6810532473507404`*^9, 3.6810532616980743`*^9}, {3.681053537630972*^9, 
   3.6810535971654816`*^9}, {3.6810536299030733`*^9, 3.681053764619897*^9}, {
   3.6810540191911044`*^9, 3.6810541426058364`*^9}, {3.681054193325778*^9, 
   3.681054202050123*^9}, {3.681054407650793*^9, 3.681054422525179*^9}, {
   3.6810544649467773`*^9, 3.6810544702728024`*^9}, {3.6810545196776843`*^9, 
   3.6810545642818737`*^9}, {3.6810546574028754`*^9, 
   3.6810546706011558`*^9}, {3.6811147611436043`*^9, 3.681114794728092*^9}, {
   3.681114882040724*^9, 3.6811148829097633`*^9}, {3.6811149340621448`*^9, 
   3.6811149841654096`*^9}, {3.6811151906954145`*^9, 3.68111537573689*^9}, {
   3.681115515816817*^9, 3.6811155891013746`*^9}, {3.6811156493781*^9, 
   3.681115666641453*^9}, {3.6811157198894944`*^9, 3.681115785849764*^9}, {
   3.681115827017232*^9, 3.6811158347965927`*^9}, {3.6811159033938723`*^9, 
   3.681116089029919*^9}, {3.681116213755548*^9, 3.681116272066968*^9}, {
   3.6811163405323725`*^9, 3.6811163422818956`*^9}, {3.6811164168073506`*^9, 
   3.6811164867154493`*^9}, {3.6811169255299654`*^9, 
   3.6811172248748937`*^9}, {3.681117258961213*^9, 3.6811174496638355`*^9}, {
   3.681117533579012*^9, 3.681117647560803*^9}, {3.681117763229082*^9, 
   3.681117783811084*^9}, {3.6811178439925947`*^9, 3.6811178454111786`*^9}, {
   3.6811178787361465`*^9, 3.681118062900173*^9}, {3.6811182140723333`*^9, 
   3.681118242911724*^9}, {3.681118570175209*^9, 3.681118576971583*^9}, {
   3.6811186959610105`*^9, 3.6811187586878242`*^9}, {3.6811187891790757`*^9, 
   3.681118790999563*^9}, {3.6811188571056223`*^9, 3.681118914067198*^9}, {
   3.6811189451494126`*^9, 3.681119011066283*^9}, {3.681119048258296*^9, 
   3.681119051434639*^9}, {3.681119092032136*^9, 3.681119104913178*^9}, {
   3.6811191834650784`*^9, 3.6811191867953424`*^9}, {3.6811196359476748`*^9, 
   3.681119688600884*^9}, {3.68111975028333*^9, 3.6811197807530875`*^9}, {
   3.6811198129044657`*^9, 3.681119817415021*^9}, 3.6811199829716883`*^9, {
   3.681120060387*^9, 3.68112008143056*^9}, {3.6811205197179084`*^9, 
   3.681120554142846*^9}, {3.68112059755657*^9, 3.6811209608421526`*^9}, {
   3.681121000321582*^9, 3.6811213121725974`*^9}, {3.68112299321381*^9, 
   3.681123012107442*^9}, {3.681123048832554*^9, 3.6811232172421627`*^9}, {
   3.6811273234720945`*^9, 3.681127432423428*^9}, {3.6811274800609336`*^9, 
   3.6811274809005604`*^9}, {3.6811275257683163`*^9, 3.681127578179681*^9}, {
   3.681127694826793*^9, 3.681127710789095*^9}, {3.6811278110887747`*^9, 
   3.681127844848827*^9}, {3.6811318326745567`*^9, 3.6811318616049323`*^9}, {
   3.6811320378293934`*^9, 3.6811321022246556`*^9}, {3.6811322022846727`*^9, 
   3.6811322197331595`*^9}, {3.681132275270756*^9, 3.681132303924238*^9}, {
   3.681132952546542*^9, 3.681132975747823*^9}, {3.6811330533869743`*^9, 
   3.681133069989792*^9}, {3.6811331401560717`*^9, 3.681133210129423*^9}, {
   3.68113355997246*^9, 3.681133580734687*^9}, {3.681133629200098*^9, 
   3.681133630070923*^9}, {3.6811337049047832`*^9, 3.6811337124057627`*^9}, {
   3.681133819975602*^9, 3.681133840938975*^9}, {3.681133980113397*^9, 
   3.6811339892678027`*^9}, {3.6811340593396463`*^9, 
   3.6811340697445583`*^9}, {3.6811341524626665`*^9, 3.681134155389428*^9}, {
   3.6811384085644703`*^9, 3.681138416451669*^9}, {3.6811384531639957`*^9, 
   3.6811387332515326`*^9}, {3.696326247015401*^9, 3.696326290249895*^9}, {
   3.6963263290758915`*^9, 3.6963263534943542`*^9}, {3.6963265499230905`*^9, 
   3.6963267199909678`*^9}, {3.6963267593116693`*^9, 
   3.6963269229873137`*^9}, {3.696326975109809*^9, 3.6963269771450577`*^9}, {
   3.6963270084709077`*^9, 3.6963270268753195`*^9}, {3.696327279707534*^9, 
   3.6963277124342194`*^9}, {3.6963277670566783`*^9, 
   3.6963279383852067`*^9}, {3.6963279795211296`*^9, 
   3.6963281839315977`*^9}, {3.696328216429962*^9, 3.696328350263246*^9}, {
   3.696328411126731*^9, 3.6963286380076227`*^9}, {3.6963286951665726`*^9, 
   3.6963289772073884`*^9}, {3.696329031822198*^9, 3.696329290347029*^9}, {
   3.6963293252573895`*^9, 3.696329474349821*^9}, {3.6963295071975946`*^9, 
   3.6963295732929854`*^9}, {3.6963296485433044`*^9, 
   3.6963296648466263`*^9}, {3.6963298886113076`*^9, 3.696329943964314*^9}, {
   3.6963299828627825`*^9, 3.696330037711483*^9}, {3.6963301105312886`*^9, 
   3.6963301559281893`*^9}, {3.69633018944613*^9, 3.696330215930565*^9}, {
   3.696330259860301*^9, 3.6963304438441257`*^9}, {3.696330475475258*^9, 
   3.6963306230483894`*^9}, {3.6963306563291655`*^9, 
   3.6963307206242332`*^9}, {3.6963345425594997`*^9, 3.696334563107193*^9}, {
   3.696334653622881*^9, 3.696334663105197*^9}, {3.6963351846429973`*^9, 
   3.696335191975522*^9}, {3.696338539683173*^9, 3.6963385468592424`*^9}, {
   3.6967009588676825`*^9, 3.6967009616899395`*^9}, {3.696701101654566*^9, 
   3.6967011779401827`*^9}, {3.696934183996126*^9, 3.696934207031106*^9}, {
   3.696934260981206*^9, 3.696934285673975*^9}, {3.696934322808727*^9, 
   3.6969343619935703`*^9}, {3.6969344502573805`*^9, 
   3.6969344569846115`*^9}, {3.6969345597853594`*^9, 3.696934564670198*^9}, {
   3.6981370507222033`*^9, 3.6981370610160313`*^9}, {3.6981373191413965`*^9, 
   3.6981373679463625`*^9}, {3.698137636535467*^9, 3.698137640349996*^9}, {
   3.698137692978403*^9, 3.698137694388838*^9}, {3.6981377371096735`*^9, 
   3.6981378087923565`*^9}, {3.6981378413129263`*^9, 3.698137901443728*^9}, {
   3.6981379713812246`*^9, 3.6981381104371033`*^9}, {3.698138163007603*^9, 
   3.698138273010347*^9}, {3.6981383288703957`*^9, 3.6981383470199337`*^9}, {
   3.698138383433584*^9, 3.6981385107632823`*^9}, {3.6981385728761735`*^9, 
   3.698138601187451*^9}, {3.6981386377627096`*^9, 3.6981386923429112`*^9}, {
   3.698138727770139*^9, 3.6981387340603113`*^9}, {3.6981387792380495`*^9, 
   3.698138792421794*^9}, {3.6981388289921837`*^9, 3.698139280883665*^9}, {
   3.698139335557928*^9, 3.6981394881856575`*^9}, {3.698139521639346*^9, 
   3.6981396956565886`*^9}, {3.6981397462081165`*^9, 
   3.6981397622967873`*^9}, {3.698155520709202*^9, 3.6981555904389486`*^9}, {
   3.6981556674640684`*^9, 3.698155693967147*^9}, {3.6981557545088015`*^9, 
   3.698155808280466*^9}, {3.698155853286815*^9, 3.698155855055989*^9}, {
   3.6982189983475137`*^9, 3.698219030988694*^9}, {3.698219100474406*^9, 
   3.698219198969232*^9}, {3.6982192381510115`*^9, 3.698219253221507*^9}, {
   3.698220777816371*^9, 3.6982208595135517`*^9}, {3.698220963698536*^9, 
   3.6982211178834953`*^9}, {3.698221212645543*^9, 3.6982212782050257`*^9}, 
   3.6982213725109158`*^9, {3.6982215131814556`*^9, 3.698221514190624*^9}, {
   3.698223369061162*^9, 3.698223370668728*^9}, {3.698223428680704*^9, 
   3.698223498676685*^9}, {3.698232667104102*^9, 3.6982327100590925`*^9}, {
   3.6982363879168158`*^9, 3.698236497420759*^9}, {3.698236542712164*^9, 
   3.698236577277589*^9}, {3.698236653268828*^9, 3.698236745014656*^9}, {
   3.698236775330765*^9, 3.6982368007891493`*^9}, {3.6982368409967117`*^9, 
   3.6982369917653947`*^9}, {3.6982370416917057`*^9, 3.698237114115241*^9}, {
   3.698237161049319*^9, 3.6982372226609635`*^9}, {3.6982372605330825`*^9, 
   3.698237302611991*^9}, {3.698237340209424*^9, 3.698237346900936*^9}, {
   3.6982374036160526`*^9, 3.6982374125940075`*^9}, {3.6982378428289995`*^9, 
   3.6982380410494075`*^9}, {3.698238254286378*^9, 3.6982382988629436`*^9}, 
   3.6982384288421555`*^9, {3.69823846001383*^9, 3.698238473616352*^9}, {
   3.6982386797612762`*^9, 3.69823869086414*^9}, {3.698238937783132*^9, 
   3.698238973369734*^9}, {3.698239054302782*^9, 3.698239120169636*^9}, 
   3.698240491600814*^9, 3.698240522976124*^9, {3.6982424083772717`*^9, 
   3.698242443063778*^9}, {3.698242810686262*^9, 3.698242818332333*^9}, {
   3.6982431621439376`*^9, 3.69824321141813*^9}, {3.6982432460511*^9, 
   3.6982432468136053`*^9}, {3.6982432868221755`*^9, 3.6982432902635994`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6808847610415177`*^9, 3.680884762636571*^9}}],

Cell[CellGroupData[{

Cell["Check DGBuildUpInitX", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.6981402250229177`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpInitX", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "basis"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintDistanceMatrix", "[", 
  RowBox[{"x", ",", "edges"}], "]"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
  3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
  3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
  3.698218926550845*^9, 3.698218982996833*^9}, {3.698221528171595*^9, 
  3.6982215292478094`*^9}, {3.698223229496271*^9, 3.69822324531176*^9}, {
  3.698232789723715*^9, 3.6982327915454226`*^9}, {3.6982330045728703`*^9, 
  3.698233050778017*^9}, {3.698233185373212*^9, 3.6982331896285343`*^9}, {
  3.698234330535508*^9, 3.6982343508117933`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Check DGBuildUpSolver", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.698140236428483*^9, 
   3.698238321752689*^9, {3.6982383734862976`*^9, 3.6982383771012917`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], ";"}
  ]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
   3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
   3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
   3.6981402466162415`*^9, 3.698140340332897*^9}, 3.6981556019936123`*^9, {
   3.6982187458271065`*^9, 3.698218876577999*^9}, {3.6982344194696364`*^9, 
   3.6982344493154306`*^9}, {3.6982383323257017`*^9, 3.698238406412279*^9}, {
   3.6982385625786076`*^9, 3.698238587018317*^9}, {3.698238626331799*^9, 
   3.698238646767353*^9}, {3.6982387148145256`*^9, 3.698238802521889*^9}, {
   3.6982388531985006`*^9, 3.6982389113771334`*^9}, {3.6982390082525625`*^9, 
   3.698239019195321*^9}, {3.698239169984175*^9, 3.6982392406763315`*^9}, {
   3.698239330259947*^9, 3.69823933328045*^9}, 3.6982393807854576`*^9, 
   3.698239584306156*^9, 3.6982400280690603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving an instance using BuilUpSolver method ", "Subsubsection",
 CellChangeTimes->{3.696335266702453*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"20", ",", "0.0", ",", "5.0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G", ",", "nodes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeError", "[", 
   RowBox[{"G", ",", "X", ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6811193723446083`*^9, 3.681119412620857*^9}, {
   3.6811199311928988`*^9, 3.681119960930756*^9}, {3.681119990991001*^9, 
   3.6811200405793905`*^9}, {3.6811230224344797`*^9, 3.681123028526058*^9}, {
   3.6811277224020305`*^9, 3.6811277237741623`*^9}, {3.6811285593560123`*^9, 
   3.681128578782134*^9}, {3.6811286737619624`*^9, 3.681128765537285*^9}, {
   3.681128804607932*^9, 3.6811288239519253`*^9}, {3.681130635133052*^9, 
   3.6811306585684404`*^9}, {3.681132006711861*^9, 3.6811320068519697`*^9}, {
   3.6811322329539566`*^9, 3.6811322568870325`*^9}, {3.681132509241618*^9, 
   3.681132516105033*^9}, {3.6811328599020844`*^9, 3.681132874485738*^9}, {
   3.6811342789491444`*^9, 3.6811343056250167`*^9}, {3.6815665500810804`*^9, 
   3.681566551437929*^9}, {3.681569740351883*^9, 3.681569740852806*^9}, {
   3.6815710193111305`*^9, 3.681571023000434*^9}, {3.6815714400430307`*^9, 
   3.681571491286482*^9}, 3.682752354751058*^9, 3.682757377921311*^9, {
   3.69633473379433*^9, 3.696334739241384*^9}, 3.696335048087739*^9, {
   3.6963351061616244`*^9, 3.696335135730406*^9}, {3.696335254918723*^9, 
   3.6963352586483583`*^9}, 3.698072481347253*^9, {3.6982401401846647`*^9, 
   3.698240149132599*^9}, {3.698240224116712*^9, 3.6982403996781855`*^9}, {
   3.6982405533797884`*^9, 3.698240564408103*^9}, {3.6982422163981752`*^9, 
   3.6982422286963325`*^9}, {3.698242338147665*^9, 3.698242351792679*^9}, {
   3.6982427561150675`*^9, 3.6982427695394716`*^9}, {3.698243314622154*^9, 
   3.6982433155002365`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{{3.6982422099899254`*^9, 3.698242229509872*^9}, {
   3.6982423438289614`*^9, 3.698242352414948*^9}, 3.6982424542169037`*^9, 
   3.6982425001263533`*^9, {3.698242717951203*^9, 3.6982427705871677`*^9}, 
   3.698243019269041*^9, {3.698243306092497*^9, 3.6982433160365934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.6982422099964294`*^9, 3.698242237732826*^9}, {
   3.698242343916488*^9, 3.698242353535396*^9}, 3.698242454807296*^9, 
   3.6982425003710155`*^9, {3.6982427187575884`*^9, 3.6982427754328814`*^9}, 
   3.698243156829913*^9, {3.6982433096008244`*^9, 3.6982433194308434`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Number of nodes      : ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6982422099964294`*^9, 3.698242237732826*^9}, {
   3.698242343916488*^9, 3.698242353535396*^9}, 3.698242454807296*^9, 
   3.6982425003710155`*^9, {3.6982427187575884`*^9, 3.6982427754328814`*^9}, 
   3.698243156829913*^9, {3.6982433096008244`*^9, 3.6982433194338455`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "135"}],
  SequenceForm["Number of edges      : ", 135],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6982422099964294`*^9, 3.698242237732826*^9}, {
   3.698242343916488*^9, 3.698242353535396*^9}, 3.698242454807296*^9, 
   3.6982425003710155`*^9, {3.6982427187575884`*^9, 3.6982427754328814`*^9}, 
   3.698243156829913*^9, {3.6982433096008244`*^9, 3.698243319437849*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3.113862742723242`*^-14"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 3.113862742723242*^-14}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6982422099964294`*^9, 3.698242237732826*^9}, {
   3.698242343916488*^9, 3.698242353535396*^9}, 3.698242454807296*^9, 
   3.6982425003710155`*^9, {3.6982427187575884`*^9, 3.6982427754328814`*^9}, 
   3.698243156829913*^9, {3.6982433096008244`*^9, 3.6982433194423513`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "2.9287819274536665`*^-15"}],
  SequenceForm["Mean relative error  : ", 2.9287819274536665`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6982422099964294`*^9, 3.698242237732826*^9}, {
   3.698242343916488*^9, 3.698242353535396*^9}, 3.698242454807296*^9, 
   3.6982425003710155`*^9, {3.6982427187575884`*^9, 3.6982427754328814`*^9}, 
   3.698243156829913*^9, {3.6982433096008244`*^9, 3.6982433194468546`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Manually: Continuos Problem", "Section",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
  3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
  3.696000958663651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetEuclideanCoords", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"d", "=", "1.526"}], ",", 
       RowBox[{"\[Phi]", "=", "1.91"}], ",", "a", ",", "b", ",", "c", ",", 
       "i", ",", "p", ",", "u", ",", "v", ",", "x"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "\[Theta]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "d"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "d"}], "+", 
            RowBox[{"d", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", 
           RowBox[{"d", "*", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", ",", "0"}], "}"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"dihedral", " ", "rotation", " ", "axis"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"u", "=", 
          RowBox[{"Normalize", "[", 
           RowBox[{"b", "-", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", " ", 
          RowBox[{"c", "+", 
           RowBox[{"d", "*", " ", "u"}]}]}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"v", "=", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"b", "-", "c"}], ",", 
            RowBox[{"a", "-", "c"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"plane", " ", "rotation"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"\[Phi]", ",", "v", ",", "c"}], "]"}], "[", "p", "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dihedral", " ", "rotation"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", "c"}], "]"}], 
           "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"set", " ", "i"}], "-", 
           RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "p"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.695733919862407*^9, 3.695733942463207*^9}, 
   3.695734059452997*^9, {3.6957402346282554`*^9, 3.6957402347815647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MDGErrorMatrix", "[", 
    RowBox[{"i_", ",", "j_", ",", "d_", ",", "X_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "ei", ",", "ej", ",", "M"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xj", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "i", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ei", "=", 
          RowBox[{"i", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ej", "=", 
          RowBox[{"j", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", "ei", "]"}], "]"}], "[", 
           RowBox[{"[", "ej", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "ei", "]"}], "]"}], "-", 
             RowBox[{"X", "[", 
              RowBox[{"[", "ej", "]"}], "]"}]}], "]"}], "-", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", "ej", "]"}], "]"}], "[", 
           RowBox[{"[", "ei", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", "ei", "]"}], "]"}], "[", 
           RowBox[{"[", "ej", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.695739079107868*^9, 3.695739275016298*^9}, {
   3.6957393115810227`*^9, 3.6957394078349295`*^9}, {3.6957396215194592`*^9, 
   3.695739673900056*^9}, {3.6957397597321463`*^9, 3.695739800552556*^9}, {
   3.6957398636083293`*^9, 3.6957398641083183`*^9}, {3.6959932232184725`*^9, 
   3.6959932234928007`*^9}, {3.6959992780124493`*^9, 3.695999305410774*^9}, 
   3.6980724810685697`*^9}],

Cell[BoxData[{
 RowBox[{"\[Omega]", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"GetEuclideanCoords", "[", "\[Omega]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"MDGAllPairs", "[", 
    RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
   RowBox[{"MDGCreateInstanceFromSolutionAndPairs", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"MDGErrorMatrix", "[", 
   RowBox[{"i", ",", "j", ",", "d", ",", "x"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6957395463988876`*^9, 3.695739592721032*^9}, {
  3.69573969316702*^9, 3.695739737210102*^9}, {3.695739813370964*^9, 
  3.695739872644418*^9}, {3.695740830391247*^9, 3.695740879885598*^9}, {
  3.698072481076574*^9, 3.6980724810865803`*^9}}],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{"GetEuclideanCoords", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"GetEuclideanCoords", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xrange", ",", "yrange", ",", "zrange"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RotationAction", "\[Rule]", "\"\<Clip\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"BoxStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MDGErrorMatrix", "[", 
          RowBox[{"i", ",", "j", ",", "d", ",", 
           RowBox[{"GetEuclideanCoords", "[", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", ",",
               "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
              "\[Omega]9"}], "}"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], "]"}], "&"}],
            ")"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Torsion", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Torsion Angles\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]4", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]5", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]6", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]7", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]8", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]9", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Bounding", " ", "boxes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Bounding Limits\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"OpenerView", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Solution\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]4  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]5  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]6  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]7  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "7", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]8  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]9  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "9", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, 3.698072481114099*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["BPSolver", "Section",
 CellChangeTimes->{{3.6795571036686206`*^9, 3.679557113728629*^9}, {
  3.6811328435634823`*^9, 3.681132843691572*^9}, {3.6827019504120245`*^9, 
  3.6827019615548773`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"check", ";", " ", "\[IndentingNewLine]", 
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"a", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"b", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"da", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"x", "-", "a"}], "]"}]}], ";", 
    RowBox[{"db", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"x", "-", "b"}], "]"}]}], ";", 
    RowBox[{"dc", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"x", "-", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BPGetNodePosition", "[", 
         RowBox[{
         "a", ",", "b", ",", "c", ",", "da", ",", "db", ",", "dc", ",", "0"}],
          "]"}], ",", 
        RowBox[{"BPGetNodePosition", "[", 
         RowBox[{
         "a", ",", "b", ",", "c", ",", "da", ",", "db", ",", "dc", ",", "1"}],
          "]"}]}], "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6980483033664103`*^9, 3.6980483450225477`*^9}, {
   3.698048457457669*^9, 3.69804857488309*^9}, {3.698048613075926*^9, 
   3.6980486965843515`*^9}, 3.698048728235344*^9, {3.698048765825798*^9, 
   3.698048864017948*^9}, {3.6980488987980347`*^9, 3.6980490378617935`*^9}, {
   3.6980490888601227`*^9, 3.698049182935522*^9}, {3.698049231041483*^9, 
   3.6980492782463045`*^9}, {3.69804931892479*^9, 3.698049321182788*^9}, {
   3.698050819167129*^9, 3.698050822366251*^9}, {3.698052339376897*^9, 
   3.6980523668732867`*^9}, {3.6980524642191153`*^9, 3.698052485031335*^9}, {
   3.698052696712113*^9, 3.69805278674545*^9}, {3.6980528283878307`*^9, 
   3.698052891973042*^9}, {3.698052933270655*^9, 3.698053080680785*^9}, {
   3.6980555366045322`*^9, 3.698055811292657*^9}, {3.6980558463004913`*^9, 
   3.6980559540366077`*^9}, {3.698055993100724*^9, 3.698056083484362*^9}, {
   3.6980561139105654`*^9, 3.698056134601474*^9}, {3.698056175755226*^9, 
   3.69805622348793*^9}, {3.698056305455187*^9, 3.698056434078226*^9}, {
   3.6980564755168996`*^9, 3.698056591953273*^9}, {3.6980566285832596`*^9, 
   3.6980566333718677`*^9}, {3.698056815535987*^9, 3.698056837255335*^9}, {
   3.698056890494914*^9, 3.698056902138071*^9}, 3.698219440347434*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BPSetXinit", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"order_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "numberOfAtoms", ",", "dAB", ",", "dAC", 
       ",", "dBC", ",", "tABC", ",", "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"three", " ", "first", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "order", "]"}], ">", "0"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"order", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dAB", ",", "dAC", ",", "dBC"}], "}"}], "=", 
       RowBox[{"GetEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "\[UndirectedEdge]", "j"}], ",", 
           RowBox[{"i", "\[UndirectedEdge]", "k"}], ",", 
           RowBox[{"j", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "planar", " ", "rotation", " ", "angle", " ", "for", " ", "third", " ",
         "atom"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tABC", "=", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dAB", "^", "2"}], "+", 
           RowBox[{"dBC", "^", "2"}], "-", 
           RowBox[{"dAC", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "dAB", "*", "dBC"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
        "three", " ", "first", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "dAB"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dAB"}], "+", 
            RowBox[{"dBC", "*", 
             RowBox[{"Cos", "[", "tABC", "]"}]}]}], ",", 
           RowBox[{"dBC", "*", 
            RowBox[{"Sin", "[", "tABC", "]"}]}], " ", ",", "0"}], "}"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BPGetNextCoord", "[", 
     RowBox[{
     "G_", ",", "i_", ",", "j_", ",", "k_", ",", "branch_", ",", "node_", ",",
       "X_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"di", ",", "dj", ",", "dk"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"di", ",", "dj", ",", "dk"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GetEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{"i", "\[UndirectedEdge]", "node"}]}], "]"}], ",", 
          RowBox[{"GetEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{"j", "\[UndirectedEdge]", "node"}]}], "]"}], ",", 
          RowBox[{"GetEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{"k", "\[UndirectedEdge]", "node"}]}], "]"}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"BPGetNodePosition", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", "di", ",", "dj", ",", "dk", 
          ",", "branch"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BPGetNextBasis", "[", 
     RowBox[{"G_", ",", "order_", ",", "node_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "neighs", ",", "nodeOrder", ",", 
        RowBox[{"basis", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodeOrder", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Max", "[", "order", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "order", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nodeOrder", "[", 
           RowBox[{"[", 
            RowBox[{"order", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", "i"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"AdjacencyList", "[", 
         RowBox[{"G", ",", 
          RowBox[{"order", "[", "node", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "neighs"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nodeOrder", "[", 
              RowBox[{"[", 
               RowBox[{"neighs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "<", 
             RowBox[{"nodeOrder", "[", 
              RowBox[{"[", "node", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"basis", ",", 
               RowBox[{"neighs", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "basis", "]"}], "\[Equal]", "3"}], ",", 
            "Break"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "basis", "]"}], "<", "3"}], ",", 
         RowBox[{"Throw", "[", "\"\<InvalidOrdering\>\"", "]"}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "basis", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BPSolver", "[", 
     RowBox[{"G_", ",", 
      RowBox[{"order_:", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
      "DMDG", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
      "graph", " ", 
      RowBox[{"G", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "dj", ",", "dk", ",", "i", ",", "j", ",", "k", ",", "tABC", 
        ",", "dAB", ",", "dAC", ",", "dBC", ",", "numberOfAtoms", ",", 
        "prune", ",", "node", ",", "branch", ",", "X", ",", "S", ",", "work", 
        ",", 
        RowBox[{"tol", "=", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "default", " ", "order"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "order", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"order", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "init", " ", "atoms", " ", "positions", " ", "on", " ", "Euclidean", 
         " ", "3", "d", " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"BPSetXinit", "[", 
         RowBox[{"G", ",", "order"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"init", " ", "BPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"branch", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"branch", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
          "1"}]}], "}"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"node", "=", "3"}], ",", 
         RowBox[{"prune", "=", "False"}]}], "}"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"work", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"work", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
          "1"}]}], "}"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"BP", " ", "core"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"S", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Points\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\"\<Branches\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "|>"}]}], ";", " ", 
       RowBox[{"(*", " ", "solutions", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{"True", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"go", " ", "to", " ", "next", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"prune", "||", " ", 
             RowBox[{"node", "\[Equal]", "numberOfAtoms"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "if", " ", "pruned", " ", "or", " ", "last", " ", "node"}], ",",
               " ", 
              RowBox[{
              "search", " ", "for", " ", "a", " ", "node", " ", "to", " ", 
               "branch"}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"i", "=", "node"}], ";", " ", 
             RowBox[{"prune", "=", "False"}], ";", "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{"i", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"branch", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"branch", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "1"}], ";", 
                   RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                RowBox[{"i", "--"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"stop", " ", "criterion", " ", 
               RowBox[{"(", 
                RowBox[{
                "there", " ", "is", " ", "no", " ", "next", " ", "node"}], 
                ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "0"}], ",", 
               RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"reset", " ", "lower", " ", 
               RowBox[{"(", 
                RowBox[{"until", " ", "k"}], ")"}], " ", "tree", " ", 
               "levels"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"i", "+", "1"}]}], ",", 
               RowBox[{"j", "\[LessEqual]", "node"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "=", "0"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"node", "=", "i"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "if", " ", "not", " ", "pruned", " ", "nor", " ", "last", " ", 
               "node"}], ",", " ", 
              RowBox[{
              "just", " ", "go", " ", "to", " ", "the", " ", "child", " ", 
               "node"}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"node", "++"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "calculate", " ", "position", " ", "of", " ", "current", " ", 
            "node"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"work", "[", 
            RowBox[{"[", "node", "]"}], "]"}], "++"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k"}], "}"}], "=", 
           RowBox[{"BPGetNextBasis", "[", 
            RowBox[{"G", ",", "node", ",", "order"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", 
             RowBox[{"order", "[", 
              RowBox[{"[", "node", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"BPGetNextCoord", "[", 
            RowBox[{"G", ",", "i", ",", "j", ",", "k", ",", 
             RowBox[{"branch", "[", 
              RowBox[{"[", "node", "]"}], "]"}], ",", 
             RowBox[{"order", "[", 
              RowBox[{"[", "node", "]"}], "]"}], ",", "X"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "prune", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CalculatePartialSolutionError", "[", 
              RowBox[{"G", ",", "X", ",", "order", ",", "node"}], "]"}], ">", 
             "tol"}], ",", 
            RowBox[{
             RowBox[{"prune", "=", "True"}], ";", 
             RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"new", " ", "solution", " ", "found"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"node", "\[Equal]", "numberOfAtoms"}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", "X"}], "]"}], 
             ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
              "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<A total of \>\"", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}], ",", 
           "\"\< solutions has been found.\>\""}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BPPlotEstimatedComplexity", "[", "G_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Estimates", " ", "a", " ", "tight", " ", "upper", " ", "bound", " ", 
     "to", " ", "the", " ", "number", " ", "of", " ", "solutions", " ", 
     "given", " ", "by", " ", "the", " ", "connectivity", " ", "graph", " ", 
     "G"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "numberOfAtoms", ",", "i", ",", "j", ",", "k", ",", "work", ",", 
       "choices", ",", "V", ",", "R", ",", "reduced"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"IsNaturalOrderValid", "[", "G", "]"}], "]"}], ",", 
        RowBox[{"Throw", "[", "\"\<InvalidOrdering\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"work", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"work", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "=", "2"}]}], "}"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"choices", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"Infinity", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"choices", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}], "]"}], 
         "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}]}], "}"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "5"}], ",", 
        RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "only", " ", "edges", " ", "with", " ", "precedent", " ", 
          "vertices"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"V", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"AdjacencyList", "[", 
             RowBox[{"G", ",", "i"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "<", "i"}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"work", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"2", "*", 
           RowBox[{"choices", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "V", "]"}], "<", "4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "there", " ", "is", " ", "no", " ", "additional", " ", 
             "constraint"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"choices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"work", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "take", " ", "the", " ", "four", " ", "most", " ", "restrictive", 
             " ", "constraints"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"R", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"choices", "[", 
                RowBox[{"[", 
                 RowBox[{"V", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", 
                 RowBox[{"Length", "[", "V", "]"}]}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"minimal", " ", "number", " ", "of", " ", "choices"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"k", "=", 
             RowBox[{"RankedMin", "[", 
              RowBox[{"R", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "minimal", " ", "index", " ", "with", " ", "minimal", " ", 
              "number", " ", "of", " ", "choices"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"k", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"V", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"choices", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "\[Equal]", "k"}], ")"}], 
                 "&"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "update", " ", "intermediate", " ", "number", " ", "of", " ", 
              "choices"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{"(", 
                RowBox[{"k", "+", "1"}], ")"}]}], ",", 
              RowBox[{"j", "\[LessEqual]", "i"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"choices", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ">", 
                 RowBox[{"choices", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"choices", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "=", 
                 RowBox[{"choices", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Estimated number of Solutions \>\"", ",", 
        RowBox[{"choices", "[", 
         RowBox[{"[", "numberOfAtoms", "]"}], "]"}], ",", "\"\<.\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"work", ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Estimated\>\"", "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679558175961939*^9, 3.6795582465756893`*^9}, {
   3.6795582826425705`*^9, 3.6795582839429235`*^9}, {3.6795657231676226`*^9, 
   3.6795657791530952`*^9}, {3.6795658130773067`*^9, 3.679565871544673*^9}, {
   3.6795861090630603`*^9, 3.679586268296414*^9}, {3.6795863005452967`*^9, 
   3.679586495840868*^9}, {3.6795865460918303`*^9, 3.6795865970915422`*^9}, {
   3.6795868432394185`*^9, 3.6795869018284483`*^9}, {3.679586939131709*^9, 
   3.679586976913601*^9}, {3.6795870626458464`*^9, 3.6795871011073523`*^9}, {
   3.6795871633176947`*^9, 3.679587758105817*^9}, {3.679587804838523*^9, 
   3.6795878406799817`*^9}, {3.6795881298229246`*^9, 3.679588139590253*^9}, {
   3.679588432141921*^9, 3.679588820678732*^9}, {3.67958885218464*^9, 
   3.679588859454245*^9}, {3.679591543221243*^9, 3.6795916551338434`*^9}, {
   3.679591702248043*^9, 3.679591773731745*^9}, {3.6795919722830153`*^9, 
   3.6795919729205785`*^9}, {3.6795920143454957`*^9, 
   3.6795920373721275`*^9}, {3.6795920942295294`*^9, 3.679592111174794*^9}, {
   3.6795921457433033`*^9, 3.6795921895011177`*^9}, {3.6795922813103876`*^9, 
   3.6795922980595803`*^9}, {3.679592407947278*^9, 3.6795924086627626`*^9}, {
   3.6795924498624945`*^9, 3.679592466754154*^9}, {3.679592757750784*^9, 
   3.679592801039822*^9}, {3.679592909747943*^9, 3.6795929608876143`*^9}, {
   3.679593939143162*^9, 3.6795940165402756`*^9}, {3.679594087903904*^9, 
   3.6795941883419476`*^9}, {3.679594287225954*^9, 3.6795943875196476`*^9}, {
   3.679594448595685*^9, 3.679594478828597*^9}, {3.6795945652724648`*^9, 
   3.6795946280032177`*^9}, {3.6795946789134407`*^9, 
   3.6795947026597376`*^9}, {3.679594776154107*^9, 3.6795948130815954`*^9}, {
   3.679594874794201*^9, 3.6795948828190813`*^9}, {3.6795949534488997`*^9, 
   3.6795949725060587`*^9}, {3.6795953069724016`*^9, 3.679595386091648*^9}, {
   3.6795955639765224`*^9, 3.6795956274997435`*^9}, {3.679595702271488*^9, 
   3.6795959233026123`*^9}, {3.679595965972151*^9, 3.6795959811159763`*^9}, {
   3.679596019161744*^9, 3.6795961007578773`*^9}, {3.679596138153123*^9, 
   3.679596343165894*^9}, {3.6795963808982925`*^9, 3.679596485412173*^9}, {
   3.679596522566841*^9, 3.6795965922679443`*^9}, {3.6795966325388813`*^9, 
   3.6795966980857244`*^9}, {3.679596732170254*^9, 3.679596952279262*^9}, {
   3.6795970019970694`*^9, 3.6795970768712177`*^9}, {3.679597120771289*^9, 
   3.679597123641965*^9}, {3.679597504661482*^9, 3.67959752405188*^9}, {
   3.6795977558745494`*^9, 3.679597791424835*^9}, 3.6795987087156878`*^9, {
   3.6795988192242517`*^9, 3.67959883584793*^9}, {3.679598870164411*^9, 
   3.6795991011240025`*^9}, {3.679599318938053*^9, 3.679599340969948*^9}, {
   3.6795993740469303`*^9, 3.679599392408225*^9}, {3.679599446418444*^9, 
   3.6795994936803236`*^9}, {3.6795995268675137`*^9, 3.6795995571197987`*^9}, 
   3.679599593529305*^9, {3.6795996462842827`*^9, 3.679599664667951*^9}, 
   3.6796000535012045`*^9, {3.6796005685888577`*^9, 3.6796006406104794`*^9}, {
   3.679600696928871*^9, 3.6796007267160053`*^9}, {3.6796008413370132`*^9, 
   3.6796008545284967`*^9}, {3.6796009031430583`*^9, 
   3.6796009310933266`*^9}, {3.6796010302991343`*^9, 3.67960105103058*^9}, {
   3.679601123591203*^9, 3.6796011690061445`*^9}, {3.6796012042311897`*^9, 
   3.6796012284117613`*^9}, {3.6796013171753454`*^9, 
   3.6796013538183103`*^9}, {3.679678803727684*^9, 3.6796788489988422`*^9}, {
   3.6796789029728556`*^9, 3.679678973714923*^9}, {3.679679007940275*^9, 
   3.6796790171013775`*^9}, {3.6796791140754843`*^9, 3.679679297244875*^9}, {
   3.679679330413969*^9, 3.6796793579806814`*^9}, {3.6796794551957006`*^9, 
   3.6796794760541725`*^9}, {3.679679575327817*^9, 3.6796796729758596`*^9}, {
   3.679679868010354*^9, 3.6796800326147842`*^9}, {3.6796800872006283`*^9, 
   3.679680109202219*^9}, {3.6796801598977137`*^9, 3.679680170399706*^9}, {
   3.679680211818449*^9, 3.6796804482737713`*^9}, {3.6796805112298536`*^9, 
   3.6796805744565773`*^9}, {3.6796806218580914`*^9, 3.679680757892975*^9}, {
   3.679680811495949*^9, 3.6796808818651915`*^9}, {3.6796809144827785`*^9, 
   3.6796809666833677`*^9}, {3.6796810029485235`*^9, 
   3.6796810081740055`*^9}, {3.6796810575156417`*^9, 
   3.6796811033995237`*^9}, {3.679681332527998*^9, 3.6796813333625546`*^9}, {
   3.6796813807917876`*^9, 3.67968147752941*^9}, {3.679681563739986*^9, 
   3.6796815769607897`*^9}, {3.6796817221757703`*^9, 3.679681763490862*^9}, {
   3.679681838781067*^9, 3.6796818408804646`*^9}, {3.6796818894447145`*^9, 
   3.679682079969407*^9}, {3.679682121825989*^9, 3.6796821248530035`*^9}, {
   3.679682265526948*^9, 3.679682306277526*^9}, {3.6796823673326397`*^9, 
   3.679682384445038*^9}, {3.6796824443186035`*^9, 3.679682475464719*^9}, {
   3.6796825288595295`*^9, 3.6796825637327585`*^9}, {3.67968278119676*^9, 
   3.679682782882883*^9}, {3.6797345890383964`*^9, 3.6797346061187067`*^9}, {
   3.679734645268098*^9, 3.679734678069255*^9}, {3.679734719550336*^9, 
   3.679734728336152*^9}, {3.679734851985812*^9, 3.6797348613539844`*^9}, {
   3.6797349632167463`*^9, 3.6797349754570136`*^9}, {3.679735010318187*^9, 
   3.679735089425761*^9}, {3.6797352029473877`*^9, 3.6797352174003067`*^9}, {
   3.679735334219095*^9, 3.6797353520668097`*^9}, {3.6797354127852964`*^9, 
   3.6797354225972743`*^9}, {3.6797356146960435`*^9, 3.6797356233076*^9}, {
   3.679735670171296*^9, 3.679735748032075*^9}, {3.679735818469843*^9, 
   3.679735848457308*^9}, {3.67973596027987*^9, 3.679735975920292*^9}, {
   3.6797360359884872`*^9, 3.679736087721181*^9}, {3.6797362491591873`*^9, 
   3.679736251571519*^9}, {3.6797363112665663`*^9, 3.67973638863768*^9}, {
   3.6797365176603727`*^9, 3.679736520301809*^9}, {3.679736670119876*^9, 
   3.6797367431527596`*^9}, {3.679756482791448*^9, 3.679756557876812*^9}, {
   3.6797567570184045`*^9, 3.6797567594612527`*^9}, {3.6797567906860046`*^9, 
   3.679756802275606*^9}, {3.6797568773893633`*^9, 3.679756886271783*^9}, {
   3.679757001405609*^9, 3.6797570054216137`*^9}, {3.679757180744531*^9, 
   3.6797572214769106`*^9}, {3.6797572539267645`*^9, 
   3.6797572552707305`*^9}, {3.679757302135573*^9, 3.679757309602027*^9}, {
   3.6797576159368067`*^9, 3.679757640960533*^9}, {3.6797577488837395`*^9, 
   3.6797577653388815`*^9}, {3.6797577958104706`*^9, 3.679757803108025*^9}, {
   3.6797578760871897`*^9, 3.6797578901608458`*^9}, {3.679758056388175*^9, 
   3.679758057856022*^9}, {3.679758116808442*^9, 3.679758142175377*^9}, {
   3.6797583149135833`*^9, 3.679758607202947*^9}, {3.679758663127587*^9, 
   3.6797586884288898`*^9}, {3.679759119373311*^9, 3.679759252843992*^9}, {
   3.679760070123723*^9, 3.679760141715478*^9}, {3.6797601874366446`*^9, 
   3.67976021978776*^9}, {3.679761268846787*^9, 3.6797613467221656`*^9}, {
   3.6797613820967917`*^9, 3.679761404174221*^9}, {3.6797614488257165`*^9, 
   3.6797615135316324`*^9}, {3.6797616958144684`*^9, 3.679761727076391*^9}, {
   3.6797629611339755`*^9, 3.6797630599393997`*^9}, {3.6797632969326744`*^9, 
   3.6797633450875072`*^9}, {3.6797633864858117`*^9, 3.679763417622408*^9}, {
   3.679763454154428*^9, 3.679763458232932*^9}, {3.679763559460507*^9, 
   3.679763559766924*^9}, {3.67976360142772*^9, 3.679763602011773*^9}, {
   3.679763652514624*^9, 3.6797636554635086`*^9}, {3.6797636883303623`*^9, 
   3.6797636933229237`*^9}, {3.679763739648059*^9, 3.6797637500153637`*^9}, {
   3.6797638017358065`*^9, 3.679763821403262*^9}, {3.6797639540004077`*^9, 
   3.679763967875004*^9}, {3.679764012996402*^9, 3.679764053151238*^9}, {
   3.679764105585392*^9, 3.6797641333006964`*^9}, {3.679764241169329*^9, 
   3.6797642550419507`*^9}, {3.6797642965486746`*^9, 
   3.6797642974911604`*^9}, {3.679766312258819*^9, 3.6797663400081835`*^9}, {
   3.6797665204820805`*^9, 3.6797666179276123`*^9}, {3.6797666878843207`*^9, 
   3.679766700259632*^9}, 3.679766730824309*^9, {3.67976678431518*^9, 
   3.6797667911152844`*^9}, {3.679766899700026*^9, 3.6797669126934752`*^9}, {
   3.6797669454005632`*^9, 3.679766965008849*^9}, {3.6797670469007864`*^9, 
   3.6797670576985207`*^9}, {3.679767112514214*^9, 3.6797671303351617`*^9}, {
   3.6797675537044563`*^9, 3.6797676224830623`*^9}, {3.679767976648643*^9, 
   3.6797680158816223`*^9}, {3.679768074496215*^9, 3.6797680775963783`*^9}, {
   3.6797683593332515`*^9, 3.6797683759920163`*^9}, {3.6797689343634205`*^9, 
   3.67976894926108*^9}, {3.679769294256039*^9, 3.679769332344527*^9}, {
   3.6798191469974074`*^9, 3.679819160356634*^9}, 3.6798192106398354`*^9, {
   3.67981926129202*^9, 3.679819264210451*^9}, {3.6798201118432903`*^9, 
   3.6798201155779047`*^9}, {3.679820335384288*^9, 3.679820377209854*^9}, {
   3.679820499748266*^9, 3.679820500648081*^9}, {3.6798205849449463`*^9, 
   3.679820599020897*^9}, {3.679820651543778*^9, 3.679820717123869*^9}, 
   3.6798208645536685`*^9, {3.679820946173946*^9, 3.6798209585549765`*^9}, {
   3.6798211650566034`*^9, 3.679821179641118*^9}, {3.6798212774784584`*^9, 
   3.6798212833238792`*^9}, {3.6798215653792295`*^9, 3.67982157108221*^9}, {
   3.679821616893424*^9, 3.679821653145285*^9}, {3.6798222987882447`*^9, 
   3.6798223432753534`*^9}, 3.679822416580861*^9, {3.679822823372448*^9, 
   3.6798228417201242`*^9}, {3.679823267991959*^9, 3.6798232844684114`*^9}, {
   3.679826381840706*^9, 3.67982643359863*^9}, 3.6798265156658287`*^9, {
   3.6798266225012636`*^9, 3.679826673734756*^9}, {3.679826743782586*^9, 
   3.679826770138029*^9}, {3.6798288730382085`*^9, 3.6798288749212675`*^9}, 
   3.679830925818262*^9, {3.6799122356862607`*^9, 3.679912420141233*^9}, 
   3.679912621838517*^9, {3.679912660005648*^9, 3.6799127645180964`*^9}, {
   3.679912796764311*^9, 3.679912833673414*^9}, {3.679912923419185*^9, 
   3.6799130110394573`*^9}, {3.6799132053019743`*^9, 
   3.6799132383140087`*^9}, {3.6799132802516465`*^9, 3.67991331943956*^9}, {
   3.679913510472663*^9, 3.6799136126746993`*^9}, {3.6799143039934287`*^9, 
   3.679914498499134*^9}, {3.6799146006025815`*^9, 3.679914665572703*^9}, {
   3.6799147788339305`*^9, 3.6799147832198434`*^9}, {3.679915529268517*^9, 
   3.6799155521864934`*^9}, {3.6799163694288054`*^9, 
   3.6799163759577293`*^9}, {3.679916633719616*^9, 3.6799166874558907`*^9}, {
   3.6799167701444783`*^9, 3.6799167738622227`*^9}, {3.6799168079043493`*^9, 
   3.6799168533126335`*^9}, {3.679916959985268*^9, 3.6799169731612396`*^9}, 
   3.6799170200748706`*^9, {3.6799171302212915`*^9, 3.679917141185356*^9}, {
   3.679917187615794*^9, 3.6799171931360073`*^9}, {3.679917338879426*^9, 
   3.679917349384443*^9}, {3.6799174136620827`*^9, 3.6799174401714363`*^9}, {
   3.6799175166104527`*^9, 3.6799175282932596`*^9}, 3.6799178373631587`*^9, {
   3.6799179537059784`*^9, 3.6799179803577185`*^9}, {3.67991866146945*^9, 
   3.6799187062925053`*^9}, {3.679918827393654*^9, 3.6799189074639287`*^9}, {
   3.6799189626153173`*^9, 3.6799189686805744`*^9}, {3.6799190280052376`*^9, 
   3.6799190455061207`*^9}, {3.6799190972022314`*^9, 3.679919125280387*^9}, {
   3.679924566119967*^9, 3.679924604385762*^9}, {3.6799246642790704`*^9, 
   3.6799246956132803`*^9}, {3.6799247527275844`*^9, 
   3.6799247930164156`*^9}, {3.679924951195854*^9, 3.6799249803781705`*^9}, {
   3.679925022623218*^9, 3.6799250488316956`*^9}, {3.6799253861656322`*^9, 
   3.6799254381888103`*^9}, {3.6799255434641275`*^9, 3.679925616718331*^9}, {
   3.679925661348341*^9, 3.679925698259054*^9}, {3.67992573602477*^9, 
   3.6799257478959365`*^9}, {3.6799258174994507`*^9, 
   3.6799259665814676`*^9}, {3.679926003783972*^9, 3.679926024748337*^9}, {
   3.679926069235965*^9, 3.6799260902291036`*^9}, {3.6799261736068425`*^9, 
   3.679926196432872*^9}, {3.679926255248601*^9, 3.6799262580962477`*^9}, {
   3.679926293552193*^9, 3.679926293751954*^9}, {3.6799263246875305`*^9, 
   3.67992632905294*^9}, {3.6799263775010214`*^9, 3.6799264110418615`*^9}, {
   3.6799264515895023`*^9, 3.679926470697673*^9}, {3.6799267773032274`*^9, 
   3.6799268074427676`*^9}, {3.6799273312718644`*^9, 
   3.6799273548658895`*^9}, {3.6799274096231394`*^9, 
   3.6799274791310563`*^9}, {3.6802492252310677`*^9, 
   3.6802494747564917`*^9}, {3.680249508550872*^9, 3.6802495430476055`*^9}, {
   3.680249675725598*^9, 3.6802497003809333`*^9}, 3.68024975508574*^9, {
   3.680256236853915*^9, 3.6802562600900726`*^9}, {3.68025634441387*^9, 
   3.680256365234165*^9}, {3.6802567065770197`*^9, 3.6802567081447225`*^9}, {
   3.68025976930814*^9, 3.6802597702248554`*^9}, {3.6802649405067997`*^9, 
   3.6802650359517117`*^9}, {3.680265067363373*^9, 3.6802650674600096`*^9}, {
   3.6802651867038527`*^9, 3.680265190137226*^9}, {3.680265223704136*^9, 
   3.680265238230487*^9}, {3.680265490528492*^9, 3.6802655052228985`*^9}, {
   3.680265558508396*^9, 3.680265561709672*^9}, {3.6808879559628687`*^9, 
   3.680888011732835*^9}, {3.6809606117806787`*^9, 3.6809606203078012`*^9}, 
   3.6809606847064285`*^9, {3.6809675539292154`*^9, 3.6809675860694647`*^9}, {
   3.6809692430036077`*^9, 3.680969426149309*^9}, {3.680969611597622*^9, 
   3.680969678171399*^9}, {3.6809717051663656`*^9, 3.680971757266692*^9}, {
   3.681049731545925*^9, 3.6810497326806526`*^9}, {3.6815751098190413`*^9, 
   3.6815752193084803`*^9}, {3.681575314417507*^9, 3.6815753681505737`*^9}, 
   3.6815761221030645`*^9, {3.6827804798722897`*^9, 3.682780494816037*^9}, 
   3.682780604217006*^9, {3.682781704192978*^9, 3.682781710459713*^9}, {
   3.682781876637768*^9, 3.682781904072253*^9}, {3.6827830443626947`*^9, 
   3.6827830549350944`*^9}, {3.682783127758354*^9, 3.6827832541087*^9}, {
   3.682783660581412*^9, 3.6827836734256077`*^9}, {3.682783792501422*^9, 
   3.682783800043203*^9}, {3.682783844406822*^9, 3.682783854282976*^9}, {
   3.6827840511165624`*^9, 3.682784068157834*^9}, {3.68278424789962*^9, 
   3.682784265851144*^9}, {3.6827844475525365`*^9, 3.6827845018196874`*^9}, {
   3.682784564540927*^9, 3.682784585555146*^9}, {3.682784632517503*^9, 
   3.6827846755811577`*^9}, {3.6827849678890543`*^9, 
   3.6827849698689795`*^9}, {3.6827850127031283`*^9, 3.682785092085968*^9}, {
   3.6827851570326347`*^9, 3.682785214146377*^9}, {3.6827852794649224`*^9, 
   3.6827852820630054`*^9}, {3.682785312889785*^9, 3.682785314900358*^9}, {
   3.682874358256663*^9, 3.682874360903284*^9}, {3.682934839631378*^9, 
   3.682934847817806*^9}, 3.682935758206027*^9, {3.6830328654542093`*^9, 
   3.683032867551629*^9}, 3.683032898094671*^9, {3.693310963628379*^9, 
   3.6933111790311046`*^9}, {3.693311218561573*^9, 3.6933112303168716`*^9}, {
   3.693311272066084*^9, 3.6933113625963125`*^9}, {3.6950523845124087`*^9, 
   3.6950523866515436`*^9}, {3.695052424890731*^9, 3.6950524370506387`*^9}, {
   3.6961619545602474`*^9, 3.6961620702824574`*^9}, {3.696338889049758*^9, 
   3.6963338496056805`*^9}, {3.6969507875440702`*^9, 
   3.6969508014723735`*^9}, {3.696950922935711*^9, 3.6969509459133635`*^9}, {
   3.697550371565403*^9, 3.697550371949326*^9}, 3.6979836235158963`*^9, {
   3.697983655060665*^9, 3.6979837327770033`*^9}, {3.697983790859722*^9, 
   3.6979838074844527`*^9}, {3.6979838473949614`*^9, 3.697983851665854*^9}, {
   3.697983950552133*^9, 3.6979840506270604`*^9}, {3.697984105707975*^9, 
   3.697984297952173*^9}, {3.6979847495993657`*^9, 3.6979847803348207`*^9}, 
   3.697984835994111*^9, {3.6979851699465094`*^9, 3.697985191261283*^9}, {
   3.697993736941249*^9, 3.697993822054891*^9}, {3.697995079340356*^9, 
   3.6979951862910323`*^9}, {3.697995230421173*^9, 3.697995375695047*^9}, {
   3.6979959019891167`*^9, 3.6979959454676337`*^9}, {3.6980465852605247`*^9, 
   3.69804683109072*^9}, {3.698047088010625*^9, 3.6980471411569014`*^9}, {
   3.6980472323885565`*^9, 3.6980472377501125`*^9}, {3.6980473104644995`*^9, 
   3.698047354675248*^9}, {3.6980473947561235`*^9, 3.698047402385198*^9}, {
   3.6980475542975597`*^9, 3.698047608345428*^9}, {3.6980476472397304`*^9, 
   3.6980476615872464`*^9}, {3.6980477094119816`*^9, 
   3.6980477828026576`*^9}, {3.698047829278983*^9, 3.698048018965683*^9}, {
   3.698048240561721*^9, 3.698048259884059*^9}, {3.698056934456436*^9, 
   3.6980571566496816`*^9}, {3.698057237832131*^9, 3.6980572462169743`*^9}, {
   3.6980579118181686`*^9, 3.6980579607923365`*^9}, {3.6980580053419185`*^9, 
   3.698058005805474*^9}, {3.6980580742219687`*^9, 3.698058079955908*^9}, {
   3.698058164953802*^9, 3.698058196322177*^9}, {3.698059333503028*^9, 
   3.6980594776024847`*^9}, {3.698061155504623*^9, 3.69806128012282*^9}, {
   3.69806131126612*^9, 3.698061611727914*^9}, 3.698061886200822*^9, {
   3.6980619836449723`*^9, 3.6980622098389125`*^9}, {3.6980622685617027`*^9, 
   3.698062269630556*^9}, {3.6980623644826*^9, 3.6980623815051975`*^9}, {
   3.6980624151710653`*^9, 3.698062418731555*^9}, {3.698062454202283*^9, 
   3.698062459051075*^9}, {3.698062507249819*^9, 3.6980625091454873`*^9}, 
   3.69807248122217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Subsection",
 CellChangeTimes->{{3.6797567333782396`*^9, 3.6797567347311673`*^9}, {
  3.696335502893475*^9, 3.6963355050803843`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Calculating the number of solution as a function of the number of constraints \
(max distance)\
\>", "Subsubsection",
 CellChangeTimes->{{3.698048034332882*^9, 3.6980480501233606`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"da", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"x", "-", "a"}], "]"}]}], ";", 
  RowBox[{"db", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"x", "-", "b"}], "]"}]}], ";", 
  RowBox[{"dc", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"x", "-", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BPGetNodePosition", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "da", ",", "db", ",", "dc", ",", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BPGetNodePosition", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "da", ",", "db", ",", "dc", ",", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.698048074591589*^9, 3.6980481620991497`*^9}, {
   3.6980481937106333`*^9, 3.6980482077974763`*^9}, 3.6980482687794595`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calculating the number of solution as a function of the number of constraints \
(max distance)\
\>", "Subsubsection",
 CellChangeTimes->{{3.6963367238175445`*^9, 3.696336771716816*^9}, {
  3.6963368649082575`*^9, 3.6963368697017374`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "graph"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{
      RowBox[{"GenerateRandomMDG", "[", 
       RowBox[{"10", ",", "Infinity"}], "]"}], "[", "\"\<G\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allEdges", "=", 
     RowBox[{"EdgeList", "[", "G", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6963367766261096`*^9, 3.696336853892625*^9}, {
   3.696336892293545*^9, 3.6963371384809976`*^9}, {3.696337170280875*^9, 
   3.696337325083685*^9}, {3.6963373605819707`*^9, 3.696337421651475*^9}, 
   3.696337739584914*^9, {3.696337913015826*^9, 3.6963379215473475`*^9}, {
   3.696338446547945*^9, 3.696338511679804*^9}, {3.696338708052107*^9, 
   3.6963387335044403`*^9}, {3.6963392186813564`*^9, 3.696339351235952*^9}, {
   3.696339419103191*^9, 3.6963395733252993`*^9}, {3.6963396103098803`*^9, 
   3.69633284318084*^9}, {3.696333288665927*^9, 3.696333288881198*^9}, {
   3.6963336924953947`*^9, 3.6963337924287996`*^9}, {3.696333859526044*^9, 
   3.6963338642055693`*^9}, {3.69633390422436*^9, 3.6963339122002654`*^9}, {
   3.696333993525669*^9, 3.696334018920193*^9}, {3.696339787915368*^9, 
   3.6963398001768866`*^9}, 3.6980724812391834`*^9}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSample", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"density", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "density", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"density", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nSample"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"create", " ", "subgraph"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gij", "=", "G"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", 
           RowBox[{"Length", "[", "allEdges", "]"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ek", "=", 
            RowBox[{"allEdges", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], ">", "d"}], "&&", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"ek", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"ek", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", "3"}]}], ",", 
             RowBox[{"gij", "=", 
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"gij", ",", "ek"}], "]"}]}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", "gij"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "instance"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"S", ",", "work"}], "}"}], "=", 
         RowBox[{"BPSolver", "[", "gij", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"nSols", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"Length", "[", 
          RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"density", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"nSols", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"nSols", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Density of Edges\>\"", ",", " ", "\"\<Number of Solutions\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.696334028602558*^9, 3.6963341389390335`*^9}, {
   3.696334203814807*^9, 3.696334553004195*^9}, {3.6963345893136067`*^9, 
   3.6963346447828355`*^9}, {3.6963346937306294`*^9, 
   3.6963348195399055`*^9}, {3.6963348799142075`*^9, 
   3.6963348804536867`*^9}, {3.696334945896783*^9, 3.6963349840214233`*^9}, {
   3.696335032797847*^9, 3.6963351414831853`*^9}, {3.6963352043938837`*^9, 
   3.696335230724231*^9}, {3.696335343802195*^9, 3.6963353555009074`*^9}, 
   3.696335412777022*^9, {3.696339497682501*^9, 3.6963395030722947`*^9}, {
   3.696339541525276*^9, 3.6963395556060305`*^9}, {3.69634027449716*^9, 
   3.6963403350733366`*^9}}],

Cell[BoxData[
 RowBox[{"nSols", "[", 
  RowBox[{"[", 
   RowBox[{"-", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.696339938694536*^9, 3.6963400601940937`*^9}, {
  3.6963403646598105`*^9, 3.6963404076633387`*^9}, {3.6963406935535345`*^9, 
  3.696340694114237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixPlot", "[", 
     RowBox[{
      RowBox[{"UpperTriangularize", "[", 
       RowBox[{
        RowBox[{"AdjacencyMatrix", "[", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"-", "3"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
      RowBox[{"MaxPlotPoints", "\[Rule]", "Infinity"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MatrixPlot", "[", 
     RowBox[{"UpperTriangularize", "[", 
      RowBox[{
       RowBox[{"AdjacencyMatrix", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"-", "3"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "4"}], "]"}], "]"}], "]"}], ",", "3"}], "]"}], "]"}]}],
    "}"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.696340412385273*^9, 3.6963404676489906`*^9}, {
  3.6963405240666523`*^9, 3.696340565290621*^9}, {3.696340632541873*^9, 
  3.6963406535339193`*^9}, {3.6963407008068347`*^9, 3.6963407118578453`*^9}, {
  3.6963407685490494`*^9, 3.696340774488199*^9}, {3.6963408054079695`*^9, 
  3.6963408386302795`*^9}, {3.696340880359873*^9, 3.69634088049673*^9}, {
  3.696340944228788*^9, 3.6963410088258734`*^9}}],

Cell[BoxData[{
 RowBox[{"M", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Circle", "[", "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Circle", "[", "]"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", "MatrixForm"}], "Input",
 CellChangeTimes->{{3.696340857956562*^9, 3.696340873720018*^9}, {
  3.6963410137434177`*^9, 3.6963410550983295`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"BPSolver", "[", "G", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963387670699315`*^9, 3.6963387800416546`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanNSols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"nsols", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "nAtoms", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "maxDistance", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meanEdges", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"nedges", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nAtoms", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "maxDistance", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "nsols"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"maxDistance", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"meanNSols", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "maxDistance", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "meanNSols", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<N=\>\"", ",", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"nAtoms", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "nAtoms", "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "nedges"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"maxDistance", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"meanEdges", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "maxDistance", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "meanNSols", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<N=\>\"", ",", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"nAtoms", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "nAtoms", "]"}]}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6963379672508593`*^9, 3.6963379694831176`*^9}, {
  3.696338010976943*^9, 3.6963381548334093`*^9}, {3.6963381916028175`*^9, 
  3.6963384040035057`*^9}, {3.696338527893609*^9, 3.696338598064825*^9}, {
  3.696338630376333*^9, 3.6963386364154863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving an instance using BPSolver", "Subsubsection",
 CellChangeTimes->{{3.6963389126720867`*^9, 3.6963389272834187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"easy", " ", "case", " ", "using", " ", "natural", " ", "order"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"GenerateRandomMDG", "[", 
      RowBox[{"9", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "work"}], "}"}], "=", 
    RowBox[{"BPSolver", "[", 
     RowBox[{"M", "[", "\"\<G\>\"", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.693311450156807*^9, 3.693311476044976*^9}, {
   3.696338936452612*^9, 3.696338990378742*^9}, {3.6979845883633885`*^9, 
   3.697984617355788*^9}, {3.6979850347422743`*^9, 3.697985037135499*^9}, {
   3.6979953998165607`*^9, 3.6979954128237066`*^9}, {3.6979955008255515`*^9, 
   3.697995501469979*^9}, {3.698063057075743*^9, 3.6980630699679604`*^9}, 
   3.69807248124969*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"natural", " ", "order", " ", "does", " ", "not", " ", "work"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"8", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
       RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"Graph", "[", "edges", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.698063078185793*^9, 3.6980631107389593`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimating the number of solutions", "Subsubsection",
 CellChangeTimes->{{3.696335480837241*^9, 3.6963354910600057`*^9}}],

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"M", "=", 
    RowBox[{"GenerateRandomMDG", "[", 
     RowBox[{"7", ",", "4"}], "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"M", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "work"}], "}"}], "=", 
    RowBox[{"BPSolver", "[", "G", "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"work", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Real\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"BPPlotEstimatedComplexity", "[", "G", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", 
       RowBox[{"Atom", " ", "ID"}], "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"Computed", " ", "Locations"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"Computational", " ", "Effort"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CheckMDGSolutionQuality", "[", 
   RowBox[{"G", ",", 
    RowBox[{
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"WeightedAdjacencyMatrix", "[", "G", "]"}], ",", 
     RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}]}], "]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"WeightedAdjacencyMatrix", "[", "G", "]"}], ",", 
     RowBox[{"ColorFunction", "->", "\"\<Monochrome\>\""}]}], "]"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6798218509178233`*^9, 3.679821852271891*^9}, {
   3.6798220754379344`*^9, 3.6798220755372047`*^9}, {3.679822744321784*^9, 
   3.6798227445214615`*^9}, {3.6798231052765684`*^9, 3.679823107593405*^9}, 
   3.679823226558363*^9, {3.6798233451775875`*^9, 3.679823345308581*^9}, {
   3.679823525737986*^9, 3.679823549906366*^9}, {3.6798263139146395`*^9, 
   3.679826344570452*^9}, {3.6798288602280912`*^9, 3.6798288604903975`*^9}, {
   3.6798288950564623`*^9, 3.679828994620492*^9}, {3.679829044969572*^9, 
   3.6798290909698343`*^9}, {3.6798294100005565`*^9, 
   3.6798294105697436`*^9}, {3.6798295004715223`*^9, 
   3.6798295681002893`*^9}, {3.6798296319378924`*^9, 3.679829632507357*^9}, {
   3.6798299800985794`*^9, 3.6798299863477526`*^9}, {3.679830157933735*^9, 
   3.6798301597117043`*^9}, {3.6798302974701996`*^9, 
   3.6798303164031887`*^9}, {3.6798303891181116`*^9, 3.679830389302563*^9}, {
   3.6798304759096456`*^9, 3.679830478014727*^9}, {3.6799119298147106`*^9, 
   3.6799119406954846`*^9}, {3.679912001613147*^9, 3.679912019708365*^9}, {
   3.6799121456440763`*^9, 3.6799121778114533`*^9}, 3.679912535631927*^9, {
   3.6799174812432394`*^9, 3.6799174816978993`*^9}, {3.679918592547327*^9, 
   3.6799186296132526`*^9}, {3.6799255011209993`*^9, 
   3.6799255012742624`*^9}, {3.6799265772569237`*^9, 
   3.6799266196275845`*^9}, {3.679927091468864*^9, 3.6799271177650127`*^9}, {
   3.679927217233017*^9, 3.679927233987025*^9}, {3.679927271460558*^9, 
   3.679927271760435*^9}, {3.679927363032942*^9, 3.679927363786351*^9}, 
   3.6799274640577226`*^9, {3.6799274956489134`*^9, 3.6799275047564964`*^9}, {
   3.6802494864436903`*^9, 3.680249517698353*^9}, {3.680249838745507*^9, 
   3.680249885493765*^9}, {3.6802499632347374`*^9, 3.68024997989824*^9}, {
   3.6802500278218193`*^9, 3.680250042557376*^9}, {3.6802500816458673`*^9, 
   3.680250094230627*^9}, {3.6802501729429226`*^9, 3.680250245242584*^9}, {
   3.680250277069769*^9, 3.680250349656209*^9}, {3.6802561938862762`*^9, 
   3.680256217314024*^9}, {3.6802562822999315`*^9, 3.6802562845355077`*^9}, {
   3.680259514448849*^9, 3.68025956932335*^9}, {3.680259617915313*^9, 
   3.680259625069577*^9}, {3.6802596588968315`*^9, 3.6802596591149898`*^9}, {
   3.6802597057100697`*^9, 3.680259710865752*^9}, {3.680259778882868*^9, 
   3.680259779298339*^9}, {3.6802598345877275`*^9, 3.6802598347003174`*^9}, {
   3.6802634539441957`*^9, 3.6802634724224014`*^9}, {3.680264125324051*^9, 
   3.680264127539488*^9}, {3.680971309238633*^9, 3.6809713321665344`*^9}, {
   3.6809713775361547`*^9, 3.680971388619849*^9}, 3.680971453133582*^9, {
   3.6809717846377277`*^9, 3.6809717933103046`*^9}, 3.682752354734047*^9, 
   3.682757377902835*^9, {3.6827585847612524`*^9, 3.682758585270115*^9}, {
   3.682758922849889*^9, 3.6827589310888653`*^9}, 3.682758963373986*^9, {
   3.6980724812672*^9, 3.6980724812767067`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Manually: Discrete Problem", "Section",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
   3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
   3.6960009726613865`*^9}, 3.6969455372420783`*^9}],

Cell[CellGroupData[{

Cell["Source : CreateTreeGraphFromBranches", "Subsection",
 CellChangeTimes->{{3.6961557444343433`*^9, 3.6961557587634087`*^9}, 
   3.696155818567206*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "CreateTreeGraphFromBranches", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CreateTreeGraphFromBranches", "[", 
    RowBox[{"G_", ",", "branch_", ",", "branches_", ",", "check_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "X", ",", "k", ",", "i", ",", "n", ",", "b", ",", "x", ",", 
       "y", ",", "z", ",", "dx", ",", "dy", ",", "dz", ",", 
       RowBox[{"edges", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"v", "=", 
        RowBox[{"{", "}"}]}], ",", "styVertex", ",", 
       RowBox[{"styEdges", "=", 
        RowBox[{"{", "}"}]}], ",", "m", ",", "color", ",", "valid"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"VertexList", "[", "G", "]"}], "]"}], "-", "3"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"creating", " ", "edges"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{
          RowBox[{"2", "^", "n"}], "-", "1"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"edges", ",", 
           RowBox[{"k", "\[UndirectedEdge]", 
            RowBox[{"2", "k"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"edges", ",", 
           RowBox[{"k", "\[UndirectedEdge]", 
            RowBox[{
             RowBox[{"2", "k"}], "+", "1"}]}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"highlighting", " ", "current", " ", "branch"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "\[LessEqual]", "n"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"v", ",", 
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"branch", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "k"}], "]"}], "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"k", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"styEdges", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
               RowBox[{"v", "[", 
                RowBox[{"[", 
                 RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], "]"}]}],
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"coloring", " ", "visited", " ", "nodes", " ", 
        RowBox[{"(", "branches", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"styVertex", "=", 
       RowBox[{"{", "LightGray", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "branches", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "branches", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X", "=", 
             RowBox[{"BPSetXinit", "[", "G", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"b", "=", 
             RowBox[{"branches", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"check", ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"checking", " ", "partial", " ", "solutions"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"i", "+", "2"}]}], "}"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                   RowBox[{"BPGetNextCoord", "[", 
                    RowBox[{"G", ",", "x", ",", "y", ",", "z", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"i", "+", "3"}], ",", "X"}], "]"}]}], ";", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"valid", "&&", 
                    RowBox[{
                    RowBox[{"CalculatePartialSolutionError", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], "<", "0.001"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"valid", " ", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Red"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"v", "=", 
                   RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "checking", " ", "only", " ", "final", " ", "solution"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"i", "+", "2"}]}], "}"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                   RowBox[{"BPGetNextCoord", "[", 
                    RowBox[{"G", ",", "x", ",", "y", ",", "z", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"i", "+", "3"}], ",", "X"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"CalculatePartialSolutionError", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], ">", "0.001"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", 
                   "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"valid", ",", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    RowBox[{"color", "=", "Red"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"v", "=", 
                   RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "b"}], "]"}], ",", "2"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}]}], ","}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{"TreeGraph", "[", "\[IndentingNewLine]", 
        RowBox[{"edges", ",", "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "styVertex"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "\[Rule]", "styEdges"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GraphLayout", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<LayeredEmbedding\>\"", ",", 
            RowBox[{"LayerSizeFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"8", "&"}], ")"}]}]}], "}"}]}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6960012949917183`*^9, 3.6960013820533795`*^9}, {
   3.6960014640062556`*^9, 3.6960014726695976`*^9}, {3.6960015224387217`*^9, 
   3.696001551877679*^9}, {3.6960016079727764`*^9, 3.6960016398546915`*^9}, {
   3.696001789032284*^9, 3.69600181774117*^9}, {3.69600327963871*^9, 
   3.6960032965029154`*^9}, {3.6961483229273157`*^9, 
   3.6961483423601418`*^9}, {3.6961483983982*^9, 3.696148412128369*^9}, {
   3.6961484690152607`*^9, 3.6961485614272795`*^9}, {3.6961486679676576`*^9, 
   3.696148673589913*^9}, {3.6961493790330276`*^9, 3.6961494467388783`*^9}, {
   3.6961496986371365`*^9, 3.6961497320667543`*^9}, {3.696149777358199*^9, 
   3.6961498071294775`*^9}, {3.696149945923109*^9, 3.6961499484882417`*^9}, {
   3.69615000107961*^9, 3.6961500490175457`*^9}, {3.6961501213276567`*^9, 
   3.6961501583831005`*^9}, {3.6961502573314624`*^9, 
   3.6961506573839016`*^9}, {3.696151543775894*^9, 3.6961515845251284`*^9}, 
   3.6961516329070644`*^9, {3.6961517892881274`*^9, 3.696151908884268*^9}, {
   3.6961519468761954`*^9, 3.6961519561604776`*^9}, {3.6961520334809628`*^9, 
   3.696152035094754*^9}, {3.6961520736869907`*^9, 3.69615210409455*^9}, {
   3.696152482980331*^9, 3.696152662659408*^9}, {3.696152777450977*^9, 
   3.696152829088067*^9}, {3.696152992192956*^9, 3.6961530537242084`*^9}, {
   3.6961530935608644`*^9, 3.6961531073592224`*^9}, {3.6961531466061087`*^9, 
   3.696153176989295*^9}, {3.6961532190302734`*^9, 3.6961533272635355`*^9}, {
   3.696153382674528*^9, 3.696153388127223*^9}, {3.696153984277052*^9, 
   3.696153991264039*^9}, {3.696154288480689*^9, 3.6961543083889713`*^9}, {
   3.696154346918648*^9, 3.696154349270986*^9}, {3.6961545495652947`*^9, 
   3.696154831107952*^9}, {3.6961549224236975`*^9, 3.696154944621892*^9}, {
   3.696154986246745*^9, 3.6961550996201425`*^9}, {3.6961551664626613`*^9, 
   3.6961552808422456`*^9}, {3.6961553137663155`*^9, 3.696155436423814*^9}, {
   3.6961554717085285`*^9, 3.6961555844874773`*^9}, {3.6961556560732527`*^9, 
   3.6961556875246115`*^9}, {3.6961557605618525`*^9, 
   3.6961557675244627`*^9}, {3.6961558007438197`*^9, 
   3.6961560033942895`*^9}, {3.6961568624303703`*^9, 
   3.6961569103795757`*^9}, {3.6961603457477746`*^9, 
   3.6961604679840574`*^9}, {3.696160504538644*^9, 3.6961605099557457`*^9}, {
   3.6961605734631867`*^9, 3.696160585446912*^9}, {3.6961606327318373`*^9, 
   3.6961606329319468`*^9}, 3.69616154862936*^9, {3.6961617833819513`*^9, 
   3.696161794218891*^9}, {3.696161865565824*^9, 3.6961618725880227`*^9}, {
   3.6961620976200047`*^9, 3.69616220281542*^9}, {3.6961622897554994`*^9, 
   3.696162342362113*^9}, {3.6961624562802105`*^9, 3.696162471408639*^9}, {
   3.6961625259935856`*^9, 3.696162568801502*^9}, {3.696162605384383*^9, 
   3.6961627176237283`*^9}, {3.6961629128219624`*^9, 
   3.6961629181341624`*^9}, {3.6961629809348173`*^9, 3.696163373884967*^9}, {
   3.6961634604609146`*^9, 3.6961635400259466`*^9}, {3.6961636266736374`*^9, 
   3.696163627208607*^9}, {3.6961638085620933`*^9, 3.6961640023397727`*^9}, {
   3.696164142073502*^9, 3.696164178709567*^9}, {3.6961644014098186`*^9, 
   3.6961644116052637`*^9}, {3.6961645548322477`*^9, 
   3.6961646607476544`*^9}, {3.696164706458598*^9, 3.6961647660239115`*^9}, {
   3.6961703125046062`*^9, 3.6961705148012*^9}, {3.6961707246204853`*^9, 
   3.696170741937401*^9}, {3.696341417392389*^9, 3.6963414434231215`*^9}, {
   3.6966108338515267`*^9, 3.6966108852715893`*^9}, {3.696610963674673*^9, 
   3.6966109681277447`*^9}, 3.696611010397179*^9, {3.6979960183170457`*^9, 
   3.6979961303355665`*^9}, {3.6979961966025953`*^9, 3.697996229972096*^9}, {
   3.6979963524967194`*^9, 3.697996374257723*^9}, {3.6980582678409696`*^9, 
   3.698058351559606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Code : Solver", "Subsection",
 CellChangeTimes->{{3.696597957320731*^9, 3.6965979713710012`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"GenerateRandomMDG", "[", 
     RowBox[{"9", ",", "5"}], "]"}], "[", "\"\<G\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"EdgeList", "[", "G", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ei", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"edges", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ej", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"edges", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dij", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GetEdgeWeight", "[", 
      RowBox[{"G", ",", 
       RowBox[{"edges", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"branches", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"X", "=", 
      RowBox[{"BPSetXinit", "[", "G", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CreateTreeGraphFromBranches", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}], ",", "branches", ",",
           "BP"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PlotAdjacencyMatrix", "[", 
            RowBox[{"G", ",", "Sym"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Tube", "[", "X", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
                RowBox[{"Point", "[", "X", "]"}]}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"s", ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\[Omega]4\>\"", ",", "\"\<\[Omega]5\>\"", ",", 
                  "\"\<\[Omega]6\>\"", ",", "\"\<\[Omega]7\>\"", ",", 
                  "\"\<\[Omega]8\>\"", ",", "\"\<\[Omega]9\>\""}], "}"}]}], 
               "}"}]}]}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Branches", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Branches\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]5", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]6", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]7", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]8", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]9", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Try\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"node", "=", "1"}], ",", 
           RowBox[{"node", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"node", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", "k"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"node", ",", 
               RowBox[{"node", "+", "1"}], ",", 
               RowBox[{"node", "+", "2"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"node", "+", "3"}], "]"}], "]"}], "=", 
             RowBox[{"BPGetNextCoord", "[", 
              RowBox[{"G", ",", "i", ",", "j", ",", "k", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "node", "]"}], "]"}], ",", 
               RowBox[{"node", "+", "3"}], ",", "X"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"branches", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7",
              ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Options\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"BP", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sym", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"show", " ", "solutions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Solutions\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Show\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"BPSolver", "[", "G", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Branches\>\"", "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"branches", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"branches", ",", "s"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]",
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Reset\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"G", "=", 
          RowBox[{
           RowBox[{"GenerateRandomMDG", "[", 
            RowBox[{"9", ",", "5"}], "]"}], "[", "\"\<G\>\"", "]"}]}], ",", 
         RowBox[{"branches", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, {3.6960012909403973`*^9, 
   3.6960012938883305`*^9}, {3.696156255994712*^9, 3.6961562650100794`*^9}, {
   3.696156295886201*^9, 3.6961563106886444`*^9}, {3.6961564013359656`*^9, 
   3.6961564517039223`*^9}, {3.6961565250416493`*^9, 
   3.6961566543467717`*^9}, {3.6961567288961554`*^9, 
   3.6961568441226873`*^9}, {3.6961568909910555`*^9, 3.696156903900296*^9}, {
   3.6961569672255335`*^9, 3.696156969304701*^9}, {3.6961571034179225`*^9, 
   3.696157110312049*^9}, {3.696160282114659*^9, 3.696160302223087*^9}, {
   3.6961605625418644`*^9, 3.6961606222501583`*^9}, {3.696160658944554*^9, 
   3.6961606778289185`*^9}, {3.6961609283775125`*^9, 
   3.6961609808174286`*^9}, {3.6961610459570017`*^9, 
   3.6961610477260633`*^9}, {3.696161209739623*^9, 3.6961613158159175`*^9}, {
   3.696161357319108*^9, 3.69616136948481*^9}, {3.696162431625352*^9, 
   3.6961624330647745`*^9}, {3.6961628027014465`*^9, 
   3.6961628571260533`*^9}, {3.696162900512824*^9, 3.6961629049376287`*^9}, {
   3.6961642456888447`*^9, 3.696164270507456*^9}, {3.6961649316798134`*^9, 
   3.696164998676358*^9}, {3.696165041400201*^9, 3.696165083729754*^9}, {
   3.6961651566015034`*^9, 3.696165206769026*^9}, {3.6961652700456624`*^9, 
   3.696165289007637*^9}, {3.6961653864122925`*^9, 3.696165497141945*^9}, {
   3.696165743808255*^9, 3.696165799254837*^9}, {3.696165845290099*^9, 
   3.696165990776334*^9}, {3.6961661230691767`*^9, 3.696166191968793*^9}, {
   3.6961662871277575`*^9, 3.696166327478566*^9}, {3.696166386078822*^9, 
   3.6961664236976624`*^9}, {3.696166496850869*^9, 3.6961664989856625`*^9}, {
   3.6961665602905154`*^9, 3.69616677076039*^9}, {3.69616684916016*^9, 
   3.696166888844514*^9}, {3.696166989227959*^9, 3.6961669927334337`*^9}, {
   3.696167046616452*^9, 3.696167051273269*^9}, {3.6961670863546443`*^9, 
   3.69616711698417*^9}, {3.696168089856365*^9, 3.696168121062352*^9}, {
   3.69616818237259*^9, 3.6961682224238987`*^9}, {3.6961683411240253`*^9, 
   3.696168384465231*^9}, 3.6961684150385275`*^9, {3.6961684819548564`*^9, 
   3.6961685051447563`*^9}, {3.696168568475537*^9, 3.696168570263974*^9}, {
   3.6961686351296844`*^9, 3.6961686370314665`*^9}, {3.696168686385473*^9, 
   3.696168691443553*^9}, {3.6961687468176303`*^9, 3.6961688101433983`*^9}, {
   3.6961689711518*^9, 3.6961690483381233`*^9}, {3.696169125123598*^9, 
   3.696169175323496*^9}, {3.69616950254916*^9, 3.696169563303851*^9}, {
   3.6961696075874076`*^9, 3.6961696257426414`*^9}, {3.69616969935327*^9, 
   3.6961697070144925`*^9}, 3.6961697386375637`*^9, {3.696169815828497*^9, 
   3.6961698450990944`*^9}, {3.696169882730567*^9, 3.6961699262763777`*^9}, {
   3.6961699622860117`*^9, 3.6961699750439024`*^9}, {3.6961700134511185`*^9, 
   3.696170017009848*^9}, {3.6961700553549232`*^9, 3.696170086868808*^9}, {
   3.696170163107408*^9, 3.6961701814566517`*^9}, {3.6961702450598593`*^9, 
   3.6961702610064096`*^9}, {3.6961705582279353`*^9, 3.6961705711466084`*^9}, 
   3.6961706335282717`*^9, {3.6961707824291086`*^9, 3.6961707949249997`*^9}, {
   3.696170828378927*^9, 3.6961708451917305`*^9}, {3.6961775244960194`*^9, 
   3.696177536639609*^9}, {3.6961777114223776`*^9, 3.6961778726060057`*^9}, {
   3.6961779536871257`*^9, 3.696178001287077*^9}, {3.6961780446438513`*^9, 
   3.6961780491063614`*^9}, {3.69617808066495*^9, 3.6961782203938217`*^9}, {
   3.696178433914888*^9, 3.6961784492746*^9}, {3.696178482911583*^9, 
   3.6961785279941273`*^9}, {3.6963358148945017`*^9, 3.696335824944496*^9}, {
   3.696336702720662*^9, 3.696336711565955*^9}, {3.6963367506934752`*^9, 
   3.696336898626133*^9}, {3.6963369663555574`*^9, 3.6963370245934205`*^9}, {
   3.6963370579884453`*^9, 3.6963370911332693`*^9}, {3.69633713867729*^9, 
   3.69633714758457*^9}, {3.6963371784547625`*^9, 3.696337330668229*^9}, 
   3.696337506286955*^9, {3.696342030265442*^9, 3.696342055614204*^9}, {
   3.6965973436925826`*^9, 3.6965973584907165`*^9}, {3.6965973978907404`*^9, 
   3.6965974400600586`*^9}, {3.6965980687982664`*^9, 3.696598082182392*^9}, {
   3.6965987379952097`*^9, 3.69659875237007*^9}, {3.6965991595664005`*^9, 
   3.696599161357998*^9}, {3.6966041446608152`*^9, 3.6966042105828886`*^9}, {
   3.696604264613673*^9, 3.69660426850031*^9}, {3.6966042987761164`*^9, 
   3.696604362039445*^9}, {3.696604415473429*^9, 3.696604443979203*^9}, {
   3.6966044989890485`*^9, 3.6966045013103867`*^9}, {3.696610914922676*^9, 
   3.6966109153078117`*^9}, {3.696950003267107*^9, 3.69695000492143*^9}, 
   3.697995540885202*^9, {3.69799566194641*^9, 3.69799566224811*^9}, {
   3.6979957004319425`*^9, 3.6979958659780674`*^9}, {3.697995991555769*^9, 
   3.6979960054415*^9}, {3.6979962537211037`*^9, 3.697996260026286*^9}, {
   3.6979963909522963`*^9, 3.6979964058568335`*^9}, {3.698058369377993*^9, 
   3.6980584397127724`*^9}, {3.698072481305226*^9, 3.698072481323738*^9}}],

Cell[BoxData[
 RowBox[{"VertexList", "[", "G", "]"}]], "Input",
 CellChangeTimes->{{3.6969493019552774`*^9, 3.696949313959736*^9}, {
  3.6969495183075542`*^9, 3.696949522040644*^9}}],

Cell[BoxData[
 RowBox[{"EdgeList", "[", "G", "]"}]], "Input",
 CellChangeTimes->{{3.6969500513256984`*^9, 3.696950054627555*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"S", ",", "work"}], "}"}], "=", 
  RowBox[{"BPSolver", "[", "G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.69695084193713*^9, 3.6969508854695435`*^9}}],

Cell[BoxData[
 RowBox[{"EdgeList", "[", "G", "]"}]], "Input",
 CellChangeTimes->{{3.696951063176242*^9, 3.6969510671477184`*^9}}],

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{"G", ",", 
    RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69695103357734*^9, 3.696951078016203*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBPSolver", "Section",
 CellChangeTimes->{{3.6795571036686206`*^9, 3.679557113728629*^9}, {
  3.6811328435634823`*^9, 3.681132843691572*^9}, {3.682701946598136*^9, 
  3.682701963537011*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "IBPSolver", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBPSolver", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"nslices_:", "2"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "dij", ",", "numberOfAtoms", ",", "slices", ",", 
       "work", ",", 
       RowBox[{"done", "=", "False"}], ",", "E", ",", "B", ",", "Dij", ",", 
       "Lij", ",", "Uij", ",", "S", ",", "Z", ",", "X", ",", "W", ",", 
       "isnew"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"identifying", " ", "imprecise", " ", "distances"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"branch", " ", "slices"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"slices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", " ", 
      RowBox[{"(*", " ", "solutions", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"create", " ", "an", " ", "work", " ", "graph", " ", 
        RowBox[{"(", "W", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"E", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"W", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "G", "]"}], ",", "E"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "E", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"PropertyValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"W", ",", 
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", "EdgeWeight"}], 
           "]"}], "=", 
          RowBox[{"PropertyValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"G", ",", 
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", "EdgeWeight"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PropertyValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"W", ",", 
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
            "\"\<DistanceBounds\>\""}], "]"}], "=", 
          RowBox[{"PropertyValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"G", ",", 
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
            "\"\<DistanceBounds\>\""}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"Not", "[", "done", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<slices=\>\"", ",", "slices"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"generate", " ", "bp", " ", "instance"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "4"}], ",", 
            RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
              RowBox[{"GetEdgeDistanceBounds", "[", 
               RowBox[{"W", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "3"}], ")"}], "\[UndirectedEdge]", 
                 "k"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"dij", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Uij", "-", "Lij"}], ")"}], "/", "nslices"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"W", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"k", "-", "3"}], ")"}], "\[UndirectedEdge]", 
                   "k"}]}], "}"}], ",", "EdgeWeight"}], "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"slices", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "*", "dij"}], "+", "Lij", 
               " ", "-", " ", 
               RowBox[{"dij", "/", "2"}]}]}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<k=\>\"", ",", "k", ",", "\"\< Lij=\>\"", ",", "Lij", ",", 
               "\"\< Uij=\>\"", ",", "Uij", ",", "\"\< Dij=\>\"", ",", 
               RowBox[{"GetEdgeWeight", "[", 
                RowBox[{"W", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"k", "-", "3"}], ")"}], "\[UndirectedEdge]", 
                  "k"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"solve", " ", "bp", " ", "instance"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Z", ",", "work"}], "}"}], "=", 
           RowBox[{"BPSolver", "[", "W", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"and", " ", "add", " ", "new", " ", "solutions"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"X", "=", 
           RowBox[{"Z", "[", "\"\<Points\>\"", "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Print", "[", "X", "]"}], "*)"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"B", "=", 
          RowBox[{"Z", "[", "\"\<Branches\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "X", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"isnew", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", 
                RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                   RowBox[{"X", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "<", "0.001"}], 
                ",", 
                RowBox[{
                 RowBox[{"isnew", "=", "False"}], ";", "Break"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"isnew", ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<branch=\>\"", ",", 
                  RowBox[{"B", "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", 
                 RowBox[{"X", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", 
                 RowBox[{"B", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"next", " ", "slice"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"done", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "4"}], ",", 
           RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"slices", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "<", "nslices"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"slices", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"done", "=", "False"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Break", "[", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"slices", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "=", "1"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<A total of \>\"", ",", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}], ",", 
        "\"\< solutions has been found.\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", "S"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6827019671531935`*^9, 3.6827019883797054`*^9}, {
   3.6827520058773313`*^9, 3.682752007842795*^9}, {3.682773523900758*^9, 
   3.6827739504220514`*^9}, {3.6827739820939207`*^9, 3.682773997290721*^9}, {
   3.6827748027586565`*^9, 3.6827748602420864`*^9}, {3.682774937541239*^9, 
   3.6827753481045656`*^9}, {3.6827754855464773`*^9, 3.682775768077546*^9}, {
   3.6827758431794395`*^9, 3.682775852191575*^9}, {3.6827761086040697`*^9, 
   3.6827761356665545`*^9}, {3.6827761799051275`*^9, 
   3.6827762569294157`*^9}, {3.682776288487507*^9, 3.6827764838117733`*^9}, {
   3.682776598677207*^9, 3.682776711866549*^9}, {3.682776757766048*^9, 
   3.682776806526044*^9}, {3.6827769820156193`*^9, 3.6827770574592137`*^9}, {
   3.6827771830672836`*^9, 3.6827772226146555`*^9}, {3.6827772538317227`*^9, 
   3.682777263271402*^9}, {3.6827775456748238`*^9, 3.682777546518789*^9}, {
   3.6827775797151136`*^9, 3.6827775984622955`*^9}, {3.682777657482841*^9, 
   3.6827777067571774`*^9}, {3.6827777903994412`*^9, 
   3.6827777968861074`*^9}, {3.682777869172826*^9, 3.682777869551065*^9}, {
   3.6827779315169716`*^9, 3.682777931686807*^9}, {3.682778028203849*^9, 
   3.6827780327785378`*^9}, {3.682778114875511*^9, 3.6827781151693735`*^9}, {
   3.6827786318985825`*^9, 3.6827786532106905`*^9}, {3.682778780232845*^9, 
   3.6827788150088916`*^9}, {3.682778860589865*^9, 3.682778918862643*^9}, {
   3.6827790426077757`*^9, 3.6827794809945264`*^9}, {3.6827795619985237`*^9, 
   3.682779590990248*^9}, {3.682779976097824*^9, 3.6827799798825316`*^9}, 
   3.6827800453274255`*^9, {3.6827800812274303`*^9, 3.6827801376397424`*^9}, {
   3.6827801817742767`*^9, 3.682780266523752*^9}, {3.6827805401257453`*^9, 
   3.682780661598824*^9}, {3.6827807301684313`*^9, 3.6827807439590216`*^9}, {
   3.6827807922573433`*^9, 3.682780825155981*^9}, {3.68278089072889*^9, 
   3.6827809003062625`*^9}, {3.6827809636600475`*^9, 
   3.6827809691730986`*^9}, {3.682781052145022*^9, 3.6827810576947823`*^9}, 
   3.6827811031071897`*^9, {3.68278114552192*^9, 3.682781148502773*^9}, {
   3.682781191030442*^9, 3.682781251899205*^9}, {3.682781354202553*^9, 
   3.6827813544128523`*^9}, 3.6827813991698384`*^9, {3.6827814442928348`*^9, 
   3.6827814467598443`*^9}, {3.682781487351517*^9, 3.6827814884135475`*^9}, {
   3.6827818109759817`*^9, 3.682781813545724*^9}, {3.6827853356617775`*^9, 
   3.682785337550229*^9}, {3.6827867368412943`*^9, 3.682786741159988*^9}, {
   3.682786807927786*^9, 3.682786819894947*^9}, {3.68278715946465*^9, 
   3.682787162255832*^9}, {3.6827874230740376`*^9, 3.6827874366378717`*^9}, {
   3.682789227649762*^9, 3.682789230497446*^9}, {3.6827893815529485`*^9, 
   3.6827893845262256`*^9}, {3.682874323027193*^9, 3.682874336182909*^9}, {
   3.6829343494785357`*^9, 3.682934438253458*^9}, {3.682934871900261*^9, 
   3.682934888830892*^9}, {3.6829350043195353`*^9, 3.6829350106554976`*^9}, {
   3.6829355309198093`*^9, 3.682935703315592*^9}, {3.6829357824619856`*^9, 
   3.682935807468607*^9}, {3.683022005274223*^9, 3.6830220091210856`*^9}, {
   3.683022039821942*^9, 3.683022086349081*^9}, {3.6830326439989023`*^9, 
   3.6830326466660814`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.682777369516736*^9, 3.6827773754382195`*^9}}],

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"M", "=", 
    RowBox[{"GenerateRandomMDG", "[", 
     RowBox[{"5", ",", "4", ",", "0.1", ",", 
      RowBox[{"algorithm", "=", "\"\<DistanceMatrix\>\""}], ",", 
      RowBox[{"seed", "=", "1"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"M", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"IBPSolver", "[", "G", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6798218509178233`*^9, 3.679821852271891*^9}, {
   3.6798220754379344`*^9, 3.6798220755372047`*^9}, {3.679822744321784*^9, 
   3.6798227445214615`*^9}, {3.6798231052765684`*^9, 3.679823107593405*^9}, 
   3.679823226558363*^9, {3.6798233451775875`*^9, 3.679823345308581*^9}, {
   3.679823525737986*^9, 3.679823549906366*^9}, {3.6798263139146395`*^9, 
   3.679826344570452*^9}, {3.6798288602280912`*^9, 3.6798288604903975`*^9}, {
   3.6798288950564623`*^9, 3.679828994620492*^9}, {3.679829044969572*^9, 
   3.6798290909698343`*^9}, {3.6798294100005565`*^9, 
   3.6798294105697436`*^9}, {3.6798295004715223`*^9, 
   3.6798295681002893`*^9}, {3.6798296319378924`*^9, 3.679829632507357*^9}, {
   3.6798299800985794`*^9, 3.6798299863477526`*^9}, {3.679830157933735*^9, 
   3.6798301597117043`*^9}, {3.6798302974701996`*^9, 
   3.6798303164031887`*^9}, {3.6798303891181116`*^9, 3.679830389302563*^9}, {
   3.6798304759096456`*^9, 3.679830478014727*^9}, {3.6799119298147106`*^9, 
   3.6799119406954846`*^9}, {3.679912001613147*^9, 3.679912019708365*^9}, {
   3.6799121456440763`*^9, 3.6799121778114533`*^9}, 3.679912535631927*^9, {
   3.6799174812432394`*^9, 3.6799174816978993`*^9}, {3.679918592547327*^9, 
   3.6799186296132526`*^9}, {3.6799255011209993`*^9, 
   3.6799255012742624`*^9}, {3.6799265772569237`*^9, 
   3.6799266196275845`*^9}, {3.679927091468864*^9, 3.6799271177650127`*^9}, {
   3.679927217233017*^9, 3.679927233987025*^9}, {3.679927271460558*^9, 
   3.679927271760435*^9}, {3.679927363032942*^9, 3.679927363786351*^9}, 
   3.6799274640577226`*^9, {3.6799274956489134`*^9, 3.6799275047564964`*^9}, {
   3.6802494864436903`*^9, 3.680249517698353*^9}, {3.680249838745507*^9, 
   3.680249885493765*^9}, {3.6802499632347374`*^9, 3.68024997989824*^9}, {
   3.6802500278218193`*^9, 3.680250042557376*^9}, {3.6802500816458673`*^9, 
   3.680250094230627*^9}, {3.6802501729429226`*^9, 3.680250245242584*^9}, {
   3.680250277069769*^9, 3.680250349656209*^9}, {3.6802561938862762`*^9, 
   3.680256217314024*^9}, {3.6802562822999315`*^9, 3.6802562845355077`*^9}, {
   3.680259514448849*^9, 3.68025956932335*^9}, {3.680259617915313*^9, 
   3.680259625069577*^9}, {3.6802596588968315`*^9, 3.6802596591149898`*^9}, {
   3.6802597057100697`*^9, 3.680259710865752*^9}, {3.680259778882868*^9, 
   3.680259779298339*^9}, {3.6802598345877275`*^9, 3.6802598347003174`*^9}, {
   3.6802634539441957`*^9, 3.6802634724224014`*^9}, {3.680264125324051*^9, 
   3.680264127539488*^9}, {3.680971309238633*^9, 3.6809713321665344`*^9}, {
   3.6809713775361547`*^9, 3.680971388619849*^9}, 3.680971453133582*^9, {
   3.6809717846377277`*^9, 3.6809717933103046`*^9}, 3.682752354734047*^9, 
   3.682757377902835*^9, {3.6827585847612524`*^9, 3.682758585270115*^9}, {
   3.682758922849889*^9, 3.6827589310888653`*^9}, 3.682758963373986*^9, {
   3.682777338739936*^9, 3.6827773397706623`*^9}, {3.6827773885972614`*^9, 
   3.682777509880164*^9}, {3.682777995186551*^9, 3.6827779952866464`*^9}, {
   3.682778057930979*^9, 3.6827780633222637`*^9}, {3.682778129241908*^9, 
   3.682778129377575*^9}, {3.682778697943698*^9, 3.682778699490327*^9}, {
   3.682778953526342*^9, 3.6827789556117177`*^9}, {3.682779505273485*^9, 
   3.682779536222084*^9}, {3.6827800751236987`*^9, 3.682780075207179*^9}, {
   3.682781360244443*^9, 3.682781393632818*^9}, 3.682781437277698*^9, {
   3.6830326521888623`*^9, 3.68303266619322*^9}, 3.6980724813342457`*^9}],

Cell[CellGroupData[{

Cell["Illustrating the tree exponential growth", "Subsubsection",
 CellChangeTimes->{{3.697799201845194*^9, 3.6977992165628195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "IBP", " ", "Tree", " ", 
    RowBox[{"(", 
     RowBox[{"it", " ", "can", " ", "be", " ", "very", " ", 
      RowBox[{
       RowBox[{"slow", "!!"}], "!"}]}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfAtoms", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfSlices", "=", "2"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"or", " ", "2", " ", "at", " ", "max"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"node", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"node", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "5"}], ",", 
     RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"leafs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexDegree", "[", 
            RowBox[{"T", ",", "#"}], "]"}], "===", "1"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "leafs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"node", "=", 
          RowBox[{"leafs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"node", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "T", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Number of Vertex=\>\"", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697799241731846*^9, 3.697799254334177*^9}, {
   3.697799346715639*^9, 3.697799494692484*^9}, {3.6977995415977516`*^9, 
   3.697799554133665*^9}, {3.69779958568857*^9, 3.6977996515207334`*^9}, {
   3.6977997018072743`*^9, 3.6977998432952023`*^9}, {3.697800084682583*^9, 
   3.697800241626899*^9}, {3.6978002876775465`*^9, 3.697800679942664*^9}, {
   3.697805514452196*^9, 3.6978056518731575`*^9}, {3.697822288932176*^9, 
   3.6978223841049337`*^9}, {3.697822429222677*^9, 3.6978225315229197`*^9}, {
   3.697822594480259*^9, 3.6978225945599475`*^9}, {3.6978228346728067`*^9, 
   3.697822844849125*^9}, {3.6978235002195606`*^9, 3.6978235312395496`*^9}, {
   3.697823578517539*^9, 3.697823602359697*^9}, {3.697823669118662*^9, 
   3.697823677917166*^9}, {3.697824726940096*^9, 3.697824736486435*^9}, 
   3.6981575223574333`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl3EMQIEuzBtB/bNu2bdu2bVt3bNu2bdu2bdsz70y8xYne1aIjqqM6K/NL
0LBdxbYB/ve//1WJ8r//BfIMTBCCEozghCAkoQhNGMISjvBEICKRiIyl/heV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalE5X/vkqpU
ozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSj
Oz3oSS9604f/6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0
pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2
s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5z
g5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvOD
n/ziN3/4y/9s/gAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQk
F7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQW
talDXepRnwY0pBGNaUJTmtGcFrSkFa1pw7+Pdjva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8L6D9T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+/Edf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+HfoD
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/P/wBCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/Yl8AAhKIwAQhKMEITghC
EorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKS
itSkIS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK
0pShLOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orW
tKEt7WhPBzrSic50oSvd6E4PetKL3vThP/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/vKv0B+AgAQiMEEISjCCE4KQhCI0YQhL
OMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs6
0pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznK
U4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rT
gY50ojNd6Eo3utODnvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOHv/y75AtAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz78R1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZ
wlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nC
VraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/5d8AcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/+oy/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhL/+aewIQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+N
fQEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y7+m3gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V9DfwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8m+YJwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+TfIF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//BviDUBAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/g3wByAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/8I7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf8E9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv9CuAAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlX2BfAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yL6wzAAH/5X8SmCAEJRjBCUFIQhGaMIQl
HOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd
6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzl
qUBFKlE5yv9nqValGv8HVvJgbA==
      "], {CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
       "], Null}, {
      FormatType -> TraditionalForm, GraphLayout -> 
       "SpringElectricalEmbedding", 
       ImageSize -> {381.93548387096774`, Automatic}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
2Kgpmv2ae4sBnsyUFDqxQQ8nbEuQORP8d5927SfmuVVH6cVbGhPxA4V6llEs
3NSPXVn/i4GcE1vbGEw2Vh8Z3XTdkAnZIidYaLKh4Rm3c96fCfvbsd1/CTzT
3se3MraYicrfmiIXIlmQP/m9n08M4HUqzi8i6qBqopgy08+Ey9olCYVEHVZL
VNV7KQDOf8Wq+yksqMi9a/XmBdxzBRLns1kgfTz7coRJ+EDqwQe2u1lw399h
+FeZmNenzQ6WhJ8of7lc8hIZEKUUJiwqyyFtB2u79sIy2Ns5Xm7/KYOX4xlT
LqLLEOst6GohIYOUcon3TUt1sI7vlK36Kzls5omajs7VwczTj78/B0pj4xC/
d8FpbWSesGsQ6pNBwM6Dgj+dtOH7jFWTGycN/sqlR8+56UARRSE7mmVxl6Hq
x5TUxl/nkKJNCQo40lig7u6gjbAk7fKyaTlYTJPDys01YfrLpDCOTwl0Jv9/
Ml80cNOiLWF0vSLGgiv+Gdtqwt5+X7tfliw0yG3yovXayLp8I1+tWAFhcR1+
WRwi/n3q3J9LctCSrvQw5NbBr8By5908cnhDnVNUzdTCtzzzvX7jWhi4dGHs
XqwaEu4zi58MaaHBKVumbFwVpvsU/fXmNVGvUjd7UEwVXmW2pZ0vNNFaulFC
o1YFH1rfBiut1YLGH+oWlwQVKIxvLzgQogH5OjbP3F5VPJ2v8bfK0kDrUIGf
sqIy3EQ/wqpEExPyjE2+G5Qx9iBCZc1TJZyPuTBruF0DYStcyf8MVcD9yhr2
oVrINs7Tqd+tjCQdmfPntbTw+L7p46xvyvh5XEnRWV0DNbuDTpYaqMLZ4FT6
ZcZS/Doo+zb3kjqiH0Ll9iF1mB/ofPGlVx35Zcbfu++qYpfH6vapJHV0Gg1m
krPUQPMZKjjxQg/OjQrlW0sVIK8rO5lwQw88wQ7b92YrwmT9U3oZrz60vOuv
brusCBmNulW/JA3w5sfHtQspSqhz9dkZzWuAqM1NhZY3FfCEX321P0Ufb8b2
3u85pABHtzsfdj7Xh9+W95197QpY8OH6sC9EH/5+8Uly9grw53PR6NtgiKcn
BB/G3ZJHxVCatoaIIeL9vUmNw/KQ7fs2udLTEM3ZHj2H1RWw2ThL6Vm3AVY+
nbXviJbHxLuKNfFLjJCdI80lUi8P8ZuZJucjDTGftvI9IXKRYVVQNCduhMKt
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
j4uHmtnw1Vqek1toAOv+Eoe339jIvMiZ3yVpgIqqkqPFZDxfdfy3oEAfmxVf
a1wKYENrYEM5hWoE3RcBj/6eYIPtspsmLGyEm58LwnmL2Tiu3mvTPmCA1r7f
M68KSXvZ92LkzhkgPjeG0slji8ept7USYg1w+4/aV15ZWxxzFRQ5EKWPayKR
Rz04bGFQu9425bIBFOsiXnNI2SJrvOTqW5o+firprVcUYsLTuvH8K10uUDbi
u9YVJigKkZWKMgsEbSTV6txOJpJWly9PM/xLyObSLnpVMdHVZpT3sX2ayGtR
trlmT+4jF/MjNpXOE9G3B98nbSTIefbvfvf5BaJl2YGdHUEERKM7zQVn/hJq
yQMhDsEEmv68Hbt9eo646PnykOZVAmhbYLtdGiOierUH2nMIPHGN9Nuwe4yI
X2HrJ5BPYKxFsW4keYrQEE78sjGR3IfUPz/Y+mSEuHs/oJq5jokmnu8t8we4
cGLuopXJHybQ8nR5y/wCwfnRZsXDLCaCnnhHf3X8jzg2csQx4x/p/+R74lTE
NFFoLKD6L4FAvaOZ910nDui9O5eBYdK/qpYjGQszhFaWcZPl5//5u99IUf8f
ceOH3+3uMdIf5lvxT9ZzxEDKyfIHyQTcHgkXndoxSRxRrD774D0BX67Cr1YJ
E0TM65JvrFukvKJGfXXaFBEiOntFrpiASnJ3YZ/LBGFZ++O0/1MCKa63o4sU
uVDHIxq2XhgYu1kfrZQwT8j3Wugqk/biPLcV2HNzonZkc+EFIYCjIFRLlXuO
mPqgJk+Mk/ENhZf7vF8g7K3jZX2MyPxk1q+x2zxL1PLJ6zeokPm1a67hODpP
qH39kqyylqSvfqNxuUwRfffC7y6K2CApPbuY9/EYkbTpjqRtkA18m+oq1n/o
I/4WXHdnmJL7/X+OT6u/jxBNrWy7bQEk/+z0Pt7+LuJjxf5NL0ptwFFFv1Gg
PUhcvx1wueGzDaI4ZfwtX3UTJZWyTZ8//Q8f2nz4PtdLJEuq51J/kfyrpl3D
r3oJJjO3yt6MPM/y05ami4NEQ9W2e7fI/T0qf9n6jZe6iJzeK5Xid0jaw2Lq
tXIPEZAhfybkkg0q327+S+HpJW44fglP4iL1eYzj+SpmCT2+Ev0DDiR/ukWw
YeMvomBrb3WfP+mfns72HtMBgik6HePtQ8p/k3orx+gl5O++POcwZgNoS7G9
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
pWriMH+mo8i5jw6dm0/PhKkKQ+eJ7bvmRDrCqUTlDnVh7Nu9XlD0JB0DiwJS
VxOFoMsSVAvRpENR1/i9RqMoYiNDdKkedHQ1mSvJj4kgRke/Yy8XGc8G0d6D
P8Rx+t29ZflsOtycipUf2ovi3VWl3HvOdLJfRLxiL+eHm8mfgSjSn9bvQyYr
pvnQvdk6Z/w/MyTNP1lQkhXFydfc1wNtyfOSe87vO8SHH7cgZfzEDCX7fZuI
IFFkLoYOXakzg6xGdVrKojCyl9leUSsk71ugu6rxB2Ecd9RSW5g3w1heY2C4
kBBC5wL/KDaS9XZ+7nLiqyCI353VB8pJfc+HVn8mBOH8Ns7iZBtpP9ZvJlZc
CFpu720dp8wgOshSP/uJHzWfzvFzD5qhNXF9Iu8DMj8H3tma/CPv66F7fWuS
hTExLPnBrt0MXTj8JMdJDIM9Stkp2nSIGvMJqT8XgOs091XNcUtQ/k62j1ZT
kbiGyvfS3grS/HalVyyoWFRz/xQgZ4VnF6/VreiiwiaH1zudZoWUlGiD9ZpU
RLz+UFnrb4UsupTdzlgqmiWn3Js7Sb5t3JbsfgpoJjss3kZY4ZJe2HLVy1SI
crZaub+zguG6Sw9/u1Hxe/xlWRKfFRItXz95/40KAa4baTNkvw75E/OA6wfp
z5SHR9FnS8TP67z2Jmh4+JvP79R2KyQs/1DJVUrFr3suy48GWaHYv110/39U
aH5Zbnj0lhUI46rNHfepiNn/lLPUywpvn5W6reamwT1lq1JKqhX4vxRdb0uk
wnT26vvYKStY8Wy+PxFEw0nPH+v++VujQ/PArJ42Dfs9Rp+/57fG8gMnj86F
0bAQa/DMysMazvYbt9So0CBrLW56mZwnK0T17eiZNOhHKHgcfW4Ft9W/13Sv
p6G8LCPgE+mvidruduO7NDg4BcU3fST7b/N6yikfGipnsnbMxlnD9JH6tVAB
GtJWdTwOumyNuIt7e/W+k/k1evVf8Qpr/MirUfLdSsM9IuCVBSn/V+ElwfWa
iqusMrqDnjU0K88sPa5KQ5OwmIhWgDX2+NzMm4mnYq/ycZ58QWtEaCr9KdSk
wSDy0ked7dYwPoQbS8up8O3TFJDPtAAv7SIlMICCU6WlH2PLLJBEi5jfHU5B
dltH2vlzFjAsenZSTIvMV1IoXfueBfbcN6967UbBmGvnkBBJG55PKKmNpuJi
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
zAd5OqHZFOxUjHf5P9PCI6vhVwUTFDpnTo2unaoFIfWhg0rkPg1x+Wr5ver4
67GNI03yp5iTHfbtjzr8prs+mu9PYf1DtwYjQQ0kLRoTjDtM/O6ZP1cEOtSx
IV981gWyfhH9oXHdWg3IyxRc1CX1LesNOt0/ro59El+4ueQ8D7VmRz1RDdTe
CtgqLUTm55x7C6NkNXB2rcgmfQ0KgYbpllOYmnAasBo5eZzCgvnGb5YbakDK
8CHNvEqhen5V8TVjDVhdWDwvporMt7cxN9ds1UDPw/qgX1403M9cTQ24qIu0
7ksF9D0armEPfXO36WLFNlfzLcQP3jp4r6Q5TBdvAqoHR1rJfErbtOroDl3I
bx2f0bWdxu/Bb9XHxHVxpPRPfCnhx4Tda6rn1eqgPflB2ZQiGgNSKd9OvNbB
VyfL8Z5LxM+6TV8m8EkHG5LmpPPJfF109kOu1hkdXBd5NVvzGJlXYT8l61br
YNY7hpAqwavlbpGnU7fooExfbuAq4ZOkD1phDa46ONn17rwiiXcqCzpCiTow
l7z5mXefxszhbr1Xu3Tgf5iyGCV89myJeGdToQ5KL9z/avyExuUoIf7yAh3U
HF39Ipjg7fFNB5lgI120p4pcv/ObwrtEff0lorp4NO95S6QuDRvFG4NxJN56
ax3eym000gbLW3Sm6GKNupAt+xmFRdkVn6ZPJf2+x2xcS4nGiqcC8jbeOlir
Ica6QfTKTtOp+nmeOrCZjJKX2Uz88e8aVVNaB3vzM1PUDtN4E9TZ6FxP8lf1
rLnlIA2HGbsC9wfqYuR2jvZqMr+nHPNJCbXUxd5Kbp3SOxrSfR/cnT10IdVq
aTdzDY2r6XpOsnt0Ifna5OGuuzQkIsRuDWjo4kr1vbL6szTiZSJ9I0g967oK
wnPI/SMepbJmkft633HZnPmQ6A/Jny+6wzWxZ7Z0nL02jVnCFyYYDDIPHgbs
0m0m+LH5tyn8kiaWWl1dPo/w1ff0G0Fp1ppYcyX0Z3Mu0Vd5t47ez9BCt+za
4hEyT3vLdsgfCNCCWIzRousV//++eiYr4akmHl24upFN5vORyD2pbv3En7xd
tfx/Pq6vME+rz9SCZVxUhtxWGotFjq7J4GrhuJvshkZSv1uvO6MmD2hBcSDL
pD6axqve415eu7XgledX/XeIwvjnT9k1RVqQU7o1MF2CJjxoZ5CoqoVNCqeb
4sn8G3y7r7rrqya26X/4u4/gy3+TlMABC9K/MxsvSq0g82Oi9dfwRi2U5h5f
KZdFoTJ1dp9znway8z64rftG9NK18jzHMeL/tN8tWkz4oXpoR+bcFg3Mbnp3
7Zk0wdOMyOvzSD8lffznVc2kkbvl0I7XwRr4PSzhb6hDI1Mhb44PpYE8w3vZ
dUQv/T3/4s+XAxq4lfoxvYfg21QlPGzJDU30PGjL2+RO9GfE/VX9ZN5ORAZ2
RhM98F38UvuM3Zp4Pj9w52Jy/7Vpsv1PST38Rb+JlpB5aPnHI+8fqd+TJQXh
i4h+8qR2RPslasD/003lcnK+b8m+/pAjGtgQ73tAlvB1vvNsf/Yg8Y8xoc9O
BtJoTSvVs3jHxCqJDvFzX2lYeW05qjaNBZWLipWiX4geSFwh67eQhWlhzMEq
ITNoKDXkqE0wsfMxQttqCT9bBW/2+2aMzteuQotMzWCXvyWQqczEyg+yo9/0
zLBdoPxU/2ImZsdn5V02MYN5dXBB/Romrs9YfWWLmBnqHaLFHjQbg+POcEgh
72Pe3zvFdcYQrZl2fSF5PmW7JD6XGCPIfbXzfh0zOCY96BnrNIZAgveyBQQf
bQs2rJQfNsa9vTsU04g+Elj651nBiDHyCgveHkylsXSoP0vqtjF49sfGfz+g
0ewQ9vvEY2OMaXP1HNRpRD7ZW8Z4wsLrXaxXyjtpMEf29/rKsFH2a9XteUQf
K7omcXdLsqG5n6Vg3UyD8byk+PAECw6nLqpyQ2l8K74WdKOeiaim8OMTZL1V
Mn2y5QMThq92RIk9o5HzdXKG9x8m0uwrK51e0ni55SlXWoaFv593FFzxJeex
C9VPtLEQmduQPIXMg5CalPz7d1iwGprauZBD5v36+ya1lSykjrn3fThC4/4K
X7FnX1jYVLInliZ6JsJkxfKQHywEvy+1lyT9bnPp6WTJJAvnpU+HbCH4PZ3N
ueuXSfbPEggZXUv81jRPMU9RNoKGdxd4soi+CxhX+WXIwsjWxSn2RL+9tFj5
7SfNgva6TZt9KmgYpP42qTrHgqOyZ7TwNDO42JdwA0+wYF4jMPwymIbSy/Zt
iS9YoD6V9Rhf+T/+GzaWJB77+Jps7/lmMMuPyHf4yUL7aO0G5iIzxOy/ZaE4
kw2j2vRKkWzC17vedL3UZiPvuHFNVg0NOxcreUk1NuhlquXlsTS2CFpcLlzG
Btc3JvTNJI3XX9w19y5g44rEhnodog+Fb9VZz/NjYdiq+4zsOvI8LNbAOJYF
kTPPEp2jyHxd4iI3O5CFXL7Bp6pIcv+Zq4SDyH3kK1ezfUtpHK0tbxYpZmFN
jdfFLZJmyDrrNyOc1CPtQ8a1B2TN7hnpKMpjIdPh+8qyJWaQZ3ydRZWyULas
p2RKC43rNjPFWDFsPLQonLbqFQ2Vs0la2w6T+K9NxnkR/Xv7lKhbGoeNtHXd
FxgdNJSH9lELdrPR4uTq5P2Ghrym9yrr+yz8O1RzJXWQzPs5CmqynSwUD5pc
MK4k/vGgx9GKKBZ+fX3IiVM0Q/jeewN/GlkQVTTYrEbyff6vR/VBLzYeFJ1e
soDwrfJHwaLTtmyYbT978dl3Gg03lHxZDmyUSoyaWpP7KGpeX6Bhx0blaFlR
CdGzu45mvDlyxhBiAuVT/nGJnjf0rfzgYYgNNquzfclzk8wZsc2HDWHTFbk9
mvSXe9EJvU/rDLHK946dLtFLMRKPbCMjGPC/mVzWRfgyXkh/zMaRgSDh8J4b
xjTUnNJ/iVgy4BKa4rzWjMZoIWO3zQEG9pw6OUeIPM858TZGIoGBmB1aPlHX
iF+Y//n03x0MrIhdJdZ/i/jP4qf0elcGXvgo7I4g+Dh8peNJaigDf5ylPHaR
+1fuMxAViGSg/+GkLPs2jWsxb8e3X2BA96vSyG5bwgeSWN5RxYBUqvmKD3U0
xP4yK7bXMZCwbNn73cQ/FPosaT6sbAT5jddE/xB/Jr1I/1SfnxHah8S3vXhB
QS7tn53aAiPERKoeyST5+LGzY38xwwi+sg3mg0RfbSiUvhlcbYgtxgudW8n7
hvH1KnUVhji6MOhDtiKN59XDF8wnDJEW0LIlcJjCklYbs+l3DOEYosgIJPwx
+HVTmV2wITaxe+arSxH/qnz8i+tuQxQk6KQv+EBhz5c7C9ROGeLI1kN2O8g8
l3xTNnaywRDQrpTe2k9B52XU2a0WRph+OPBOHtnP5886j88BRpD1eaj9w4UG
/13H5G0YIUhn08wgDxpZl+4Fr7E2wuia5YOihRQGjv1uU15mDM8V71TfLaFx
84FWYvJJY2gHCZ1n65H3JxMWPw00xvUXBzepEP5ilnwUfh1sDJuQC5criJ9v
FlBsGbcywtT5Kv3v8oje+vlxsMvLCGKaTrtliX9tkNn4vM7FCEOL1V7QEzRk
4mbe/77PCCpBimX/fIh/k76YubTaCLsfJB5YfIdC9vO79WZqxvB4z0nXI/r/
CFu8+8YMY9R0Qj/rJwWb/GXHBwyNkTpt+/mv/+uxw3bvWsKMUBco5mL7/+9a
JcalVzUYIXdDgI2zPY0Si+0R9B0j3Opv62l+SOaBmsZslVtGKBWd9daC8Omq
bqO2pElDNPyZtsqFzOfmy7/71isYoTffX2w64cuPi4a3+Sw0AudST+XLdhK/
VEXPxZlGyGF7przYQvjhSUX9KtIvJ62Wl9wja/8u51dCYYaQ3ej3WyidzKN6
yfsXDhmCcedKVzPp597k4DVtBYbYmlFYO5foz2LphgC5GCOIu70Jmugl/qDn
NFPiuRG27jx65i3x3/NLhO93PzVCSPSGbY5EL2j4Bz7QKTOC0mzH0WayXhLo
OHGy1BCSOqvXbr5JQ1uVI7yd4GNNe7bqjCQaXJcTHk4XDXFG0eArY5To5ayF
obc6DdH1onut6jAflq0v/tQnmGIeI/lbO/F7RjeU3vIemGLvZMfCvC98nHEX
XpIaYQqfoR0EwRS2j9qo9b4yhaWNdevjcD6+3NHdJ/2Oh3De1hset/mwyzY/
cOCoKRqfrEgeH+Bjz/jB41Ovm2K863vgwm98yJ69FTb3pim2rtKsnydI4YpS
lnnwWfL++aWqbusoyPucGHXKNUWDZgTr9VwKojrpT6MumkJ+l0CuI/GLj84q
Vk8n+zUs5DB3SRH8blhdrbzPFEYNbSL7VCg4zwlf8y7LFCPhDulX91BQG30+
rTjZFO3+Y6NfYig4DHu+2XfZFBXGBQf3E/030t0b8K7bFFGzxn2fEL9dZBbY
8fCvKY58nc7z1KKgnSQfFfvcFJ4je6sPxFLI+qfJKP5hChcv6dUfZSiU7/gl
Zi8CpKqoXD+vRmGertrhsBnA9+6JqlVTiX+ti+iMGif3M1949P+/FzXIH5zF
kQC8P1vttKTI/lZNg0+GTNH0M/HQ1XgKBYpfnTsFgV/9/YkaxA/GCZU6bxQA
Fj59b6FF+uFHxwz7phFT1D5MWWp3k493gzsnKjeaIsba6eC6ej4mO+Tilu83
RUlAqOyqKj6ONJxRjllnis4mAdk5Syisrqr5VtFM6me5/vf3NApi0Hx19hUP
7cVzutfXUHhOOdfyp5niVf7J+4MEn57m44tqPvFgt8D9rjyZ9+F6OldERU3x
duWflOr5FE7u81xyuIyHadMNRv/ZUPhSa3BV+S8Pn26OrDL6x4fwTLG5O8/y
0OB2cN0kqd+Ue8Fn21p4CB3rr3h2neAjNFdoNpeH4qfferVFKAw/z8w3beVB
+vgP0bsTfHAYpvlHGgm+SjcsfqVP4rlelbn4CQ8s6yXDDQ/5uDCpIVIozkOy
mtzD4cUUfH98ycoI5uFy3MptzuJEry+4bfM0lIdEgSOStVyCt0VqFYdu8HDs
0nHtuGXEb3PXLnuazUXoxsf2nEDi30VKzszX4sFWRun+flIfZYPLsd4DXPSr
LjWxvUzm0YPMH689eJjX2qD+5zGFuS0ewavJ/R3KpvWOvqYQNbz6p94JHjTf
DDRTZP1ES6FwQSoPTObHwAXPyfmfZWM+5fGg7DEg+Jf4/+KjCZNTmTwsFc84
3hpN6rE51zNbguTnRNbRvDoKthrZM91IPOpz/Bo2kvpYrF+7fIDmgTHNtrTt
NIU37HMSS4J4WJv1Kn35G9Ivn6xWZD3iIfjpywi6kYLAywhZLsknccxP9hB+
0X6j0LW4mwcJfozwLEE+XtmKq/8sZ+BujOee0j9A83jAz4HnDMg3GrJ+cvnY
Zbpxb/oEAxNOfl9Sl/FR5RSwZ4aBIbSswwcf+/CRGOBUcymNAcuJS6cNLvPh
Yndb7l4WA3GZVcJKt/g4eCxJTbyUAYOxH/L+heS8P5uPbRhn4JtUAuv6Gz6M
ts4LMqlkEL1BFza/4mPpw/q2pBmG8PTWMLL5ykdx0slF1r0M/H638OsvMk+4
XrFTzv9koGf3ylZeGR+r5Mw8VpF52mE4bcmjOD7qU67Jca8a4qxl55wnZ/mI
WHZDXSzOEAamOry2Bj6etfbdvpliiEx5Z14ywU9c1kbpIg0DnLuqG/OOnHc1
cJeznokBhkriTv58yccvqV3Tc5YZwG6+3s8Zv/iY1nI+9autAaSST5qkb+PD
2d66j7fHAFFvzjAm9pN8uK0eKrljgIgazmbHZD4U0qdEjDkZoEOwa0zuFB9r
5GYoTXU3gObHbWf87cn+GT5hv7MMsEw3rsKvmI+/rksVOm8ZQEKp4YtAOh9b
UxcHBCcZwO/UNov3pJ/jbEYHL7w3AFvONmRUmUKrwqzNVvkGYDQfCPIl/d2Y
dTRC2dcAMp5T7itpUBjb0L+F72+ACenGH2XqFIaGnqfMjzPAUwWNNK4fH6Kn
ogKmFOmjNkNIsziBD/vukafqjfo4uXHTmjWZfLS6X5HY+1AflU4fN+Zd4qNz
xpmlPu/1sSg/zOR+KR+1XVHLu3P1Mdd/VORLBx9PY8J6y56T9+tZMeItfEhd
ZSvYVeujcIrZ96LXZL+j39mDn/Rx8ejrzZQxH5+uCtw/3acPMWvDpOnL+bCq
WZL+aEgf5R+Xb7zoxkcbd69y5Fd9bB/6x360hY8c0+Z70uT8hkVu/BPjQOux
C/5sVwPMf8wouCrHR2rTB5bkLgPUTp1v+u07YBI67tN42gDrh48szZUk8bbP
ebDT2gC26rk3LFhkfgTPWXd9RA8Zs/xkDrvz8TWWtrOerg+HE1eaPaz4yKO+
TFSP6UFAjTLWceTDJj2rRmz4/997yr4ke4aPczppA6OteuDHOd7uIfWzPRf2
XKZXD3OUH7vIELxH6d99sfynHmQ37/I2JXjTv1ahXiGjjyOHVERny/Kxb+nP
tc1cffSv3/F4vhkfO60imWYa+piVnOEoQuLb3qsl1cbSB29Y4qe3Jh8tV0xz
j6vr4+Dnm4eiSH3awo+onpHVh+2N3eHh8XxEu7fcUxHWR/upFxv2BvIxs0J1
a+2AHt7r4pdzBB8r9+y9VjiqB9dGF9uCLD6uma942rqXCbv1vk2LO/mYHfXD
2rmEiZBFW/cmPObjkfi9ivRHTARtiTooTvrB562Sd8F9Ji7PvXv9gQeFXEG7
F/+eMSElW1+a7Ev4YIbQ5pqXTEyZnv1z9XrCf9297/d1MbF3gYGcgzOFS2u3
SPUOkefd51oOkPlrKxIqJtpuDDP/kqzPPDK/NuQ3eDUYY+O7Fy0hnhRk8vXL
zKSZqB36hoQDFPw2WT4JFGGi/toBnn0bH74L9yn6aDFhG8uVvWFEoTZR56v7
eSZcN0nO1ST9kX9uZN2KC0wslL/BkDOkUDrLkT66kwnr+sgUIxLvMY/pcf/I
Wnmb9kAi8QMJZ34fDEtnoq5Xu6gtm8LHO69Gb7kx8TZWeP3sIgrw+pYScIKJ
vvdCesFFfMhJOyJi3BhTVTe9tu7nQ0ZztpmZDRNfVzA7NX8TPH9WmttD9teV
OPAinOgZ713ajBayX3fCUmH/IHJ/xuy5n28xsdHNbM+xKgpnBT57ZNcxsSft
T9udEgrqBVUyz1qZEGZekQsj/B9n1fry7CATAoXaW5II/1adHhxNnM4CR6wr
8qcchd+OdwtWLGKhsmK5153pFB776qRP/cbEcqE77Q2bKGwefV5/aSkLF1h3
MoVHSH3aM4pm32TgyeVTTWeJ/3uWN/XmAbKeGrPEVm4h8Q/Zh258O8lAX/rr
DSnEzz4Pvz0cc42BTn3eyt//65HCJX/q7hvAc/cHoy2dFOjj+jYxFw0QnxGz
ZuUTCiurb135cMUAr/cMrGkVoRGdmMNvvG0AcfmKyY+5FIJ+6OutHzMAZ3F8
nAQ575t8wujOWgNkPf18WIZNQ+RykTQlxABzVZ51yjzip+e/jSl/ZoAq/ix2
8wDBy136p9tGBg45jr795UjD4rlenKYZA5PvZ9ScCqIh/nmTZrQTA+q+5w84
hRC9PJ3Z8WUVA5r7RM/+lKNRT9U1Fk4aoHlq9NshJxr64h3b5FUYqLFc2Zes
QQPXr8UrfCXz46Dj5STif/J9VAcNljFA1eWllfRRGLz+o3sXmffxC9/r7reg
cW7Fu807XhjAdyan/YUVDftPhuO7vhlgx7IcFy/yPLQvZYfJgAGq5b+KWWVR
CAzYedlcmIHystTSIqKvilszTlZ9NMBwXZld8ReCBzuxT9YiDJyLj4qq+krh
q9cGIxcSz6FQp4hqos9sBby49ptIvQqrV/EeEr9aRutX+zBQokqZbnAj/ai4
J9p4LwMnuwIuWTwl+lPgUZZ/MgOO9y/vPTkEqBWFHj/5FOjT38p6R+Zl98kS
rZw+QH3T6XwLBh89hlKNlDgfaw/1fsnW4ePGQ/1gkwV8FNxX9PERJvPjYHJB
znugPMqkcTv4GNytZfhJhA/lidIpsS8B81UyPRJk/w0mF/dMMAlflr3pPvAX
2DQl8I3WacAhXCz15gag8GDGs7zXwLyN3zPPJpD1qvsfcl4ARlNdi4NzgPBy
NSwh834ieEHatEKg07UiKX06Hxkf8sa0k4GLi630FpvzoWN04kdrJ4n/raZB
82o++loePpL8CTDkp1hb2BK9EK5FtZN9ZL+s2+u4l492112WIs+AgctiV4pz
+Lhe32oy5QEwzcNO0ZXoF9/4p/3/PgPPnrRmrarlQ8RTQieanNvdvcHIOozo
7eRX+xaVAQlLVc/ak/m7xHjLuinSfEzc8LHf1cqHYL+o67kpfMxNdxn51cTH
MeOP6XfFyFwV/bd/pRAfNbM3m4yr8hF49MDK07P5+Hwl/dkPBT7844TnryJ5
1dwgdcvrMbDkGr10WIboCUbOq2+EN2aufNJZQfjghsCiiA9pwLH5z+ssCJ+P
8DuPa5G6jM4Uf/O6nI9IvaNV6kS3nfRStC66xkfv7q6yeA3CW4KLyjs2A2f/
zct5uwM4c8hQ5TKpR+EKly25zUB8Iqcp5QTQ8kt78ur/dZw+sKXhLrBf5uWZ
AZK/eM8fS65u5YNnL3j4ThNg9WmlX+85Ptz7P1zcSHhWMttj67NDfDQJ7rPS
EiV11yh++Z7oMbsU94JCgit2U9RQ43Fgwd3T7lHXgMFcO+EdZP9TtbbnLUm8
/tvKxFNIfqyHHwhHbuSjbEXqt/Nz+Hhz0PfxDsLLokc/6UmoEb3BtjZYQnTB
muiHvw4Y8HGZ+Wrhbks+1jXqrjaV5yM96Uq74ErC+33pS3+u4SOo9Fwi14Xo
zD/V5VpE36bmF/TIXAGK5gp6WJHPcdTalf+MAK5xv57E+fMhZLp+XQXJB2fZ
b+7tKD70egQnSxaROgS9WKbnBxz/OL7lvTdwb6XAsHMKcP9s18W31YC+86c8
1yf///tuE1eFf8QPtosukfkAbPtteLKM6O7J0DXvWKXk/r8uOo0WAJXdC/6d
ugHccVbpayX5RGzxzCSyZnSMlV8iOJDz3J69gOTDa7pZndNcPmIiV4hPjgJJ
bskRd8l/BedrXBQkOOMsv2oQv4QPsAQPzNhJ8LG4C8GkL2IiTq0848rH/k0p
eU1r+ZCO+LRRZQWNKbSKy+koDhYnxLun29Do7cozKDjMwWyFsmlL/p9n649N
jNZxEPRg6taWzTTeJIhQjiUczN1oKmBC+L8jM6Y284EJnjSt/OP3nkJs4HTe
w58mmCN391w8mVcBKlWVj3kcDAre3LN6Cg2JI/WhJww46BVsHT6yhvjN33Ul
YyEm8H9a9mI18bsni3r3W2eb4MjOAOmqZgryEbe4dXkm+BKsMy79gcw/7z7W
9W4THL6tpNhA/H2aervhvl0cGAnW9D1oojB1VbWQ/HkOkqVfV1XeoNBjo/TH
vogDi0NZzQ/HKEwIVa3484iDc1tPmVi6UKj4j6Lrjqf6e+PX3ntf69ozO+vi
8zYyioxURDIaKnxpSEuiREUqSslIKiSpVJLQ1jRaSFJGysje43d+fz6vc85z
nnWe5/3GdRUKRqfMmbA8cX7nLJm3qs5nFLtsmHg+dvbGV9Lf99Ja2zQCmeCu
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
D7KHU/o=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.5], Arrowheads[0.00692590432665045], 
         ArrowBox[CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
          "], 0.11338981485158617`]}, 
        {Hue[0.625, 0.5, 0.7], PointBox[CompressedData["
1:eJwl3FMQIDu3BtB/bNu2bdu2bVtnbNu2bdu2bdszd03dh1V5y0NXddKd7P0l
aNiuYtsA//vf/6pE+d///o0BCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZEz5
v6hEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOF
rGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUq/3um
VKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50
pRvd6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/r38AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWo
SS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGf4t3O9rTgY50ojNd6Eo3utOD
nvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvOHv/zb+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38f
/QEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y78f/gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85d9hXwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8u+gPwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+XfJF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//LvgD0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/hX3BCAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/wr7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf0W9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv4L+AAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlXzNPAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yr5EvAAEJRGCCEJRgBCcEIQlFaMIQlnCE
JwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQn
AxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
FalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd
6URnutCVbnSnBz3pRW/68B996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYw
kUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCR
TWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU98
5gtf+cZ3fvCTX/zmD3/518QbgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIy
UYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZ
yEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehK
N7rTg570ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4Wp
TGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1s
Yzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zj
Oje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7
P/jJL37zh7/8a+APQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJ
QUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clB
TnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFN
alGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU96
0Zs+/Edf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxk
FrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQX
u9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3
ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5
w1/+hXcEICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c
4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7y
ko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepS
j/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f/qMv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//gnsC
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/oV0BCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/wL4ABCQQgQlCUIIRnBCE
JBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQk
FalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2tGeDnSkE53pQle60Z0e9KQXvenDf/SlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje8
5R3v+cBHPvGZL3zlG9/5wU9+8Zs//OVfWGcAAhKIwAQhKMEITghCEorQhCEs
4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3p
SE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUo
TwUqUonKUf4/U/X/AGYyX5g=
          "]]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{381.93548387096774`, Automatic}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6981573292577677`*^9, 3.6981575443386173`*^9, 
  3.69815761745061*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
x+UWtdA+vdhr8NCQ5ExWjQgNoYn/muPUTWwMqNxV4dntO11jWnSF/mR9rYgi
bh4XJI6nsNz2YxILQOAFWcgI/rFEEfRgRRzvqFNkq5zDSNo2MS8iFS+Tns/3
a3v6tUuFACIjtc2/r0rt/ly0dExp94lAUbWJQRyZFt62DWx5MMu7jjsdhuIL
xrGAw5E5Q/Iw5UoHjcOU6XIOwn1yarxgXoRQEM4Z2HAIva+xKnAkMwrN2yZA
imVkVAwAL91ppZsnKBbTxP1Cawyy+eb51d/9b6tUBMpZOwwLLgXd62kTJR59
NVXWRsw2avJLbkQAxEKxmYycnUbnlKp3IPd06BJOBkv+dLw+GH8jp4RUbrHr
wwvAz1jhVG0wOncEjLDDM6EOBhRODRVd5m/rK0MyBO7Yr2zdhKb7yMNAr1LC
j5hXDRsVOx9m+FHvOF74hD5jzVnl4nmpb4v68+nUxVVIBngdKuVZ4jJCbOOk
QqeR+XfLMaxLicTIwvIZc/PwK1MFSZJsTnjG9t50jupV35ymeYu9BgSm99Qu
qOugX+IAX0XVijFZCYXBm1oSPzSdTV5R+cPIliOAKLq18I4qB/yThrDPz830
WfV0mvtqJANd/NuC7Dt/sEqDB/HnxtIRv4tNAnhAnft3eOoIojX8DBuxE5Ox
H0qdcsFEjurML7mOUeFd/LxVFvufyIekTUMnIXKmz+HK2WoVWHZpukfFMdeY
rp7InAGa/dK60apv/QHy2Td1QGNpuuJjIGHp/JfOy4FZ8n2GYY5TBJUl6dx6
dbonL+oz49KZn08tiLhnkvK+//s5KTjSVORySkKN2gtCbHCmyakbk2RhXpNI
64u/LyjaNdu35DlpjCf3y9Nx+qlkA39dMDYmKPA2Kki84RLReyA4VSjiCehC
CkMYk0537z1Cs2RgEt1ByfIwsxvZlpzzX3WJ6qF3oE1hrPzaHn2+sBjnaWC2
t4SmE3pwxjXacPGLRQVI8UOMmNH/17azZeoNAhwSFkYzr3NQ/OxvcdrJ0+e4
KQToar34jGibis/7hkoC4h475iu6x2jEzaj9F6dljDvyZB9+PSgE5RTESWJP
M6Q+7JvrV44AM75C4puAIosuQHKjy+xozDJyGMlrPECHfRL6lQOnJnEAI7dn
73Tvoqt/tc2UqEFZUV7VRl7ExTME6LmHyqVeWvm0ohFHZXhOe1VaySgOAlGU
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
0+3qbpDGRrG+EGq0hcYTlBEYBoolo+DPG0CngwUob1qAV3jGEMyAB0VFGSwE
UDHhAT2kTIY5qEAlG5OA+lPDq7XKvwywson4feOqOtxiVoNxR6puHIzIy7z0
1V2cjoLz9r5/+DvGHYWyJhweVz28recwUuqsV0ZUS/INIai1jTXXhQPTtFKo
xKLEQF9PxLZ0TS5QKkLr59k0eqUClg7JUndA8dr0/J3oEL/0kVv6g3FhNbLZ
h8ozLBQmIJrNREk66sd/DXPfIBnS22NSupvmc2JylNNc/avb4rKUXMVFEwQI
mXnlB3pEsgg2762hU/JfjeFj3e+7RcraBNH7m595Z6P3L3F1zT5QbNhE6rkd
LApUaZYWdQGSJwEmMsxnEwYaiSR5eixVLVN75U0V1qzGQao3IuhSfBfvOxhH
Spmf0wZbwJhDy74lAxmohbT+meFqyaYCLAyAW5CBmvUmBv19uOfwhXOC9RVh
CmlMIa6hLiFTFmeMKxAyHRkkUhV1k2eXIDFgJnKVatwkWUrZNTU8a6VVJWIV
XeiqUJZLq01QdgRVApmMgHMflkZd4nI2iAD9F5Lt3Ms7zWrRAfydv87oq3fG
Gy6TldRXU6biNUbpL9oP9dc0qU+8aHJWzPRdZ8x0ODMpFqNGlr/8xZDZD38z
PBEeKx4/wndnWRmawkXT66owxrJ0EAUFoOipNHxI5/ZjdCtkX0idh2qv0G1d
YgsYU8oBKJMLy8UQcbyNGUhIZxKHInlXVLEHDLMYwi8MYY0wJb2Ps+E4wgon
8dTjn1D3bfvmo5JR5mCeuCZTgWGHY8+CARd7dNncrJYr48IrSW1l5lbst20R
C6m/PjGi5snXk9fIcKWcsWTY9VOUtKokid7xXQMwpkEkDiCd7fCbWXo4zAgi
ShkuVk96/T2XBcu0fYe7uDc+TPBN9X8yPrQeY+HBeHryc99lF7yns4s/FpLY
id3saJz10hTOlKMPrnUxtAdpFcwgp2dHz0BciV4lC0atkqi0+jvaFb36wodN
b8DYFPD14eqyY9Nr7w3H6CojKazEx+wNcUbhZBqMbPgQanmFJJT09qU7qnxl
EBUqn9Ih+Lw8X1lQI+GsSIgS/ZAlIH9lhAPMBYdsrgwkv7BcYHCiZkhCnE0q
Q1J8LLyNY4ARMjtucd3Z8eH6/FXMJjIJAKdrvnGtJ1zDSm6857Lw8bsj57/4
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
xP5dvWqWxRLHjNKr7O645XX83b5jF+v8kzb1xWX1yQsiSrkk9ymFtQehNhZr
Gg9XxvedAbrJA4Zjjt62/KjMemi7zVMiC1DAx2BaPv3MATxq5rUQOzNiV9TS
zV3TY4rO/3V61pYpkYWtibzZF4kZ0A/QOnBeWWPXdadSon2RTmendDJ110E5
btJ4HaOh64Lfoi6zZ0HIYdw0MfbLAY4sa8G8LtcID7AmZEktkuXgEkCs1RCT
2faYDa4wkmLnp0RUg0IF1XQqvofk12zDQkIzIrsg+AMoPqC5XdgeNKO/odop
/fB7hDbu8AwvvPvxrDwUDqnBQsILGojUtzFo/eXoeeVkkiAK5pgPTYzgqZBV
E/TDi/H+VVYC/UPVGDD1KUVlegOjo2Hh9BymWAqafU1DHDmViM1IHqAab08N
rx+09O9vfJweK6lnS0+F2KlXza7o39X4kp03F8PG606jSHtsSlu3Tb48tir8
9T9EzzXEfE/IEoX6H8H96aAkmmDNVAX46dBUDHej2i+xAtlgFtYdPskIoJCR
F6TmSO6vjc9puTc+oNx0wth0S30lxAlR5Pu1XDwcrKaoGBxxkDz5GogEyOD9
GoIt2WpioGwWkLj/VgtsdFsl7N7XXnHNq5NWdTR6xZeirClVETTJrl+5MKcZ
xLlctlivLyAwsGyrF2Q3MQyjg7GrUElGhtmA00h0U07fTQqsvDsxoMJsiVnL
n3ByaO6L2czIu+7f2nfOsP221tU9ROmJZzerLZyIvqhoJ2Xl1VS3ODl6gGL4
hqxDhWJMiP3fyzrPuOjBZjkou81Pz3CFVld7RB8b/lolqpCsk/7ynxnnXs/G
DLe4I2GdzAcclATQFWK0AsJX3GB3TKZ55LuEuuOaHQ4Pc6bdQmryEla2F2re
IBJ9nnXdB3926vwNKfRShBEoCulzdSTBNe/YdpucpoMqSoNyoIt0vmjyNw/K
Yov+lm2QBMCEddTDMNw4+2DUoED+yoyohrsTAytkbfhgSljjtJrOA1IkpLQH
nfRd1FYVmlaH4q2T4cRxDLCOXHGW/Vm6FKmLiSaHyGagPXn1Dn0JVcAKRB11
mBfj/WRuWlNlMkjh7dYFUwi0woZiwryyx8TdKBhz4b2aBxkKkvaEoroDDzzC
5N1nX/1Qc0nZLvJgaDjVKaiLQ+4sklMOVhZFnAedW0s6D0pynT9mg506Ny2y
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
\
\>"]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Vertex=\"\>", "\[InvisibleSpace]", "5461"}],
  SequenceForm["Number of Vertex=", 5461],
  Editable->False]], "Print",
 CellChangeTimes->{3.6981573292577677`*^9, 3.6981575456895137`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Number", " ", "of", " ", "nodes", " ", "on", " ", "IBP", " ", "tree"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NumberOfIBPVertex", "[", 
      RowBox[{"numberOfAtoms_", ",", "numberOfSlices_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "numberOfSlices"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"numberOfAtoms", "-", "2"}], ")"}]}], "-", "1"}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "numberOfSlices"}], ")"}], "-", "1"}], ")"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"NumberOfIBPVertex", "[", 
    RowBox[{"9", ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6978228548611045`*^9, 3.697822917604511*^9}, {
  3.6978229575375485`*^9, 3.6978231634677305`*^9}, {3.6978236566561227`*^9, 
  3.697823659776985*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NumberOfIBPVertex", "[", 
        RowBox[{"9", ",", "i"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Number of Vertex on IBP Tree\>\""}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.697823173590905*^9, 3.6978232361668634`*^9}, {
  3.697823267024607*^9, 3.6978232863122206`*^9}, {3.697823356320365*^9, 
  3.6978234212662773`*^9}, {3.697823707493438*^9, 3.697823746026819*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Top", " ", "1"}], ":", " ", 
    RowBox[{
    "Sunway", " ", "TaihuLight", " ", "at", " ", "93", " ", "petaflops", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "^", "15"}], " ", "flops"}], ")"}], " ", "on", " ", 
     "November", " ", "2016"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"NumberOfIBPVertex", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"365", "*", "24", "*", "3600", "*", 
            RowBox[{"(", 
             RowBox[{"93", "*", 
              RowBox[{"10", "^", "15"}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "40"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"xy", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Time to compute IBP tree on 93 petaflops\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Number of Atoms\>\"", ",", "\"\<Years\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697823996331522*^9, 3.697824013870758*^9}, {
  3.69782413901967*^9, 3.6978242355134754`*^9}, {3.697824272133033*^9, 
  3.6978242812725134`*^9}, {3.6978243603271613`*^9, 3.6978243609971724`*^9}, {
  3.697824393211303*^9, 3.6978244203256054`*^9}, {3.697824458619769*^9, 
  3.697824517973592*^9}, {3.6978245542102156`*^9, 3.697824700730853*^9}, {
  3.698157868126751*^9, 3.698157870975642*^9}, {3.6981579468509655`*^9, 
  3.6981579486031284`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GASolver", "Section",
 CellChangeTimes->{{3.6811203277692585`*^9, 3.681120330322966*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6811203529955482`*^9, 3.6811203596894712`*^9}}],

Cell[CellGroupData[{

Cell["GASolver", "Subsubsection",
 CellChangeTimes->{{3.681130895375606*^9, 3.681130897976305*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "GASolver", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GANextBasis", "[", 
     RowBox[{"G_", ",", "F_", ",", "U_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "u", ",", "P", ",", "basis"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "U", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{"U", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"P", "=", 
           RowBox[{"Intersection", "[", 
            RowBox[{
             RowBox[{"AdjacencyList", "[", 
              RowBox[{"G", ",", "u"}], "]"}], ",", "F"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "P", "]"}], "\[GreaterEqual]", "4"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"basis", "=", 
              RowBox[{"Take", "[", 
               RowBox[{"P", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", "basis", "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", "\"\<BasisCouldNotBeFound\>\"", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GASetPosition", "[", 
     RowBox[{"G_", ",", "X_", ",", "S_", ",", "basis_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "d", ",", "r", ",", "w", ",", "A", ",", "B", ",", "C", ",", 
        "D", ",", "x", ",", "y", ",", "z", ",", "s", ",", "u", ",", "Y"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Y", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "S", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"get", " ", "basis", " ", "coords"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z", ",", "s"}], "}"}], "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"basis", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "S", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{"S", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"get", " ", "distances"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"GetEdgeWeight", "[", 
              RowBox[{"G", ",", 
               RowBox[{"u", "\[Rule]", 
                RowBox[{"basis", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"get", " ", "factors"}], " ", "*)"}], " ", 
          "\[IndentingNewLine]", 
          RowBox[{"w", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "-", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], ",", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "-", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], ",", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"z", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "-", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ",", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "^", "2"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "-", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "^", "2"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"A", "=", 
           RowBox[{"0.5", "*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"y", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"z", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"B", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"z", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"C", "=", 
           RowBox[{"0.5", "*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "-", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"z", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"D", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{"0.5", "*", 
               RowBox[{"B", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"w", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{"0.5", "*", 
               RowBox[{"B", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"w", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"s", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{"0.5", "*", 
               RowBox[{"B", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"w", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Dot", "[", 
                RowBox[{"A", ",", "s"}], "]"}]}], "+", 
              RowBox[{"0.5", "*", "d", "*", 
               RowBox[{"w", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Dot", "[", 
                RowBox[{"B", ",", "s"}], "]"}]}], "+", "d"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "/", 
            RowBox[{"D", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Y", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GASolver", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "d", ",", "x", ",", "y", ",", "z", ",", "r", ",", "s", ",", 
       "u", ",", "w", ",", "basis", ",", "A", ",", "B", ",", "C", ",", "D", 
       ",", "F", ",", "S", ",", "X", ",", "U"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"X", ",", "F"}], "}"}], "=", 
       RowBox[{"BuildUpInitX", "[", 
        RowBox[{"G", ",", "verbose"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"U", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}], 
         ",", "F"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"set", " ", "the", " ", "remaining", " ", "atoms"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "U", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"basis", "=", 
          RowBox[{"GANextBasis", "[", 
           RowBox[{"G", ",", "F", ",", "U", ",", "verbose"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "find", " ", "atoms", " ", "to", " ", "set", " ", "position"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"S", "=", 
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"AdjacencyList", "[", 
             RowBox[{"G", ",", 
              RowBox[{"basis", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "U"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"S", "=", 
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"AdjacencyList", "[", 
             RowBox[{"G", ",", 
              RowBox[{"basis", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "S"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"S", "=", 
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"AdjacencyList", "[", 
             RowBox[{"G", ",", 
              RowBox[{"basis", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "S"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"S", "=", 
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"AdjacencyList", "[", 
             RowBox[{"G", ",", 
              RowBox[{"basis", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", "S"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<F=\>\"", ",", "F", ",", "\"\< U=\>\"", ",", "U", ",", 
             "\"\< basis=\>\"", ",", "basis", ",", "\"\< S=\>\"", ",", "S"}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "S", "]"}], "]"}], "=", 
          RowBox[{"GASetPosition", "[", 
           RowBox[{"G", ",", "X", ",", "S", ",", "basis"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"F", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"F", ",", "S"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"U", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"U", ",", "S"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6811309036956406`*^9, 3.681130906662017*^9}, {
   3.6811326106758246`*^9, 3.6811326182755585`*^9}, {3.6811326608445787`*^9, 
   3.681132667494706*^9}, 3.681132790556154*^9, {3.6811348971520386`*^9, 
   3.681134933680307*^9}, {3.6811349842965508`*^9, 3.6811349927972374`*^9}, {
   3.6811350792596626`*^9, 3.681135102779213*^9}, {3.6811351811048417`*^9, 
   3.681135222058572*^9}, {3.6811352894743447`*^9, 3.6811355290295305`*^9}, {
   3.6811355649797287`*^9, 3.681135583486353*^9}, {3.6811356619102936`*^9, 
   3.681136061616135*^9}, 3.6811362440094643`*^9, {3.681136309122642*^9, 
   3.681136311545313*^9}, {3.681136354873017*^9, 3.6811363554166436`*^9}, {
   3.6811364078501635`*^9, 3.6811365254862614`*^9}, {3.6811365959324903`*^9, 
   3.681136696547014*^9}, {3.6811367378252068`*^9, 3.6811367419892883`*^9}, {
   3.6811377950084248`*^9, 3.681137990906658*^9}, {3.681138030736383*^9, 
   3.6811380979072227`*^9}, {3.6811381373662457`*^9, 3.68113831104065*^9}, 
   3.681138353756702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GASolver2 (Not working)", "Subsubsection",
 CellChangeTimes->{{3.681130854243985*^9, 3.681130870964182*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"GASolver2", "[", "G_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "d", ",", "x", ",", "y", ",", "z", ",", "s", ",", 
        "numberOfAtoms", ",", "A", ",", "C", ",", "B", ",", "D", ",", "Y", 
        ",", "M", ",", "X", ",", "S", ",", "U2", ",", "U3", ",", "U4", ",", 
        "V3", ",", "V4"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "first", " ", "four", " ", "atoms"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{"GetEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"1", "\[Rule]", "2"}]}], "]"}]}], ";", 
       RowBox[{"U2", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"3", "\[Rule]", "1"}]}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"3", "\[Rule]", "2"}]}], "]"}], "^", "2"}], "+", 
           RowBox[{"U2", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "U2"}], ")"}]}]}], ";", 
       RowBox[{"U3", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GetEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"3", "\[Rule]", "1"}]}], "]"}], "^", "2"}], "-", 
          RowBox[{"U3", "^", "2"}]}], "]"}]}], ";", 
       RowBox[{"V3", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"4", "\[Rule]", "1"}]}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"4", "\[Rule]", "2"}]}], "]"}], "^", "2"}], "+", 
           RowBox[{"U2", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "U2"}], ")"}]}]}], ";", 
       RowBox[{"U4", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"4", "\[Rule]", "2"}]}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"GetEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{"4", "\[Rule]", "3"}]}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"U4", "-", "U2"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"U4", "-", "U3"}], ")"}], "^", "2"}], "+", 
           RowBox[{"V3", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "V3"}], ")"}]}]}], ";", 
       RowBox[{"V4", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GetEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"4", "\[Rule]", "1"}]}], "]"}], "^", "2"}], "-", 
          RowBox[{"U4", "^", "2"}], "-", 
          RowBox[{"V4", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "the", " ", "remaining", " ", "atoms"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "5"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"P", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"AdjacencyList", "[", 
              RowBox[{"G", ",", "i"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "<", "i"}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "P", "]"}], "<", "4"}], ",", 
            RowBox[{"Throw", "[", "\"\<NotEnoughAdjacentNodes\>\"", "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"P", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"S", "=", 
           RowBox[{"Y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"squared", " ", "distances"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"z", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], "^", "2"}], "-", 
              RowBox[{
               RowBox[{"GetEdgeWeight", "[", 
                RowBox[{"G", ",", 
                 RowBox[{"i", "\[Rule]", 
                  RowBox[{"P", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], "^", "2"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"M", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cross", "[", 
               RowBox[{
                RowBox[{"Y", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"Cross", "[", 
               RowBox[{
                RowBox[{"Y", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"Cross", "[", 
               RowBox[{
                RowBox[{"Y", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"A", "=", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{"M", ".", 
              RowBox[{"z", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"B", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"M", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "j"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "3"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"C", "=", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "-", 
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], ".", 
              RowBox[{"z", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"d", " ", "=", 
           RowBox[{"Det", "[", 
            RowBox[{"Y", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Det(A)=\>\"", ",", "d"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"D", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"z", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "2"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"z", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "2"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"C", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"S", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"z", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "2"}]}], "+", 
              RowBox[{"A", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Dot", "[", 
                RowBox[{"A", ",", "S"}], "]"}]}], "+", 
              RowBox[{"d", "*", 
               RowBox[{
                RowBox[{"z", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "/", "2"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Dot", "[", 
                RowBox[{"B", ",", "S"}], "]"}]}], "+", "d"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "/", 
            RowBox[{"D", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.681130775574441*^9, 3.681130780520343*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6811325368290606`*^9, 3.6811325496242456`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"GenerateRandomMDG", "[", 
    RowBox[{"150", ",", "5", ",", "\"\<DistanceMatrix\>\"", ",", "0"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"M", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"GASolver", "[", 
    RowBox[{"G", ",", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<LDME=\>\"", ",", 
   RowBox[{"LDME", "[", 
    RowBox[{"G", ",", "S"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.681132585671668*^9, 3.6811326017862873`*^9}, {
   3.681132697205409*^9, 3.6811327714843345`*^9}, {3.681134728514855*^9, 
   3.6811347327051363`*^9}, {3.6811348419605255`*^9, 3.681134870132739*^9}, {
   3.681134938427829*^9, 3.681134938496883*^9}, {3.6811368475243416`*^9, 
   3.68113689600677*^9}, {3.6815665994763823`*^9, 3.6815666147680187`*^9}, {
   3.681567257619912*^9, 3.681567271946435*^9}, {3.6815681038222165`*^9, 
   3.6815681053415165`*^9}, {3.6815696913741565`*^9, 3.6815697265790234`*^9}, 
   3.682752354771577*^9, 3.68275737795257*^9, 3.6980724813602633`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparisons", "Section",
 CellChangeTimes->{{3.681569813484808*^9, 3.681569816344872*^9}}],

Cell[CellGroupData[{

Cell["Speed", "Subsection",
 CellChangeTimes->{{3.6815698264989896`*^9, 3.68156984638715*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"GenerateRandomMDG", "[", 
    RowBox[{"350", ",", "5", ",", "\"\<DistanceMatrix\>\"", ",", "0"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<GA      = \>\"", ",", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"S", "=", 
      RowBox[{"GASolver", "[", 
       RowBox[{"G", ",", "False"}], "]"}]}], ";"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<BuildUp = \>\"", ",", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Y", "=", 
      RowBox[{"BuildUpSolver", "[", 
       RowBox[{"G", ",", "False"}], "]"}]}], ";"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<LDME(GA)      = \>\"", ",", 
   RowBox[{"LDME", "[", 
    RowBox[{"G", ",", "S"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<LDME(BuildUp) = \>\"", ",", 
   RowBox[{"LDME", "[", 
    RowBox[{"G", ",", "Y"}], "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6815698480721264`*^9, 3.6815700048257246`*^9}, {
   3.6815700435273275`*^9, 3.681570079052247*^9}, {3.681570156011415*^9, 
   3.681570156787325*^9}, {3.681570210274677*^9, 3.681570210412711*^9}, {
   3.6815702446462665`*^9, 3.6815702520650797`*^9}, {3.681570284928616*^9, 
   3.681570304578995*^9}, 3.6827523547930994`*^9, 3.68275737795257*^9, 
   3.69807248137027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Robustness", "Subsection",
 CellChangeTimes->{{3.6811369593317337`*^9, 3.681136962953414*^9}, 
   3.6815697884056425`*^9, 3.6815698199673333`*^9}],

Cell[CellGroupData[{

Cell["Example: Colinear Points", "Subsubsection",
 CellChangeTimes->{{3.681575755660693*^9, 3.681575771130968*^9}, {
  3.6815759375107937`*^9, 3.6815759504074736`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"(", "i", ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"a", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"b", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"Length", "[", "z", "]"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", 
           RowBox[{"1", "/", 
            RowBox[{"z", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"build", " ", "graph"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"weights", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "4"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", "4"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"edges", ",", 
              RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"weights", ",", 
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{"X", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"G", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"EdgeWeight", "\[Rule]", "weights"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Z", "=", 
       RowBox[{"BPGetNodePosition", "[", 
        RowBox[{"G", ",", "X", ",", "4", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<k= \>\"", ",", "k", ",", "\"\<  Log10[E]= \>\"", ",", " ", 
        RowBox[{"Log10", "[", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "-", "Z"}], "]"}], "]"}]}], " ", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ7SfbqmOW+9qx6ckcExDdPWerD4iOLm3xA9Fefcei
QTRLmFIMiGZTtE0E0frR01pB9KriuZ0g+kCJfzeIVudQ5TIH0skhYWog+txT
XiMQzdop7QWi7xrtDADRZmZ/wkE0k0R0A4je87QJTF+aJNwKopM+SIHpGP99
PSC6XCawF0TvM+5PsATSj27KpIDoVQfEMkH0le6abBB9ky+qhSfvteN0Z6Ep
IHq1RudsEL3r8vdVIFpg47V1ILpH8AuYPnT7ZJ4OkN6j/KcYRJ/q8KgG0R0b
NOtA9ItO4WkgWlHbcjqInuGzfQuIdtl7fDeIPj7zcKUxkM6IVKwB0R2R8w6Y
AekqprTDINpXu/MEiN7U1gumS36kl/kUvHYUsWAoB9EAGS2xGA==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example B", "Subsubsection",
 CellChangeTimes->{{3.6815757784336452`*^9, 3.6815757805693655`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "i"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", 
     RowBox[{"Length", "[", "z", "]"}]}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"X", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"z", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5", ",", "1"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"build", " ", "graph"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "5"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"i", "+", "1"}]}], ",", 
          RowBox[{"j", "\[LessEqual]", "5"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"weights", ",", 
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"X", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"X", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"G", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"EdgeWeight", "\[Rule]", "weights"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{"{", "5", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "=", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "S", "]"}], "]"}], "-", 
        RowBox[{"BuildUpSetPosition", "[", 
         RowBox[{"G", ",", "X", ",", "S", ",", "basis"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "=", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "S", "]"}], "]"}], "-", 
        RowBox[{"GASetPosition", "[", 
         RowBox[{"G", ",", "X", ",", "S", ",", "basis"}], "]"}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6815757863621497`*^9, 3.6815759019046144`*^9}, 
   3.681575932212285*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Articles: ", "Section",
 CellChangeTimes->{{3.681569813484808*^9, 3.681569816344872*^9}, {
   3.6830321679776583`*^9, 3.6830321725073566`*^9}, {3.6950518168642263`*^9, 
   3.6950518230488887`*^9}, {3.695718544230457*^9, 3.6957185487638164`*^9}, 
   3.6957185793601875`*^9}],

Cell[CellGroupData[{

Cell["MMAS' 17", "Subsection",
 CellChangeTimes->{{3.695718588561105*^9, 3.6957185934945707`*^9}}],

Cell[CellGroupData[{

Cell["Problem", "Subsubsection",
 CellChangeTimes->{{3.683032240630539*^9, 3.683032245583842*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vertices", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}],
    ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "edges"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "3"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "vertices", "]"}], "-", "j"}], ")"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "j"}], ")"}]}]}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"extra", " ", "distances"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "graph"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"Graph", "[", 
     RowBox[{"vertices", ",", "edges"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "edges", " ", "values"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", "=", "1"}], ",", 
   RowBox[{"k", "\[LessEqual]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "vertices", "]"}], "-", "1"}], ")"}]}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}]}], "}"}], ",", "EdgeWeight"}], 
      "]"}], "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}]}], "}"}], ",", 
       "\"\<DistanceBounds\>\""}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", "=", "1"}], ",", 
   RowBox[{"k", "\[LessEqual]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "vertices", "]"}], "-", "2"}], ")"}]}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "2"}], ")"}]}]}], "}"}], ",", "EdgeWeight"}], 
      "]"}], "=", 
     RowBox[{"Sqrt", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "2"}], ")"}]}]}], "}"}], ",", 
       "\"\<DistanceBounds\>\""}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", "3", "]"}], ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "2.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.15", ",", "2.15"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.45", ",", "2.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.2", ",", "2.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.4", ",", "2.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<G=\>\"", ",", "G"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<EdgesList[G]=\>\"", ",", 
   RowBox[{"EdgeList", "[", "G", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6830327705159297`*^9, {3.683032825412712*^9, 3.683032825841506*^9}, {
   3.6833897373710327`*^9, 3.6833897383116617`*^9}, 3.6833898066456614`*^9, {
   3.6950519461372876`*^9, 3.695051971253236*^9}, {3.695054339359205*^9, 
   3.695054374964918*^9}, {3.6950544382550755`*^9, 3.695054471742462*^9}, {
   3.695054520813548*^9, 3.695054543675331*^9}, {3.6950545886517105`*^9, 
   3.6950545996175528`*^9}, {3.6950546478888445`*^9, 3.695054668863003*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Getting Reference Solution", "Subsubsection",
 CellChangeTimes->{{3.683032240630539*^9, 3.683032268346609*^9}, {
  3.6950524843359594`*^9, 3.695052487617569*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGApplyRotors", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGApplyRotors", "[", 
     RowBox[{"X_", ",", "\[Omega]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "Y"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Y", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "X", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "i"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "X", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Y", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"RotationTransform", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Y", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"Y", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "2"}], "]"}], "]"}]}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"Y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Y", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Create", " ", "BP", " ", "instance", " ", "by", " ", "removing", " ", 
     "the", " ", "edge", " ", "1"}], "\[UndirectedEdge]", 
    RowBox[{
    "5", " ", "and", " ", "choosing", " ", "the", " ", "lower", " ", 
     "bounds"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EdgeDelete", "[", 
    RowBox[{"G", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      "\"\<DistanceBounds\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", ",", 
        RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      "\"\<DistanceBounds\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<H=\>\"", ",", "H"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<EdgesList[H]=\>\"", ",", 
    RowBox[{"EdgeList", "[", "H", "]"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "solving", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"BPSolver", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XL", "=", 
   RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BL", "=", 
   RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6830323369314127`*^9, 3.6830323752327642`*^9}, {
   3.6830324064069014`*^9, 3.683032518447234*^9}, {3.6830330028395824`*^9, 
   3.683033003422675*^9}, {3.6830337363905363`*^9, 3.6830337369824314`*^9}, {
   3.695052527876314*^9, 3.695052657252447*^9}, {3.695052770792269*^9, 
   3.6950527768632755`*^9}, {3.695053260248283*^9, 3.6950532803955593`*^9}, {
   3.6950551430748186`*^9, 3.6950552071468477`*^9}, 3.695055263405859*^9, {
   3.6950555806726036`*^9, 3.69505568640932*^9}, {3.69505743477678*^9, 
   3.695057479245922*^9}, {3.6950575813323817`*^9, 3.695057623299964*^9}, {
   3.6950576823027267`*^9, 3.6950577531837635`*^9}, {3.695057799076247*^9, 
   3.695057807915103*^9}, {3.698067582510762*^9, 3.6980676073652587`*^9}, {
   3.6980724813907833`*^9, 3.698072481402791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "BP", " ", "instance", " ", "from", " ", "H", " ", "and", 
    " ", "choosing", " ", "the", " ", "upper", " ", "bounds"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"H", ",", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
       "EdgeWeight"}], "]"}], "=", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H", ",", 
          RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
        "\"\<DistanceBounds\>\""}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"H", ",", 
         RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
       "EdgeWeight"}], "]"}], "=", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H", ",", 
          RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
        "\"\<DistanceBounds\>\""}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "solving", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S", ",", "work"}], "}"}], "=", 
     RowBox[{"BPSolver", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XU", "=", 
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BU", "=", 
     RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.695057056090493*^9, 3.69505705754543*^9}, {
  3.6950571272277336`*^9, 3.695057219509966*^9}, {3.6950574882308807`*^9, 
  3.6950574997439814`*^9}, {3.6950576362600946`*^9, 3.6950576415895653`*^9}, {
  3.695057787475413*^9, 3.695057850965598*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "XL", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"XL", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"BL", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6950579175660443`*^9, 3.6950579558232527`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "XU", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"XU", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"BU", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.695058027324939*^9, {3.6950581001956034`*^9, 3.6950581040611625`*^9}}],

Cell[BoxData[
 RowBox[{"\[Omega]0", "=", 
  RowBox[{"DGCalculateTorsionAngles", "[", 
   RowBox[{"XL", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6950541262807856`*^9, 3.695054186192066*^9}, {
   3.6950559450171585`*^9, 3.6950559471075864`*^9}, {3.6950559775138326`*^9, 
   3.6950559821965356`*^9}, 3.6950576634842234`*^9, {3.695057872082612*^9, 
   3.6950578791489077`*^9}, 3.695058330038464*^9, {3.695058909831279*^9, 
   3.6950589178761344`*^9}, {3.6980676263249917`*^9, 3.6980676267762733`*^9}, 
   3.6980724814153*^9}],

Cell[BoxData[
 RowBox[{"DGCalculateTorsionAngles", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         RowBox[{"-", "0.19160809959361638`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",", 
         RowBox[{"-", "0.1940650449558058`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         RowBox[{"-", "0.5650653124835617`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",",
          "0.41921898553883463`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", "0.2961851299103264`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",",
          "0.560268355330575`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         "0.19160809959361638`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",",
          "0.1940650449558058`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         "0.5650653124835617`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",", 
         RowBox[{"-", "0.41921898553883463`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", 
         RowBox[{"-", "0.2961851299103264`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",", 
         RowBox[{"-", "0.560268355330575`"}]}], "}"}]}], "}"}]}], "}"}], 
   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6980724814333115`*^9, 3.698072481496353*^9}}],

Cell[BoxData[
 RowBox[{"\[Omega]1", "=", 
  RowBox[{"DGCalculateTorsionAngles", "[", 
   RowBox[{"XU", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6950583416494923`*^9, {3.6950589254273415`*^9, 3.695058930410454*^9}, {
   3.6980676314404917`*^9, 3.698067631852744*^9}, 3.6980724815043592`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6950589530100813`*^9, 3.6950590657287765`*^9}, {
   3.6950592779488635`*^9, 3.6950592784443636`*^9}, {3.695059459889648*^9, 
   3.695059460153572*^9}, 3.695061808122598*^9, 3.6950619070409408`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"XL", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Y", "=", 
  RowBox[{"DGApplyRotors", "[", 
   RowBox[{"X", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56", ",", "0"}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DistanceMatrix", "[", "X", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DistanceMatrix", "[", "Y", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]5", "=", 
   RowBox[{"{", 
    RowBox[{"0.56", ",", "0.62", ",", "0.733"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DGApplyRotors", "[", 
      RowBox[{"X", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{"\[Omega]5", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "\[Omega]5", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"DGApplyRotors", "[", 
    RowBox[{"X", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.68", ",", "0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".025", "]"}], ",", "LightGray", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"figs", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", "Z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".025", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", "Z", "]"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"figs", ",", " ", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.695059069380664*^9, 3.695059079218292*^9}, {
   3.695059165067521*^9, 3.6950591683089304`*^9}, {3.6950594704683523`*^9, 
   3.695059490913286*^9}, {3.6950595327211742`*^9, 3.695059557567137*^9}, {
   3.6950595935692854`*^9, 3.695059596442844*^9}, {3.695059903701016*^9, 
   3.695059910940896*^9}, {3.695059964986123*^9, 3.695059966233364*^9}, {
   3.69506056720686*^9, 3.6950606298272543`*^9}, 3.6950608355869904`*^9, {
   3.6950614559913406`*^9, 3.695061460562259*^9}, {3.695061910985814*^9, 
   3.69506193350578*^9}, {3.6950620351205225`*^9, 3.6950620425233655`*^9}, {
   3.695062075629792*^9, 3.6950620811496515`*^9}, {3.695062126537776*^9, 
   3.695062146555786*^9}, {3.6950623484888964`*^9, 3.695062356687842*^9}, {
   3.698067638576352*^9, 3.698067648133065*^9}, {3.6980724815188675`*^9, 
   3.6980724815323763`*^9}}],

Cell[BoxData[
 RowBox[{"DGApplyRotors", "[", 
  RowBox[{
   RowBox[{"XL", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56`", ",", "0"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6980724815413823`*^9, 3.698072481559395*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"DistanceMatrix", "[", 
   RowBox[{"DGApplyRotors", "[", 
    RowBox[{
     RowBox[{"XL", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56`", ",", "0"}], 
      "}"}]}], "]"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.6980724815678997`*^9, 3.698072481587913*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6950599702795286`*^9, 3.6950599865026665`*^9}, {
   3.695060028731949*^9, 3.695060031712731*^9}, {3.695060890252981*^9, 
   3.6950608964950476`*^9}, {3.6950610532620497`*^9, 3.695061053338114*^9}, {
   3.6950611685828285`*^9, 3.695061170026735*^9}, 3.6950619146793003`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]6", "=", 
   RowBox[{"{", 
    RowBox[{"0.56", ",", "0.62", ",", "0.68", ",", "0.733"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ApplyRotors", "[", 
      RowBox[{"X", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.68", ",", 
         RowBox[{"\[Omega]6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "\[Omega]6", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"figs", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", ".025", "]"}], ",", "LightGray", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"Y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"figs", ",", " ", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.695061500319137*^9, 3.6950615551899457`*^9}, {
   3.6950616344677877`*^9, 3.695061662826518*^9}, {3.695061824960895*^9, 
   3.6950618250694942`*^9}, 3.695061897375805*^9, 3.69506196754156*^9, {
   3.6950620167280955`*^9, 3.6950620295541925`*^9}, {3.69506215795319*^9, 
   3.695062162916585*^9}, {3.6950625666231346`*^9, 3.6950626238052263`*^9}, {
   3.6950628167809553`*^9, 3.6950628180579033`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8116033137690675, 1.5427066755333547`, 
        2.360766275813594}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8116033137690675, 
        1.5427066755333547`, 2.360766275813594}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8116033137690675, 1.5427066755333547`, 
         2.360766275813594}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8116033137690675, 
         1.5427066755333547`, 2.360766275813594}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8325743899998022, 1.5898872789129277`, 
        2.3665450926178595`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8325743899998022, 
        1.5898872789129277`, 2.3665450926178595`}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8325743899998022, 1.5898872789129277`, 
         2.3665450926178595`}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8325743899998022, 
         1.5898872789129277`, 2.3665450926178595`}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8562956528844772, 1.635840898683012, 
        2.3715206945287646`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8562956528844772, 
        1.635840898683012, 2.3715206945287646`}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8562956528844772, 1.635840898683012, 
         2.3715206945287646`}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8562956528844772, 
         1.635840898683012, 2.3715206945287646`}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8794690305440742, 1.6752803202112725`, 
        2.375233306610885}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8794690305440742, 
        1.6752803202112725`, 2.375233306610885}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8794690305440742, 1.6752803202112725`, 
         2.375233306610885}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8794690305440742, 
         1.6752803202112725`, 2.375233306610885}}]]}}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.9343460610311477, 1.273330916304608, 
       1.5856033049914173`}, {0.044173487394552506`, 1.373500947181597, 
       1.765785041753762}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.9343460610311477, 
       1.273330916304608, 1.5856033049914173`}, {0.044173487394552506`, 
       1.373500947181597, 1.765785041753762}}]], 
    {GrayLevel[0], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.9343460610311477, 1.273330916304608, 
        1.5856033049914173`}, {0.044173487394552506`, 1.373500947181597, 
        1.765785041753762}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.9343460610311477, 
        1.273330916304608, 1.5856033049914173`}, {0.044173487394552506`, 
        1.373500947181597, 1.765785041753762}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-1.0324059357654696`, 1.2660712072358646`, 
       1.619048839977824}, {-0.06678889023882852, 1.2891909663806485`, 
       1.877987439119232}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-1.0324059357654696`, 
       1.2660712072358646`, 1.619048839977824}, {-0.06678889023882852, 
       1.2891909663806485`, 1.877987439119232}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.0324059357654696`, 1.2660712072358646`, 
        1.619048839977824}, {-0.06678889023882852, 1.2891909663806485`, 
        1.877987439119232}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.0324059357654696`, 
        1.2660712072358646`, 1.619048839977824}, {-0.06678889023882852, 
        1.2891909663806485`, 1.877987439119232}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.9829550688237976, 1.2685729079270271`, 
       1.6033153295760538`}, {-0.009263719422088758, 1.3298587788415488`, 
       1.8227901530213768`}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.9829550688237976, 
       1.2685729079270271`, 1.6033153295760538`}, {-0.009263719422088758, 
       1.3298587788415488`, 1.8227901530213768`}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.9829550688237976, 1.2685729079270271`, 
        1.6033153295760538`}, {-0.009263719422088758, 1.3298587788415488`, 
        1.8227901530213768`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.9829550688237976, 
        1.2685729079270271`, 1.6033153295760538`}, {-0.009263719422088758, 
        1.3298587788415488`, 1.8227901530213768`}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.892248306411026, 1.2793971316347617`, 
       1.5683627429755442`}, {0.0878218578058983, 1.4144002879050193`, 
       1.7140906435598429`}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.892248306411026, 
       1.2793971316347617`, 1.5683627429755442`}, {0.0878218578058983, 
       1.4144002879050193`, 1.7140906435598429`}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.892248306411026, 1.2793971316347617`, 
        1.5683627429755442`}, {0.0878218578058983, 1.4144002879050193`, 
        1.7140906435598429`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.892248306411026, 
        1.2793971316347617`, 1.5683627429755442`}, {0.0878218578058983, 
        1.4144002879050193`, 1.7140906435598429`}}]]}}},
  Axes->False,
  ImageSize->{386.07046301129776`, 386.9094108468787},
  ViewPoint->{-2.812485700589807, -1.8790147117895213`, 0.09606194280998626},
  ViewVertical->{-0.6490481996450563, -0.544508297076808, \
-0.8147870624501306}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.695061560082364*^9, 3.695061687193681*^9, 3.695061826599939*^9, 
   3.695061899939538*^9, {3.695061944628637*^9, 3.6950619781705823`*^9}, 
   3.695062052841627*^9, 3.695062089639553*^9, 3.695062164549741*^9, 
   3.695062362854325*^9, {3.6950626047349925`*^9, 3.695062631346203*^9}, 
   3.695062678846036*^9}]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 827},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
Magnification:>1.55 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 180, "Title"],
Cell[815, 28, 1073, 25, 105, "Input"],
Cell[CellGroupData[{
Cell[1913, 57, 405, 6, 137, "Chapter"],
Cell[CellGroupData[{
Cell[2343, 67, 643, 11, 134, "Subchapter"],
Cell[CellGroupData[{
Cell[3011, 82, 149, 2, 108, "Section"],
Cell[3163, 86, 31385, 767, 3846, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34585, 858, 150, 2, 108, "Section"],
Cell[34738, 862, 344, 6, 76, "Input"],
Cell[35085, 870, 1756, 38, 163, "Input"],
Cell[36844, 910, 1737, 42, 163, "Input"],
Cell[38584, 954, 1799, 46, 192, "Input"],
Cell[40386, 1002, 1417, 35, 134, "Input"],
Cell[41806, 1039, 1273, 31, 134, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43128, 1076, 557, 10, 165, "Subchapter"],
Cell[CellGroupData[{
Cell[43710, 1090, 98, 1, 108, "Section"],
Cell[43811, 1093, 59808, 1301, 4980, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103656, 2399, 97, 1, 108, "Section"],
Cell[103756, 2402, 1395, 38, 105, "Input"],
Cell[105154, 2442, 719, 21, 76, "Input"],
Cell[105876, 2465, 693, 20, 76, "Input"],
Cell[106572, 2487, 370, 9, 76, "Input"],
Cell[CellGroupData[{
Cell[106967, 2500, 680, 16, 105, "Input"],
Cell[107650, 2518, 2518, 75, 263, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110205, 2598, 1063, 26, 134, "Input"],
Cell[111271, 2626, 166, 3, 65, "Output"],
Cell[111440, 2631, 2336, 71, 240, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113837, 2709, 258, 6, 129, "Subchapter"],
Cell[CellGroupData[{
Cell[114120, 2719, 98, 1, 124, "Section"],
Cell[114221, 2722, 8339, 200, 1452, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[122597, 2927, 95, 1, 97, "Section"],
Cell[122695, 2930, 518, 13, 122, "Input"],
Cell[123216, 2945, 467, 12, 122, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123744, 2964, 339, 5, 137, "Chapter"],
Cell[CellGroupData[{
Cell[124108, 2973, 352, 7, 131, "Subchapter"],
Cell[CellGroupData[{
Cell[124485, 2984, 149, 2, 107, "Section"],
Cell[124637, 2988, 15903, 397, 2850, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[140577, 3390, 93, 1, 85, "Section"],
Cell[140673, 3393, 1952, 49, 224, "Input"],
Cell[142628, 3444, 1781, 42, 190, "Input"],
Cell[144412, 3488, 1073, 30, 156, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[145534, 3524, 412, 8, 107, "Subchapter"],
Cell[CellGroupData[{
Cell[145971, 3536, 193, 2, 108, "Section"],
Cell[CellGroupData[{
Cell[146189, 3542, 99, 1, 75, "Subsection"],
Cell[146291, 3545, 9226, 214, 772, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155554, 3764, 151, 2, 75, "Subsection"],
Cell[CellGroupData[{
Cell[155730, 3770, 181, 2, 58, "Subsubsection"],
Cell[155914, 3774, 3520, 81, 221, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[159471, 3860, 291, 3, 47, "Subsubsection"],
Cell[159765, 3865, 2778, 63, 366, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[162580, 3933, 156, 2, 47, "Subsubsection"],
Cell[162739, 3937, 1579, 46, 192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[164355, 3988, 289, 3, 47, "Subsubsection"],
Cell[164647, 3993, 1515, 39, 337, "Input"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[166223, 4039, 113, 1, 84, "Section"],
Cell[CellGroupData[{
Cell[166361, 4044, 229, 3, 75, "Subsection"],
Cell[166593, 4049, 173, 3, 46, "Input"],
Cell[166769, 4054, 4563, 120, 550, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[171369, 4179, 95, 1, 60, "Subsection"],
Cell[171467, 4182, 1881, 56, 192, "Input"],
Cell[173351, 4240, 1868, 51, 354, "Input"],
Cell[175222, 4293, 3886, 85, 453, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[179157, 4384, 404, 5, 84, "Section"],
Cell[CellGroupData[{
Cell[179586, 4393, 101, 1, 75, "Subsection"],
Cell[179690, 4396, 4758, 123, 540, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[184485, 4524, 98, 1, 60, "Subsection"],
Cell[CellGroupData[{
Cell[184608, 4529, 255, 4, 58, "Subsubsection"],
Cell[184866, 4535, 1473, 38, 337, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[186376, 4578, 232, 3, 47, "Subsubsection"],
Cell[186611, 4583, 684, 21, 134, "Input"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[187380, 4613, 383, 6, 118, "Chapter"],
Cell[CellGroupData[{
Cell[187788, 4623, 273, 7, 134, "Subchapter"],
Cell[CellGroupData[{
Cell[188086, 4634, 99, 1, 75, "Subsection"],
Cell[188188, 4637, 7665, 188, 1294, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195890, 4830, 230, 4, 75, "Subsection"],
Cell[CellGroupData[{
Cell[196145, 4838, 187, 2, 58, "Subsubsection"],
Cell[196335, 4842, 1698, 37, 107, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[198070, 4884, 138, 1, 47, "Subsubsection"],
Cell[198211, 4887, 2514, 53, 163, "Input"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[200786, 4947, 342, 7, 107, "Subchapter"],
Cell[201131, 4956, 14376, 373, 1383, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215544, 5334, 154, 2, 103, "Subchapter"],
Cell[CellGroupData[{
Cell[215723, 5340, 103, 1, 75, "Subsection"],
Cell[215829, 5343, 22925, 428, 1555, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238791, 5776, 97, 1, 75, "Subsection"],
Cell[CellGroupData[{
Cell[238913, 5781, 216, 3, 58, "Subsubsection"],
Cell[239132, 5786, 2228, 60, 221, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[241397, 5851, 291, 4, 47, "Subsubsection"],
Cell[241691, 5857, 2764, 72, 221, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244492, 5934, 113, 1, 58, "Subsubsection"],
Cell[CellGroupData[{
Cell[244630, 5939, 2413, 47, 192, "Input"],
Cell[247046, 5988, 569, 9, 65, "Output"],
Cell[CellGroupData[{
Cell[247640, 6001, 675, 9, 33, "Print"],
Cell[248318, 6012, 478, 8, 33, "Print"],
Cell[248799, 6022, 478, 8, 33, "Print"],
Cell[249280, 6032, 576, 10, 40, "Print"],
Cell[249859, 6044, 526, 9, 36, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250458, 6061, 224, 3, 108, "Section"],
Cell[250685, 6066, 4374, 112, 598, "Input"],
Cell[255062, 6180, 2584, 65, 308, "Input"],
Cell[257649, 6247, 1779, 49, 192, "Input"],
Cell[259431, 6298, 14047, 289, 1149, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273515, 6592, 234, 4, 114, "Section"],
Cell[CellGroupData[{
Cell[273774, 6600, 101, 1, 75, "Subsection"],
Cell[273878, 6603, 2684, 54, 279, "Input"],
Cell[276565, 6659, 41453, 841, 3179, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318055, 7505, 168, 2, 75, "Subsection"],
Cell[CellGroupData[{
Cell[318248, 7511, 195, 4, 58, "Subsubsection"],
Cell[318446, 7517, 1269, 36, 362, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[319752, 7558, 248, 5, 47, "Subsubsection"],
Cell[320003, 7565, 1304, 25, 105, "Input"],
Cell[321310, 7592, 5239, 134, 714, "Input"],
Cell[326552, 7728, 272, 6, 46, "Input"],
Cell[326827, 7736, 1309, 32, 105, "Input"],
Cell[328139, 7770, 424, 12, 76, "Input"],
Cell[328566, 7784, 225, 6, 46, "Input"],
Cell[328794, 7792, 3850, 112, 250, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332681, 7909, 129, 1, 58, "Subsubsection"],
Cell[332813, 7912, 999, 23, 134, "Input"],
Cell[333815, 7937, 1782, 40, 163, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335634, 7982, 127, 1, 58, "Subsubsection"],
Cell[335764, 7985, 5005, 99, 308, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340830, 8091, 251, 3, 108, "Section"],
Cell[CellGroupData[{
Cell[341106, 8098, 154, 2, 75, "Subsection"],
Cell[341263, 8102, 14448, 290, 1729, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355748, 8397, 110, 1, 75, "Subsection"],
Cell[355861, 8400, 18723, 371, 1439, "Input"],
Cell[374587, 8773, 182, 3, 46, "Input"],
Cell[374772, 8778, 129, 2, 46, "Input"],
Cell[374904, 8782, 304, 7, 76, "Input"],
Cell[375211, 8791, 129, 2, 46, "Input"],
Cell[375343, 8795, 216, 5, 46, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375608, 8806, 196, 3, 108, "Section"],
Cell[CellGroupData[{
Cell[375829, 8813, 101, 1, 75, "Subsection"],
Cell[375933, 8816, 13906, 298, 1613, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[389876, 9119, 98, 1, 60, "Subsection"],
Cell[389977, 9122, 4042, 64, 134, "Input"],
Cell[CellGroupData[{
Cell[394044, 9190, 133, 1, 58, "Subsubsection"],
Cell[CellGroupData[{
Cell[394202, 9195, 4264, 101, 714, "Input"],
Cell[CellGroupData[{
Cell[398491, 9300, 367410, 6036, 590, 167009, 2748, "CachedBoxData", \
"BoxData", "Print"],
Cell[765904, 15338, 244, 5, 33, "Print"]
}, Open  ]]
}, Open  ]],
Cell[766175, 15347, 1129, 32, 134, "Input"],
Cell[767307, 15381, 745, 19, 76, "Input"],
Cell[768055, 15402, 1787, 45, 134, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[769903, 15454, 95, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[770023, 15459, 103, 1, 75, "Subsection"],
Cell[CellGroupData[{
Cell[770151, 15464, 99, 1, 58, "Subsubsection"],
Cell[770253, 15467, 29324, 729, 1903, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[799614, 16201, 114, 1, 58, "Subsubsection"],
Cell[799731, 16204, 14562, 378, 1004, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[814342, 16588, 99, 1, 75, "Subsection"],
Cell[814444, 16591, 1277, 27, 163, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[815770, 16624, 96, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[815891, 16629, 94, 1, 75, "Subsection"],
Cell[815988, 16632, 1542, 38, 221, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817567, 16675, 152, 2, 75, "Subsection"],
Cell[CellGroupData[{
Cell[817744, 16681, 168, 2, 58, "Subsubsection"],
Cell[817915, 16685, 4112, 107, 540, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822064, 16797, 104, 1, 58, "Subsubsection"],
Cell[822171, 16800, 4100, 116, 598, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[826332, 16923, 279, 4, 108, "Section"],
Cell[CellGroupData[{
Cell[826636, 16931, 98, 1, 75, "Subsection"],
Cell[CellGroupData[{
Cell[826759, 16936, 98, 1, 58, "Subsubsection"],
Cell[826860, 16939, 6752, 198, 479089, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[833649, 17142, 168, 2, 47, "Subsubsection"],
Cell[833820, 17146, 5226, 132, 627, "Input"],
Cell[839049, 17280, 2039, 56, 225, "Input"],
Cell[841091, 17338, 611, 17, 107, "Input"],
Cell[841705, 17357, 636, 18, 107, "Input"],
Cell[842344, 17377, 563, 10, 46, "Input"],
Cell[842910, 17389, 3075, 77, 453, "Input"],
Cell[845988, 17468, 334, 7, 46, "Input"],
Cell[846325, 17477, 246, 3, 46, "Input"],
Cell[846574, 17482, 3366, 86, 308, "Input"],
Cell[849943, 17570, 324, 7, 46, "Input"],
Cell[850270, 17579, 445, 12, 46, "Input"],
Cell[850718, 17593, 322, 4, 46, "Input"],
Cell[CellGroupData[{
Cell[851065, 17601, 1885, 49, 134, "Input"],
Cell[852953, 17652, 11194, 198, 334460, "Output"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

