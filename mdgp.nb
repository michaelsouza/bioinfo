(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2335548,      48270]
NotebookOptionsPosition[   2307294,      47413]
NotebookOutlinePosition[   2311251,      47498]
CellTagsIndexPosition[   2311208,      47495]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DG Package", "Title",
 CellChangeTimes->{{3.6793495261201363`*^9, 3.6793495384395885`*^9}, 
   3.679349644788345*^9, 3.67934974754046*^9, {3.698080393349868*^9, 
   3.698080394373047*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell["1) Instance Creation and Plot Routines", "Chapter",
 CellChangeTimes->{{3.6793500520209*^9, 3.679350065056984*^9}, {
   3.6950585832964363`*^9, 3.6950585871556697`*^9}, {3.695721180314636*^9, 
   3.695721206866439*^9}, 3.698079604394558*^9, {3.6980801756029487`*^9, 
   3.698080180840421*^9}, {3.6980803985611115`*^9, 3.698080400318778*^9}, 
   3.698157038028053*^9, {3.7002280176828976`*^9, 3.7002280179629517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: DG\n",
 StyleBox["DGAllEdges, DGEdgeWeight, DGEdgeDistanceBounds, DGProblem, \
DGSaveProblem, DGGraphGetIJD", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698064786393987*^9, 3.6980648085765533`*^9}, {
   3.6980677551920414`*^9, 3.698067772324468*^9}, 3.6980678077804627`*^9, {
   3.6980730442932186`*^9, 3.698073084912524*^9}, {3.6980731592026176`*^9, 
   3.698073183521519*^9}, {3.698135205349147*^9, 3.698135224691476*^9}, {
   3.698135487529049*^9, 3.6981354882540293`*^9}, {3.6981356287527127`*^9, 
   3.6981356329327507`*^9}, {3.6982407844204545`*^9, 3.698240789311618*^9}, 
   3.6982595805552015`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.698067812774536*^9, 3.698067816768963*^9}, {
  3.6981354925538797`*^9, 3.6981354928866024`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
    RowBox[{
    "DGAllEdges", ",", "\[IndentingNewLine]", "DGEdgeWeight", ",", 
     "\[IndentingNewLine]", "DGEdgeDistanceBounds", ",", 
     "\[IndentingNewLine]", "DGProblem", ",", "\[IndentingNewLine]", 
     "DGPrintGraph", ",", "\[IndentingNewLine]", "DGPrintX", ",", 
     "\[IndentingNewLine]", "DGSaveProblem", ",", "\[IndentingNewLine]", 
     "DGGraphGetIJD"}], "\n", "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGAllEdges", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", 
        RowBox[{"k", " ", "=", " ", "0"}], ",", " ", "pij"}], "}"}], ",", 
      "\n", "   ", 
      RowBox[{
       RowBox[{"pij", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ")"}], "/", 
             "2"}]}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "<=", " ", "n"}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"i", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
            RowBox[{"j", " ", "<=", " ", "n"}], ",", " ", 
            RowBox[{"j", "++"}], ",", "\n", "      ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", "\n", "      ", 
             RowBox[{
              RowBox[{"pij", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"i", " ", "<->", " ", "j"}]}], ";"}]}], "\n", "      ", 
           "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "pij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeWeight", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Gets", " ", "edge", " ", 
       RowBox[{"weight", ".", " ", "'"}], 
       RowBox[{"E", "'"}], " ", "can", " ", "be", " ", "a", " ", "single", 
       " ", "edge", " ", "or", " ", "a", " ", "list", " ", "of", " ", 
       "edges"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "eij", ",", "wij", ",", " ", 
        RowBox[{"D", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"FailureQ", "[", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", " ", 
               RowBox[{"E", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
             "EdgeWeight"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "E", " ", "is", " ", "a", " ", "list", " ", "of", " ", "edges"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], ",", " ", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eij", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
               RowBox[{"eij", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
              RowBox[{"eij", " ", "=", " ", 
               RowBox[{
                RowBox[{"eij", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
                RowBox[{"eij", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FailureQ", "[", 
               RowBox[{"wij", "=", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
                  "EdgeWeight"}], "]"}]}], "]"}], ",", 
              RowBox[{"Throw", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"D", ",", " ", "wij"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"E", " ", "is", " ", "a", " ", "single", " ", "edge"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", "E"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{
              RowBox[{"eij", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
              RowBox[{"eij", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FailureQ", "[", 
             RowBox[{"D", " ", "=", " ", 
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"G", ",", " ", "E"}], "}"}], ",", " ", 
                "EdgeWeight"}], "]"}]}], "]"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "D", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeDistanceBounds", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eij", " ", "=", " ", "E"}], ",", " ", "Lij", ",", " ", "Uij",
         ",", " ", "Vij"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eij", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
          RowBox[{"eij", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"eij", " ", "=", " ", 
          RowBox[{
           RowBox[{"eij", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
           RowBox[{"eij", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"Vij", " ", "=", " ", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
          "\"\<DistanceBounds\>\""}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "Vij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGProblem", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"eij_:", " ", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"dijEps_:", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Creates", " ", "a", " ", "problem", " ", "P", " ", "such", " ", "that",
        " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "is", " ", "the", " ", 
       "problem", " ", "graph", " ", "and", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}], " ", "is", " ", "a", " ", 
       "problem", " ", "solution"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "d", ",", "dij", ",", "k", ",", "numberOfAtoms", 
        ",", "G", ",", "E", ",", "DijEps"}], "}"}], ",", "\n", "   ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "default", " ", "values"}], " ", "*)"}], "\n", 
      "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "eij", "]"}], ">", "0"}], ",", 
         RowBox[{"E", "=", "eij"}], ",", 
         RowBox[{"E", "=", 
          RowBox[{"DGAllEdges", "[", 
           RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], "]"}], ";", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dijEps", "]"}], ">", "0"}], ",", 
         RowBox[{"DijEps", "=", "dijEps"}], ",", 
         RowBox[{"DijEps", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "unpacks", " ", "the", " ", "edges", " ", "and", " ", "calculate", 
         " ", "distances"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"i", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"j", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"j", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"numberOfAtoms", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"i", ",", " ", "j"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
       "\n", "   ", 
       RowBox[{"G", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"Infinity", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}]}], 
         "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}]}], "\n", "    ", "]"}], ";", 
       "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "the", " ", "graph"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"WeightedAdjacencyGraph", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"adds", " ", "distance", " ", "bounds"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "DijEps", "]"}], "!=", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidInput: eij and dijEps must have the same size\>\"", 
          "]"}]}], "]"}], ";", " ", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", 
               RowBox[{
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", 
             "\"\<DistanceBounds\>\""}], "]"}], "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], "}"}], "*", 
            "dij"}]}]}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<X\>\"", "\[Rule]", "x"}], ",", 
          RowBox[{"\"\<G\>\"", "\[Rule]", "G"}]}], "|>"}], "]"}]}]}], "\n", 
     "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintGraph", "[", "G_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", "table", ",", "eij", ",", "i", ",", "j", ",", "k", ",", 
        "Lij", ",", "Uij", ",", "Dij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"table", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", "=", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "Dij", ",", "Lij", ",", "Uij"}], 
            "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", 
         RowBox[{"table", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\"", ",", 
               "\"\<lij\>\"", ",", "\"\<uij\>\""}], "}"}]}], "}"}]}]}], "]"}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintX", "[", "X_", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"X", ",", " ", 
       RowBox[{"TableHeadings", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}], "}"}]}]}], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPrintDistanceMatrix", "[", 
    RowBox[{"X_", ",", "edges_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"E", "=", "edges"}], ",", "table", ",", "i", ",", "j", ",", 
       "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"table", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\""}], 
             "}"}]}], "}"}]}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintDistanceMatrix", "[", "X_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "edges", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"DGAllEdges", "[", 
         RowBox[{"Length", "[", "X", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DGPrintDistanceMatrix", "[", 
        RowBox[{"X", ",", "edges"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSaveProblem", "[", 
     RowBox[{"P_", ",", " ", "fname_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Create", " ", "the", " ", "files", " ", 
       RowBox[{"fname", ".", "csv"}], " ", "and", " ", 
       RowBox[{"fname_xsol", ".", "csv"}], " ", "with"}], ",", " ", 
      "respectively", ",", " ", 
      RowBox[{
      "the", " ", "DG", " ", "constraints", " ", "given", " ", "by", " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "and", " ", "one", " ", 
       "associated", " ", "solution", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", " ", "fid", ",", " ", "table", ",", " ", "eij", ",", " ",
         "i", ",", " ", "j", ",", " ", "k", ",", " ", "X", ",", " ", "G", ",",
         " ", "Dij", ",", " ", "Lij", ",", " ", "Uij"}], "}"}], ",", "\n", 
      "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "and", " ", "saves", " ", "solution", " ", "table"}], 
       " ", "*)"}], "\n", "   ", 
      RowBox[{
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"P", "[", "\"\<X\>\"", "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "3"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<_xsol.csv\>\""}], "]"}]}], ";", "\n",
        "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving solution file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "creates", " ", "and", " ", "saves", " ", "constraints", " ", 
         "table"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";", "\n", "   ", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "5"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j"}], "}"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", " ", "Uij"}], "}"}], " ", "=", " ", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"Dij", " ", "=", " ", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j", ",", " ", 
             RowBox[{"N", "[", "Dij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Lij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Uij", "]"}]}], "}"}]}]}]}], "\n", "    ", 
        "]"}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<.csv\>\""}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving constraints file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<I\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<D\>\"", ",", 
            " ", "\"\<L\>\"", ",", " ", "\"\<U\>\""}], "}"}]}]}], "]"}], 
       ";"}]}], "\n", "   ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGraphGetIJD", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "d", ",", "E"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"E", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980648378091593`*^9, 3.698064854788249*^9}, {
   3.698064906159929*^9, 3.698064909325801*^9}, {3.698064955176897*^9, 
   3.698064986006858*^9}, {3.698065109038253*^9, 3.698065150671424*^9}, {
   3.69806518659297*^9, 3.698065193368532*^9}, {3.6980654001540194`*^9, 
   3.6980654244181046`*^9}, {3.6980655393665404`*^9, 3.698065555128313*^9}, {
   3.6980659794963894`*^9, 3.6980660041682944`*^9}, {3.698066341867444*^9, 
   3.6980663567706394`*^9}, {3.6980665592012296`*^9, 
   3.6980666992461824`*^9}, {3.69806673177922*^9, 3.698066780054468*^9}, {
   3.6980668153666925`*^9, 3.69806686656289*^9}, {3.69806701658186*^9, 
   3.698067018994828*^9}, {3.698067996394244*^9, 3.698068042764223*^9}, {
   3.698068155902776*^9, 3.6980682384338694`*^9}, {3.6980684167789364`*^9, 
   3.6980684192427177`*^9}, 3.6980700592523394`*^9, {3.6980704236155825`*^9, 
   3.6980707185421805`*^9}, {3.6980707610011263`*^9, 3.698070854882349*^9}, {
   3.6980708951572204`*^9, 3.69807095084225*^9}, {3.698070990102256*^9, 
   3.6980710197514257`*^9}, {3.69807108328992*^9, 3.6980710851061954`*^9}, {
   3.698071134927409*^9, 3.6980711366806107`*^9}, {3.6980714781002245`*^9, 
   3.698071690621649*^9}, 3.6980717752567205`*^9, {3.698071824174859*^9, 
   3.698071835213976*^9}, {3.698071886342635*^9, 3.6980718929859667`*^9}, {
   3.698072224182354*^9, 3.6980722489870024`*^9}, {3.698072475433307*^9, 
   3.698072476001685*^9}, {3.698072507681114*^9, 3.6980725095555162`*^9}, {
   3.698072661011775*^9, 3.698072730186365*^9}, {3.698072802711589*^9, 
   3.698072810574417*^9}, {3.6980747631397576`*^9, 3.6980747665630274`*^9}, {
   3.698078742239861*^9, 3.6980787427962303`*^9}, {3.6980788044556255`*^9, 
   3.698078886289402*^9}, 3.698079529602953*^9, {3.698079562825487*^9, 
   3.6980795628394966`*^9}, {3.6980841826292048`*^9, 
   3.6980841893896885`*^9}, {3.6981352488359904`*^9, 3.698135531631914*^9}, {
   3.698135642417054*^9, 3.6981356548828564`*^9}, {3.698135687148699*^9, 
   3.69813569447806*^9}, {3.6982216004241915`*^9, 3.698221739589205*^9}, {
   3.6982218524675703`*^9, 3.698221872903125*^9}, {3.6982219257613215`*^9, 
   3.6982220862061243`*^9}, {3.698222983461506*^9, 3.6982231253506966`*^9}, {
   3.698223285203043*^9, 3.698223303981498*^9}, {3.698232826843835*^9, 
   3.6982329751758366`*^9}, {3.6982330643710318`*^9, 
   3.6982331580395837`*^9}, {3.6982332202168217`*^9, 
   3.6982332369894466`*^9}, {3.6982333007459803`*^9, 
   3.6982333251156435`*^9}, {3.6982334452210298`*^9, 3.69823386830234*^9}, {
   3.698233971233729*^9, 3.6982341107259865`*^9}, {3.698234157087762*^9, 
   3.698234166227824*^9}, {3.6982342008682995`*^9, 3.6982342078039*^9}, {
   3.698240819715974*^9, 3.6982408474903955`*^9}, {3.6983191649781866`*^9, 
   3.698319169648599*^9}, {3.7003057978269615`*^9, 3.7003059781893115`*^9}, {
   3.700306014054883*^9, 3.700306041788701*^9}, {3.7003060781106386`*^9, 
   3.70030613384301*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples:", "Section",
 CellChangeTimes->{{3.6980677784161177`*^9, 3.6980677937658424`*^9}, {
   3.6980678280050044`*^9, 3.6980678367016196`*^9}, 3.7002279528025875`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGAllEdges", " ", "*)"}], "\n", 
  RowBox[{"DGAllEdges", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.69806784107166*^9, 3.698067885891185*^9}, {
   3.698072476059723*^9, 3.698072476069231*^9}, 3.6980795296114593`*^9, {
   3.698079659259447*^9, 3.6980796592649527`*^9}, 3.698079723959221*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70022797152662*^9, 3.7009866382759438`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "complete", " ", 
    "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintDistanceMatrix", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6980678514006224`*^9, {3.6980679034188004`*^9, 3.698067938519929*^9}, {
   3.698070087795181*^9, 3.6980701309785995`*^9}, {3.6980701806363125`*^9, 
   3.6980701917162457`*^9}, {3.6980707240828867`*^9, 3.698070728339967*^9}, {
   3.698071156019414*^9, 3.698071173038784*^9}, {3.698071267726063*^9, 
   3.698071268937364*^9}, {3.698071306434246*^9, 3.6980713142584715`*^9}, {
   3.69807140802295*^9, 3.698071409104385*^9}, {3.698072476108756*^9, 
   3.698072476123766*^9}, 3.6980795296284704`*^9, {3.6980796656206665`*^9, 
   3.698079665626671*^9}, 3.6982328268823624`*^9, 3.698233064406555*^9, {
   3.6982338813554974`*^9, 3.6982339037413445`*^9}, {3.6982342329371486`*^9, 
   3.698234244522332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7002279718648424`*^9, 3.7009866387239943`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.7320508075688772`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.7320508075688772`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij"}}]]]], "Print",
 CellChangeTimes->{3.7002279718648424`*^9, 3.700986638739588*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "<->", " ", "2"}], ",", " ", 
       RowBox[{"2", " ", "<->", " ", "3"}], ",", " ", 
       RowBox[{"3", " ", "<->", " ", "4"}], ",", " ", 
       RowBox[{"4", " ", "<->", " ", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij"}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698070175421965*^9, 3.698070175861757*^9}, {
   3.698070213177312*^9, 3.698070315300525*^9}, {3.6980713539418945`*^9, 
   3.6980713662326765`*^9}, {3.6980714206781745`*^9, 
   3.6980714208693013`*^9}, {3.698072476186808*^9, 3.698072476201317*^9}, 
   3.698079529705022*^9, {3.698079678277562*^9, 3.6980796782830653`*^9}, 
   3.698232826904878*^9, 3.69823306442557*^9, {3.6982342604183755`*^9, 
   3.6982342641588564`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700227971872199*^9, 3.700986638755212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "inexact", " ", 
    "distances"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "<->", " ", "2"}], ",", " ", 
       RowBox[{"2", " ", "<->", " ", "3"}], ",", " ", 
       RowBox[{"3", " ", "<->", " ", "4"}], ",", " ", 
       RowBox[{"4", " ", "<->", " ", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dijEps", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0.1", ",", " ", "0", ",", " ", "0.2"}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij", ",", " ", "dijEps"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980720809289303`*^9, 3.6980721673125477`*^9}, {
   3.698072476261857*^9, 3.698072476270364*^9}, {3.698074794128626*^9, 
   3.698074795245368*^9}, 3.6980795297355413`*^9, {3.6980796883057127`*^9, 
   3.698079688311717*^9}, 3.698232826928891*^9, 3.698233064442582*^9, 
   3.6982342864456387`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.2727922061357857`", 
      "1.5556349186104048`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "0.8`", "1.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700227971903455*^9, 3.7009866387760296`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Saves", " ", "a", " ", "DGProblem"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\n", 
   RowBox[{"DGSaveProblem", "[", 
    RowBox[{
    "P", ",", " ", 
     "\"\<c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_\
problem_small\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980724323259354`*^9, 3.6980724456790857`*^9}, 
   3.6980724763684278`*^9, {3.6980725466797047`*^9, 3.6980726421410055`*^9}, {
   3.6980727654041586`*^9, 3.6980727682410746`*^9}, 3.698078867840667*^9, 
   3.6980795298060875`*^9, {3.6980797088881145`*^9, 3.6980797089077563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving solution file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small_xsol.csv\"\>"}],
  SequenceForm[
  "Saving solution file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small_xsol.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.700227971903455*^9, 3.700986638808568*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving constraints file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small.csv\"\>"}],
  SequenceForm[
  "Saving constraints file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.700227971903455*^9, 3.700986639157487*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: MDGP\n",
 StyleBox["DGSetXByCartesianSystem, DGSetXByHomogeneousCoords, \
DGRandom3DBackbone, DGRandomMDGP, DGCalculateProteinAngles, \
DGCalculateProteinAnglesForAtomAtPosition, DGCalculateTorsionAngles", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
  3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
  3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
  3.6980731201361957`*^9, 3.6980731887764435`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980732060967464`*^9, 3.698073211231152*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGSetXByCartesianSystem", ",", "\[IndentingNewLine]", 
    "DGSetXByHomogeneousCoords", ",", "\[IndentingNewLine]", 
    "DGRandom3DBackbone", ",", "\[IndentingNewLine]", "DGRandomMDGP", ",", 
    "\[IndentingNewLine]", "DGPlaneAndTorsionAngles"}], "\[IndentingNewLine]",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByCartesianSystem", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "rotations", " ", "and", " ", "translations", " ", 
        "explicitly"}], ";", "\[IndentingNewLine]", "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "            ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "        ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}],
           FontWeight->"Plain"], " ", "\[IndentingNewLine]"}]}]}]}]}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "i", ",", "v", ",", "n", ",", "R", ",", 
        "X", ",", "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "positions"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"b", "-", "c"}], "]"}]}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"a", "-", "b"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "creation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"R", "[", "v", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "apply"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "apply", " ", "torsion", " ", "rotation", " ", "and", " ", 
            "translation"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{
            RowBox[{"R", "[", "v", "]"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "v"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByHomogeneousCoords", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "transformation", " ", "matrices"}], ";", "\[IndentingNewLine]", 
       "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         StyleBox["    ",
          FontWeight->"Plain"], "        "}]], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["        ",
        FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
             RowBox[{"angle", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "2"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}], ";"}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "\[IndentingNewLine]"}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "B", ",", "B1", ",", "B2", ",", "B3", ",", "X", ",", "i", ",", "di", 
        ",", "ct", ",", "st", ",", "cw", ",", "sw", ",", "v", ",", 
        "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ct", ",", "st"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "ct"}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "st"}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "first", " ", "transformation", " ", "matrices"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"B1", "=", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"B2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"di", "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "ct"}], ",", 
            RowBox[{"-", "st"}], ",", "0", ",", 
            RowBox[{
             RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"st", ",", 
            RowBox[{"-", "ct"}], ",", "0", ",", 
            RowBox[{"di", "*", "st"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "coordinates"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"B1", ".", "B2", ".", "B3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ct", ",", "st"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cw", ",", "sw"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"di", "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"concatenate", " ", "transformation", " ", "matrices"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "ct"}], ",", 
                RowBox[{"-", "st"}], ",", "0", ",", 
                RowBox[{
                 RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "cw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "cw"}], ",", 
                RowBox[{"-", "sw"}], ",", 
                RowBox[{"di", "*", "st", "*", "cw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "sw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "sw"}], ",", "cw", ",", 
                RowBox[{"di", "*", "st", "*", "sw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "transformation", " ", "at", " ", "origin"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandom3DBackbone", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"algorithm_:", "\"\<HomogeneousCoords\>\""}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Generates", " ", "a", " ", "random", " ", "backbone", " ", "in", " ", 
       "tridimensional", " ", "Euclidean", " ", "space"}], ";", 
      "\[IndentingNewLine]", "   ", 
      StyleBox[
       RowBox[{"Input", " ", "parameters"}],
       FontVariations->{"Underline"->True}], 
      StyleBox[";",
       FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "algorithm", " ", "to", " ", "be", " ", "applied", " ", "during", " ",
          "coordinates", " ", 
         RowBox[{"calculation", ".", " ", "The"}], " ", 
         RowBox[{"options", " ", "'"}], "are", " ", 
         RowBox[{"HomogeneousCoords", "'"}], " ", 
         RowBox[{"or", " ", "'"}], 
         RowBox[{"CartesianSystem", "'"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", "the", 
         " ", "current", " ", "time", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "the", " ", "local", " ", "variables"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "d", ",", "\[Theta]", ",", "\[Omega]", ",", "X", ",", "output", ",", 
        RowBox[{"\[Epsilon]", "=", "0.05"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"seed", ">", "0"}], ",", 
         RowBox[{"SeedRandom", "[", "seed", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"length", " ", "of", " ", "covalent", " ", "bonds"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.526", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"plane", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.91", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"torsion", " ", "angles"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "Degree"}], ",", 
              RowBox[{"180", "Degree"}], ",", 
              RowBox[{"300", "Degree"}]}], "}"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Epsilon]"}], ",", "\[Epsilon]"}], "}"}], 
              "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "remaining", " ", "3", "d", " ", 
         "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "algorithm", ",", "\[IndentingNewLine]", "\"\<HomogeneousCoords\>\"", 
         ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByHomogeneousCoords", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<CartesianSystem\>\"", ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByCartesianSystem", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"Throw", "[", 
          RowBox[{"\"\<InvalidAlgorithm:\>\"", ",", 
           RowBox[{"OptionValue", "[", "algorithm", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "output"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "->", "X"}], ",", 
         RowBox[{"\"\<TorsionAngles\>\"", "\[Rule]", "\[Omega]"}], ",", 
         RowBox[{"\"\<CovalentBondLengths\>\"", "->", "d"}], ",", 
         RowBox[{"\"\<PlaneRotationAngles\>\"", "\[Rule]", "\[Theta]"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgesMDGP", "[", "numberOfAtoms_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"i", "+", "3"}], ",", "numberOfAtoms"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"edges", ",", 
               RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "edges", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"dijEps_:", "0.0"}], ",", 
      RowBox[{"dijMax_:", "Infinity"}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Generates", " ", "a", " ", "random", " ", "MDGP", " ", 
       RowBox[{"instance", "."}]}], ";", " ", "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        StyleBox["dijEps",
         FontSlant->"Italic"], 
        StyleBox[":",
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"the", " ", "upper", " ", 
          RowBox[{"(", "uij", ")"}], " ", "and", " ", "lower", " ", 
          RowBox[{"(", "lij", ")"}], " ", "constraints", " ", "boundaries", 
          " ", "are", " ", "generated", " ", "using", " ", "the", " ", 
          "formulae", " ", "lij"}],
         FontWeight->"Plain"]}], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dijEps"}], ")"}], " ", "and", " ", "uij"}], " ",
          "=", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "dijEps"}], ")"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["dijMax",
        FontSlant->"Italic"], ":", 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "all", " ", "distances", " ", "greater", " ", "than", " ", "dijMax", 
         " ", "are", " ", "dropped"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{"defines", " ", "the", " ", "method", " ", 
         RowBox[{"(", "algorithm", ")"}], " ", "used", " ", "to", " ", 
         "calculate", " ", "the", " ", "pairwise", " ", 
         RowBox[{"distances", ".", " ", "The"}], " ", "options", " ", "are", 
         " ", "\"\<DistanceMatrix\>\"", " ", "and", " ", "\"\<Nearest\>\""}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", 
         "current", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "X", ",", "D", ",", "E", ",", "dij", ",", 
        "DijEps"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{
         RowBox[{"DGRandom3DBackbone", "[", 
          RowBox[{
          "numberOfAtoms", ",", "\"\<HomogeneousCoords\>\"", ",", "seed"}], 
          "]"}], "[", "\"\<Points\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DijEps", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "distance", " ", "bounds"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", "numberOfAtoms"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"exact", " ", "distances"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "2"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Continue", "[", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"intervalar", " ", "distances"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "3"}], "||", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{"Norm", "[", 
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"X", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "<", 
                 "dijMax"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "dijEps"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DGProblem", "[", 
         RowBox[{"X", ",", "E", ",", "DijEps"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"A_", ",", "B_", ",", "C_", ",", "D_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "the", " ", "plane", " ", "and", " ", "torsion", " ",
        "for", " ", "3", "D", " ", "points", " ", "A"}], ",", " ", "B", ",", 
      " ", 
      RowBox[{"C", " ", "and", " ", "D", " ", "in", " ", "that", " ", 
       RowBox[{"order", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nabc", ",", " ", "nbcd", ",", "\[Theta]", ",", "\[Omega]"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"centered", " ", "at", " ", "C"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"B", "-", "C"}], ",", 
          RowBox[{"D", "-", "C"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Theta]):Angle[BCD]  =\>\"", ",", "\[Theta]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"centered", " ", "at", " ", "B", " ", "and", " ", "C"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nabc", ",", "nbcd"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"A", "-", "B"}], ",", 
            RowBox[{"C", "-", "B"}]}], "]"}], ",", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"B", "-", "C"}], ",", 
            RowBox[{"D", "-", "C"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{"nabc", ",", "nbcd"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Omega]):Angle[ABCD] =\>\"", ",", "\[Omega]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"X_", ",", "i_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles", 
       " ", "of", " ", "i"}], "-", 
      RowBox[{"th", " ", 
       RowBox[{"atom", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlaneAndTorsionAngles", "[", "X_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Omega]", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
         RowBox[{"DGPlaneAndTorsionAngles", "[", 
          RowBox[{"X", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679334396696954*^9, 3.6793344197378874`*^9}, {
   3.679334459021727*^9, 3.6793344614910192`*^9}, {3.679334506573509*^9, 
   3.67933450744427*^9}, 3.679334554859289*^9, {3.6793347748775415`*^9, 
   3.6793348146727505`*^9}, {3.6793348683176303`*^9, 
   3.6793349148147354`*^9}, {3.679335216182414*^9, 3.679335270449379*^9}, {
   3.679335358320606*^9, 3.6793353855927134`*^9}, {3.679335422113183*^9, 
   3.679335422860292*^9}, {3.679335467322652*^9, 3.6793354718670073`*^9}, {
   3.679335502941807*^9, 3.6793355176517873`*^9}, {3.6793359308181715`*^9, 
   3.6793359602458916`*^9}, {3.6793359984610925`*^9, 3.679336011029911*^9}, {
   3.679336355941925*^9, 3.679336390681263*^9}, {3.679336436703087*^9, 
   3.679336440913059*^9}, {3.6793364973777227`*^9, 3.679336508943397*^9}, {
   3.679337482798051*^9, 3.6793374878195066`*^9}, {3.679337531710136*^9, 
   3.679337679993342*^9}, {3.679337711180924*^9, 3.6793377943636985`*^9}, {
   3.679337830273183*^9, 3.6793379235522385`*^9}, {3.6793380600889235`*^9, 
   3.679338107718841*^9}, {3.679338168311281*^9, 3.6793381690922422`*^9}, {
   3.679338254307039*^9, 3.679338327393572*^9}, {3.6793384127916727`*^9, 
   3.679338418720523*^9}, {3.6793384657072325`*^9, 3.679338788372825*^9}, {
   3.679338898441475*^9, 3.6793389990638256`*^9}, {3.6793390477861385`*^9, 
   3.679339051499843*^9}, {3.6793391446277075`*^9, 3.6793392599804153`*^9}, 
   3.6793393742092657`*^9, {3.6793395780321927`*^9, 3.6793398587893867`*^9}, {
   3.6793398957561593`*^9, 3.6793399605794096`*^9}, {3.67934000207397*^9, 
   3.6793400630782733`*^9}, {3.6793401514655437`*^9, 
   3.6793403347497687`*^9}, {3.6793403699550896`*^9, 3.67934037140318*^9}, {
   3.679340563130898*^9, 3.6793405841237473`*^9}, {3.6793406189939303`*^9, 
   3.6793406823092556`*^9}, {3.6793413087872534`*^9, 
   3.6793413117913976`*^9}, {3.6793414144409704`*^9, 
   3.6793414780425982`*^9}, {3.6793415857352*^9, 3.679341749056054*^9}, {
   3.6793418327409945`*^9, 3.6793418417524166`*^9}, {3.679341876481241*^9, 
   3.6793418824052687`*^9}, {3.679341997125859*^9, 3.6793420172739105`*^9}, {
   3.67934205563032*^9, 3.6793420821291895`*^9}, {3.679342117275077*^9, 
   3.6793421196924405`*^9}, {3.6793421834981775`*^9, 3.679342183855644*^9}, {
   3.6793422500684495`*^9, 3.6793422840007253`*^9}, {3.6793424043195424`*^9, 
   3.6793424350150757`*^9}, {3.679342585125659*^9, 3.679342801705634*^9}, {
   3.679342833323803*^9, 3.6793428396110015`*^9}, {3.6793429405557547`*^9, 
   3.6793429972575336`*^9}, {3.679343068573412*^9, 3.6793430980621653`*^9}, 
   3.6793431423230133`*^9, {3.6793431858227177`*^9, 3.6793432209529057`*^9}, {
   3.6793432860551014`*^9, 3.6793433042354126`*^9}, {3.6793433545087633`*^9, 
   3.6793433652364955`*^9}, {3.6793452969963503`*^9, 3.6793453088097954`*^9}, 
   3.6793461153501606`*^9, {3.6793473536334457`*^9, 3.6793473954665585`*^9}, {
   3.6793477301073675`*^9, 3.679347763333604*^9}, {3.6793478591437263`*^9, 
   3.6793478625984306`*^9}, {3.6793480121537013`*^9, 
   3.6793482720333853`*^9}, {3.67934834772797*^9, 3.6793483523074236`*^9}, {
   3.6793484687244396`*^9, 3.679348489631818*^9}, {3.679348535732118*^9, 
   3.6793485836744003`*^9}, {3.679348656480409*^9, 3.6793486600900903`*^9}, 
   3.6793492489231615`*^9, {3.6793494190708942`*^9, 3.679349419296319*^9}, 
   3.6793494823993444`*^9, {3.6793500975888023`*^9, 3.6793501010398235`*^9}, {
   3.6793503502988024`*^9, 3.679350357442238*^9}, {3.679350388693789*^9, 
   3.6793504609919558`*^9}, {3.679350512381988*^9, 3.6793505224916997`*^9}, {
   3.6793505658690414`*^9, 3.679350573203977*^9}, {3.6793920543569756`*^9, 
   3.6793923209393916`*^9}, {3.679392352626535*^9, 3.6793925381168537`*^9}, {
   3.6793926280473437`*^9, 3.679392661685611*^9}, {3.679392696383786*^9, 
   3.679392699025669*^9}, {3.6793928383564887`*^9, 3.6793934549091573`*^9}, {
   3.679393586505351*^9, 3.679393616703784*^9}, {3.6793939133345203`*^9, 
   3.6793939143222685`*^9}, 3.6793940696010857`*^9, {3.679394099668668*^9, 
   3.6793944506348133`*^9}, {3.679394784056423*^9, 3.67939534176003*^9}, {
   3.679395381425836*^9, 3.679395503566868*^9}, {3.6793955684350924`*^9, 
   3.6793955734567842`*^9}, {3.6793957804079714`*^9, 
   3.6793958367041416`*^9}, {3.6793960807594223`*^9, 3.679396100513118*^9}, {
   3.67939616157646*^9, 3.679396197364892*^9}, {3.6793962497184567`*^9, 
   3.679396282906206*^9}, {3.679396609090597*^9, 3.6793966167836933`*^9}, {
   3.679396648625914*^9, 3.6793966543985653`*^9}, {3.679396740943916*^9, 
   3.679396768582145*^9}, {3.679396857866257*^9, 3.6793968963813653`*^9}, {
   3.6793969336171*^9, 3.6793970905785065`*^9}, {3.6793971251566105`*^9, 
   3.6793971298515577`*^9}, {3.679397221304947*^9, 3.67939722410863*^9}, {
   3.6793972641763353`*^9, 3.679397266225936*^9}, {3.6793983203128195`*^9, 
   3.6793983706649785`*^9}, {3.679398435449253*^9, 3.6793984477299423`*^9}, {
   3.6793984907409554`*^9, 3.6793985421648207`*^9}, {3.679398593771634*^9, 
   3.6793986705180993`*^9}, {3.6793989235435977`*^9, 3.67939893434542*^9}, {
   3.679403394164427*^9, 3.6794034018166647`*^9}, {3.679403783825127*^9, 
   3.6794037864835734`*^9}, {3.6794038759602175`*^9, 
   3.6794040830475106`*^9}, {3.679404119305796*^9, 3.679404298238202*^9}, 
   3.679404382036023*^9, {3.679404653274694*^9, 3.6794046842305584`*^9}, {
   3.6794050293859835`*^9, 3.6794050557043276`*^9}, {3.6794051146048007`*^9, 
   3.679405116722584*^9}, {3.679405184367193*^9, 3.6794052171029243`*^9}, {
   3.679405498432304*^9, 3.679405569807764*^9}, {3.679405690984426*^9, 
   3.6794056940269375`*^9}, {3.679405754352635*^9, 3.6794057624882355`*^9}, 
   3.679405828952403*^9, {3.6794059773823776`*^9, 3.679406037058329*^9}, {
   3.679406078458248*^9, 3.6794061638320656`*^9}, {3.6794064355972614`*^9, 
   3.679406619068183*^9}, {3.67940666239577*^9, 3.679406687383835*^9}, {
   3.679406724763648*^9, 3.6794067251687045`*^9}, 3.6794068172515316`*^9, {
   3.679406863506428*^9, 3.679406872901106*^9}, {3.679406930446825*^9, 
   3.679406948401491*^9}, {3.6794070040861063`*^9, 3.6794070065561094`*^9}, {
   3.679407312344544*^9, 3.679407314713808*^9}, {3.679407430180848*^9, 
   3.679407458271701*^9}, 3.6794078238766403`*^9, {3.679407878354503*^9, 
   3.6794082035777364`*^9}, {3.679566685353998*^9, 3.67956669759547*^9}, 
   3.679568153295287*^9, {3.6795682979748397`*^9, 3.679568399913588*^9}, {
   3.679568451510522*^9, 3.679568495166552*^9}, {3.6795691795206947`*^9, 
   3.679569250499019*^9}, {3.679569280716798*^9, 3.6795693785712852`*^9}, {
   3.6795925633128986`*^9, 3.679592673970081*^9}, {3.679592721867278*^9, 
   3.6795927229374475`*^9}, {3.679594988131906*^9, 3.679595118982105*^9}, {
   3.679738892130002*^9, 3.679738904422254*^9}, {3.6797389527800984`*^9, 
   3.6797389661620564`*^9}, {3.6797390238401327`*^9, 
   3.6797390636940556`*^9}, {3.6797391569629755`*^9, 3.679739218024413*^9}, {
   3.679739321633385*^9, 3.6797393341911097`*^9}, {3.6797394358016376`*^9, 
   3.679739498369319*^9}, {3.679739592363925*^9, 3.6797396087330103`*^9}, {
   3.6797405277538753`*^9, 3.6797405906735935`*^9}, {3.679741837482974*^9, 
   3.679741856061937*^9}, {3.6797530753347263`*^9, 3.679753080740266*^9}, {
   3.679822610411623*^9, 3.6798226951736937`*^9}, {3.6798262757554946`*^9, 
   3.6798262950500765`*^9}, {3.6798304972475395`*^9, 3.679830500587058*^9}, {
   3.6798305863580213`*^9, 3.6798306115801296`*^9}, {3.679830653827534*^9, 
   3.679830659160823*^9}, {3.679830750679475*^9, 3.679830778729604*^9}, {
   3.6798309380103083`*^9, 3.679831207376337*^9}, {3.6798312397643733`*^9, 
   3.6798313536889253`*^9}, {3.6798313849934535`*^9, 3.679831403721264*^9}, {
   3.6798314534696703`*^9, 3.6798315710288057`*^9}, {3.6798316592417555`*^9, 
   3.6798317372267046`*^9}, 3.679831789061343*^9, {3.679831822090675*^9, 
   3.679831828828328*^9}, {3.6798318972804823`*^9, 3.6798319051885147`*^9}, {
   3.679831945915737*^9, 3.6798319534838204`*^9}, {3.679831984167186*^9, 
   3.679831996593215*^9}, {3.6798321399538794`*^9, 3.6798321522301235`*^9}, {
   3.6798322802409973`*^9, 3.6798322901002426`*^9}, {3.679832475527353*^9, 
   3.6798324791745257`*^9}, {3.679832515937626*^9, 3.6798325272304134`*^9}, {
   3.6798328341287575`*^9, 3.6798328453074446`*^9}, {3.679832936913255*^9, 
   3.6798329499211493`*^9}, 3.6798329836635427`*^9, 3.6799120745739098`*^9, {
   3.68096946640281*^9, 3.680969506471238*^9}, {3.6809695943663626`*^9, 
   3.6809695983006277`*^9}, {3.680971291386725*^9, 3.680971292487916*^9}, {
   3.6810483453596783`*^9, 3.6810483658374515`*^9}, {3.681049666557871*^9, 
   3.681049672721483*^9}, {3.681049746015087*^9, 3.6810497473331203`*^9}, {
   3.681050036116782*^9, 3.6810503893437195`*^9}, {3.681050439415736*^9, 
   3.681050443570201*^9}, {3.6810508388119097`*^9, 3.681050853163069*^9}, {
   3.6810508894027395`*^9, 3.681050893808611*^9}, {3.681050960791823*^9, 
   3.6810510981120815`*^9}, {3.68105113216866*^9, 3.6810511668364615`*^9}, {
   3.681051291204856*^9, 3.6810512973216534`*^9}, {3.681051343040867*^9, 
   3.6810513458639803`*^9}, {3.6810514354795513`*^9, 
   3.6810514424265547`*^9}, {3.6810515295113626`*^9, 3.681051567230074*^9}, 
   3.681051692501606*^9, {3.681051791144629*^9, 3.681051837795389*^9}, {
   3.6810519974251823`*^9, 3.6810521036048183`*^9}, {3.681052180564599*^9, 
   3.6810521932444377`*^9}, {3.681052498724401*^9, 3.6810525317013626`*^9}, {
   3.681052601514738*^9, 3.6810526020129356`*^9}, {3.681130097135313*^9, 
   3.6811301355329266`*^9}, {3.6811306071661057`*^9, 
   3.6811306080939198`*^9}, {3.681569293340601*^9, 3.681569317434729*^9}, 
   3.681569384549055*^9, {3.6815694300305977`*^9, 3.6815694757801313`*^9}, {
   3.681569563306698*^9, 3.681569588540775*^9}, {3.6827030876800084`*^9, 
   3.682703262424608*^9}, {3.6827033351522703`*^9, 3.682703415951787*^9}, {
   3.6827036928979535`*^9, 3.6827037232224236`*^9}, {3.682751730525303*^9, 
   3.6827517963283806`*^9}, {3.6827518694423895`*^9, 3.682751938368969*^9}, {
   3.682752027328513*^9, 3.682752222908455*^9}, {3.6827522575518446`*^9, 
   3.682752305498808*^9}, {3.682752343269593*^9, 3.682752354684014*^9}, {
   3.682755918271523*^9, 3.6827559318206263`*^9}, {3.6827559727179627`*^9, 
   3.682756087687999*^9}, {3.682756145721592*^9, 3.682756179708579*^9}, {
   3.6827562427576885`*^9, 3.682756246343544*^9}, {3.6827562838961797`*^9, 
   3.682756361155776*^9}, {3.6827564050716653`*^9, 3.682756407820393*^9}, {
   3.6827568065792284`*^9, 3.682756817610793*^9}, {3.6827569799864893`*^9, 
   3.682757046769945*^9}, {3.6827571010926585`*^9, 3.68275714115174*^9}, 
   3.6827572933922772`*^9, {3.682757377968191*^9, 3.6827573780054502`*^9}, {
   3.682757430656029*^9, 3.682757430938339*^9}, {3.682757538765318*^9, 
   3.6827575688045273`*^9}, {3.6827576062534266`*^9, 
   3.6827577481318636`*^9}, {3.6827581645482197`*^9, 
   3.6827581925304317`*^9}, {3.6827582367544127`*^9, 
   3.6827582371612177`*^9}, {3.682758608097464*^9, 3.682758623028547*^9}, {
   3.6827587073678665`*^9, 3.682758772728657*^9}, {3.682758834124054*^9, 
   3.682758836456462*^9}, {3.682782233662289*^9, 3.6827822447829604`*^9}, {
   3.682782320018792*^9, 3.682782487834862*^9}, {3.682782529947446*^9, 
   3.6827825314122334`*^9}, {3.682782623878173*^9, 3.6827826814501777`*^9}, {
   3.6827827337311916`*^9, 3.682782750069191*^9}, {3.682782896362369*^9, 
   3.6827828993756037`*^9}, {3.6827829353820267`*^9, 3.682782936614396*^9}, {
   3.6827852963565493`*^9, 3.6827852984977875`*^9}, {3.6827871345324674`*^9, 
   3.6827871372960124`*^9}, {3.6827873158456683`*^9, 3.682787318082534*^9}, 
   3.6860539435781755`*^9, {3.689601466774104*^9, 3.6896015532256894`*^9}, {
   3.6896016488772197`*^9, 3.6896017962777505`*^9}, {3.689601830847403*^9, 
   3.689601843970112*^9}, {3.689601972787878*^9, 3.689601987554659*^9}, {
   3.6896020823447723`*^9, 3.689602177412902*^9}, {3.689602219625367*^9, 
   3.6896025123406606`*^9}, {3.689602553886554*^9, 3.689602618506301*^9}, {
   3.6896026500310593`*^9, 3.6896026586156025`*^9}, {3.6896026945036297`*^9, 
   3.6896028712580557`*^9}, {3.6896029047014227`*^9, 
   3.6896029083520837`*^9}, {3.689602966711435*^9, 3.689603058571074*^9}, {
   3.6896030932120867`*^9, 3.689603098139574*^9}, {3.6896031601944327`*^9, 
   3.6896031778706956`*^9}, {3.692621083267871*^9, 3.692621091669281*^9}, {
   3.6926212289569902`*^9, 3.6926212863157787`*^9}, {3.6926213497820015`*^9, 
   3.692621425637977*^9}, {3.6926214644408817`*^9, 3.6926214670573387`*^9}, {
   3.692621527200048*^9, 3.6926216897906265`*^9}, {3.692627410197031*^9, 
   3.6926275455290575`*^9}, {3.692627745145838*^9, 3.6926277852211*^9}, {
   3.692627821712092*^9, 3.692627853727536*^9}, {3.693051401128996*^9, 
   3.693051427295449*^9}, {3.6930549156980915`*^9, 3.6930551127231016`*^9}, {
   3.6930552622573557`*^9, 3.693055266815773*^9}, {3.693055339369998*^9, 
   3.693055342949571*^9}, {3.6930554341310496`*^9, 3.693055503513935*^9}, {
   3.6930556414092984`*^9, 3.693055671403966*^9}, {3.6930558447268047`*^9, 
   3.693055926052605*^9}, {3.69305610697759*^9, 3.693056188778535*^9}, {
   3.6930563054950542`*^9, 3.6930563090177827`*^9}, {3.693056360765195*^9, 
   3.693056364987186*^9}, {3.693056410841975*^9, 3.6930564674928303`*^9}, {
   3.693056544238221*^9, 3.6930565494853306`*^9}, {3.6930566103966265`*^9, 
   3.6930566475710416`*^9}, {3.693056687192659*^9, 3.6930566953123307`*^9}, {
   3.6930567877264233`*^9, 3.6930568950334253`*^9}, {3.6930570764514155`*^9, 
   3.693057081922228*^9}, {3.6930571431816697`*^9, 3.6930572655759053`*^9}, {
   3.693057312085458*^9, 3.6930573768320684`*^9}, {3.6930574682013035`*^9, 
   3.693057478075393*^9}, {3.6932296110918107`*^9, 3.6932296491465197`*^9}, {
   3.6932296904250884`*^9, 3.6932297134186444`*^9}, {3.693229748263383*^9, 
   3.6932297809611044`*^9}, {3.6932308110630655`*^9, 3.693230887986189*^9}, 
   3.693231311160925*^9, {3.6932313870086255`*^9, 3.693231387261767*^9}, {
   3.693300257298705*^9, 3.693300990881487*^9}, {3.6933010948551283`*^9, 
   3.6933011038372164`*^9}, {3.6933011352536983`*^9, 3.693301291501009*^9}, {
   3.693301360678998*^9, 3.693301846650869*^9}, {3.6933018835332117`*^9, 
   3.6933019831666975`*^9}, {3.6933020216715317`*^9, 3.693302099051983*^9}, {
   3.6933021369545527`*^9, 3.6933023594457426`*^9}, {3.693315004372259*^9, 
   3.693315011074277*^9}, {3.6944413361908827`*^9, 3.694441336907129*^9}, {
   3.6950542188467774`*^9, 3.695054222592431*^9}, {3.6950542990197506`*^9, 
   3.695054307656605*^9}, {3.695055223340433*^9, 3.695055253120858*^9}, {
   3.695055384838611*^9, 3.6950553878557982`*^9}, {3.6950554421005893`*^9, 
   3.6950555642412815`*^9}, {3.695055732966177*^9, 3.6950557465022993`*^9}, {
   3.6950558046684055`*^9, 3.695055961220101*^9}, {3.695055998668761*^9, 
   3.6950560162157063`*^9}, {3.695056048840163*^9, 3.695056146211532*^9}, {
   3.6950561862654486`*^9, 3.695056188190776*^9}, {3.6950562373677807`*^9, 
   3.6950562879516363`*^9}, {3.6950563517744646`*^9, 3.695056360712323*^9}, {
   3.69505860651243*^9, 3.695058635588434*^9}, {3.695058684806075*^9, 
   3.6950588940516233`*^9}, {3.6957164552525945`*^9, 
   3.6957164560312014`*^9}, {3.6957168591079035`*^9, 
   3.6957169851976123`*^9}, {3.695717024315192*^9, 3.695717055967568*^9}, {
   3.695717541243352*^9, 3.695717560925682*^9}, 3.6957176038835087`*^9, {
   3.6957178788805103`*^9, 3.6957178831140776`*^9}, {3.6957179221867228`*^9, 
   3.6957179708748155`*^9}, 3.695718071534438*^9, {3.69571902099082*^9, 
   3.695719034182557*^9}, {3.695719110436449*^9, 3.69571912465912*^9}, {
   3.6959981424530063`*^9, 3.695998143402657*^9}, {3.695998201800911*^9, 
   3.6959982211236086`*^9}, 3.696161679540288*^9, {3.696332885830512*^9, 
   3.69633291986983*^9}, {3.6963330735158176`*^9, 3.6963330774044304`*^9}, {
   3.6963331566111712`*^9, 3.6963331767939215`*^9}, {3.696592128005638*^9, 
   3.696592200325493*^9}, {3.696592280079686*^9, 3.696592300895893*^9}, {
   3.696592360614642*^9, 3.6965924391532173`*^9}, {3.696592549000717*^9, 
   3.6965926737509665`*^9}, {3.6965927230303907`*^9, 3.696592776632204*^9}, {
   3.696592858783024*^9, 3.6965928838162374`*^9}, {3.6965929149072313`*^9, 
   3.696592957987955*^9}, {3.6965930011830645`*^9, 3.696593001767194*^9}, {
   3.6965931015144644`*^9, 3.6965931654384584`*^9}, 3.6965931976879473`*^9, {
   3.6965932301462927`*^9, 3.6965932334864273`*^9}, {3.6965933569359655`*^9, 
   3.6965933577742367`*^9}, {3.696593390597328*^9, 3.6965934361026325`*^9}, {
   3.69659349189392*^9, 3.696593496582985*^9}, {3.6965935305307894`*^9, 
   3.696593532985401*^9}, {3.6965936048453135`*^9, 3.6965936500412455`*^9}, {
   3.696593703183982*^9, 3.6965937451325016`*^9}, {3.6965938330555153`*^9, 
   3.696593888009883*^9}, {3.696593996396145*^9, 3.6965943945158587`*^9}, {
   3.696594455320829*^9, 3.6965947103520412`*^9}, 3.696594768684037*^9, {
   3.696594815028183*^9, 3.696594823298046*^9}, {3.6965948702502565`*^9, 
   3.696595114616662*^9}, {3.6965951697312756`*^9, 3.6965953069777794`*^9}, {
   3.6965953500124445`*^9, 3.696595353751785*^9}, {3.6965953948831806`*^9, 
   3.6965954213916507`*^9}, {3.696595542553995*^9, 3.6965955448754787`*^9}, {
   3.6965956361847277`*^9, 3.69659568404626*^9}, {3.696595734352703*^9, 
   3.6965957496578636`*^9}, {3.696595795766102*^9, 3.6965958031733503`*^9}, {
   3.696595870299922*^9, 3.6965959033890886`*^9}, {3.69659594497962*^9, 
   3.6965960170554657`*^9}, {3.696596069740856*^9, 3.6965960719006443`*^9}, {
   3.696596115793432*^9, 3.6965961457518997`*^9}, {3.6965962116946173`*^9, 
   3.6965962545251417`*^9}, {3.696596513453669*^9, 3.696596515787285*^9}, 
   3.696596667129428*^9, {3.696596717699503*^9, 3.696596905098714*^9}, {
   3.6965969520835447`*^9, 3.696597023631856*^9}, {3.6965971034463863`*^9, 
   3.696597122891425*^9}, {3.6965975434946456`*^9, 3.696597546602838*^9}, {
   3.696597678096383*^9, 3.696597688330096*^9}, {3.6965978572829094`*^9, 
   3.6965979026996202`*^9}, {3.6965980212576485`*^9, 3.6965980251793203`*^9}, 
   3.6966112031725936`*^9, {3.696611352492113*^9, 3.6966113711786222`*^9}, {
   3.6966114660470867`*^9, 3.6966114941486444`*^9}, {3.696611603631793*^9, 
   3.6966117017799177`*^9}, {3.696700266768712*^9, 3.696700288898875*^9}, {
   3.6967004337486825`*^9, 3.6967004344970875`*^9}, {3.696700470331721*^9, 
   3.696700811186071*^9}, 3.6967008770696635`*^9, {3.69806251910773*^9, 
   3.6980625541108*^9}, 3.6980625975942183`*^9, {3.698062632771715*^9, 
   3.6980628199497538`*^9}, 3.6980632337317467`*^9, {3.6980648304601855`*^9, 
   3.6980648325027876`*^9}, {3.698065066304674*^9, 3.698065079166938*^9}, {
   3.698065285455764*^9, 3.6980652965729313`*^9}, {3.6980653380167575`*^9, 
   3.6980653446492004`*^9}, {3.6980654471979094`*^9, 3.6980655292188916`*^9}, 
   3.6980655608374662`*^9, {3.698065604769106*^9, 3.698065619074422*^9}, {
   3.6980656675506783`*^9, 3.6980657993549433`*^9}, {3.6980658534383354`*^9, 
   3.698065966443425*^9}, {3.6980660365747347`*^9, 3.6980662024756727`*^9}, {
   3.6980662555999365`*^9, 3.698066332245663*^9}, {3.698066967983133*^9, 
   3.698067007227691*^9}, {3.6980670546053877`*^9, 3.698067056006934*^9}, {
   3.6980670908888907`*^9, 3.6980671669030037`*^9}, {3.6980724764654927`*^9, 
   3.698072477326563*^9}, 3.698072882773279*^9, {3.698072926956035*^9, 
   3.698073002792399*^9}, {3.6980735228888316`*^9, 3.6980736363143997`*^9}, {
   3.6980736736873636`*^9, 3.6980736762855873`*^9}, {3.698073733371315*^9, 
   3.6980738176139774`*^9}, {3.698074115673706*^9, 3.698074151883384*^9}, {
   3.6980741951740847`*^9, 3.698074199709016*^9}, {3.6980745246005197`*^9, 
   3.6980745474711885`*^9}, {3.698074601676409*^9, 3.69807460485203*^9}, {
   3.6980746715422163`*^9, 3.6980746777413116`*^9}, {3.6980791312936554`*^9, 
   3.69807925534293*^9}, {3.698079396933419*^9, 3.698079417484049*^9}, 
   3.6980842057440357`*^9, {3.6982409454848895`*^9, 3.6982412171955957`*^9}, {
   3.698241250091914*^9, 3.698241286441023*^9}, {3.698241327342353*^9, 
   3.6982413450801177`*^9}, {3.6982415966143312`*^9, 3.698241607293414*^9}, {
   3.698241638323495*^9, 3.6982416395132837`*^9}, {3.6982416887425785`*^9, 
   3.698241696773405*^9}, {3.698241822416162*^9, 3.6982418436196356`*^9}, {
   3.6982418853778315`*^9, 3.6982419724720964`*^9}, {3.6982684593176923`*^9, 
   3.6982685497169113`*^9}, {3.6982685851762476`*^9, 3.698268651698173*^9}, {
   3.6982687051849484`*^9, 3.6982688063507752`*^9}, {3.6982817507720194`*^9, 
   3.698281838841721*^9}, {3.6983178004506273`*^9, 3.6983178149373293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980732393627605`*^9, 3.6980732540080023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"MDGP", " ", "Edges"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"DGEdgesMDGP", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.698268659292677*^9, 3.698268679682145*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700227972582433*^9, 3.7009866394887466`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"x", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.698073269371405*^9, 3.6980732758917685`*^9}, {
  3.6980733132091875`*^9, 3.698073412714217*^9}, {3.698073837244851*^9, 
  3.6980738825713406`*^9}, {3.6980739630820827`*^9, 3.6980739865670257`*^9}, {
  3.6980740243601036`*^9, 3.698074078671706*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.700227972713275*^9, 3.7009866395601463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", 
   RowBox[{"x", ",", "4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980740869154997`*^9, 3.698074087535412*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.7002279727288876`*^9, 3.700986639593414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", "x", "]"}]}]}], "Input",
 CellChangeTimes->{{3.698074093754369*^9, 3.698074100719349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7002279727455196`*^9, 3.700986639593414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "backbone"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"x", "=", 
   RowBox[{"DGRandom3DBackbone", "[", 
    RowBox[{"5", ",", "\"\<HomogeneousCoords\>\"", ",", "0"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980743791997128`*^9, 3.6980744057210426`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Points\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",",
         "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.5576826958314687`"}], ",", "1.4397797896232558`", ",",
         "0.0795072332908515`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.136445192257518`"}], ",", "1.0062171226148575`", ",", 
        RowBox[{"-", "1.2642685614410127`"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"TorsionAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "3.196870667905843`", ",", 
      "5.0002209312044`"}], "}"}]}], ",", 
   RowBox[{"\<\"CovalentBondLengths\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1.526`", ",", "1.526`", ",", "1.526`", ",", "1.526`"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"PlaneRotationAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1.91`", ",", "1.91`", ",", "1.91`"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7002279727813935`*^9, 3.7009866396505623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "exact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698074330586739*^9, 3.698074347158475*^9}, {
   3.698074722476389*^9, 3.6980747337900963`*^9}, {3.6980789816254253`*^9, 
   3.6980789916984963`*^9}, 3.698232826976427*^9, 3.698233064477606*^9, 
   3.69823428647866*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.0632566539669885`", "3.0632566539669885`", 
      "3.0632566539669885`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "2.7051334947407817`", "2.7051334947407817`", 
      "2.7051334947407817`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "2.951441474943536`", "2.951441474943536`", 
      "2.951441474943536`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.5260000000000005`", "1.5260000000000005`", 
      "1.5260000000000005`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700227972849409*^9, 3.7009866397243185`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "MDGP", " ", "random", " ", "instance", " ", 
    "with", " ", "inexact", " ", "distances"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980789964236283`*^9, 3.6980790439016924`*^9}, {
   3.698079080507471*^9, 3.6980791021393194`*^9}, 3.698232826999941*^9, 
   3.6982330644946165`*^9, 3.6982342864951715`*^9, {3.698241389853842*^9, 
   3.6982414361845713`*^9}, {3.6982421743828087`*^9, 3.698242181708167*^9}, {
   3.6983178850819316`*^9, 3.6983179125065937`*^9}}],

Cell[BoxData["4.288816299894698`"], "Output",
 CellChangeTimes->{
  3.6983178428323784`*^9, {3.698317886872686*^9, 3.6983179129467597`*^9}, 
   3.700227972888526*^9, 3.7009866397243185`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.8368555582100927`", "3.4531700023890837`", 
      "4.220541114031103`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.288816299894698`", "3.8599346699052286`", 
      "4.717697929884168`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "2.9518075424717574`", "2.6566267882245818`", 
      "3.2469882967189334`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000005`", "1.5260000000000005`", 
      "1.5260000000000005`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.698317842837381*^9, {3.6983178868776894`*^9, 3.6983179129517574`*^9}, 
   3.700227972888526*^9, 3.7009866397399445`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot Routines\n",
 StyleBox["DGPlot3DBackbone, DGPlotAdjacencyMatrix", "Subitem",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698067020384124*^9, 3.6980670292797318`*^9}, {
  3.69807933406898*^9, 3.6980793390359116`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980799303095355`*^9, 3.698079937820016*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGPlot3DBackbone", ",", "\[IndentingNewLine]", "DGPlotAdjacencyMatrix"}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{"X_", ",", "r_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"objs", "=", 
        RowBox[{"{", "}"}]}], ",", "single", ",", "k", ",", "Y"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Plots", " ", "the", " ", "points", " ", "using", " ", "the", " ", 
       "coordinates", " ", "of", " ", 
       RowBox[{"X", "[", "\"\<Points\>\"", "]"}], " ", "property"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"single", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"single", ",", 
        RowBox[{"Y", "=", 
         RowBox[{"{", "X", "}"}]}], ",", 
        RowBox[{"Y", "=", "X"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "Y", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"objs", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"Y", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "d"}], "]"}]}], "}"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
       RowBox[{"objs", ",", "\[IndentingNewLine]", " ", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"DiagonalCovering_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "n", ",", "ei", ",", "ej", ",", "edges", ",", 
       "primitives", ",", "add"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"inverting", " ", "edges", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"n", "-", 
            RowBox[{
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"primitives", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", "edges", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plot", " ", "diagonal", " ", "covering"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"DiagonalCovering", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "edges", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"add", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "edges", "]"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ej", "=", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"add", ",", "\[IndentingNewLine]", 
              RowBox[{"PrependTo", "[", 
               RowBox[{"primitives", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Red", ",", 
                  RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "ei", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"primitives", ",", "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "+", "1", "-", "i"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698067066932127*^9, 3.6980670691426945`*^9}, {
  3.6980671902539835`*^9, 3.698067204062685*^9}, {3.698072477390606*^9, 
  3.698072477433634*^9}, {3.700987271372648*^9, 3.7009872875874596`*^9}, {
  3.700987323104432*^9, 3.7009874696514378`*^9}, {3.700987505505695*^9, 
  3.700987529023263*^9}, {3.7009875975775332`*^9, 3.7009877752900534`*^9}, {
  3.700987878201973*^9, 3.7009878784024715`*^9}, {3.700987950788203*^9, 
  3.7009880153453655`*^9}, {3.7009924409184427`*^9, 3.700992486222743*^9}, {
  3.7009926305790386`*^9, 3.700992654396882*^9}, {3.7009926852740664`*^9, 
  3.7009929240122814`*^9}, {3.7009929569973097`*^9, 3.700993026603757*^9}, {
  3.700993113636631*^9, 3.70099315839818*^9}, {3.7009932005168066`*^9, 
  3.7009932252977724`*^9}, {3.7009936381442947`*^9, 3.70099364635505*^9}, {
  3.7009938366151433`*^9, 3.70099384037185*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980799499995937`*^9, 3.698079957872316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "a", " ", "simple", " ", "a", " ", "backbone"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGRandom3DBackbone", "[", "7", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{
     RowBox[{"x", "[", "\"\<Points\>\"", "]"}], ",", "0.1", ",", "0.04"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698079970912464*^9, 3.698080010863962*^9}, {
   3.6980800447884617`*^9, 3.6980800500019207`*^9}, {3.7009874748140745`*^9, 
   3.7009874888528194`*^9}, {3.70098769231281*^9, 3.7009876933628187`*^9}, 
   3.7009877878708878`*^9, {3.7009878646324606`*^9, 3.700987907848855*^9}, {
   3.7009880253623495`*^9, 3.7009880288635263`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], 
    SphereBox[{-4.064800474635995, 
     2.8779159781195105`, -0.10741652965576196`}, 0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.870545601484745, 3.538956579781622, 1.2541878061228762`}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.5589282915110543`, 
     1.4393402921998082`, -0.05023847249163404}, 0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.3882119877482126`, 3.529217583841145, 1.6164973554655149`}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{-1.526, 0, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.1]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5589282915110543`, 
      1.4393402921998082`, -0.05023847249163404}, {-4.064800474635995, 
      2.8779159781195105`, -0.10741652965576196`}, {-3.870545601484745, 
      3.538956579781622, 1.2541878061228762`}, {-2.3882119877482126`, 
      3.529217583841145, 1.6164973554655149`}}, 0.04]}},
  Axes->False,
  Boxed->False,
  ImageSize->{367.0095091289905, 377.08721944881637`},
  ViewPoint->{-3.087193246069486, 0.690705035610816, -1.200901501041953},
  ViewVertical->{-0.4779644044200919, 
   2.219541640480513, -0.6523757692051235}]], "Output",
 CellChangeTimes->{
  3.7002279790097675`*^9, 3.7009866461542673`*^9, 3.7009872182974606`*^9, {
   3.7009874760167675`*^9, 3.700987489423585*^9}, 3.70098755718104*^9, {
   3.7009876789923763`*^9, 3.7009877204752636`*^9}, {3.7009877534126325`*^9, 
   3.7009877885025434`*^9}, {3.700987865266094*^9, 3.700987908519017*^9}, {
   3.7009879595367813`*^9, 3.700988029470483*^9}, 3.700992491654879*^9, 
   3.7009929300015554`*^9, 3.7009929645573397`*^9, {3.7009929967843885`*^9, 
   3.7009930308142433`*^9}, 3.7009936500141087`*^9, 3.700993845309556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "adjacency", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "True"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698080062339603*^9, 3.6980801360647244`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{10, 1}, {10, 10}, {1, 10}}],
     "Triangle"]}, 
   {PointSize[Medium], 
    PointBox[{{2, 10}, {3, 10}, {4, 10}, {5, 10}, {6, 10}, {7, 10}, {8, 10}, {
     9, 10}, {10, 10}, {3, 9}, {4, 9}, {5, 9}, {6, 9}, {7, 9}, {8, 9}, {9, 
     9}, {10, 9}, {4, 8}, {5, 8}, {6, 8}, {7, 8}, {8, 8}, {9, 8}, {10, 8}, {5,
      7}, {6, 7}, {7, 7}, {8, 7}, {9, 7}, {10, 7}, {6, 6}, {7, 6}, {8, 6}, {9,
      6}, {10, 6}, {7, 5}, {8, 5}, {9, 5}, {10, 5}, {8, 4}, {9, 4}, {10, 4}, {
     9, 3}, {10, 3}, {10, 2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 10}, {10, 1}}]}},
  Axes->True,
  AxesOrigin->{1, 1},
  GridLines->Automatic,
  Ticks->{Automatic, {{1, 
      FormBox["10", TraditionalForm]}, {2, 
      FormBox["9", TraditionalForm]}, {3, 
      FormBox["8", TraditionalForm]}, {4, 
      FormBox["7", TraditionalForm]}, {5, 
      FormBox["6", TraditionalForm]}, {6, 
      FormBox["5", TraditionalForm]}, {7, 
      FormBox["4", TraditionalForm]}, {8, 
      FormBox["3", TraditionalForm]}, {9, 
      FormBox["2", TraditionalForm]}, {10, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.7002279792248244`*^9, 3.7009866463393383`*^9}]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2) Check Solution and Standard Solvers", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution Analysis \n",
 StyleBox["DGRelativeResidue,", "Text",
  FontSlant->"Italic"],
 StyleBox[" DGLDME, DGRMSD", "Item",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698080472408944*^9, 3.6980804768391886`*^9}, {
   3.6980819993394966`*^9, 3.6980819997147427`*^9}, {3.69808505769368*^9, 
   3.698085064416663*^9}, {3.6980850988719807`*^9, 3.6980851081311226`*^9}, 
   3.7003143420681887`*^9, {3.700316618932584*^9, 3.7003166283211555`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980817616089787`*^9, 3.6980817644118385`*^9}, {
  3.698081995870195*^9, 3.698081997682396*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGRelativeResidue", ",", "DGRMSD", ",", "DGLDME"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "k", ",", "lij", ",", "uij", ",", " ", "dij", ",", 
        "numberOfEdges", ",", "E", ",", "error"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numberOfEdges", "=", 
        RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfEdges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "numberOfEdges"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"j", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"error", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"lij", "-", "dij"}]}], "}"}], "]"}], "/", "lij"}], 
             ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"dij", "-", "uij"}]}], "}"}], "]"}], "/", "uij"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"Solution\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"Quality\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of nodes      : \>\"", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of edges      : \>\"", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Relative error bounds: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "error", "]"}], ",", 
              RowBox[{"Max", "[", "error", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Mean relative error  : \>\"", ",", 
            RowBox[{"Mean", "[", "error", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "error", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculates", " ", "the", " ", "relative", " ", "residue", " ", "of", 
      " ", "the", " ", 
      StyleBox[
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}],
       FontSlant->"Italic"], " ", "considering", " ", "only", " ", "the", " ", 
      RowBox[{"nodes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eij", ",", "j", ",", "k", ",", "V", ",", "Xi", ",", "Xj", ",", "Dij", 
        ",", "Lij", ",", "Uij", ",", "errorDij", ",", "nid"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"current", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Xi", "=", 
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "indentifies", " ", "which", " ", "nodes", " ", "has", " ", "been", 
         " ", "already", " ", "fixed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nid", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "i"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "i"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nid", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", "k"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "considering", " ", "only", " ", "the", " ", "precedent", " ", 
         "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"V", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"nid", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<V=\>\"", ",", "V"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"errorDij", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "V", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"neighbor", " ", "index"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"V", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"neighbor", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Xj", "=", 
           RowBox[{"X", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"actual", " ", "distance"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"Xi", ",", "Xj"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"distance", " ", "bounds"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"error", " ", "Dij"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"eij", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Lij", "-", "Dij"}], ")"}], "/", "Lij"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dij", "-", "Uij"}], ")"}], "/", "Uij"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "error"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eij", ">", "errorDij"}], ",", 
            RowBox[{"errorDij", "=", "eij"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "errorDij", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGLDME", "[", 
     RowBox[{"G_", ",", "X_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "E", ",", 
        RowBox[{"ldme", "=", "0"}], ",", "lij", ",", "uij", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ldme", "+=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lij", "-", "dij"}], ",", 
              RowBox[{"dij", "-", "uij"}], ",", "0"}], "]"}], "^", 
            "2"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"ldme", "/", 
          RowBox[{"Length", "[", "E", "]"}]}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRMSD", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xc", ",", "yc", ",", "x", ",", "y", ",", "U", ",", "D", ",", "V", ",", 
      "rmsd"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"calculating", " ", "centers"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xc", "=", 
      RowBox[{"Mean", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yc", "=", 
      RowBox[{"Mean", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "translation", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "xc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "yc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "svd", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "D", ",", "V"}], "}"}], "=", 
      RowBox[{"SingularValueDecomposition", "[", "V", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"U", ".", 
       RowBox[{"Transpose", "[", "V", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"x", ".", "V"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rmsd", "=", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"x", "-", "y"}], ",", "\"\<Frobenius\>\""}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"rmsd", ",", "V", ",", "x", ",", "y"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.694502972960245*^9, {3.698067367481141*^9, 3.698067395833313*^9}, {
   3.698067426273737*^9, 3.6980674351745768`*^9}, {3.698067476857498*^9, 
   3.698067483945337*^9}, {3.698072477617757*^9, 3.6980724776993113`*^9}, {
   3.698080496562684*^9, 3.698080532662128*^9}, {3.6980805663762627`*^9, 
   3.6980805821927524`*^9}, {3.6980806901517887`*^9, 3.698080796669462*^9}, {
   3.6980808393943543`*^9, 3.698080998395549*^9}, {3.6980810288677597`*^9, 
   3.698081062766244*^9}, {3.6980810944827795`*^9, 3.6980812551239653`*^9}, {
   3.6980812941803694`*^9, 3.698081718035078*^9}, 3.698081759366491*^9, {
   3.6980821303298736`*^9, 3.698082131928934*^9}, {3.6980823171869106`*^9, 
   3.6980823242021375`*^9}, {3.6980824851120887`*^9, 3.6980824974522734`*^9}, 
   3.6980826051157875`*^9, {3.698082694063882*^9, 3.698083018317852*^9}, {
   3.698083054638441*^9, 3.698083067468951*^9}, {3.698083643291038*^9, 
   3.698083685250867*^9}, {3.698084961578022*^9, 3.6980849783856697`*^9}, {
   3.6980850110823555`*^9, 3.6980850259131927`*^9}, {3.6980850881383624`*^9, 
   3.6980851960959663`*^9}, 3.698085227318336*^9, {3.698085299672714*^9, 
   3.69808532412243*^9}, {3.6982596118859816`*^9, 3.6982596174341617`*^9}, {
   3.7003143019857407`*^9, 3.7003143249318533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.679350148964155*^9, 3.679350152549901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "DGRMSD", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.814700", ",", "0.097500", ",", "0.157600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.905800", ",", "0.278500", ",", "0.970600"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.127000", ",", "0.546900", ",", "0.957200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.913400", ",", "0.957500", ",", "0.485400"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.632400", ",", "0.964900", ",", "0.800300"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.167723", ",", "5.509229", ",", "5.376972"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.921716", ",", "5.625914", ",", "6.161379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.265461", ",", "5.705450", ",", "6.339958"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.936486", ",", "6.432611", ",", "5.883000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.680966", ",", "5.982123", ",", "5.893736"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "X", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "Y", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmsd", ",", "Q", ",", "x", ",", "y"}], "}"}], "=", 
     RowBox[{"DGRMSD", "[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"rmsd", ",", 
     RowBox[{"MatrixForm", "[", "Q", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.698085535985145*^9, 3.6980855913598733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.8147`", "0.0975`", "0.1576`"},
       {"0.9058`", "0.2785`", "0.9706`"},
       {"0.127`", "0.5469`", "0.9572`"},
       {"0.9134`", "0.9575`", "0.4854`"},
       {"0.6324`", "0.9649`", "0.8003`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6.167723`", "5.509229`", "5.376972`"},
       {"5.921716`", "5.625914`", "6.161379`"},
       {"5.265461`", "5.70545`", "6.339958`"},
       {"5.936486`", "6.432611`", "5.883`"},
       {"5.680966`", "5.982123`", "5.893736`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.700986646434845*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1903780078674813`", ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9566747069429383`", "0.2765434897775246`", "0.09108898592755987`"},
       {
        RowBox[{"-", "0.2837391927655152`"}], "0.9556736038779582`", 
        "0.07861318807737516`"},
       {
        RowBox[{"-", "0.06531137408152571`"}], 
        RowBox[{"-", "0.10105276400268803`"}], "0.9927349914770809`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.29768724295102145`", 
        RowBox[{"-", "0.3608305893562868`"}], 
        RowBox[{"-", "0.5375458406210714`"}]},
       {"0.2803853677346845`", 
        RowBox[{"-", "0.24481645226982926`"}], "0.29207490110980117`"},
       {
        RowBox[{"-", "0.5399533209580477`"}], 
        RowBox[{"-", "0.2023316197900854`"}], "0.22893192966359216`"},
       {"0.12668626232402228`", "0.45521845637971775`", 
        RowBox[{"-", "0.13552948575729132`"}]},
       {
        RowBox[{"-", "0.16480555205168068`"}], "0.3527602050364837`", 
        "0.1520684956049697`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3732525999999998`", 
        RowBox[{"-", "0.34183640000000004`"}], 
        RowBox[{"-", "0.5540370000000001`"}]},
       {"0.12724560000000018`", 
        RowBox[{"-", "0.22515140000000056`"}], "0.23036999999999974`"},
       {
        RowBox[{"-", "0.5290093999999996`"}], 
        RowBox[{"-", "0.1456154000000005`"}], "0.4089489999999998`"},
       {"0.14201560000000057`", "0.5815455999999992`", 
        RowBox[{"-", "0.04800900000000041`"}]},
       {
        RowBox[{"-", "0.11350440000000006`"}], "0.13105759999999922`", 
        RowBox[{"-", "0.03727300000000078`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7009866467489786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "relative", " ", "error"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
     RowBox[{"x", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], ",", "True"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980818764703417`*^9, 3.698081886967304*^9}, {
   3.698081945433242*^9, 3.698081988827022*^9}, 3.698082060929844*^9, {
   3.6980820951910677`*^9, 3.6980820983881884`*^9}, {3.6980821446609993`*^9, 
   3.6980822671425567`*^9}, {3.6980825518738685`*^9, 3.698082555863014*^9}, {
   3.6980830370027437`*^9, 3.6980830414366865`*^9}, {3.6980830871540065`*^9, 
   3.6980830909235086`*^9}, {3.69808533986487*^9, 3.698085364223053*^9}, 
   3.698085405098055*^9, {3.6980854633787403`*^9, 3.698085468666749*^9}, {
   3.700314324969633*^9, 3.700314324969633*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986646780682*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866468336616`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866468336616`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866468336616`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Mean relative error  : ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986646849252*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.700986646849252*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986646849252*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986646849252*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986646849252*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.0034097574495173984`", ",", "0.05481435059713191`"}], "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {0.0034097574495173984`, 0.05481435059713191}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986646849252*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "0.01990845145437108`"}],
  SequenceForm["Mean relative error  : ", 0.01990845145437108],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986646864879*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.05481435059713191`", ",", "0.015022208898714973`", ",", 
   "0.011066685116437871`", ",", "0.0036695128604975883`", ",", 
   "0.0034097574495173984`", ",", "0.04071714289912987`", ",", 
   "0.01721870238826707`", ",", "0.026494096008070685`", ",", 
   "0.011718398391929785`", ",", "0.014953659934013652`"}], "}"}]], "Output",
 CellChangeTimes->{3.700986646864879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "+=", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGRelativeResidue", "[", 
  RowBox[{
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "4"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6980825719787025`*^9, 3.6980825962794266`*^9}, {
   3.698259647769782*^9, 3.698259648639358*^9}, 3.7003143250008965`*^9}],

Cell[BoxData["0.1022703842524302`"], "Output",
 CellChangeTimes->{3.700986646933671*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Methods\n",
 StyleBox["DGNSolve, DGAllEdgesSolver, DGOptSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6944402487750998`*^9, 3.694440261776547*^9}, {
   3.6950520111428094`*^9, 3.695052013723016*^9}, {3.6980831506880984`*^9, 
   3.6980831767769136`*^9}, {3.698133371312555*^9, 3.6981333836562414`*^9}, {
   3.698135930449641*^9, 3.698135948486604*^9}, 3.700322100281624*^9}],

Cell[CellGroupData[{

Cell["DGNSolve - Nonlinear equations", "Section",
 CellChangeTimes->{{3.695980774599187*^9, 3.6959807890422645`*^9}, {
   3.698083438792361*^9, 3.6980834456569133`*^9}, 3.6981342346777525`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGNSolve", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNSolve", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "i", ",", "j", ",", "d", ",", "d12", ",", "eqs", ",", "xi", 
       ",", "xj", ",", "x", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "i", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<x\>\"", ",", 
            RowBox[{"ToString", "[", "xi", "]"}], ",", 
            RowBox[{"ToString", "[", "xj", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xj", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "i", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xi", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xj", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eqs", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "some", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"d12", "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"eqs", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "d12"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<eqs=\>\"", ",", 
        RowBox[{"TableForm", "[", "eqs", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"x", "=", 
        RowBox[{"NSolve", "[", 
         RowBox[{"eqs", ",", "x", ",", "Reals"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<x=\>\"", ",", 
        RowBox[{"TableForm", "[", "x", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "convert", " ", "relations", " ", "to", " ", "scalar", " ", "matrix"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "1"}], ",", 
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959807931988735`*^9, 3.6959808651195087`*^9}, {
   3.695981319470448*^9, 3.6959816654278154`*^9}, {3.695981696802899*^9, 
   3.69598193790523*^9}, {3.6959820413830986`*^9, 3.695982084209268*^9}, {
   3.695982167030732*^9, 3.6959821710191383`*^9}, {3.6959822184038534`*^9, 
   3.695982247628214*^9}, {3.695982304465785*^9, 3.6959823353580503`*^9}, {
   3.695982376103098*^9, 3.6959823800191355`*^9}, {3.695982800673107*^9, 
   3.695982828060028*^9}, {3.6959828702427034`*^9, 3.695982871401049*^9}, {
   3.6959829164454274`*^9, 3.6959830004868164`*^9}, {3.6959888042983994`*^9, 
   3.695988828501298*^9}, {3.695988895041767*^9, 3.695988955372898*^9}, {
   3.6959890712644*^9, 3.695989072049646*^9}, {3.695989103696677*^9, 
   3.6959891990099096`*^9}, {3.695989270528079*^9, 3.695989273022993*^9}, {
   3.6959893888410683`*^9, 3.695989444627164*^9}, {3.695989528041983*^9, 
   3.695989547018861*^9}, {3.695989592844425*^9, 3.6959896880344257`*^9}, {
   3.695989726077453*^9, 3.695989755804819*^9}, {3.695989869082122*^9, 
   3.6959899107177277`*^9}, {3.695989946606575*^9, 3.695989951887924*^9}, {
   3.695989995530915*^9, 3.6959901298385134`*^9}, {3.6959901809553523`*^9, 
   3.695990198460229*^9}, {3.6959902513619356`*^9, 3.695990370372473*^9}, {
   3.6959904207088675`*^9, 3.695990423239892*^9}, {3.6959904662502933`*^9, 
   3.6959905066632338`*^9}, {3.6959905389614973`*^9, 3.695990555189827*^9}, {
   3.695990592406352*^9, 3.6959905969143476`*^9}, {3.695990862448014*^9, 
   3.6959908807504*^9}, {3.696000226158333*^9, 3.6960002763225875`*^9}, 
   3.696000556861759*^9, 3.698072480850925*^9, {3.6980831666521983`*^9, 
   3.6980831691908817`*^9}, {3.6980832306786633`*^9, 3.698083358132863*^9}, {
   3.698083461150189*^9, 3.698083470133647*^9}, {3.698083534682835*^9, 
   3.6980835526362424`*^9}, {3.698083691959817*^9, 3.6980837054017324`*^9}, 
   3.6980838454526196`*^9, {3.6980839403088937`*^9, 3.6980839490326786`*^9}, {
   3.6980843544733815`*^9, 3.698084438317992*^9}, {3.6980845362034473`*^9, 
   3.6980845613631344`*^9}, {3.6980846745877323`*^9, 
   3.6980846848488035`*^9}, {3.698084721247966*^9, 3.698084721453601*^9}, {
   3.698084817232126*^9, 3.6980848637684917`*^9}, {3.6981335546141305`*^9, 
   3.698133654313637*^9}, 3.6981337103556285`*^9, {3.698133846774843*^9, 
   3.6981338552489643`*^9}, {3.698133886967635*^9, 3.698133943451098*^9}, {
   3.698135573538377*^9, 3.698135617321416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.6981342657108355`*^9, 3.698134272655942*^9}, {
  3.6981343900066195`*^9, 3.6981343928237734`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959821725045357`*^9, 3.6959822057965155`*^9}, {
   3.695982268679414*^9, 3.6959823441443806`*^9}, {3.695982920850732*^9, 
   3.6959829209352903`*^9}, {3.6959889733898363`*^9, 
   3.6959890309626265`*^9}, {3.6959890820892334`*^9, 
   3.6959890852169228`*^9}, {3.6959894614439697`*^9, 
   3.6959894618659773`*^9}, {3.695990141312871*^9, 3.6959901626141343`*^9}, {
   3.6959902092902546`*^9, 3.695990213653076*^9}, {3.6959906056694627`*^9, 
   3.6959907132884865`*^9}, {3.69599074403419*^9, 3.6959908171476326`*^9}, {
   3.695990848691627*^9, 3.695990848783781*^9}, {3.6959909472498837`*^9, 
   3.695990958030756*^9}, {3.6959909990686064`*^9, 3.6959911014281673`*^9}, {
   3.6959913603925343`*^9, 3.695991378520133*^9}, {3.695991433093545*^9, 
   3.6959914428903313`*^9}, 3.695991528666456*^9, {3.69599293111237*^9, 
   3.6959929457414904`*^9}, {3.6959998819368143`*^9, 
   3.6959998966497583`*^9}, {3.6980724808624325`*^9, 3.698072480872939*^9}, {
   3.698083371004901*^9, 3.6980833815779133`*^9}, {3.6980834763637805`*^9, 
   3.6980835167999725`*^9}, {3.698083560105197*^9, 3.698083627113807*^9}, {
   3.698083718150687*^9, 3.698083729336606*^9}, {3.6980837656231737`*^9, 
   3.6980837817648787`*^9}, {3.6980839882216706`*^9, 3.698083993838396*^9}, {
   3.698084540828515*^9, 3.698084565599944*^9}, {3.6980849011127596`*^9, 
   3.6980849128890715`*^9}, {3.698133031309068*^9, 3.698133037710814*^9}, {
   3.698133273852414*^9, 3.6981332754589806`*^9}, 3.6981338077458096`*^9, {
   3.6981339586967115`*^9, 3.6981339613164473`*^9}, 3.6981341845189857`*^9, 
   3.698134282590531*^9, 3.6981347590256243`*^9, 3.6982328270239544`*^9, 
   3.6982330645126257`*^9, 3.6982342865056777`*^9, 3.700314325047763*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700986647002395*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "1.`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     1., ($CellContext`x11 - $CellContext`x31)^2 + ($CellContext`x12 - \
$CellContext`x32)^2 + ($CellContext`x13 - $CellContext`x33)^2 == 
     1., ($CellContext`x21 - $CellContext`x31)^2 + ($CellContext`x22 - \
$CellContext`x32)^2 + ($CellContext`x23 - $CellContext`x33)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 1., $CellContext`x11 == 0, $CellContext`x12 == 
     0, $CellContext`x13 == 0, $CellContext`x21 == 1., $CellContext`x22 == 
     0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986647002395*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{"x11", "\[Rule]", "0.`"}], 
       RowBox[{"x12", "\[Rule]", "0.`"}], 
       RowBox[{"x13", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x21", "\[Rule]", "1.`"}], 
       RowBox[{"x22", "\[Rule]", "0.`"}], 
       RowBox[{"x23", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x31", "\[Rule]", "0.`"}], 
       RowBox[{"x32", "\[Rule]", 
        RowBox[{"-", "0.9461485789259028`"}]}], 
       RowBox[{"x33", "\[Rule]", "0.3237327085675732`"}]},
      {
       RowBox[{"x41", "\[Rule]", "0.3920674858148788`"}], 
       RowBox[{"x42", "\[Rule]", "0.12068110699822138`"}], 
       RowBox[{"x43", "\[Rule]", "1.288134677947717`"}]},
      {
       RowBox[{"x51", "\[Rule]", "0.7812591758266134`"}], 
       RowBox[{"x52", "\[Rule]", "0.9009284425215245`"}], 
       RowBox[{"x53", "\[Rule]", "0.3748071414683701`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{$CellContext`x11 -> 0., $CellContext`x12 -> 
      0., $CellContext`x13 -> 0.}, {$CellContext`x21 -> 1., $CellContext`x22 -> 
      0., $CellContext`x23 -> 0.}, {$CellContext`x31 -> 
      0., $CellContext`x32 -> -0.9461485789259028, $CellContext`x33 -> 
      0.3237327085675732}, {$CellContext`x41 -> 
      0.3920674858148788, $CellContext`x42 -> 
      0.12068110699822138`, $CellContext`x43 -> 
      1.288134677947717}, {$CellContext`x51 -> 
      0.7812591758266134, $CellContext`x52 -> 
      0.9009284425215245, $CellContext`x53 -> 0.3748071414683701}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648124301*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0.`", "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "1.`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], "0.`", 
      RowBox[{"-", "0.9461485789259028`"}], "0.3237327085675732`"},
     {
      TagBox["4",
       HoldForm], "0.3920674858148788`", "0.12068110699822138`", 
      "1.288134677947717`"},
     {
      TagBox["5",
       HoldForm], "0.7812591758266134`", "0.9009284425215245`", 
      "0.3748071414683701`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Output",
 CellChangeTimes->{3.700986648124301*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986648124301*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648124301*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648124301*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.5543122344752192`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.5543122344752192`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648139928*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "8.786542118747292`*^-16"}],
  SequenceForm["Mean relative error  : ", 8.786542118747292*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648139928*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.698134374303359*^9, 3.6981343879453526`*^9}, {
  3.6981344825839243`*^9, 3.6981345190736256`*^9}, {3.6981347408180485`*^9, 
  3.6981347432411566`*^9}, {3.6981349406590924`*^9, 3.698134953907379*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959914809267282`*^9, 3.6959914981254253`*^9}, {
   3.695991562961543*^9, 3.6959916431277523`*^9}, {3.6959920787623296`*^9, 
   3.695992087048052*^9}, {3.696946214015137*^9, 3.69694621608445*^9}, {
   3.6980724808839464`*^9, 3.698072480897456*^9}, {3.698084028617964*^9, 
   3.698084105895296*^9}, {3.6980858921917467`*^9, 3.6980858944297314`*^9}, {
   3.698085934280164*^9, 3.6980859343897343`*^9}, {3.6980859899040556`*^9, 
   3.698086052129326*^9}, {3.6981330460023603`*^9, 3.698133057702621*^9}, 
   3.6981330886126213`*^9, {3.6981331326739793`*^9, 3.6981331488507085`*^9}, {
   3.698133253865158*^9, 3.698133296529955*^9}, {3.698133447048286*^9, 
   3.6981334486803684`*^9}, {3.698133997471426*^9, 3.698133999296138*^9}, {
   3.6981342041044755`*^9, 3.698134209840279*^9}, {3.6981343631304502`*^9, 
   3.6981343650707364`*^9}, {3.698134496173938*^9, 3.6981345005568447`*^9}, {
   3.6981345313367596`*^9, 3.6981345910158415`*^9}, 3.6981346249008155`*^9, 
   3.698134701853427*^9, {3.6981348637946124`*^9, 3.6981349007781425`*^9}, 
   3.698232827103007*^9, 3.698233064531138*^9, 3.6982342865161858`*^9, 
   3.7003143251011763`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700986648240622*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", 
         "0.48442079485399997`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.46455244687799996`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.06095072934799999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.18868906230899998`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "0.6960034445704992`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     0.48442079485399997`, ($CellContext`x11 - $CellContext`x31)^2 + \
($CellContext`x12 - $CellContext`x32)^2 + ($CellContext`x13 - \
$CellContext`x33)^2 == 
     0.46455244687799996`, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     0.06095072934799999, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 0.18868906230899998`, $CellContext`x11 == 
     0, $CellContext`x12 == 0, $CellContext`x13 == 0, $CellContext`x21 == 
     0.6960034445704992, $CellContext`x22 == 0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866482562475`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483369627`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986648339964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483403783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483403783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0.9999999999999999, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483403783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "1.`"}],
  SequenceForm["Mean relative error  : ", 1.],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483403783`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981347628831825`*^9, 3.698134786324731*^9}, 
   3.698134823515397*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981348054584217`*^9, 3.698134807957579*^9}, 
   3.698232827128024*^9, 3.69823306454965*^9, 3.6982342865201874`*^9, 
   3.7003143251480494`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.`", "1.`", "1.`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7009866483716297`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x43"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "2.0000000000000004`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x53"}], ")"}], "2"]}], "\[Equal]", "1.`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x41", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x42", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x43", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "2.9999999999999996`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "1.`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     1., ($CellContext`x11 - $CellContext`x31)^2 + ($CellContext`x12 - \
$CellContext`x32)^2 + ($CellContext`x13 - $CellContext`x33)^2 == 
     1., ($CellContext`x11 - $CellContext`x41)^2 + ($CellContext`x12 - \
$CellContext`x42)^2 + ($CellContext`x13 - $CellContext`x43)^2 == 
     1., ($CellContext`x11 - $CellContext`x51)^2 + ($CellContext`x12 - \
$CellContext`x52)^2 + ($CellContext`x13 - $CellContext`x53)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x41)^2 + \
($CellContext`x22 - $CellContext`x42)^2 + ($CellContext`x23 - \
$CellContext`x43)^2 == 
     2.0000000000000004`, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 
     1., ($CellContext`x31 - $CellContext`x41)^2 + ($CellContext`x32 - \
$CellContext`x42)^2 + ($CellContext`x33 - $CellContext`x43)^2 == 
     2.0000000000000004`, ($CellContext`x31 - $CellContext`x51)^2 + \
($CellContext`x32 - $CellContext`x52)^2 + ($CellContext`x33 - \
$CellContext`x53)^2 == 
     1., ($CellContext`x41 - $CellContext`x51)^2 + ($CellContext`x42 - \
$CellContext`x52)^2 + ($CellContext`x43 - $CellContext`x53)^2 == 
     2.9999999999999996`, $CellContext`x11 == 0, $CellContext`x12 == 
     0, $CellContext`x13 == 0, $CellContext`x21 == 1., $CellContext`x22 == 
     0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866483716297`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{"x11", "\[Rule]", "0.`"}], 
       RowBox[{"x12", "\[Rule]", "0.`"}], 
       RowBox[{"x13", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x21", "\[Rule]", "1.`"}], 
       RowBox[{"x22", "\[Rule]", "0.`"}], 
       RowBox[{"x23", "\[Rule]", "0.`"}]},
      {
       RowBox[{"x31", "\[Rule]", "0.`"}], 
       RowBox[{"x32", "\[Rule]", "0.11356406042150105`"}], 
       RowBox[{"x33", "\[Rule]", 
        RowBox[{"-", "0.9935306760138731`"}]}]},
      {
       RowBox[{"x41", "\[Rule]", "0.`"}], 
       RowBox[{"x42", "\[Rule]", "0.9935306760138729`"}], 
       RowBox[{"x43", "\[Rule]", "0.1135640604215011`"}]},
      {
       RowBox[{"x51", "\[Rule]", "1.`"}], 
       RowBox[{"x52", "\[Rule]", "0.11356406042150105`"}], 
       RowBox[{"x53", "\[Rule]", 
        RowBox[{"-", "0.9935306760138731`"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{$CellContext`x11 -> 0., $CellContext`x12 -> 
      0., $CellContext`x13 -> 0.}, {$CellContext`x21 -> 1., $CellContext`x22 -> 
      0., $CellContext`x23 -> 0.}, {$CellContext`x31 -> 0., $CellContext`x32 -> 
      0.11356406042150105`, $CellContext`x33 -> -0.9935306760138731}, \
{$CellContext`x41 -> 0., $CellContext`x42 -> 
      0.9935306760138729, $CellContext`x43 -> 
      0.1135640604215011}, {$CellContext`x51 -> 1., $CellContext`x52 -> 
      0.11356406042150105`, $CellContext`x53 -> -0.9935306760138731}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485425625`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0.`", "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "1.`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], "0.`", "0.11356406042150105`", 
      RowBox[{"-", "0.9935306760138731`"}]},
     {
      TagBox["4",
       HoldForm], "0.`", "0.9935306760138729`", "0.1135640604215011`"},
     {
      TagBox["5",
       HoldForm], "1.`", "0.11356406042150105`", 
      RowBox[{"-", "0.9935306760138731`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Output",
 CellChangeTimes->{3.7009866485425625`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7009866485425625`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485425625`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485581923`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.1102230246251565`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.1102230246251565`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485581923`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "6.075938985661148`*^-16"}],
  SequenceForm["Mean relative error  : ", 6.075938985661148*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485581923`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.6981343377716303`*^9, 3.6981343538603*^9}, {
  3.6981344661054945`*^9, 3.698134480170825*^9}, {3.698134734934148*^9, 
  3.6981347357797074`*^9}, {3.6981350119238586`*^9, 3.6981350132437344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698134194580659*^9, 3.6981342001503525`*^9}, {
   3.698134310771722*^9, 3.698134331373887*^9}, {3.6981350004322367`*^9, 
   3.6981350190771027`*^9}, 3.698232827151539*^9, 3.6982330645676622`*^9, 
   3.698234286524191*^9, 3.7003143251858363`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "0.9067104106681471`", "0.9067104106681471`", 
      "0.9067104106681471`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "0.5323895510404012`", "0.5323895510404012`", 
      "0.5323895510404012`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "0.5225119104173607`", "0.5225119104173607`", 
      "0.5225119104173607`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "0.7349697695252506`", "0.7349697695252506`", 
      "0.7349697695252506`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "0.5914445952251148`", "0.5914445952251148`", 
      "0.5914445952251148`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "0.6085463860290355`", "0.6085463860290355`", 
      "0.6085463860290355`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7009866485738144`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"eqs=\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x21"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x22"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x23"}], ")"}], "2"]}], "\[Equal]", 
         "0.48442079485399997`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.46455244687799996`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.8221237688139998`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x11", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x12", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x13", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.2834386340569999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x31"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x32"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x33"}], ")"}], "2"]}], "\[Equal]", 
         "0.06095072934799999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.2730186965279999`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x21", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x22", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x23", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.18868906230899998`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x41"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x42"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x43"}], ")"}], "2"]}], "\[Equal]", 
         "0.540180562116`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x31", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x32", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x33", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.34980670922099993`"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x41", "-", "x51"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x42", "-", "x52"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x43", "-", "x53"}], ")"}], "2"]}], "\[Equal]", 
         "0.37032870394899997`"}]},
       {
        RowBox[{"x11", "\[Equal]", "0"}]},
       {
        RowBox[{"x12", "\[Equal]", "0"}]},
       {
        RowBox[{"x13", "\[Equal]", "0"}]},
       {
        RowBox[{"x21", "\[Equal]", "0.6960034445704992`"}]},
       {
        RowBox[{"x22", "\[Equal]", "0"}]},
       {
        RowBox[{"x23", "\[Equal]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["eqs=", 
   TableForm[{($CellContext`x11 - $CellContext`x21)^2 + ($CellContext`x12 - \
$CellContext`x22)^2 + ($CellContext`x13 - $CellContext`x23)^2 == 
     0.48442079485399997`, ($CellContext`x11 - $CellContext`x31)^2 + \
($CellContext`x12 - $CellContext`x32)^2 + ($CellContext`x13 - \
$CellContext`x33)^2 == 
     0.46455244687799996`, ($CellContext`x11 - $CellContext`x41)^2 + \
($CellContext`x12 - $CellContext`x42)^2 + ($CellContext`x13 - \
$CellContext`x43)^2 == 
     0.8221237688139998, ($CellContext`x11 - $CellContext`x51)^2 + \
($CellContext`x12 - $CellContext`x52)^2 + ($CellContext`x13 - \
$CellContext`x53)^2 == 
     0.2834386340569999, ($CellContext`x21 - $CellContext`x31)^2 + \
($CellContext`x22 - $CellContext`x32)^2 + ($CellContext`x23 - \
$CellContext`x33)^2 == 
     0.06095072934799999, ($CellContext`x21 - $CellContext`x41)^2 + \
($CellContext`x22 - $CellContext`x42)^2 + ($CellContext`x23 - \
$CellContext`x43)^2 == 
     0.2730186965279999, ($CellContext`x21 - $CellContext`x51)^2 + \
($CellContext`x22 - $CellContext`x52)^2 + ($CellContext`x23 - \
$CellContext`x53)^2 == 
     0.18868906230899998`, ($CellContext`x31 - $CellContext`x41)^2 + \
($CellContext`x32 - $CellContext`x42)^2 + ($CellContext`x33 - \
$CellContext`x43)^2 == 
     0.540180562116, ($CellContext`x31 - $CellContext`x51)^2 + \
($CellContext`x32 - $CellContext`x52)^2 + ($CellContext`x33 - \
$CellContext`x53)^2 == 
     0.34980670922099993`, ($CellContext`x41 - $CellContext`x51)^2 + \
($CellContext`x42 - $CellContext`x52)^2 + ($CellContext`x43 - \
$CellContext`x53)^2 == 0.37032870394899997`, $CellContext`x11 == 
     0, $CellContext`x12 == 0, $CellContext`x13 == 0, $CellContext`x21 == 
     0.6960034445704992, $CellContext`x22 == 0, $CellContext`x23 == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866485934486`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x=\"\>", "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm["x=", 
   TableForm[{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866486362114`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7009866486362114`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866486362114`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866486362114`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0.9999999999999999, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648652435*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "1.`"}],
  SequenceForm["Mean relative error  : ", 1.],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986648655435*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGOptSolver - Optimization", "Section",
 CellChangeTimes->{{3.6981358277685385`*^9, 3.698135859657689*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6945082211811686`*^9, 3.6945082350165057`*^9}, {
   3.694508353277437*^9, 3.694508357986554*^9}, {3.694509485037609*^9, 
   3.6945095303971586`*^9}, 3.6981358145867968`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOptSolverFobj", ",", "DGOptSolver"}], "]"}]], "Input",
 CellChangeTimes->{{3.69813587956089*^9, 3.698135900942071*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DGOptSolverFobj", "[", 
   RowBox[{"i_", ",", "j_", ",", "d_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "=", "0"}], ",", "numberOfAtoms", ",", "ncols", ",", 
      "nrows", ",", "k", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"f", "+=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "^", 
            "2"}]}], ")"}], "^", "2"}]}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGOptSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "f", ",", "y", ",", "v", ",", "w", ",", "i", ",", 
      "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "z", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"z", ",", 
        RowBox[{"3", "*", "numberOfAtoms"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", ":=", 
      RowBox[{
       RowBox[{"DGOptSolverFobj", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "#"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "y"}], "}"}], "=", 
      RowBox[{"NMinimize", "[", 
       RowBox[{
        RowBox[{"f", "[", "y", "]"}], ",", "y"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", "iloc", "]"}], "]"}], "[", 
          RowBox[{"[", "jloc", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwl0G1IU3EUBvC10AqKEBGNcuxmiDJ1mHmFJdF6AbdCxrq9KFrOUJsKRY3I
EExmJisj8u72cvU65wcjkGEur9SHcBGVisxc2IvaWFtik2WNBk2D7vPvw+EH
h4dzOIeqPm+skctksjyp4Fqvq+pBe1jb4XGaoCFovQrtqmXizOn7LZB2jbVC
YSHDBtnsA7dJXk874I9kfhTm3PjkgRWLCa+gWagMkfn2CeKkmPobKjL3EQ3b
N8Rh73iMWG7ZuvEh9vhWNsES2yIHvy5HiGyQEuGH0rwx+Cdr+v2wZOeV8Cxc
mW7yw2bhUgie6vtucEsyujNGGOj/XAan1EMm+C5WXgcHXzc1ws2HuGdwMuoh
+oTxl/CcanYGptd756FbTy1B+fqEKNxd4FyF1KO3257iDm9zOuzv2ZEFM125
anh5z7oCWE2XFMI5pVsDb70o3gvv0kVaWDGceASqjmsqYd1jtgauFVnNsCfp
ZgP8q/logQwTb4PxnwsdUMm334P5J8Vu6IvxLpLjDo7AtIYyEW4RlkKwS6b4
Bdt0zCr0MmeJ81qHfETyy2FdErwgpKRA/9CxNFh/LaKEiYHSDNK/cyIbPndU
EVkfT8NgzgCxNrCzGEbMtcTuCfuUiL9wrV64q1BhsXaGtUdH/2szDpqcknPJ
T4iUwJmhJnSxEer96hb4Zv83Yn70ehfU9fEs/AeJrpd4
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.694443377092915*^9, 3.69444339110975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"C", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "5", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"DGOptSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "y", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6981360211258264`*^9, 3.6981360483600693`*^9}, {
   3.6981360788457885`*^9, 3.6981360876976595`*^9}, {3.6981362425377584`*^9, 
   3.6981362793146505`*^9}, 3.700314325248334*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986652503125*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866525061274`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Number of edges      : ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866525096292`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.847644284407285`*^-10", ",", "1.9590185010275593`*^-8"}], 
    "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {2.847644284407285*^-10, 
   1.9590185010275593`*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986652513131*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "7.256538707913062`*^-9"}],
  SequenceForm["Mean relative error  : ", 7.256538707913062*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986652516634*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGOptSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698136335320798*^9, 3.698136365971901*^9}, 
   3.698136419643999*^9, {3.6981365233312697`*^9, 3.6981365309578285`*^9}, 
   3.6982328271785564`*^9, 3.698233064588676*^9, 3.6982342865286937`*^9, 
   3.700314325301742*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7009866529399157`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7009866531514683`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866531514683`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of edges      : ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866531514683`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.4374620027146118`*^-9", ",", "1.759691728446197`*^-8"}], 
    "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {2.4374620027146118`*^-9, 1.759691728446197*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866531514683`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "8.907273066324697`*^-9"}],
  SequenceForm["Mean relative error  : ", 8.907273066324697*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866531514683`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"D", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "100", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "It", " ", "can", " ", "take", " ", "a", " ", "lot", " ", "of", " ", 
    RowBox[{
     RowBox[{"time", "!!"}], "!"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", "100"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "k", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"MDGAllPairs", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"eij", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"0.50", 
           RowBox[{"Length", "[", "eij", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"MDGCreateInstanceFromSolutionAndPairs", "[", 
        RowBox[{"x", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"MDGOptSolver", "[", 
        RowBox[{"i", ",", "j", ",", "d"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"CheckMDGSolution", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "y", ",", "False"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"f", ">", "0.01"}], ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"k", ",", "10"}], "]"}], "\[Equal]", "0"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{Seed,Error}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "f"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.694509866767895*^9, 3.6945098916890173`*^9}, {
   3.694510093362407*^9, 3.6945101089935975`*^9}, {3.694510169324609*^9, 
   3.6945101956066246`*^9}, {3.69451025730608*^9, 3.6945103028323336`*^9}, {
   3.694510333348612*^9, 3.6945103372228565`*^9}, {3.694510375701194*^9, 
   3.6945103983735256`*^9}, {3.6945104397134395`*^9, 
   3.6945105412985134`*^9}, {3.6945116235631905`*^9, 
   3.6945117051807966`*^9}, {3.694511748936102*^9, 3.694511751267356*^9}, {
   3.694511828015873*^9, 3.69451182813148*^9}, {3.6945118732869487`*^9, 
   3.6945119184429393`*^9}, {3.694512052222779*^9, 3.694512063708476*^9}, {
   3.694512108959667*^9, 3.694512122482854*^9}, {3.6945122224563627`*^9, 
   3.6945122549831843`*^9}, {3.6945122929003396`*^9, 3.6945123044169874`*^9}, 
   3.6945123946710157`*^9, {3.6945124631794453`*^9, 3.6945125052038*^9}, {
   3.6945126788009663`*^9, 3.6945126790627346`*^9}, {3.6945130547371454`*^9, 
   3.6945130548839865`*^9}, {3.6945135081915073`*^9, 3.694513508353938*^9}, {
   3.694519946259391*^9, 3.6945199465126286`*^9}, {3.6945256242761097`*^9, 
   3.6945256246907053`*^9}, {3.694525800598526*^9, 3.6945258010835543`*^9}, {
   3.6957188810695877`*^9, 3.695718892192297*^9}, {3.6959992062308846`*^9, 
   3.695999250403311*^9}, {3.69807248104105*^9, 3.6980724810570617`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGAllEdgesSolver - Solver for complete distance matrices", "Section",
 CellChangeTimes->{{3.694440270104432*^9, 3.6944402903355665`*^9}, {
   3.694508362021762*^9, 3.6945083745408287`*^9}, {3.6945086248727016`*^9, 
   3.694508627838993*^9}, {3.6945094785730658`*^9, 3.6945094800751905`*^9}, {
   3.6945095153284197`*^9, 3.6945095197760963`*^9}, {3.6981344064787574`*^9, 
   3.6981344229460754`*^9}, 3.7003220682508497`*^9}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698135035451965*^9, 3.6981350399559503`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGAllEdgesSolver", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGAllEdgesSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "k", ",", "m", ",", "\[Lambda]", ",", "v", ",", 
      "x", ",", "i", ",", "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "i", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"j", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"\[Lambda]", ":", 
       RowBox[{"eigenvalues", " ", "and", " ", "v"}], ":", "eigenvectors"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "iloc", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "iloc", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}]}], ")"}], "/", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "v"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"m", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"getting", " ", "solution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "[", 
          RowBox[{"[", "iloc", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6945071563672113`*^9, 3.694507320236541*^9}, {
   3.694507374181988*^9, 3.6945074899994063`*^9}, {3.694508412302476*^9, 
   3.694508475668783*^9}, {3.694508530004429*^9, 3.694508561182579*^9}, {
   3.6959987033856926`*^9, 3.695998723358347*^9}, 3.698072480922473*^9, {
   3.6981333587577276`*^9, 3.698133359033911*^9}, {3.698133390002452*^9, 
   3.6981334023261256`*^9}, {3.698135717156601*^9, 3.6981357371274214`*^9}, {
   3.700322084102275*^9, 3.7003220841179*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.698135059085639*^9, 3.6981350698968105`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints where DGNSolve fails", \
"Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136136952828*^9, 
  3.6981361465947227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGAllEdgesSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698135080509349*^9, 3.6981351226262827`*^9}, {
   3.698135768710869*^9, 3.698135776496533*^9}, 3.698232827201572*^9, 
   3.698233064605688*^9, 3.6982342865326967`*^9, 3.7003143253707542`*^9, 
   3.700322084150173*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.6960034445704992`", "0.6960034445704992`", 
      "0.6960034445704992`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "0.681580843978174`", "0.681580843978174`", 
      "0.681580843978174`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "0.9067104106681471`", "0.9067104106681471`", 
      "0.9067104106681471`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "0.5323895510404012`", "0.5323895510404012`", 
      "0.5323895510404012`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "0.24688201503552257`", "0.24688201503552257`", 
      "0.24688201503552257`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "0.5225119104173607`", "0.5225119104173607`", 
      "0.5225119104173607`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "0.4343835428616052`", "0.4343835428616052`", 
      "0.4343835428616052`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "0.7349697695252506`", "0.7349697695252506`", 
      "0.7349697695252506`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "0.5914445952251148`", "0.5914445952251148`", 
      "0.5914445952251148`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "0.6085463860290355`", "0.6085463860290355`", 
      "0.6085463860290355`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.700986653266387*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.700986653317653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986653317653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986653317653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.6613082559535828`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 1.6613082559535828`*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986653317653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "8.664269797408378`*^-16"}],
  SequenceForm["Mean relative error  : ", 8.664269797408378*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866533332787`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 100 points all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136155945425*^9, 
  3.6981361596994143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGAllEdgesSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981361619569116`*^9, 3.69813618311895*^9}, 
   3.700314325402018*^9, 3.700322084181426*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7009866548809214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "100"}],
  SequenceForm["Number of nodes      : ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866548809214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "4950"}],
  SequenceForm["Number of edges      : ", 4950],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866548809214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.491015447149124`*^-15"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.491015447149124*^-15}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866548809214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "3.3893396575641737`*^-16"}],
  SequenceForm["Mean relative error  : ", 3.3893396575641737`*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866548969536`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3) Ordering, BuildUP, BP and IBP", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.698278975629528*^9, 3.6982789823035517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordering\n",
 StyleBox["DGOrdering, DGNaturalOrdering", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.696934517173864*^9, 3.6969345185367727`*^9}, 
   3.6969346750258846`*^9, 3.6981366777421827`*^9, {3.698220137774626*^9, 
   3.698220138030796*^9}, {3.698268878385317*^9, 3.69826888252829*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.696934578835677*^9, 3.696934581103756*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOrdering", ",", "DGNaturalOrdering"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGOrdering", "[", 
    RowBox[{"G_", ",", "C_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Finds", " ", "an", " ", "order", " ", "such", " ", "that", " ", "all", 
      " ", "atoms", " ", "could", " ", "be", " ", "determined", " ", "by", 
      " ", "following", " ", "it"}], ";", " ", "\[IndentingNewLine]", "   ", 
     RowBox[{
      StyleBox["C",
       FontSlant->"Italic"], 
      StyleBox[":",
       FontSlant->"Italic"], " ", 
      StyleBox[
       RowBox[{
       "Initial", " ", "clique", " ", "used", " ", "to", " ", "start", " ", 
        "the", " ", "ordering"}],
       FontSlant->"Italic"]}], 
     StyleBox[";",
      FontSlant->"Italic"], 
     StyleBox["\[IndentingNewLine]",
      FontSlant->"Italic"], 
     StyleBox["   ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"G", ":", " ", 
       RowBox[{"Instance", " ", "graph"}]}],
      FontSlant->"Italic"], 
     StyleBox[";",
      FontSlant->"Italic"]}], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "neighs", ",", "nAtoms", ",", 
       "nFixedAtoms", ",", "nFixedNeighs", ",", "atomsToBeFixed", ",", 
       "atomOrder", ",", " ", "order", ",", "minNeighsToBeFixed"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minNeighsToBeFixed", "=", 
       RowBox[{"Length", "[", "C", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedNeighs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomOrder", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomsToBeFixed", "=", "C"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nFixedNeighs", "[", 
        RowBox[{"[", "C", "]"}], "]"}], "=", "Infinity"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedAtoms", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "atomsToBeFixed", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<nFixedNeighs=\>\"", ",", "nFixedNeighs"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<atomsToBeFixed=\>\"", ",", "atomsToBeFixed"}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"i", "=", 
          RowBox[{"First", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "the", " ", "first", " ", "element"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"atomsToBeFixed", "=", 
          RowBox[{"Rest", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"skipped", ":", " ", 
           RowBox[{"already", " ", "fixed"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"atomOrder", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Fixing: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"atomOrder", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"++", "nFixedAtoms"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<atomOrder=\>\"", ",", "atomOrder"}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "neighs", " ", "score"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"neighs", "=", 
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<neighs=\>\"", ",", "neighs"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "neighs", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"neighs", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"nFixedNeighs", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"atomOrder", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"nFixedNeighs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
                "minNeighsToBeFixed"}], " ", "&&", 
               RowBox[{"Not", "[", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nFixedAtoms", "\[NotEqual]", "nAtoms"}], ",", 
        RowBox[{
        "Throw", "[", 
         "\"\<InvalidOrdering: It has not been possible the set \
ordering.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"order", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"order", "[", 
        RowBox[{"[", "atomOrder", "]"}], "]"}], "=", "order"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "order", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNaturalOrdering", "[", "G_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6980611506193595`*^9, 3.698061152492004*^9}, 
   3.698072481134613*^9, {3.698136626484687*^9, 3.6981366266763134`*^9}, {
   3.69813681557358*^9, 3.698136816036886*^9}, {3.698137537734437*^9, 
   3.698137590182723*^9}, {3.698235991898496*^9, 3.6982360627464857`*^9}, {
   3.6982361166922655`*^9, 3.698236179383627*^9}, {3.6982362219318867`*^9, 
   3.698236263425408*^9}, {3.698268890318713*^9, 3.6982689596448994`*^9}, 
   3.6982762453630505`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{
  3.696335250480235*^9, {3.6963366417863913`*^9, 3.6963366443081226`*^9}, {
   3.69693446673809*^9, 3.6969344703216915`*^9}, {3.6969345925486455`*^9, 
   3.6969345996344643`*^9}}],

Cell[CellGroupData[{

Cell["Simple Example: The initial ordering is ok!", "Subsubsection",
 CellChangeTimes->{{3.696934614705723*^9, 3.6969346254263096`*^9}, {
  3.6981609206416388`*^9, 3.698160922002041*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6963351391970744`*^9, 3.6963351781245375`*^9}, {
   3.6963352250157614`*^9, 3.6963352441326723`*^9}, {3.6966991356467*^9, 
   3.6966991599848185`*^9}, {3.696699212467594*^9, 3.696699212567856*^9}, 
   3.696699760565385*^9, {3.69669979452897*^9, 3.6966998652771873`*^9}, {
   3.6967008913917418`*^9, 3.696700901880651*^9}, {3.696934477541465*^9, 
   3.6969344787881804`*^9}, {3.6969346029648733`*^9, 
   3.6969346047214565`*^9}, {3.6969459408755083`*^9, 3.696945941822027*^9}, 
   3.6980724811436186`*^9, {3.698136903087622*^9, 3.698136916136277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{-0.9510565162951538, 
      0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
      0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
      0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {
       {RGBColor[0.5, 0., 0.], 
        LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 
         4}, {3, 5}, {4, 5}}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{-0.9510565162951538, 
       0.3090169943749484}, {-0.5877852522924726, -0.8090169943749468}, {
       0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
       0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{5, 1}, {5, 5}, {1, 5}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 5}, {3, 5}, {4, 5}, {5, 5}, {3, 4}, {4, 4}, {5, 4}, {4, 
       3}, {5, 3}, {5, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 5}, {5, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["5", TraditionalForm]}, {2, 
        FormBox["4", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["2", TraditionalForm]}, {5, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7009866552642736`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552642736`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552642736`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Fixing: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552814064`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552814064`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {2, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552814064`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866552814064`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655297038*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Fixing: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655297038*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655297038*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655297038*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655297038*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655313106*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Fixing: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655316106*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553174305`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553174305`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "3"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553174305`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "4", "}"}]}],
  SequenceForm["atomsToBeFixed=", {4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553174305`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Fixing: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553174305`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553330584`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553330584`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553330584`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "5", "}"}]}],
  SequenceForm["atomsToBeFixed=", {5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866553330584`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Fixing: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655348682*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655348682*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986655348682*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.700986655348682*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Harder Example: The initial ordering is not valid", "Subsubsection",
 CellChangeTimes->{3.696934653673157*^9, 3.698160925305233*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LayeredGraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.696699222452924*^9, 3.6966993598737216`*^9}, {
   3.6966993928242817`*^9, 3.69669964645918*^9}, {3.6966996846742587`*^9, 
   3.6966996863586435`*^9}, {3.696699787441859*^9, 3.6966997902261276`*^9}, {
   3.696699983277195*^9, 3.696700066799402*^9}, {3.6967001159283457`*^9, 
   3.6967001463737307`*^9}, {3.696700378130589*^9, 3.696700406037734*^9}, {
   3.6967008496726646`*^9, 3.696700855375781*^9}, {3.6967012062244864`*^9, 
   3.6967012420923347`*^9}, {3.6967013615844746`*^9, 3.696701364078554*^9}, {
   3.6967014049615245`*^9, 3.6967014090833235`*^9}, {3.696934481921709*^9, 
   3.696934483419512*^9}, 3.698072481153125*^9, {3.698136927274665*^9, 
   3.698136934192253*^9}, {3.700563046326106*^9, 3.700563132903144*^9}, {
   3.700563163619388*^9, 3.7005631745071526`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1: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

      "], {
       {RGBColor[0.5, 0., 0.], 
        LineBox[{{1, 2}, {1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
          50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3}, {1, 64, 
          65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
          82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
          4}, {1, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
          124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
          137, 138, 139, 140, 141, 142, 5}, {1, 143, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 
          162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 
          175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
          188, 189, 190, 191, 192, 193, 194, 195, 6}, {2, 1}, {2, 3}, {2, 196,
           197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
          210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 4}, {2, 
          222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 
          235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
          248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 
          261, 262, 263, 264, 265, 6}, {2, 266, 267, 268, 269, 270, 271, 272, 
          273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 
          299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 7}, {2, 310, 
          311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 
          324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 
          337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 
          350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 
          8}, {3, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 
          375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 
          388, 1}, {3, 2}, {3, 4}, {3, 389, 390, 391, 392, 393, 394, 395, 396,
           397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 
          410, 411, 412, 413, 414, 5}, {3, 415, 416, 417, 418, 419, 420, 421, 
          422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 
          435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
          448, 449, 6}, {4, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 
          460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 
          473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 1}, {4, 
          485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 
          498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
          2}, {4, 3}, {4, 5}, {4, 511, 512, 513, 514, 515, 516, 517, 518, 519,
           520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 
          533, 534, 535, 536, 6}, {4, 537, 538, 539, 540, 541, 542, 543, 544, 
          545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 
          558, 559, 560, 561, 562, 7}, {4, 563, 564, 565, 566, 567, 568, 569, 
          570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 
          583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 
          596, 597, 8}, {5, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 
          608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 
          621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 
          634, 635, 636, 637, 638, 639, 640, 641, 1}, {5, 642, 643, 644, 645, 
          646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 
          659, 660, 661, 662, 663, 664, 665, 666, 667, 3}, {5, 4}, {5, 6}, {5,
           7}, {5, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
           680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 
          693, 8}, {6, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 
          705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 
          718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 
          731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 
          744, 745, 746, 1}, {6, 747, 748, 749, 750, 751, 752, 753, 754, 755, 
          756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 
          769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 
          782, 783, 784, 785, 786, 787, 788, 789, 790, 2}, {6, 791, 792, 793, 
          794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 
          807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 
          820, 821, 822, 823, 824, 825, 3}, {6, 826, 827, 828, 829, 830, 831, 
          832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 
          845, 846, 847, 848, 849, 850, 851, 4}, {6, 5}, {6, 8}, {7, 852, 853,
           854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 
          867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 
          880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
          893, 894, 895, 2}, {7, 896, 897, 898, 899, 900, 901, 902, 903, 904, 
          905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 
          918, 919, 920, 921, 4}, {7, 5}, {7, 8}, {8, 922, 923, 924, 925, 926,
           927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 
          940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 
          966, 967, 968, 969, 970, 971, 972, 973, 974, 2}, {8, 975, 976, 977, 
          978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 
          991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
           1004, 1005, 1006, 1007, 1008, 1009, 4}, {8, 1010, 1011, 1012, 1013,
           1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
          1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
          5}, {8, 6}, {8, 7}}]}, {InsetBox[
         FrameBox["1",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["2",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["3",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["4",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["5",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["6",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["7",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["8",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0., 6.}, {2., 5.}, {-1., 4.}, {2., 3.}, {0., 
       2.}, {-1., 1.}, {2., 1.}, {2., 0.}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{8, 1}, {8, 8}, {1, 8}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 8}, {3, 8}, {4, 8}, {7, 8}, {8, 8}, {3, 7}, {4, 7}, {5, 
       7}, {6, 7}, {8, 7}, {4, 6}, {7, 6}, {8, 6}, {6, 5}, {7, 5}, {8, 5}, {5,
        5}, {6, 4}, {7, 4}, {7, 3}, {8, 3}, {8, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 8}, {8, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["8", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["6", TraditionalForm]}, {4, 
        FormBox["5", TraditionalForm]}, {5, 
        FormBox["4", TraditionalForm]}, {6, 
        FormBox["3", TraditionalForm]}, {7, 
        FormBox["2", TraditionalForm]}, {8, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.7005630523329587`*^9, 3.7005631333854523`*^9}, {
   3.7005631683957567`*^9, 3.7005631749015045`*^9}, 3.700986655464388*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554815226`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {1, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554815226`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Fixing: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554815226`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 0, 0, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554815226`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "7", ",", "8"}], "}"}]}],
  SequenceForm["neighs=", {2, 3, 4, 7, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554815226`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 0, 0, 1, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554971495`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554971495`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Fixing: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554971495`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 0, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554971495`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "8", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866554971495`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1, 1, 1, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555127754`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}],
  SequenceForm["atomsToBeFixed=", {3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555127754`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Fixing: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555127754`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 0, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555127754`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "8"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 4, 7, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555127754`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "1", ",", "1", ",", "2", ",", "3"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 1, 1, 2, 3}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655528403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "4", "}"}]}],
  SequenceForm["atomsToBeFixed=", {4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655528403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Fixing: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655528403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655528403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "7", ",", "8", ",", "5", ",", "6"}],
     "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 7, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555444965`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2, 2, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555474973`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "8", "}"}]}],
  SequenceForm["atomsToBeFixed=", {8}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555489674`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Fixing: ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555489674`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 0, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555489674`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "7", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 2, 3, 4, 7, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555489674`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "2", ",", "3", ",", "4", ",", "4"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 2, 3, 4, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555489674`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "7", "}"}]}],
  SequenceForm["atomsToBeFixed=", {7}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Fixing: ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "0", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 0, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "8", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {1, 3, 4, 8, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "3", ",", "4", ",", "4", ",", "5"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 3, 4, 4, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "6", "}"}]}],
  SequenceForm["atomsToBeFixed=", {6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555645943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Fixing: ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "7", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 0, 7, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7", ",", "8", ",", "5"}], "}"}]}],
  SequenceForm["neighs=", {2, 4, 7, 8, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"nFixedNeighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]", ",", "\[Infinity]",
      ",", "4", ",", "4", ",", "5", ",", "6"}], "}"}]}],
  SequenceForm["nFixedNeighs=", {
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 
    DirectedInfinity[1], 4, 4, 5, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomsToBeFixed=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "5", "}"}]}],
  SequenceForm["atomsToBeFixed=", {5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fixing: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Fixing: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.700986655581724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"atomOrder=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "8", ",", "7", ",", "6", ",", 
     "5"}], "}"}]}],
  SequenceForm["atomOrder=", {1, 2, 3, 4, 8, 7, 6, 5}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555973544`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"neighs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7", ",", "6"}], "}"}]}],
  SequenceForm["neighs=", {2, 4, 7, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.700563052348575*^9, 3.7005631333879566`*^9}, {
   3.7005631683957567`*^9, 3.7005631749261055`*^9}, 3.7009866555973544`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "8", ",", "7", ",", "6", ",", "5"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.7005623277107277`*^9, {3.7005630523329587`*^9, 3.7005631333854523`*^9}, {
   3.7005631683957567`*^9, 3.7005631749015045`*^9}, 3.7009866555973544`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GeometricTransformationBox[
      GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}, {
        {RGBColor[0.5, 0., 0.], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
          6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {4, 
          7}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}}]}, {InsetBox[
          FrameBox["1",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 1], InsetBox[
          FrameBox["2",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 2], InsetBox[
          FrameBox["3",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 3], InsetBox[
          FrameBox["4",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 4], InsetBox[
          FrameBox["5",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 5], InsetBox[
          FrameBox["6",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 6], InsetBox[
          FrameBox["7",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 7], InsetBox[
          FrameBox["8",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 8]}}], {{
      0.007334089450707237, -0.008623418294631868}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {3.448487, 2.448487}},
    PlotRange->{{-0.262560402335323, 
     2.363043621017907}, {-0.14743738408999468`, 1.3269364568099522`}},
    PlotRangePadding->Automatic], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 7, 8, 5, 6}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
           7}, {2, 8}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 8}, {4, 5}, {4, 
           6}, {4, 7}, {7, 8}, {7, 5}, {8, 5}, {8, 6}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
           1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {
           1.095691072601297, 0.6505122461849997}, {1.0491244756787474`, 
           1.1794990727199575`}, {0.5531324991014905, 0.08045910464541084}, {
           2.100483218682584, 0.9014058445027913}, {1.8248187044662827`, 
           0.16135316934500915`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{6, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{7, 8}, 0.023421592724759938`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.023421592724759938`], 
             DiskBox[2, 0.023421592724759938`], 
             DiskBox[3, 0.023421592724759938`], 
             DiskBox[4, 0.023421592724759938`], 
             DiskBox[5, 0.023421592724759938`], 
             DiskBox[6, 0.023421592724759938`], 
             DiskBox[7, 0.023421592724759938`], 
             DiskBox[8, 0.023421592724759938`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", "True"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{3.7005622829975276`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GeometricTransformationBox[
      GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}, {
        {RGBColor[0.5, 0., 0.], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
          6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {4, 
          7}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}}]}, {InsetBox[
          FrameBox["1",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 1], InsetBox[
          FrameBox["2",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 2], InsetBox[
          FrameBox["3",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 3], InsetBox[
          FrameBox["4",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 4], InsetBox[
          FrameBox["5",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 5], InsetBox[
          FrameBox["6",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 6], InsetBox[
          FrameBox["7",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 7], InsetBox[
          FrameBox["8",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 8]}}], {{
      0.007334089450707237, -0.008623418294631868}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {3.448487, 2.448487}},
    PlotRange->{{-0.262560402335323, 
     2.363043621017907}, {-0.14743738408999468`, 1.3269364568099522`}},
    PlotRangePadding->Automatic], ",", 
   GraphicsBox[{
     {RGBColor[1, 0, 0], Opacity[0.2], 
      TagBox[PolygonBox[{{8, 1}, {8, 8}, {1, 8}}],
       "Triangle"]}, 
     {PointSize[Medium], 
      PointBox[{{2, 8}, {3, 8}, {4, 8}, {7, 8}, {8, 8}, {3, 7}, {4, 7}, {5, 
       7}, {6, 7}, {8, 7}, {4, 6}, {7, 6}, {8, 6}, {6, 5}, {7, 5}, {8, 5}, {5,
        5}, {6, 4}, {7, 4}, {7, 3}, {8, 3}, {8, 2}}]}, 
     {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 8}, {8, 1}}]}},
    Axes->True,
    AxesOrigin->{1, 1},
    GridLines->Automatic,
    Ticks->{Automatic, {{1, 
        FormBox["8", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["6", TraditionalForm]}, {4, 
        FormBox["5", TraditionalForm]}, {5, 
        FormBox["4", TraditionalForm]}, {6, 
        FormBox["3", TraditionalForm]}, {7, 
        FormBox["2", TraditionalForm]}, {8, 
        FormBox["1", TraditionalForm]}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7005622767484436`*^9, 3.700986655857421*^9}]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intersection of spheres\n",
 StyleBox["DGIntersect3Spheres, DGIntersect4Spheres", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6982194666379185`*^9, 3.6982194765995255`*^9}, {
   3.698220168167163*^9, 3.6982202742700357`*^9}, {3.698220398059785*^9, 
   3.698220406529903*^9}, 3.698220659834761*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGIntersect3Spheres", ",", "DGIntersect4Spheres"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIntersect3Spheres", "[", 
     RowBox[{"a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_"}],
      "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Gets", " ", "the", " ", "2", " ", "solutions", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "a"}], "||"}], "=", "ra"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "b"}], "||"}], "=", "rb"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "c"}], "||"}], "=", "rc"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "   ", 
       StyleBox["Input",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], 
       StyleBox[";",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
       StyleBox["a",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox["b",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      RowBox[{
       RowBox[{
        StyleBox["c",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"sphere", " ", "centers"}],
         FontWeight->"Plain"]}], ";", "\[IndentingNewLine]", "   ", "ra"}], 
      ",", "rb", ",", 
      RowBox[{
       RowBox[{"rc", ":", " ", 
        StyleBox[
         RowBox[{"respective", " ", "sphere", " ", "radius"}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox["   ",
        FontWeight->"Plain"], 
       StyleBox["Output",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], ";", "   ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["x",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"the", " ", "two", " ", "intersections", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ":", " ", 
            RowBox[{"positive", " ", "chirality", " ", "and", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ":", " ", 
            RowBox[{"negative", " ", "chirality"}]}], ")"}]}],
         FontWeight->"Plain"]}], ";"}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "A", ",", "x", ",", "p", ",", "dp", ",", "u", ",", "v", ",", 
        "w", ",", "du", ",", "dv", ",", "dw", ",", "dpu", ",", "AbsCos", ",", 
        "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "select", " ", "the", " ", "most", " ", "perpendicular", " ", "vertex",
         " ", "angle", " ", 
        RowBox[{"(", "stability", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AbsCos", "[", 
          RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"u", ",", "v"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Norm", "[", "u", "]"}], "*", 
            RowBox[{"Norm", "[", "v", "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w", ",", "du", ",", "dv", ",", "dw"}], 
          "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MinimalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"b", "-", "a"}], ",", 
                   RowBox[{"c", "-", "a"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "a", ",", "b", ",", "c", ",", "ra", ",", "rb", ",", "rc"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"c", "-", "b"}], ",", 
                   RowBox[{"a", "-", "b"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "b", ",", "c", ",", "a", ",", "rb", ",", "rc", ",", "ra"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"a", "-", "c"}], ",", 
                   RowBox[{"b", "-", "c"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "c", ",", "a", ",", "b", ",", "rc", ",", "ra", ",", "rb"}], 
                  "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
             "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"normal", " ", "to", " ", "the", " ", "plane", " ", 
          RowBox[{"(", 
           RowBox[{"u", ",", "v", ",", "w"}], ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"v", "-", "u"}], ",", 
            RowBox[{"w", "-", "u"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "-", "u"}], ",", 
           RowBox[{"w", "-", "u"}], ",", "n"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"v", ",", "v"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dv", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"w", ",", "w"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dw", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{"Dot", "[", 
            RowBox[{"n", ",", "u"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"A", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "select", " ", "the", " ", "factor", " ", "with", " ", "minimal", 
          " ", "canceling", " ", "effect", " ", 
          RowBox[{"(", "stability", ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "du"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MaximalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ra", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "a"}], "]"}]}], ")"}], "/", "ra"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", "ra"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rb", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "b"}], "]"}]}], ")"}], "/", "rb"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", "rb"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rc", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "c"}], "]"}]}], ")"}], "/", "rc"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "rc"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dpu", "=", 
         RowBox[{"Norm", "[", 
          RowBox[{"p", "-", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dp", "=", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"du", "+", "dpu"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"du", "-", "dpu"}], ")"}]}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"dp", "=", 
         RowBox[{"Re", "[", "dp", "]"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "+", 
           RowBox[{"dp", "*", "n"}]}], ",", 
          RowBox[{"p", "-", 
           RowBox[{"dp", "*", "n"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<a=\>\"", ",", "a", ",", "\"\<  ra=\>\"", ",", "ra", ",", 
           "\"\<  b=\>\"", ",", "b", ",", "\"\<  rb=\>\"", ",", "rb", ",", 
           "\"\<  c=\>\"", ",", "c", ",", "\"\<  rc=\>\"", ",", "rc"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<p=\>\"", ",", "p", ",", "\"\<  dp=\>\"", ",", "dp", ",", 
           "\"\<  x=\>\"", ",", "x"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calculating", " ", "max", " ", "relative", " ", "errors", " ", "of", 
         " ", "each", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "ra"}], 
                ")"}], "/", "ra"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rb"}], 
                ")"}], "/", "rb"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"c", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rc"}], 
                ")"}], "/", "rc"}]}], "}"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIntersect4Spheres", "[", 
    RowBox[{
    "a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_", ",", "d_",
      ",", "rd_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "error", ",", "errd1", ",", "errd2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "=", 
       RowBox[{"DGIntersect3Spheres", "[", 
        RowBox[{"a", ",", "ra", ",", "b", ",", "rb", ",", "c", ",", "rc"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd2", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"errd1", "<", "errd2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "errd1"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "errd2"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982194867257423`*^9, 3.6982194896711955`*^9}, {
   3.6982195521886597`*^9, 3.6982195574006166`*^9}, {3.698219658452036*^9, 
   3.6982197616420813`*^9}, {3.6982197929738626`*^9, 3.698220066685677*^9}, {
   3.6982202502951345`*^9, 3.6982206319197464`*^9}, {3.698220667243675*^9, 
   3.698220668644104*^9}, {3.6982374927691836`*^9, 3.6982376692978663`*^9}, {
   3.6982376993873615`*^9, 3.6982377116575003`*^9}, {3.6982377427296095`*^9, 
   3.6982378010688024`*^9}, {3.698238162700093*^9, 3.69823821610886*^9}, {
   3.698238503550205*^9, 3.6982385061164074`*^9}, {3.6982394287569656`*^9, 
   3.6982395461318145`*^9}, {3.6982396045652046`*^9, 
   3.6982396143261786`*^9}, {3.6982396607885056`*^9, 
   3.6982397285916595`*^9}, {3.6982397636183057`*^9, 3.698239783426839*^9}, {
   3.6982399533225765`*^9, 3.698239972728856*^9}, {3.6982400966089387`*^9, 
   3.6982401012365484`*^9}, 3.6982427393374405`*^9, {3.698243596521635*^9, 
   3.6982437164378223`*^9}, {3.6982437695877132`*^9, 
   3.6982437905316043`*^9}, {3.6983192514474745`*^9, 
   3.6983192996453114`*^9}, {3.6983193844490786`*^9, 3.698319388494842*^9}, {
   3.6983194281754827`*^9, 3.698319433003346*^9}, {3.6983196015623474`*^9, 
   3.698319630059145*^9}, {3.698319684615945*^9, 3.698319702038396*^9}, {
   3.6983221142065024`*^9, 3.6983221170274825`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "DGBuildUpSolver\n",
 StyleBox["DGBuildUpInitX, DGBuildUpSetX, DGBuildUpSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244132498234*^9, 
  3.698244132699868*^9}, {3.6982442429445033`*^9, 3.6982442478042264`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6808787874069276`*^9, 3.6808787932715735`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGBuildUpInitX", ",", "\[IndentingNewLine]", "DGBuildUpSetX", ",", 
    "\[IndentingNewLine]", "DGBuildUpSolver"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpInitX", "[", 
     RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i1", ",", "i2", ",", "i3", ",", "i4", ",", "d12", ",", "d13", ",", 
        "d14", ",", "d23", ",", "d24", ",", "d34", ",", "A", ",", "X", ",", 
        "X21", ",", "X31", ",", "X32", ",", "X41", ",", "X42", ",", "error"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
        "basis"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "d12", ",", "d13", ",", "d14", ",", "d23", ",", "d24", ",", "d34"}], 
         "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "i2"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "i4"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "four", " ", "atoms", " ", "in", " ", "the", " ", "basis"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "d12"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X21", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d13", "^", "2"}], "-", 
           RowBox[{"d23", "^", "2"}], "+", 
           RowBox[{"X21", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "X21"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X31", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"d13", "^", "2"}], "-", 
          RowBox[{"X31", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i4", "]"}], "]"}], ",", "error"}], "}"}], "=", 
        RowBox[{
         RowBox[{"DGIntersect3Spheres", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i1", "]"}], "]"}], ",", "d14", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i2", "]"}], "]"}], ",", "d24", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i3", "]"}], "]"}], ",", "d34"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpSetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "basis", ",", "x", ",", "i1", ",", 
        "i2", ",", "i3", ",", "i4", ",", "d1", ",", "d2", ",", "d3", ",", 
        "d4", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "4"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"basis", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{"neighs", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "basis", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
           RowBox[{"basis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i3", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i4", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "error"}], "}"}], "=", 
           RowBox[{"DGIntersect4Spheres", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i3", "]"}], "]"}], ",", "d3", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i4", "]"}], "]"}], ",", "d4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"error", "<", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "3"}], ")"}]}]}], ",", "Break"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"error", ">", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}]}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidSolution: A precise solution could not be found.\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G_", ",", "nodes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"DGBuildUpInitX", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "remaining", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "5"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"nodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"DGBuildUpSetX", "[", 
          RowBox[{"G", ",", "X", ",", "nodes", ",", "i"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.680878796715887*^9, 3.6808788985008335`*^9}, {
   3.6808789677890434`*^9, 3.680879020711442*^9}, {3.6808790793750415`*^9, 
   3.68087932980835*^9}, {3.6808794433580427`*^9, 3.680879452768545*^9}, {
   3.680879482957798*^9, 3.6808798572569814`*^9}, {3.6808801823844533`*^9, 
   3.6808802178347673`*^9}, {3.6808811493834057`*^9, 
   3.6808816352290897`*^9}, {3.6808816739789124`*^9, 3.680882032196274*^9}, {
   3.6808820912500343`*^9, 3.6808821757453947`*^9}, {3.680882211133314*^9, 
   3.680882378871024*^9}, {3.6808824342608643`*^9, 3.680882434823531*^9}, {
   3.680883747151867*^9, 3.680883922885659*^9}, {3.680883972978032*^9, 
   3.680884390920006*^9}, {3.6808844300037193`*^9, 3.6808845512584267`*^9}, 
   3.68088461521344*^9, {3.6808846535514545`*^9, 3.6808847349773226`*^9}, {
   3.6808850013417034`*^9, 3.6808850118309097`*^9}, {3.680885071364455*^9, 
   3.680885338050998*^9}, {3.680885369092225*^9, 3.6808854465825834`*^9}, {
   3.6808858161521587`*^9, 3.6808858165517445`*^9}, {3.680885969295744*^9, 
   3.680886034427628*^9}, {3.680886171713134*^9, 3.6808863538065033`*^9}, 
   3.6808863990841804`*^9, {3.6808864612464943`*^9, 3.680886529813063*^9}, {
   3.6808869456867824`*^9, 3.680886961764923*^9}, {3.6808870123576927`*^9, 
   3.680887019550462*^9}, {3.680887114898735*^9, 3.6808871182675095`*^9}, {
   3.680887181162428*^9, 3.680887187111746*^9}, {3.680887251367427*^9, 
   3.680887273892291*^9}, {3.680887323898876*^9, 3.680887325082522*^9}, {
   3.680887456347989*^9, 3.6808874620826855`*^9}, {3.6808875561244335`*^9, 
   3.680887573091951*^9}, {3.680887721148032*^9, 3.6808878253963804`*^9}, {
   3.680887892923795*^9, 3.680887895438401*^9}, {3.6808883279068727`*^9, 
   3.6808883742127953`*^9}, {3.6808887446347*^9, 3.6808888009663877`*^9}, {
   3.680888843084072*^9, 3.68088888217283*^9}, {3.6808889672984886`*^9, 
   3.680888980048806*^9}, {3.680889012873393*^9, 3.680889017001927*^9}, {
   3.6809607127676287`*^9, 3.680960713931309*^9}, {3.680963627939675*^9, 
   3.6809636936788006`*^9}, {3.680963725032446*^9, 3.68096375932222*^9}, {
   3.680963996232436*^9, 3.680964178133572*^9}, {3.680964213180361*^9, 
   3.6809642748716707`*^9}, {3.680964349959564*^9, 3.6809643607069154`*^9}, {
   3.6809643998686404`*^9, 3.680964423431587*^9}, {3.6809649940240765`*^9, 
   3.6809650555320835`*^9}, {3.680965297215009*^9, 3.680965374687066*^9}, {
   3.680965746541073*^9, 3.680965840873766*^9}, {3.680966028202756*^9, 
   3.6809661594200068`*^9}, {3.680966229724207*^9, 3.6809662777779217`*^9}, {
   3.6809663143619595`*^9, 3.680966336214636*^9}, {3.68096644404537*^9, 
   3.6809666533585944`*^9}, {3.680966782656155*^9, 3.68096684043402*^9}, {
   3.6809669531870036`*^9, 3.680967156904188*^9}, {3.6809672053008804`*^9, 
   3.680967224729057*^9}, {3.680967332314844*^9, 3.680967339149928*^9}, {
   3.6809673783050733`*^9, 3.6809674245168176`*^9}, {3.6809676623088226`*^9, 
   3.6809678364166517`*^9}, {3.6809683681222277`*^9, 
   3.6809686165290656`*^9}, {3.6809686831482697`*^9, 3.680968684388035*^9}, {
   3.680968722806388*^9, 3.6809688286478157`*^9}, {3.6809688660650325`*^9, 
   3.6809688731104565`*^9}, {3.680968922304273*^9, 3.680968979206273*^9}, {
   3.6809690865346055`*^9, 3.680969130012158*^9}, {3.680969781989382*^9, 
   3.680969872823762*^9}, {3.6809699400381446`*^9, 3.680970004489729*^9}, {
   3.6809700536833115`*^9, 3.6809700682716103`*^9}, {3.6809710208681808`*^9, 
   3.680971077002434*^9}, {3.680971109326406*^9, 3.680971115550733*^9}, {
   3.6809711907370863`*^9, 3.680971216592291*^9}, {3.680971278912956*^9, 
   3.6809712801192245`*^9}, {3.6809718771352825`*^9, 3.680971944993314*^9}, {
   3.6809720034773016`*^9, 3.6809720732264376`*^9}, {3.6809724406934075`*^9, 
   3.68097248602604*^9}, {3.6809726599472265`*^9, 3.6809726602954173`*^9}, {
   3.6809727230464745`*^9, 3.6809727291279593`*^9}, {3.680973017680879*^9, 
   3.6809730380391974`*^9}, {3.6809731227303166`*^9, 
   3.6809731466993895`*^9}, {3.680973762644851*^9, 3.6809737679144526`*^9}, {
   3.680973813745384*^9, 3.6809738243622527`*^9}, {3.6809739095062947`*^9, 
   3.680973940278738*^9}, {3.680973995792797*^9, 3.6809740011452093`*^9}, {
   3.6809740466010485`*^9, 3.680974060123784*^9}, {3.6809753469202642`*^9, 
   3.680975657929818*^9}, {3.680975695072091*^9, 3.6809758501681805`*^9}, {
   3.6809758996673946`*^9, 3.6809762262710686`*^9}, {3.680976301712438*^9, 
   3.6809763299510756`*^9}, {3.6809763746469035`*^9, 3.680976380499403*^9}, {
   3.6809764218826056`*^9, 3.6809765347847033`*^9}, {3.680976581667529*^9, 
   3.680976597026043*^9}, {3.680976666398885*^9, 3.6809766669610734`*^9}, {
   3.6809767210323706`*^9, 3.680976781558323*^9}, {3.6809768323302093`*^9, 
   3.680976846514173*^9}, {3.680976911357921*^9, 3.6809769209581203`*^9}, {
   3.680977049628893*^9, 3.6809771526850805`*^9}, {3.6809773883553143`*^9, 
   3.6809774793566475`*^9}, {3.6809775209278545`*^9, 3.680977521665044*^9}, {
   3.6809776512633805`*^9, 3.6809776515167046`*^9}, {3.680977712319936*^9, 
   3.6809777460168*^9}, {3.6810531539619203`*^9, 3.681053166959158*^9}, {
   3.6810532473507404`*^9, 3.6810532616980743`*^9}, {3.681053537630972*^9, 
   3.6810535971654816`*^9}, {3.6810536299030733`*^9, 3.681053764619897*^9}, {
   3.6810540191911044`*^9, 3.6810541426058364`*^9}, {3.681054193325778*^9, 
   3.681054202050123*^9}, {3.681054407650793*^9, 3.681054422525179*^9}, {
   3.6810544649467773`*^9, 3.6810544702728024`*^9}, {3.6810545196776843`*^9, 
   3.6810545642818737`*^9}, {3.6810546574028754`*^9, 
   3.6810546706011558`*^9}, {3.6811147611436043`*^9, 3.681114794728092*^9}, {
   3.681114882040724*^9, 3.6811148829097633`*^9}, {3.6811149340621448`*^9, 
   3.6811149841654096`*^9}, {3.6811151906954145`*^9, 3.68111537573689*^9}, {
   3.681115515816817*^9, 3.6811155891013746`*^9}, {3.6811156493781*^9, 
   3.681115666641453*^9}, {3.6811157198894944`*^9, 3.681115785849764*^9}, {
   3.681115827017232*^9, 3.6811158347965927`*^9}, {3.6811159033938723`*^9, 
   3.681116089029919*^9}, {3.681116213755548*^9, 3.681116272066968*^9}, {
   3.6811163405323725`*^9, 3.6811163422818956`*^9}, {3.6811164168073506`*^9, 
   3.6811164867154493`*^9}, {3.6811169255299654`*^9, 
   3.6811172248748937`*^9}, {3.681117258961213*^9, 3.6811174496638355`*^9}, {
   3.681117533579012*^9, 3.681117647560803*^9}, {3.681117763229082*^9, 
   3.681117783811084*^9}, {3.6811178439925947`*^9, 3.6811178454111786`*^9}, {
   3.6811178787361465`*^9, 3.681118062900173*^9}, {3.6811182140723333`*^9, 
   3.681118242911724*^9}, {3.681118570175209*^9, 3.681118576971583*^9}, {
   3.6811186959610105`*^9, 3.6811187586878242`*^9}, {3.6811187891790757`*^9, 
   3.681118790999563*^9}, {3.6811188571056223`*^9, 3.681118914067198*^9}, {
   3.6811189451494126`*^9, 3.681119011066283*^9}, {3.681119048258296*^9, 
   3.681119051434639*^9}, {3.681119092032136*^9, 3.681119104913178*^9}, {
   3.6811191834650784`*^9, 3.6811191867953424`*^9}, {3.6811196359476748`*^9, 
   3.681119688600884*^9}, {3.68111975028333*^9, 3.6811197807530875`*^9}, {
   3.6811198129044657`*^9, 3.681119817415021*^9}, 3.6811199829716883`*^9, {
   3.681120060387*^9, 3.68112008143056*^9}, {3.6811205197179084`*^9, 
   3.681120554142846*^9}, {3.68112059755657*^9, 3.6811209608421526`*^9}, {
   3.681121000321582*^9, 3.6811213121725974`*^9}, {3.68112299321381*^9, 
   3.681123012107442*^9}, {3.681123048832554*^9, 3.6811232172421627`*^9}, {
   3.6811273234720945`*^9, 3.681127432423428*^9}, {3.6811274800609336`*^9, 
   3.6811274809005604`*^9}, {3.6811275257683163`*^9, 3.681127578179681*^9}, {
   3.681127694826793*^9, 3.681127710789095*^9}, {3.6811278110887747`*^9, 
   3.681127844848827*^9}, {3.6811318326745567`*^9, 3.6811318616049323`*^9}, {
   3.6811320378293934`*^9, 3.6811321022246556`*^9}, {3.6811322022846727`*^9, 
   3.6811322197331595`*^9}, {3.681132275270756*^9, 3.681132303924238*^9}, {
   3.681132952546542*^9, 3.681132975747823*^9}, {3.6811330533869743`*^9, 
   3.681133069989792*^9}, {3.6811331401560717`*^9, 3.681133210129423*^9}, {
   3.68113355997246*^9, 3.681133580734687*^9}, {3.681133629200098*^9, 
   3.681133630070923*^9}, {3.6811337049047832`*^9, 3.6811337124057627`*^9}, {
   3.681133819975602*^9, 3.681133840938975*^9}, {3.681133980113397*^9, 
   3.6811339892678027`*^9}, {3.6811340593396463`*^9, 
   3.6811340697445583`*^9}, {3.6811341524626665`*^9, 3.681134155389428*^9}, {
   3.6811384085644703`*^9, 3.681138416451669*^9}, {3.6811384531639957`*^9, 
   3.6811387332515326`*^9}, {3.696326247015401*^9, 3.696326290249895*^9}, {
   3.6963263290758915`*^9, 3.6963263534943542`*^9}, {3.6963265499230905`*^9, 
   3.6963267199909678`*^9}, {3.6963267593116693`*^9, 
   3.6963269229873137`*^9}, {3.696326975109809*^9, 3.6963269771450577`*^9}, {
   3.6963270084709077`*^9, 3.6963270268753195`*^9}, {3.696327279707534*^9, 
   3.6963277124342194`*^9}, {3.6963277670566783`*^9, 
   3.6963279383852067`*^9}, {3.6963279795211296`*^9, 
   3.6963281839315977`*^9}, {3.696328216429962*^9, 3.696328350263246*^9}, {
   3.696328411126731*^9, 3.6963286380076227`*^9}, {3.6963286951665726`*^9, 
   3.6963289772073884`*^9}, {3.696329031822198*^9, 3.696329290347029*^9}, {
   3.6963293252573895`*^9, 3.696329474349821*^9}, {3.6963295071975946`*^9, 
   3.6963295732929854`*^9}, {3.6963296485433044`*^9, 
   3.6963296648466263`*^9}, {3.6963298886113076`*^9, 3.696329943964314*^9}, {
   3.6963299828627825`*^9, 3.696330037711483*^9}, {3.6963301105312886`*^9, 
   3.6963301559281893`*^9}, {3.69633018944613*^9, 3.696330215930565*^9}, {
   3.696330259860301*^9, 3.6963304438441257`*^9}, {3.696330475475258*^9, 
   3.6963306230483894`*^9}, {3.6963306563291655`*^9, 
   3.6963307206242332`*^9}, {3.6963345425594997`*^9, 3.696334563107193*^9}, {
   3.696334653622881*^9, 3.696334663105197*^9}, {3.6963351846429973`*^9, 
   3.696335191975522*^9}, {3.696338539683173*^9, 3.6963385468592424`*^9}, {
   3.6967009588676825`*^9, 3.6967009616899395`*^9}, {3.696701101654566*^9, 
   3.6967011779401827`*^9}, {3.696934183996126*^9, 3.696934207031106*^9}, {
   3.696934260981206*^9, 3.696934285673975*^9}, {3.696934322808727*^9, 
   3.6969343619935703`*^9}, {3.6969344502573805`*^9, 
   3.6969344569846115`*^9}, {3.6969345597853594`*^9, 3.696934564670198*^9}, {
   3.6981370507222033`*^9, 3.6981370610160313`*^9}, {3.6981373191413965`*^9, 
   3.6981373679463625`*^9}, {3.698137636535467*^9, 3.698137640349996*^9}, {
   3.698137692978403*^9, 3.698137694388838*^9}, {3.6981377371096735`*^9, 
   3.6981378087923565`*^9}, {3.6981378413129263`*^9, 3.698137901443728*^9}, {
   3.6981379713812246`*^9, 3.6981381104371033`*^9}, {3.698138163007603*^9, 
   3.698138273010347*^9}, {3.6981383288703957`*^9, 3.6981383470199337`*^9}, {
   3.698138383433584*^9, 3.6981385107632823`*^9}, {3.6981385728761735`*^9, 
   3.698138601187451*^9}, {3.6981386377627096`*^9, 3.6981386923429112`*^9}, {
   3.698138727770139*^9, 3.6981387340603113`*^9}, {3.6981387792380495`*^9, 
   3.698138792421794*^9}, {3.6981388289921837`*^9, 3.698139280883665*^9}, {
   3.698139335557928*^9, 3.6981394881856575`*^9}, {3.698139521639346*^9, 
   3.6981396956565886`*^9}, {3.6981397462081165`*^9, 
   3.6981397622967873`*^9}, {3.698155520709202*^9, 3.6981555904389486`*^9}, {
   3.6981556674640684`*^9, 3.698155693967147*^9}, {3.6981557545088015`*^9, 
   3.698155808280466*^9}, {3.698155853286815*^9, 3.698155855055989*^9}, {
   3.6982189983475137`*^9, 3.698219030988694*^9}, {3.698219100474406*^9, 
   3.698219198969232*^9}, {3.6982192381510115`*^9, 3.698219253221507*^9}, {
   3.698220777816371*^9, 3.6982208595135517`*^9}, {3.698220963698536*^9, 
   3.6982211178834953`*^9}, {3.698221212645543*^9, 3.6982212782050257`*^9}, 
   3.6982213725109158`*^9, {3.6982215131814556`*^9, 3.698221514190624*^9}, {
   3.698223369061162*^9, 3.698223370668728*^9}, {3.698223428680704*^9, 
   3.698223498676685*^9}, {3.698232667104102*^9, 3.6982327100590925`*^9}, {
   3.6982363879168158`*^9, 3.698236497420759*^9}, {3.698236542712164*^9, 
   3.698236577277589*^9}, {3.698236653268828*^9, 3.698236745014656*^9}, {
   3.698236775330765*^9, 3.6982368007891493`*^9}, {3.6982368409967117`*^9, 
   3.6982369917653947`*^9}, {3.6982370416917057`*^9, 3.698237114115241*^9}, {
   3.698237161049319*^9, 3.6982372226609635`*^9}, {3.6982372605330825`*^9, 
   3.698237302611991*^9}, {3.698237340209424*^9, 3.698237346900936*^9}, {
   3.6982374036160526`*^9, 3.6982374125940075`*^9}, {3.6982378428289995`*^9, 
   3.6982380410494075`*^9}, {3.698238254286378*^9, 3.6982382988629436`*^9}, 
   3.6982384288421555`*^9, {3.69823846001383*^9, 3.698238473616352*^9}, {
   3.6982386797612762`*^9, 3.69823869086414*^9}, {3.698238937783132*^9, 
   3.698238973369734*^9}, {3.698239054302782*^9, 3.698239120169636*^9}, 
   3.698240491600814*^9, 3.698240522976124*^9, {3.6982424083772717`*^9, 
   3.698242443063778*^9}, {3.698242810686262*^9, 3.698242818332333*^9}, {
   3.6982431621439376`*^9, 3.69824321141813*^9}, {3.6982432460511*^9, 
   3.6982432468136053`*^9}, {3.6982432868221755`*^9, 
   3.6982432902635994`*^9}, {3.6982435559692388`*^9, 
   3.6982435562439213`*^9}, {3.698245000504096*^9, 3.698245044587835*^9}, {
   3.698245079434947*^9, 3.698245100812493*^9}, {3.698245837087344*^9, 
   3.6982458669331384`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6808847610415177`*^9, 3.680884762636571*^9}}],

Cell[CellGroupData[{

Cell["Check DGBuildUpInitX", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.6981402250229177`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpInitX", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "basis"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintDistanceMatrix", "[", 
  RowBox[{"x", ",", "edges"}], "]"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
  3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
  3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
  3.698218926550845*^9, 3.698218982996833*^9}, {3.698221528171595*^9, 
  3.6982215292478094`*^9}, {3.698223229496271*^9, 3.69822324531176*^9}, {
  3.698232789723715*^9, 3.6982327915454226`*^9}, {3.6982330045728703`*^9, 
  3.698233050778017*^9}, {3.698233185373212*^9, 3.6982331896285343`*^9}, {
  3.698234330535508*^9, 3.6982343508117933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["5",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["7",
       HoldForm], "4", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7009866561881647`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "0.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "2", "4", "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.0000000000000002`"},
     {
      TagBox["5",
       HoldForm], "3", "4", "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "3", "5", "1.`"},
     {
      TagBox["7",
       HoldForm], "4", "5", "1.7320508075688772`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {"i", "j", "dij"}}]]]], "Print",
 CellChangeTimes->{3.700986656275176*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Check DGBuildUpSolver", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.698140236428483*^9, 
   3.698238321752689*^9, {3.6982383734862976`*^9, 3.6982383771012917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
   3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
   3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
   3.6981402466162415`*^9, 3.698140340332897*^9}, 3.6981556019936123`*^9, {
   3.6982187458271065`*^9, 3.698218876577999*^9}, {3.6982344194696364`*^9, 
   3.6982344493154306`*^9}, {3.6982383323257017`*^9, 3.698238406412279*^9}, {
   3.6982385625786076`*^9, 3.698238587018317*^9}, {3.698238626331799*^9, 
   3.698238646767353*^9}, {3.6982387148145256`*^9, 3.698238802521889*^9}, {
   3.6982388531985006`*^9, 3.6982389113771334`*^9}, {3.6982390082525625`*^9, 
   3.698239019195321*^9}, {3.698239169984175*^9, 3.6982392406763315`*^9}, {
   3.698239330259947*^9, 3.69823933328045*^9}, 3.6982393807854576`*^9, 
   3.698239584306156*^9, 3.6982400280690603`*^9, 3.7003143255491667`*^9, {
   3.7009919838539476`*^9, 3.700992101070965*^9}, {3.700992166609742*^9, 
   3.7009922125087585`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "0", "0", "0"},
     {
      TagBox["2",
       HoldForm], "1.`", "0", "0"},
     {
      TagBox["3",
       HoldForm], "1.0000000000000002`", "1.`", "0"},
     {
      TagBox["4",
       HoldForm], "0.9999999999999996`", "1.0000000000000002`", "1.`"},
     {
      TagBox["5",
       HoldForm], "1.0000000000000002`", 
      RowBox[{"-", "2.2204460492503136`*^-16"}], "0.9999999999999999`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5}, {"x", "y", "z"}}]]]], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.700992213610524*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.700992213610524*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.700992213610524*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.700992213610524*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.440892098500626`*^-16"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.440892098500626*^-16}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.7009922136303997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "5.551115123125783`*^-17"}],
  SequenceForm["Mean relative error  : ", 5.551115123125783*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7009866563134365`*^9, 3.700991738034957*^9, {3.700992144810394*^9, 
   3.700992167991242*^9}, 3.7009922136316595`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving an instance using BuilUpSolver method ", "Subsubsection",
 CellChangeTimes->{3.696335266702453*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"20", ",", "0.0", ",", "5.0", ",", "0"}], "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G", ",", "nodes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{"G", ",", "X", ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6811193723446083`*^9, 3.681119412620857*^9}, {
   3.6811199311928988`*^9, 3.681119960930756*^9}, {3.681119990991001*^9, 
   3.6811200405793905`*^9}, {3.6811230224344797`*^9, 3.681123028526058*^9}, {
   3.6811277224020305`*^9, 3.6811277237741623`*^9}, {3.6811285593560123`*^9, 
   3.681128578782134*^9}, {3.6811286737619624`*^9, 3.681128765537285*^9}, {
   3.681128804607932*^9, 3.6811288239519253`*^9}, {3.681130635133052*^9, 
   3.6811306585684404`*^9}, {3.681132006711861*^9, 3.6811320068519697`*^9}, {
   3.6811322329539566`*^9, 3.6811322568870325`*^9}, {3.681132509241618*^9, 
   3.681132516105033*^9}, {3.6811328599020844`*^9, 3.681132874485738*^9}, {
   3.6811342789491444`*^9, 3.6811343056250167`*^9}, {3.6815665500810804`*^9, 
   3.681566551437929*^9}, {3.681569740351883*^9, 3.681569740852806*^9}, {
   3.6815710193111305`*^9, 3.681571023000434*^9}, {3.6815714400430307`*^9, 
   3.681571491286482*^9}, 3.682752354751058*^9, 3.682757377921311*^9, {
   3.69633473379433*^9, 3.696334739241384*^9}, 3.696335048087739*^9, {
   3.6963351061616244`*^9, 3.696335135730406*^9}, {3.696335254918723*^9, 
   3.6963352586483583`*^9}, 3.698072481347253*^9, {3.6982401401846647`*^9, 
   3.698240149132599*^9}, {3.698240224116712*^9, 3.6982403996781855`*^9}, {
   3.6982405533797884`*^9, 3.698240564408103*^9}, {3.6982422163981752`*^9, 
   3.6982422286963325`*^9}, {3.698242338147665*^9, 3.698242351792679*^9}, {
   3.6982427561150675`*^9, 3.6982427695394716`*^9}, {3.698243314622154*^9, 
   3.6982433155002365`*^9}, 3.7003143256025734`*^9, {3.7009922376381283`*^9, 
   3.7009922464586315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7009866563603144`*^9, {3.700992249425755*^9, 3.700992267200327*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.70098665644446*^9, {3.700992249425755*^9, 3.700992267215953*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.70098665644446*^9, {3.700992249425755*^9, 3.700992267215953*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.70098665644446*^9, {3.700992249425755*^9, 3.700992267215953*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.440892098500626`*^-16"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.440892098500626*^-16}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.70098665644446*^9, {3.700992249425755*^9, 3.700992267231577*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "5.551115123125783`*^-17"}],
  SequenceForm["Mean relative error  : ", 5.551115123125783*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.70098665644446*^9, {3.700992249425755*^9, 3.700992267231577*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGBPSolver", "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244126381677*^9, 
  3.6982441350594325`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGBPXinit", ",", "DGBPGetX", ",", "DGBPSolver"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPXinit", "[", 
    RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "numberOfAtoms", ",", "dab", ",", "dac", 
       ",", "dbc", ",", "\[Theta]", ",", "X"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"three", " ", "first", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
       RowBox[{"basis", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dab", ",", "dac", ",", "dbc"}], "}"}], "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "\[UndirectedEdge]", "b"}], ",", 
           RowBox[{"a", "\[UndirectedEdge]", "c"}], ",", 
           RowBox[{"b", "\[UndirectedEdge]", "c"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "planar", " ", "rotation", " ", "angle", " ", "for", " ", "third", " ",
         "atom"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dab", "^", "2"}], "+", 
           RowBox[{"dbc", "^", "2"}], "-", 
           RowBox[{"dac", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "dab", "*", "dbc"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
        "three", " ", "first", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "dab"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dab"}], "+", 
            RowBox[{"dbc", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
           RowBox[{"dbc", "*", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", ",", "0"}], "}"}]}],
         "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBPGetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "branch_", ",", "nodes_", ",", "i_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "x", ",", "error", ",", "i1", ",", 
        "i2", ",", "i3", ",", "d1", ",", "d2", ",", "d3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "3"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<neighs=\>\"", ",", "neighs", ",", "\"\< k=\>\"", ",", "k"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3"}], "}"}], "=", 
        RowBox[{"neighs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d1", ",", "d2", ",", "d3"}], "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "=", 
        RowBox[{"DGIntersect3Spheres", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i3", "]"}], "]"}], ",", "d3"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"branch", "+", "1"}], "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G_", ",", "nodes_", ",", 
     RowBox[{"onesol_:", "False"}], ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", 
     RowBox[{"G", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "X", ",", "S", ",", "work", ",", "error", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"DGBPXinit", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "BPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"work", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
          RowBox[{"DGBPGetX", "[", 
           RowBox[{"G", ",", "X", ",", 
            RowBox[{"branch", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "nodes", ",", "k"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"DGRelativeResidue", "[", 
           RowBox[{"G", ",", "X", ",", "nodes", ",", "k"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"error", ">", "tol"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[bp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", "\"\<  error=\>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"error", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             "\"\<  prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"DGPrintX", "[", 
            RowBox[{"X", "[", 
             RowBox[{"[", 
              RowBox[{"nodes", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "k"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", "X"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"onesol", ",", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"S", ",", "work"}], "}"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679558175961939*^9, 3.6795582465756893`*^9}, {
   3.6795582826425705`*^9, 3.6795582839429235`*^9}, {3.6795657231676226`*^9, 
   3.6795657791530952`*^9}, {3.6795658130773067`*^9, 3.679565871544673*^9}, {
   3.6795861090630603`*^9, 3.679586268296414*^9}, {3.6795863005452967`*^9, 
   3.679586495840868*^9}, {3.6795865460918303`*^9, 3.6795865970915422`*^9}, {
   3.6795868432394185`*^9, 3.6795869018284483`*^9}, {3.679586939131709*^9, 
   3.679586976913601*^9}, {3.6795870626458464`*^9, 3.6795871011073523`*^9}, {
   3.6795871633176947`*^9, 3.679587758105817*^9}, {3.679587804838523*^9, 
   3.6795878406799817`*^9}, {3.6795881298229246`*^9, 3.679588139590253*^9}, {
   3.679588432141921*^9, 3.679588820678732*^9}, {3.67958885218464*^9, 
   3.679588859454245*^9}, {3.679591543221243*^9, 3.6795916551338434`*^9}, {
   3.679591702248043*^9, 3.679591773731745*^9}, {3.6795919722830153`*^9, 
   3.6795919729205785`*^9}, {3.6795920143454957`*^9, 
   3.6795920373721275`*^9}, {3.6795920942295294`*^9, 3.679592111174794*^9}, {
   3.6795921457433033`*^9, 3.6795921895011177`*^9}, {3.6795922813103876`*^9, 
   3.6795922980595803`*^9}, {3.679592407947278*^9, 3.6795924086627626`*^9}, {
   3.6795924498624945`*^9, 3.679592466754154*^9}, {3.679592757750784*^9, 
   3.679592801039822*^9}, {3.679592909747943*^9, 3.6795929608876143`*^9}, {
   3.679593939143162*^9, 3.6795940165402756`*^9}, {3.679594087903904*^9, 
   3.6795941883419476`*^9}, {3.679594287225954*^9, 3.6795943875196476`*^9}, {
   3.679594448595685*^9, 3.679594478828597*^9}, {3.6795945652724648`*^9, 
   3.6795946280032177`*^9}, {3.6795946789134407`*^9, 
   3.6795947026597376`*^9}, {3.679594776154107*^9, 3.6795948130815954`*^9}, {
   3.679594874794201*^9, 3.6795948828190813`*^9}, {3.6795949534488997`*^9, 
   3.6795949725060587`*^9}, {3.6795953069724016`*^9, 3.679595386091648*^9}, {
   3.6795955639765224`*^9, 3.6795956274997435`*^9}, {3.679595702271488*^9, 
   3.6795959233026123`*^9}, {3.679595965972151*^9, 3.6795959811159763`*^9}, {
   3.679596019161744*^9, 3.6795961007578773`*^9}, {3.679596138153123*^9, 
   3.679596343165894*^9}, {3.6795963808982925`*^9, 3.679596485412173*^9}, {
   3.679596522566841*^9, 3.6795965922679443`*^9}, {3.6795966325388813`*^9, 
   3.6795966980857244`*^9}, {3.679596732170254*^9, 3.679596952279262*^9}, {
   3.6795970019970694`*^9, 3.6795970768712177`*^9}, {3.679597120771289*^9, 
   3.679597123641965*^9}, {3.679597504661482*^9, 3.67959752405188*^9}, {
   3.6795977558745494`*^9, 3.679597791424835*^9}, 3.6795987087156878`*^9, {
   3.6795988192242517`*^9, 3.67959883584793*^9}, {3.679598870164411*^9, 
   3.6795991011240025`*^9}, {3.679599318938053*^9, 3.679599340969948*^9}, {
   3.6795993740469303`*^9, 3.679599392408225*^9}, {3.679599446418444*^9, 
   3.6795994936803236`*^9}, {3.6795995268675137`*^9, 3.6795995571197987`*^9}, 
   3.679599593529305*^9, {3.6795996462842827`*^9, 3.679599664667951*^9}, 
   3.6796000535012045`*^9, {3.6796005685888577`*^9, 3.6796006406104794`*^9}, {
   3.679600696928871*^9, 3.6796007267160053`*^9}, {3.6796008413370132`*^9, 
   3.6796008545284967`*^9}, {3.6796009031430583`*^9, 
   3.6796009310933266`*^9}, {3.6796010302991343`*^9, 3.67960105103058*^9}, {
   3.679601123591203*^9, 3.6796011690061445`*^9}, {3.6796012042311897`*^9, 
   3.6796012284117613`*^9}, {3.6796013171753454`*^9, 
   3.6796013538183103`*^9}, {3.679678803727684*^9, 3.6796788489988422`*^9}, {
   3.6796789029728556`*^9, 3.679678973714923*^9}, {3.679679007940275*^9, 
   3.6796790171013775`*^9}, {3.6796791140754843`*^9, 3.679679297244875*^9}, {
   3.679679330413969*^9, 3.6796793579806814`*^9}, {3.6796794551957006`*^9, 
   3.6796794760541725`*^9}, {3.679679575327817*^9, 3.6796796729758596`*^9}, {
   3.679679868010354*^9, 3.6796800326147842`*^9}, {3.6796800872006283`*^9, 
   3.679680109202219*^9}, {3.6796801598977137`*^9, 3.679680170399706*^9}, {
   3.679680211818449*^9, 3.6796804482737713`*^9}, {3.6796805112298536`*^9, 
   3.6796805744565773`*^9}, {3.6796806218580914`*^9, 3.679680757892975*^9}, {
   3.679680811495949*^9, 3.6796808818651915`*^9}, {3.6796809144827785`*^9, 
   3.6796809666833677`*^9}, {3.6796810029485235`*^9, 
   3.6796810081740055`*^9}, {3.6796810575156417`*^9, 
   3.6796811033995237`*^9}, {3.679681332527998*^9, 3.6796813333625546`*^9}, {
   3.6796813807917876`*^9, 3.67968147752941*^9}, {3.679681563739986*^9, 
   3.6796815769607897`*^9}, {3.6796817221757703`*^9, 3.679681763490862*^9}, {
   3.679681838781067*^9, 3.6796818408804646`*^9}, {3.6796818894447145`*^9, 
   3.679682079969407*^9}, {3.679682121825989*^9, 3.6796821248530035`*^9}, {
   3.679682265526948*^9, 3.679682306277526*^9}, {3.6796823673326397`*^9, 
   3.679682384445038*^9}, {3.6796824443186035`*^9, 3.679682475464719*^9}, {
   3.6796825288595295`*^9, 3.6796825637327585`*^9}, {3.67968278119676*^9, 
   3.679682782882883*^9}, {3.6797345890383964`*^9, 3.6797346061187067`*^9}, {
   3.679734645268098*^9, 3.679734678069255*^9}, {3.679734719550336*^9, 
   3.679734728336152*^9}, {3.679734851985812*^9, 3.6797348613539844`*^9}, {
   3.6797349632167463`*^9, 3.6797349754570136`*^9}, {3.679735010318187*^9, 
   3.679735089425761*^9}, {3.6797352029473877`*^9, 3.6797352174003067`*^9}, {
   3.679735334219095*^9, 3.6797353520668097`*^9}, {3.6797354127852964`*^9, 
   3.6797354225972743`*^9}, {3.6797356146960435`*^9, 3.6797356233076*^9}, {
   3.679735670171296*^9, 3.679735748032075*^9}, {3.679735818469843*^9, 
   3.679735848457308*^9}, {3.67973596027987*^9, 3.679735975920292*^9}, {
   3.6797360359884872`*^9, 3.679736087721181*^9}, {3.6797362491591873`*^9, 
   3.679736251571519*^9}, {3.6797363112665663`*^9, 3.67973638863768*^9}, {
   3.6797365176603727`*^9, 3.679736520301809*^9}, {3.679736670119876*^9, 
   3.6797367431527596`*^9}, {3.679756482791448*^9, 3.679756557876812*^9}, {
   3.6797567570184045`*^9, 3.6797567594612527`*^9}, {3.6797567906860046`*^9, 
   3.679756802275606*^9}, {3.6797568773893633`*^9, 3.679756886271783*^9}, {
   3.679757001405609*^9, 3.6797570054216137`*^9}, {3.679757180744531*^9, 
   3.6797572214769106`*^9}, {3.6797572539267645`*^9, 
   3.6797572552707305`*^9}, {3.679757302135573*^9, 3.679757309602027*^9}, {
   3.6797576159368067`*^9, 3.679757640960533*^9}, {3.6797577488837395`*^9, 
   3.6797577653388815`*^9}, {3.6797577958104706`*^9, 3.679757803108025*^9}, {
   3.6797578760871897`*^9, 3.6797578901608458`*^9}, {3.679758056388175*^9, 
   3.679758057856022*^9}, {3.679758116808442*^9, 3.679758142175377*^9}, {
   3.6797583149135833`*^9, 3.679758607202947*^9}, {3.679758663127587*^9, 
   3.6797586884288898`*^9}, {3.679759119373311*^9, 3.679759252843992*^9}, {
   3.679760070123723*^9, 3.679760141715478*^9}, {3.6797601874366446`*^9, 
   3.67976021978776*^9}, {3.679761268846787*^9, 3.6797613467221656`*^9}, {
   3.6797613820967917`*^9, 3.679761404174221*^9}, {3.6797614488257165`*^9, 
   3.6797615135316324`*^9}, {3.6797616958144684`*^9, 3.679761727076391*^9}, {
   3.6797629611339755`*^9, 3.6797630599393997`*^9}, {3.6797632969326744`*^9, 
   3.6797633450875072`*^9}, {3.6797633864858117`*^9, 3.679763417622408*^9}, {
   3.679763454154428*^9, 3.679763458232932*^9}, {3.679763559460507*^9, 
   3.679763559766924*^9}, {3.67976360142772*^9, 3.679763602011773*^9}, {
   3.679763652514624*^9, 3.6797636554635086`*^9}, {3.6797636883303623`*^9, 
   3.6797636933229237`*^9}, {3.679763739648059*^9, 3.6797637500153637`*^9}, {
   3.6797638017358065`*^9, 3.679763821403262*^9}, {3.6797639540004077`*^9, 
   3.679763967875004*^9}, {3.679764012996402*^9, 3.679764053151238*^9}, {
   3.679764105585392*^9, 3.6797641333006964`*^9}, {3.679764241169329*^9, 
   3.6797642550419507`*^9}, {3.6797642965486746`*^9, 
   3.6797642974911604`*^9}, {3.679766312258819*^9, 3.6797663400081835`*^9}, {
   3.6797665204820805`*^9, 3.6797666179276123`*^9}, {3.6797666878843207`*^9, 
   3.679766700259632*^9}, 3.679766730824309*^9, {3.67976678431518*^9, 
   3.6797667911152844`*^9}, {3.679766899700026*^9, 3.6797669126934752`*^9}, {
   3.6797669454005632`*^9, 3.679766965008849*^9}, {3.6797670469007864`*^9, 
   3.6797670576985207`*^9}, {3.679767112514214*^9, 3.6797671303351617`*^9}, {
   3.6797675537044563`*^9, 3.6797676224830623`*^9}, {3.679767976648643*^9, 
   3.6797680158816223`*^9}, {3.679768074496215*^9, 3.6797680775963783`*^9}, {
   3.6797683593332515`*^9, 3.6797683759920163`*^9}, {3.6797689343634205`*^9, 
   3.67976894926108*^9}, {3.679769294256039*^9, 3.679769332344527*^9}, {
   3.6798191469974074`*^9, 3.679819160356634*^9}, 3.6798192106398354`*^9, {
   3.67981926129202*^9, 3.679819264210451*^9}, {3.6798201118432903`*^9, 
   3.6798201155779047`*^9}, {3.679820335384288*^9, 3.679820377209854*^9}, {
   3.679820499748266*^9, 3.679820500648081*^9}, {3.6798205849449463`*^9, 
   3.679820599020897*^9}, {3.679820651543778*^9, 3.679820717123869*^9}, 
   3.6798208645536685`*^9, {3.679820946173946*^9, 3.6798209585549765`*^9}, {
   3.6798211650566034`*^9, 3.679821179641118*^9}, {3.6798212774784584`*^9, 
   3.6798212833238792`*^9}, {3.6798215653792295`*^9, 3.67982157108221*^9}, {
   3.679821616893424*^9, 3.679821653145285*^9}, {3.6798222987882447`*^9, 
   3.6798223432753534`*^9}, 3.679822416580861*^9, {3.679822823372448*^9, 
   3.6798228417201242`*^9}, {3.679823267991959*^9, 3.6798232844684114`*^9}, {
   3.679826381840706*^9, 3.67982643359863*^9}, 3.6798265156658287`*^9, {
   3.6798266225012636`*^9, 3.679826673734756*^9}, {3.679826743782586*^9, 
   3.679826770138029*^9}, {3.6798288730382085`*^9, 3.6798288749212675`*^9}, 
   3.679830925818262*^9, {3.6799122356862607`*^9, 3.679912420141233*^9}, 
   3.679912621838517*^9, {3.679912660005648*^9, 3.6799127645180964`*^9}, {
   3.679912796764311*^9, 3.679912833673414*^9}, {3.679912923419185*^9, 
   3.6799130110394573`*^9}, {3.6799132053019743`*^9, 
   3.6799132383140087`*^9}, {3.6799132802516465`*^9, 3.67991331943956*^9}, {
   3.679913510472663*^9, 3.6799136126746993`*^9}, {3.6799143039934287`*^9, 
   3.679914498499134*^9}, {3.6799146006025815`*^9, 3.679914665572703*^9}, {
   3.6799147788339305`*^9, 3.6799147832198434`*^9}, {3.679915529268517*^9, 
   3.6799155521864934`*^9}, {3.6799163694288054`*^9, 
   3.6799163759577293`*^9}, {3.679916633719616*^9, 3.6799166874558907`*^9}, {
   3.6799167701444783`*^9, 3.6799167738622227`*^9}, {3.6799168079043493`*^9, 
   3.6799168533126335`*^9}, {3.679916959985268*^9, 3.6799169731612396`*^9}, 
   3.6799170200748706`*^9, {3.6799171302212915`*^9, 3.679917141185356*^9}, {
   3.679917187615794*^9, 3.6799171931360073`*^9}, {3.679917338879426*^9, 
   3.679917349384443*^9}, {3.6799174136620827`*^9, 3.6799174401714363`*^9}, {
   3.6799175166104527`*^9, 3.6799175282932596`*^9}, 3.6799178373631587`*^9, {
   3.6799179537059784`*^9, 3.6799179803577185`*^9}, {3.67991866146945*^9, 
   3.6799187062925053`*^9}, {3.679918827393654*^9, 3.6799189074639287`*^9}, {
   3.6799189626153173`*^9, 3.6799189686805744`*^9}, {3.6799190280052376`*^9, 
   3.6799190455061207`*^9}, {3.6799190972022314`*^9, 3.679919125280387*^9}, {
   3.679924566119967*^9, 3.679924604385762*^9}, {3.6799246642790704`*^9, 
   3.6799246956132803`*^9}, {3.6799247527275844`*^9, 
   3.6799247930164156`*^9}, {3.679924951195854*^9, 3.6799249803781705`*^9}, {
   3.679925022623218*^9, 3.6799250488316956`*^9}, {3.6799253861656322`*^9, 
   3.6799254381888103`*^9}, {3.6799255434641275`*^9, 3.679925616718331*^9}, {
   3.679925661348341*^9, 3.679925698259054*^9}, {3.67992573602477*^9, 
   3.6799257478959365`*^9}, {3.6799258174994507`*^9, 
   3.6799259665814676`*^9}, {3.679926003783972*^9, 3.679926024748337*^9}, {
   3.679926069235965*^9, 3.6799260902291036`*^9}, {3.6799261736068425`*^9, 
   3.679926196432872*^9}, {3.679926255248601*^9, 3.6799262580962477`*^9}, {
   3.679926293552193*^9, 3.679926293751954*^9}, {3.6799263246875305`*^9, 
   3.67992632905294*^9}, {3.6799263775010214`*^9, 3.6799264110418615`*^9}, {
   3.6799264515895023`*^9, 3.679926470697673*^9}, {3.6799267773032274`*^9, 
   3.6799268074427676`*^9}, {3.6799273312718644`*^9, 
   3.6799273548658895`*^9}, {3.6799274096231394`*^9, 
   3.6799274791310563`*^9}, {3.6802492252310677`*^9, 
   3.6802494747564917`*^9}, {3.680249508550872*^9, 3.6802495430476055`*^9}, {
   3.680249675725598*^9, 3.6802497003809333`*^9}, 3.68024975508574*^9, {
   3.680256236853915*^9, 3.6802562600900726`*^9}, {3.68025634441387*^9, 
   3.680256365234165*^9}, {3.6802567065770197`*^9, 3.6802567081447225`*^9}, {
   3.68025976930814*^9, 3.6802597702248554`*^9}, {3.6802649405067997`*^9, 
   3.6802650359517117`*^9}, {3.680265067363373*^9, 3.6802650674600096`*^9}, {
   3.6802651867038527`*^9, 3.680265190137226*^9}, {3.680265223704136*^9, 
   3.680265238230487*^9}, {3.680265490528492*^9, 3.6802655052228985`*^9}, {
   3.680265558508396*^9, 3.680265561709672*^9}, {3.6808879559628687`*^9, 
   3.680888011732835*^9}, {3.6809606117806787`*^9, 3.6809606203078012`*^9}, 
   3.6809606847064285`*^9, {3.6809675539292154`*^9, 3.6809675860694647`*^9}, {
   3.6809692430036077`*^9, 3.680969426149309*^9}, {3.680969611597622*^9, 
   3.680969678171399*^9}, {3.6809717051663656`*^9, 3.680971757266692*^9}, {
   3.681049731545925*^9, 3.6810497326806526`*^9}, {3.6815751098190413`*^9, 
   3.6815752193084803`*^9}, {3.681575314417507*^9, 3.6815753681505737`*^9}, 
   3.6815761221030645`*^9, {3.6827804798722897`*^9, 3.682780494816037*^9}, 
   3.682780604217006*^9, {3.682781704192978*^9, 3.682781710459713*^9}, {
   3.682781876637768*^9, 3.682781904072253*^9}, {3.6827830443626947`*^9, 
   3.6827830549350944`*^9}, {3.682783127758354*^9, 3.6827832541087*^9}, {
   3.682783660581412*^9, 3.6827836734256077`*^9}, {3.682783792501422*^9, 
   3.682783800043203*^9}, {3.682783844406822*^9, 3.682783854282976*^9}, {
   3.6827840511165624`*^9, 3.682784068157834*^9}, {3.68278424789962*^9, 
   3.682784265851144*^9}, {3.6827844475525365`*^9, 3.6827845018196874`*^9}, {
   3.682784564540927*^9, 3.682784585555146*^9}, {3.682784632517503*^9, 
   3.6827846755811577`*^9}, {3.6827849678890543`*^9, 
   3.6827849698689795`*^9}, {3.6827850127031283`*^9, 3.682785092085968*^9}, {
   3.6827851570326347`*^9, 3.682785214146377*^9}, {3.6827852794649224`*^9, 
   3.6827852820630054`*^9}, {3.682785312889785*^9, 3.682785314900358*^9}, {
   3.682874358256663*^9, 3.682874360903284*^9}, {3.682934839631378*^9, 
   3.682934847817806*^9}, 3.682935758206027*^9, {3.6830328654542093`*^9, 
   3.683032867551629*^9}, 3.683032898094671*^9, {3.693310963628379*^9, 
   3.6933111790311046`*^9}, {3.693311218561573*^9, 3.6933112303168716`*^9}, {
   3.693311272066084*^9, 3.6933113625963125`*^9}, {3.6950523845124087`*^9, 
   3.6950523866515436`*^9}, {3.695052424890731*^9, 3.6950524370506387`*^9}, {
   3.6961619545602474`*^9, 3.6961620702824574`*^9}, {3.696338889049758*^9, 
   3.6963338496056805`*^9}, {3.6969507875440702`*^9, 
   3.6969508014723735`*^9}, {3.696950922935711*^9, 3.6969509459133635`*^9}, {
   3.697550371565403*^9, 3.697550371949326*^9}, 3.6979836235158963`*^9, {
   3.697983655060665*^9, 3.6979837327770033`*^9}, {3.697983790859722*^9, 
   3.6979838074844527`*^9}, {3.6979838473949614`*^9, 3.697983851665854*^9}, {
   3.697983950552133*^9, 3.6979840506270604`*^9}, {3.697984105707975*^9, 
   3.697984297952173*^9}, {3.6979847495993657`*^9, 3.6979847803348207`*^9}, 
   3.697984835994111*^9, {3.6979851699465094`*^9, 3.697985191261283*^9}, {
   3.697993736941249*^9, 3.697993822054891*^9}, {3.697995079340356*^9, 
   3.6979951862910323`*^9}, {3.697995230421173*^9, 3.697995375695047*^9}, {
   3.6979959019891167`*^9, 3.6979959454676337`*^9}, {3.6980465852605247`*^9, 
   3.69804683109072*^9}, {3.698047088010625*^9, 3.6980471411569014`*^9}, {
   3.6980472323885565`*^9, 3.6980472377501125`*^9}, {3.6980473104644995`*^9, 
   3.698047354675248*^9}, {3.6980473947561235`*^9, 3.698047402385198*^9}, {
   3.6980475542975597`*^9, 3.698047608345428*^9}, {3.6980476472397304`*^9, 
   3.6980476615872464`*^9}, {3.6980477094119816`*^9, 
   3.6980477828026576`*^9}, {3.698047829278983*^9, 3.698048018965683*^9}, {
   3.698048240561721*^9, 3.698048259884059*^9}, {3.698056934456436*^9, 
   3.6980571566496816`*^9}, {3.698057237832131*^9, 3.6980572462169743`*^9}, {
   3.6980579118181686`*^9, 3.6980579607923365`*^9}, {3.6980580053419185`*^9, 
   3.698058005805474*^9}, {3.6980580742219687`*^9, 3.698058079955908*^9}, {
   3.698058164953802*^9, 3.698058196322177*^9}, {3.698059333503028*^9, 
   3.6980594776024847`*^9}, {3.698061155504623*^9, 3.69806128012282*^9}, {
   3.69806131126612*^9, 3.698061611727914*^9}, 3.698061886200822*^9, {
   3.6980619836449723`*^9, 3.6980622098389125`*^9}, {3.6980622685617027`*^9, 
   3.698062269630556*^9}, {3.6980623644826*^9, 3.6980623815051975`*^9}, {
   3.6980624151710653`*^9, 3.698062418731555*^9}, {3.698062454202283*^9, 
   3.698062459051075*^9}, {3.698062507249819*^9, 3.6980625091454873`*^9}, 
   3.69807248122217*^9, {3.6982443204084044`*^9, 3.6982443820402813`*^9}, {
   3.6982444141631303`*^9, 3.6982444162199945`*^9}, {3.69824444651709*^9, 
   3.6982447022968225`*^9}, {3.6982448483396826`*^9, 3.698244851450246*^9}, {
   3.698244933819071*^9, 3.698244958976886*^9}, {3.698245395254878*^9, 
   3.6982454425872707`*^9}, {3.6982455334518604`*^9, 3.698245695213285*^9}, {
   3.698245781741675*^9, 3.6982457826152544`*^9}, {3.6982458825059676`*^9, 
   3.6982459172355022`*^9}, {3.698246045059526*^9, 3.698246100321678*^9}, {
   3.698253129835696*^9, 3.6982531386876264`*^9}, {3.6982532304499874`*^9, 
   3.69825324168644*^9}, {3.6982532778355227`*^9, 3.6982534073757544`*^9}, {
   3.698253465180602*^9, 3.6982534977651043`*^9}, {3.698254190143094*^9, 
   3.6982542433688955`*^9}, {3.698254279969256*^9, 3.698254353568982*^9}, {
   3.6982544022712836`*^9, 3.6982544534763365`*^9}, {3.6982544873733187`*^9, 
   3.698254508807534*^9}, {3.698254595014316*^9, 3.698254597343861*^9}, {
   3.698254634108245*^9, 3.698254680962821*^9}, {3.6982547749639425`*^9, 
   3.698254789407022*^9}, 3.698254861014345*^9, {3.6982549544580545`*^9, 
   3.6982549839301014`*^9}, {3.698255015125292*^9, 3.6982550486934605`*^9}, {
   3.6982551208823404`*^9, 3.6982552963360257`*^9}, {3.6982553362324867`*^9, 
   3.698255342231966*^9}, {3.698255465912278*^9, 3.698255486190133*^9}, {
   3.698255686124612*^9, 3.6982557622596884`*^9}, {3.6982558094149637`*^9, 
   3.6982558199469495`*^9}, 3.698256018427397*^9, {3.6982560569529486`*^9, 
   3.6982561175620804`*^9}, {3.698256229300191*^9, 3.6982562416898055`*^9}, {
   3.6982562844544973`*^9, 3.6982562938097024`*^9}, {3.6982563758321037`*^9, 
   3.698256377887467*^9}, {3.698256415702329*^9, 3.6982564539306993`*^9}, {
   3.6982566963957667`*^9, 3.698256770189762*^9}, {3.698256801014397*^9, 
   3.6982569997499104`*^9}, {3.6982570494969053`*^9, 3.698257072085887*^9}, {
   3.6982571653623567`*^9, 3.698257192433812*^9}, {3.6982572469951086`*^9, 
   3.6982573639914455`*^9}, {3.6982574279343557`*^9, 
   3.6982574668984146`*^9}, {3.698257511397131*^9, 3.6982575172485123`*^9}, {
   3.698257584419564*^9, 3.6982576933415976`*^9}, {3.6982577499231243`*^9, 
   3.6982577501943045`*^9}, {3.69825785394013*^9, 3.698257872567484*^9}, 
   3.6982579412235203`*^9, {3.698258013468663*^9, 3.6982580318583593`*^9}, {
   3.698258339897382*^9, 3.6982583475944867`*^9}, {3.6982583791599216`*^9, 
   3.698258380355215*^9}, {3.6982584368701987`*^9, 3.698258462045396*^9}, 
   3.6982585281301856`*^9, {3.698258606776347*^9, 3.698258607964134*^9}, {
   3.698259032988323*^9, 3.698259039056348*^9}, {3.6982590936030264`*^9, 
   3.6982591024363847`*^9}, {3.6982591576172233`*^9, 3.698259166864355*^9}, {
   3.698259200680093*^9, 3.698259243642088*^9}, {3.6982592893579845`*^9, 
   3.698259311563212*^9}, {3.698259404324794*^9, 3.6982594615177617`*^9}, {
   3.6982595450400524`*^9, 3.6982595530380344`*^9}, {3.69825971680807*^9, 
   3.698259723223493*^9}, 3.698259820699207*^9, {3.6982606713400655`*^9, 
   3.6982607004496317`*^9}, {3.6982607665887327`*^9, 
   3.6982607822190995`*^9}, {3.698260846650982*^9, 3.6982608594689837`*^9}, {
   3.6982609151166964`*^9, 3.6982609543557205`*^9}, {3.6982610021420703`*^9, 
   3.69826104096456*^9}, {3.6982610775518847`*^9, 3.6982610816931314`*^9}, {
   3.6982612369141397`*^9, 3.698261250419097*^9}, {3.698262305377144*^9, 
   3.6982623858675575`*^9}, {3.6982624440639563`*^9, 
   3.6982624579936953`*^9}, {3.6982680541222563`*^9, 3.698268104513773*^9}, {
   3.698268352069643*^9, 3.698268356044016*^9}, {3.6982692866625395`*^9, 
   3.6982693246676664`*^9}, 3.698269518825307*^9, 3.6983103791587944`*^9, {
   3.698310440083367*^9, 3.698310441363062*^9}, {3.698317111589958*^9, 
   3.698317113164505*^9}, {3.698318652996944*^9, 3.6983186843734655`*^9}, {
   3.698318741470319*^9, 3.6983187662058525`*^9}, {3.6983188359678097`*^9, 
   3.6983188588205843`*^9}, {3.698318889818942*^9, 3.698318935753536*^9}, {
   3.6983190542967052`*^9, 3.6983190942500157`*^9}, {3.6983198910647526`*^9, 
   3.698319940327596*^9}, {3.6983222530352154`*^9, 3.6983222561663446`*^9}, {
   3.698322286437148*^9, 3.698322288498358*^9}, {3.6983224085677023`*^9, 
   3.698322427449193*^9}, {3.6983224617708344`*^9, 3.6983224961451883`*^9}, {
   3.6983226973291006`*^9, 3.698322720017496*^9}, {3.6983257179480543`*^9, 
   3.6983257268086743`*^9}, 3.700314325718482*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.6797567333782396`*^9, 3.6797567347311673`*^9}, {
  3.696335502893475*^9, 3.6963355050803843`*^9}}],

Cell[CellGroupData[{

Cell["Small Instance", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.7009922963106003`*^9, 3.7009923183190393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"20", ",", "0.0", ",", "5.0", ",", "0"}], "]"}]}], ";"}], 
   "*)"}], "\n", 
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G", ",", "nodes", ",", "False", ",", "True"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"X", "=", 
  RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.700992316272402*^9, 3.7009923884478188`*^9}, {
  3.7009925127862043`*^9, 3.700992537293635*^9}, {3.70099305171308*^9, 
  3.7009930566034174`*^9}, {3.700993247763296*^9, 3.700993340032179*^9}, {
  3.700993521193789*^9, 3.700993536375091*^9}, {3.700993602648387*^9, 
  3.7009936033240385`*^9}, {3.700994063161317*^9, 3.700994100399763*^9}, {
  3.700994221044218*^9, 3.700994249734191*^9}, {3.7009969511055737`*^9, 
  3.7009969632500596`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7009936569378815`*^9, 3.700993734419339*^9}, {
   3.700994071538083*^9, 3.700994213619525*^9}, {3.7009942502248373`*^9, 
   3.700994306467519*^9}, 3.7009969652485285`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.7009941011006002`*^9, 3.7009942136693053`*^9}, {
   3.700994250256089*^9, 3.700994306483147*^9}, 3.7009969653210835`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Number of solutions: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7009941011006002`*^9, 3.7009942136693053`*^9}, {
   3.700994250256089*^9, 3.700994306483147*^9}, 3.700996965326116*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3625441108283538`"}], ",", "2.2143150325040084`", ",", 
       RowBox[{"-", "1.1300942121858932`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8483340210806212`"}], ",", "3.6608123563653563`", ",", 
       RowBox[{"-", "1.1119378039768253`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.3663934953028667`"}], ",", "3.688572089405201`", ",", 
       RowBox[{"-", "1.2649111021230528`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.9950313638010635`"}], ",", "2.71974819195973`", ",", 
       RowBox[{"-", "0.2674790563030831`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3625441108283538`"}], ",", "2.2143150325040084`", ",", 
       RowBox[{"-", "1.1300942121858932`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8483340210806212`"}], ",", "3.6608123563653563`", ",", 
       RowBox[{"-", "1.1119378039768253`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.3663934953028667`"}], ",", "3.688572089405201`", ",", 
       RowBox[{"-", "1.2649111021230528`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.7729100643149764`"}], ",", "2.8217805989601183`", ",", 
       RowBox[{"-", "2.453226208149486`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3625441108283538`"}], ",", "2.2143150325040084`", ",", 
       "1.1300942121858932`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8483340210806212`"}], ",", "3.6608123563653563`", ",", 
       "1.1119378039768253`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.3663934953028667`"}], ",", "3.688572089405201`", ",", 
       "1.2649111021230528`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.7729100643149764`"}], ",", "2.8217805989601183`", ",", 
       "2.453226208149486`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3625441108283538`"}], ",", "2.2143150325040084`", ",", 
       "1.1300942121858932`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8483340210806212`"}], ",", "3.6608123563653563`", ",", 
       "1.1119378039768253`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.3663934953028667`"}], ",", "3.688572089405201`", ",", 
       "1.2649111021230528`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.9950313638010635`"}], ",", "2.71974819195973`", ",", 
       "0.2674790563030831`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7009936569378815`*^9, 3.700993734419339*^9}, {
   3.700994071538083*^9, 3.700994213619525*^9}, {3.7009942502248373`*^9, 
   3.700994306467519*^9}, 3.7009969653381243`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7009936569378815`*^9, 3.700993734419339*^9}, {
   3.700994071538083*^9, 3.700994213619525*^9}, {3.7009942502248373`*^9, 
   3.700994306467519*^9}, 3.700996965348131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{"X", ",", ".2", ",", ".08"}], "]"}]], "Input",
 CellChangeTimes->{{3.7009937882529845`*^9, 3.700993805639824*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-1.3625441108283538`, 
      2.2143150325040084`, -1.1300942121858932`}, {-1.8483340210806212`, 
      3.6608123563653563`, -1.1119378039768253`}, {-3.3663934953028667`, 
      3.688572089405201, -1.2649111021230528`}, {-3.9950313638010635`, 
      2.71974819195973, -0.2674790563030831}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-1.3625441108283538`, 
      2.2143150325040084`, -1.1300942121858932`}, {-1.8483340210806212`, 
      3.6608123563653563`, -1.1119378039768253`}, {-3.3663934953028667`, 
      3.688572089405201, -1.2649111021230528`}, {-3.7729100643149764`, 
      2.8217805989601183`, -2.453226208149486}}, 0.08]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-1.3625441108283538`, 2.2143150325040084`, 
      1.1300942121858932`}, {-1.8483340210806212`, 3.6608123563653563`, 
      1.1119378039768253`}, {-3.3663934953028667`, 3.688572089405201, 
      1.2649111021230528`}, {-3.7729100643149764`, 2.8217805989601183`, 
      2.453226208149486}}, 0.08]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.9950313638010635`, 2.71974819195973, -0.2674790563030831}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.9950313638010635`, 2.71974819195973, 0.2674790563030831}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.7729100643149764`, 2.8217805989601183`, -2.453226208149486},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.7729100643149764`, 2.8217805989601183`, 2.453226208149486}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.3663934953028667`, 3.688572089405201, -1.2649111021230528`},
      0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.3663934953028667`, 3.688572089405201, 1.2649111021230528`}, 
     0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.8483340210806212`, 
     3.6608123563653563`, -1.1119378039768253`}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.8483340210806212`, 3.6608123563653563`, 
     1.1119378039768253`}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.3625441108283538`, 
     2.2143150325040084`, -1.1300942121858932`}, 0.2]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-1.3625441108283538`, 2.2143150325040084`, 
     1.1300942121858932`}, 0.2]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{-1.526, 0, 0}, 0.2]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.2]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-1.3625441108283538`, 2.2143150325040084`, 
      1.1300942121858932`}, {-1.8483340210806212`, 3.6608123563653563`, 
      1.1119378039768253`}, {-3.3663934953028667`, 3.688572089405201, 
      1.2649111021230528`}, {-3.9950313638010635`, 2.71974819195973, 
      0.2674790563030831}}, 0.08]}},
  Axes->False,
  Boxed->False,
  ImageSize->{395.0435800759867, 352.1589042470286},
  ViewPoint->{-1.3979495303323248`, -2.8274776674397173`, \
-1.2251967804288815`},
  ViewVertical->{
   1.00499659303978, -0.7192841275713304, -0.0013791356683604677`}]], "Output",
 CellChangeTimes->{
  3.7009936138710485`*^9, {3.700993660493895*^9, 3.700993736448882*^9}, {
   3.7009937900817776`*^9, 3.700993805935723*^9}, 3.700993852451867*^9, 
   3.700994137513916*^9, 3.700994309706746*^9, 3.700996968367792*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Easy case using natural order", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"20", ",", "0.0", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeElapsed", "=", 
   RowBox[{
    RowBox[{"Timing", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "work"}], "}"}], "=", 
      RowBox[{"DGBPSolver", "[", 
       RowBox[{
        RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",",
         "True"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<TimeElapsed=\>\"", ",", "timeElapsed"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.693311450156807*^9, 3.693311476044976*^9}, {
   3.696338936452612*^9, 3.696338990378742*^9}, {3.6979845883633885`*^9, 
   3.697984617355788*^9}, {3.6979850347422743`*^9, 3.697985037135499*^9}, {
   3.6979953998165607`*^9, 3.6979954128237066`*^9}, {3.6979955008255515`*^9, 
   3.697995501469979*^9}, {3.698063057075743*^9, 3.6980630699679604`*^9}, 
   3.69807248124969*^9, {3.698258900635863*^9, 3.698259006148343*^9}, {
   3.698259380018849*^9, 3.6982593802355237`*^9}, {3.6982597311305723`*^9, 
   3.698259910722397*^9}, {3.69826115973089*^9, 3.698261179310876*^9}, {
   3.6982612672137356`*^9, 3.6982612687552586`*^9}, {3.698262268542156*^9, 
   3.698262269980609*^9}, {3.698262398805439*^9, 3.698262426512816*^9}, {
   3.698262569782508*^9, 3.6982625713080196`*^9}, {3.69826263228246*^9, 
   3.6982626331715517`*^9}, {3.6982682099045897`*^9, 3.698268212604455*^9}, {
   3.698268974378912*^9, 3.6982689818583913`*^9}, {3.6983225309017057`*^9, 
   3.698322539129117*^9}, 3.7003143257713733`*^9, {3.7005613624266267`*^9, 
   3.7005613782175703`*^9}, {3.7005614096460247`*^9, 3.700561462382221*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.700986656676106*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Number of solutions: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566796083`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TimeElapsed=\"\>", "\[InvisibleSpace]", "0.109375`"}],
  SequenceForm["TimeElapsed=", 0.109375],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566821094`*^9}],

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566821094`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["Number of nodes      : ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566821094`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "103"}],
  SequenceForm["Number of edges      : ", 103],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566977406`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.0960390751242673`*^-13"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 4.0960390751242673`*^-13}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566977406`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "2.283325349755404`*^-14"}],
  SequenceForm["Mean relative error  : ", 2.283325349755404*^-14],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7005612666344957`*^9, 3.700561318909053*^9, {3.700561368988276*^9, 
   3.7005613735151834`*^9}, 3.7005614630523443`*^9, 3.7009866566977406`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance with more than two solutions", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DGEdgesMDGP", "[", 
    RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"edges", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",", 
     "True"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982675435780106`*^9, 3.6982676849749393`*^9}, {
   3.6982677879648824`*^9, 3.69826778900282*^9}, 3.6982678486650257`*^9, {
   3.6982678894365683`*^9, 3.6982678923935056`*^9}, {3.698267923742344*^9, 
   3.6982679643030577`*^9}, {3.6982680118994756`*^9, 
   3.6982680172609124`*^9}, {3.6982682635398445`*^9, 
   3.6982682725164557`*^9}, {3.698268335835042*^9, 3.6982683377986155`*^9}, {
   3.6982683734273853`*^9, 3.69826837813604*^9}, {3.6982688333430157`*^9, 
   3.698268846448496*^9}, 3.698268908772118*^9, {3.698268995492119*^9, 
   3.6982690516700015`*^9}, {3.69832255207037*^9, 3.6983225532429857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700986656713366*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.7009866567339506`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Number of solutions: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866567339506`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculating the number of solution as a function of the number of constraints \
(max distance)\
\>", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}, {3.698322580067991*^9, 
  3.698322582100933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"G", "=", 
  RowBox[{
   RowBox[{"DGRandomMDGP", "[", "10", "]"}], "[", "\"\<G\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSample", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"density", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5"}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"density", " ", "of", " ", "edges"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"generating", " ", "sample", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"allEdges", "=", 
  RowBox[{"EdgeList", "[", "G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "density", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"density", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", "nSample"}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "subgraph"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gij", "=", "G"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "allEdges", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ek", "=", 
             RowBox[{"allEdges", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], ">", "d"}], "&&", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", "3"}]}], ",", 
              RowBox[{"gij", "=", 
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"gij", ",", "ek"}], "]"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", "gij"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solve", " ", "instance"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"nodes", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "gij", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S", ",", "work"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"gij", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"nSols", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{"Length", "[", 
           RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "results"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"density", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"nSols", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"nSols", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Density of Edges\>\"", ",", " ", "\"\<Number of Solutions\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.696334028602558*^9, 3.6963341389390335`*^9}, {
   3.696334203814807*^9, 3.696334553004195*^9}, {3.6963345893136067`*^9, 
   3.6963346447828355`*^9}, {3.6963346937306294`*^9, 
   3.6963348195399055`*^9}, {3.6963348799142075`*^9, 
   3.6963348804536867`*^9}, {3.696334945896783*^9, 3.6963349840214233`*^9}, {
   3.696335032797847*^9, 3.6963351414831853`*^9}, {3.6963352043938837`*^9, 
   3.696335230724231*^9}, {3.696335343802195*^9, 3.6963353555009074`*^9}, 
   3.696335412777022*^9, {3.696339497682501*^9, 3.6963395030722947`*^9}, {
   3.696339541525276*^9, 3.6963395556060305`*^9}, {3.69634027449716*^9, 
   3.6963403350733366`*^9}, {3.6982620163546495`*^9, 
   3.6982620232827463`*^9}, {3.698262097986717*^9, 3.6982621670029964`*^9}, {
   3.6982698650202107`*^9, 3.6982699046144314`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 9, 18, 27, 36, 45, 54, 63, 72, 81, 90}, {{2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {1}, {2}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {
          5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {
          9}, {10}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {9}, {10}, {1}, {2}, {
          3}, {4}, {5}, {6}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {
          7}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {10}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}}}, Pattern}]}, {
      Properties -> {
        UndirectedEdge[1, 9] -> {
          "DistanceBounds" -> {6.251560763625074, 6.251560763625074}}, 
         UndirectedEdge[4, 7] -> {
          "DistanceBounds" -> {3.8333892981447426`, 3.8333892981447426`}}, 
         UndirectedEdge[3, 10] -> {
          "DistanceBounds" -> {7.652316864850336, 7.652316864850336}}, 
         UndirectedEdge[2, 8] -> {
          "DistanceBounds" -> {4.84782140585304, 4.84782140585304}}, 
         UndirectedEdge[7, 9] -> {
          "DistanceBounds" -> {2.4913895358402263`, 2.4913895358402263`}}, 
         UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[2, 4] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[6, 8] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[5, 8] -> {
          "DistanceBounds" -> {2.9653658610976956`, 2.9653658610976956`}}, 
         UndirectedEdge[9, 10] -> {
          "DistanceBounds" -> {1.5259999999999996`, 1.5259999999999996`}}, 
         UndirectedEdge[2, 10] -> {
          "DistanceBounds" -> {7.307927684226567, 7.307927684226567}}, 
         UndirectedEdge[2, 6] -> {
          "DistanceBounds" -> {2.36479497811145, 2.36479497811145}}, 
         UndirectedEdge[6, 7] -> {
          "DistanceBounds" -> {1.5260000000000002`, 1.5260000000000002`}}, 
         UndirectedEdge[3, 7] -> {
          "DistanceBounds" -> {4.357213592794797, 4.357213592794797}}, 
         UndirectedEdge[7, 8] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[3, 6] -> {
          "DistanceBounds" -> {2.9046196655894048`, 2.9046196655894048`}}, 
         UndirectedEdge[2, 5] -> {
          "DistanceBounds" -> {2.8233691859469703`, 2.8233691859469703`}}, 
         UndirectedEdge[7, 10] -> {
          "DistanceBounds" -> {3.834287030671908, 3.834287030671908}}, 
         UndirectedEdge[4, 9] -> {
          "DistanceBounds" -> {5.7671132907283855`, 5.7671132907283855`}}, 
         UndirectedEdge[2, 9] -> {
          "DistanceBounds" -> {6.169648522759011, 6.169648522759011}}, 
         UndirectedEdge[4, 10] -> {
          "DistanceBounds" -> {6.581734865157546, 6.581734865157546}}, 
         UndirectedEdge[5, 9] -> {
          "DistanceBounds" -> {4.388150640194464, 4.388150640194464}}, 
         UndirectedEdge[2, 7] -> {
          "DistanceBounds" -> {3.7511644959005865`, 3.7511644959005865`}}, 
         UndirectedEdge[1, 4] -> {
          "DistanceBounds" -> {2.9854928553066067`, 2.9854928553066067`}}, 
         UndirectedEdge[6, 9] -> {
          "DistanceBounds" -> {3.836264869395291, 3.836264869395291}}, 
         UndirectedEdge[3, 5] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[4, 6] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[1, 6] -> {
          "DistanceBounds" -> {2.7468473170182452`, 2.7468473170182452`}}, 
         UndirectedEdge[5, 10] -> {
          "DistanceBounds" -> {5.333973395707126, 5.333973395707126}}, 
         UndirectedEdge[8, 10] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[1, 7] -> {
          "DistanceBounds" -> {4.097014188245711, 4.097014188245711}}, 
         UndirectedEdge[1, 5] -> {
          "DistanceBounds" -> {3.4609406283673088`, 3.4609406283673088`}}, 
         UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[3, 8] -> {
          "DistanceBounds" -> {5.205045434931374, 5.205045434931374}}, 
         UndirectedEdge[1, 10] -> {
          "DistanceBounds" -> {7.20207411952588, 7.20207411952588}}, 
         UndirectedEdge[6, 10] -> {
          "DistanceBounds" -> {4.969557625292943, 4.969557625292943}}, 
         UndirectedEdge[1, 8] -> {
          "DistanceBounds" -> {4.916916361661941, 4.916916361661941}}, 
         UndirectedEdge[1, 3] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[4, 8] -> {
          "DistanceBounds" -> {4.271212972955371, 4.271212972955371}}, 
         UndirectedEdge[8, 9] -> {
          "DistanceBounds" -> {1.526000000000001, 1.526000000000001}}, 
         UndirectedEdge[4, 5] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[5, 7] -> {
          "DistanceBounds" -> {2.491389535840226, 2.491389535840226}}, 
         UndirectedEdge[3, 4] -> {"DistanceBounds" -> {1.526, 1.526}}, 
         UndirectedEdge[3, 9] -> {
          "DistanceBounds" -> {6.639755926311532, 6.639755926311532}}}, 
       EdgeWeight -> CompressedData["
1:eJxTTMoPSmVkYGDQBeKLSrd/1mX9sLe1E1gc+47ZwePef2GvR+wOtx8+XMy4
gdvhyzRese6frA6Leb+vD08WcKhkzZJ/s0rY4dVzIdWZjJIOZm9ntbw5J+OA
bo5VZuFUp2lsDkvvqS6UfM3k0FX5rz2Jic/B4XO2t3aKsIO505LwHWslHP6q
iKYGWsti6Jc0trBZacPuIPotK+1krqDD7qcmed8vijh07yjWlemXcghaeuTz
j9lyGPpOf1RiOrGKz6E5oeXWDlFBhxrWBtU2QXGHzbqffTcFS2God9o+YY/g
TnYHHqu2mPJeQQcPfUP5v6GiDpfQ1M0+emzR6g18Di8eXth2+YEw3Bw7qPzZ
zQfXzlvD53AVTd95KB8ABnSjMw==
        "]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.5877852522924737, 
       0.809016994374948}, {-0.9510565162951538, 
       0.3090169943749484}, {-0.9510565162951534, -0.30901699437494645`}, \
{-0.5877852522924726, -0.8090169943749468}, {6.049014748177263*^-16, -1.}, {
       0.5877852522924738, -0.8090169943749481}, {
       0.9510565162951539, -0.3090169943749485}, {0.9510565162951533, 
       0.30901699437494634`}, {0.5877852522924726, 
       0.8090169943749468}, {-7.044813998280222*^-16, 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{3, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{4, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{6, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{8, 10}, 0.02261146496815286]}, 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
         DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
         DiskBox[9, 0.02261146496815286], DiskBox[10, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.7009866568507395`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"9", "\[UndirectedEdge]", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7009866570747647`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{0.06714396284829721, 58.6}, {0.1, 24.64}, {0.2, 10.4}, {0.3, 
      2.64}, {0.4, 2.24}, {0.5, 
      2.}}], {{}, {
       LineBox[{{0.1, 65.74036496188324}, {0.1, -16.46036496188325}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.1, 65.74036496188324}], 
         Offset[{-1.5, 0}, {0.1, 65.74036496188324}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.1, -16.46036496188325}], 
         Offset[{-1.5, 0}, {0.1, -16.46036496188325}]}]}, {
       LineBox[{{0.2, 28.0351920885484}, {0.2, -7.235192088548397}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2, 28.0351920885484}], 
         Offset[{-1.5, 0}, {0.2, 28.0351920885484}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2, -7.235192088548397}], 
         Offset[{-1.5, 0}, {0.2, -7.235192088548397}]}]}, {
       LineBox[{{0.3, 4.34489491367259}, {0.3, 0.9351050863274106}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3, 4.34489491367259}], 
         Offset[{-1.5, 0}, {0.3, 4.34489491367259}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3, 0.9351050863274106}], 
         Offset[{-1.5, 0}, {0.3, 0.9351050863274106}]}]}, {
       LineBox[{{0.4, 2.9033249580710803`}, {0.4, 1.5766750419289202`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4, 2.9033249580710803`}], 
         Offset[{-1.5, 0}, {0.4, 2.9033249580710803`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4, 1.5766750419289202`}], 
         Offset[{-1.5, 0}, {0.4, 1.5766750419289202`}]}]}, {}}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Density of Edges\"", TraditionalForm], 
    FormBox["\"Number of Solutions\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {0, 58.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7009866733179274`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBPSolver", "Subchapter",
 CellChangeTimes->{{3.6795571036686206`*^9, 3.679557113728629*^9}, {
  3.6811328435634823`*^9, 3.681132843691572*^9}, {3.682701946598136*^9, 
  3.682701963537011*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"DGIPBSubG", ",", "DGIBPSolver"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIPBSubG", "[", 
     RowBox[{"G_", ",", "k_", ",", "branch_", ",", "nslices_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "E", ",", 
        RowBox[{"W", "=", "G"}], ",", "nodes", ",", "ei", ",", "ej", ",", 
        "dij", ",", "lij", ",", "uij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", " ", "vertices", " ", "k"}], "+", "1"}], ",", "...",
         ",", "numberOfAtoms"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"k", "+", "1"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"G", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "W", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"uij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dij", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "set", " ", "weight", " ", "affected", " ", "by", " ", "branch"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ei", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ej", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ei", ">", "ej"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ei", ",", "ej"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"ej", ",", "ei"}], "}"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ej", "-", "ei"}], "\[Equal]", "3"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"uij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"lij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", "nslices"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "*", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", "ej", "]"}], "]"}]}], "+", 
               RowBox[{"lij", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "2.0"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{"E", ",", 
          RowBox[{"EdgeWeight", "\[Rule]", "dij"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"W", ",", 
               RowBox[{"E", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
             "\"\<DistanceBounds\>\""}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "W", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{"G_", ",", "nslices_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", "G", " ", "using", " ", "natural", " ", 
     RowBox[{"ordering", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "W", ",", "S", ",", "SW", ",", "work", ",", "locwork", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "IBPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", 
       RowBox[{"nslices", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"W", "=", 
          RowBox[{"DGIPBSubG", "[", 
           RowBox[{"G", ",", "k", ",", "branch", ",", "nslices"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SW", ",", "locwork"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"W", ",", 
            RowBox[{"DGNaturalOrdering", "[", "W", "]"}], ",", 
            RowBox[{"k", "\[NotEqual]", "numberOfAtoms"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "4"}], ",", 
           RowBox[{"i", "\[LessEqual]", "k"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{
            RowBox[{"work", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "+=", 
            RowBox[{"locwork", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SW", "[", "\"\<Points\>\"", "]"}], "]"}], "\[Equal]", 
           "0"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"unfeasible", " ", "subgraph"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[ibp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", " ", "\"\<   work=\>\"", ",", "work", ",", 
             "\"\< prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", 
               RowBox[{"SW", "[", "\"\<Points\>\"", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
                RowBox[{"nslices", "-", "1"}]}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "<", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGIBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6827019671531935`*^9, 3.6827019883797054`*^9}, {
   3.6827520058773313`*^9, 3.682752007842795*^9}, {3.682773523900758*^9, 
   3.6827739504220514`*^9}, {3.6827739820939207`*^9, 3.682773997290721*^9}, {
   3.6827748027586565`*^9, 3.6827748602420864`*^9}, {3.682774937541239*^9, 
   3.6827753481045656`*^9}, {3.6827754855464773`*^9, 3.682775768077546*^9}, {
   3.6827758431794395`*^9, 3.682775852191575*^9}, {3.6827761086040697`*^9, 
   3.6827761356665545`*^9}, {3.6827761799051275`*^9, 
   3.6827762569294157`*^9}, {3.682776288487507*^9, 3.6827764838117733`*^9}, {
   3.682776598677207*^9, 3.682776711866549*^9}, {3.682776757766048*^9, 
   3.682776806526044*^9}, {3.6827769820156193`*^9, 3.6827770574592137`*^9}, {
   3.6827771830672836`*^9, 3.6827772226146555`*^9}, {3.6827772538317227`*^9, 
   3.682777263271402*^9}, {3.6827775456748238`*^9, 3.682777546518789*^9}, {
   3.6827775797151136`*^9, 3.6827775984622955`*^9}, {3.682777657482841*^9, 
   3.6827777067571774`*^9}, {3.6827777903994412`*^9, 
   3.6827777968861074`*^9}, {3.682777869172826*^9, 3.682777869551065*^9}, {
   3.6827779315169716`*^9, 3.682777931686807*^9}, {3.682778028203849*^9, 
   3.6827780327785378`*^9}, {3.682778114875511*^9, 3.6827781151693735`*^9}, {
   3.6827786318985825`*^9, 3.6827786532106905`*^9}, {3.682778780232845*^9, 
   3.6827788150088916`*^9}, {3.682778860589865*^9, 3.682778918862643*^9}, {
   3.6827790426077757`*^9, 3.6827794809945264`*^9}, {3.6827795619985237`*^9, 
   3.682779590990248*^9}, {3.682779976097824*^9, 3.6827799798825316`*^9}, 
   3.6827800453274255`*^9, {3.6827800812274303`*^9, 3.6827801376397424`*^9}, {
   3.6827801817742767`*^9, 3.682780266523752*^9}, {3.6827805401257453`*^9, 
   3.682780661598824*^9}, {3.6827807301684313`*^9, 3.6827807439590216`*^9}, {
   3.6827807922573433`*^9, 3.682780825155981*^9}, {3.68278089072889*^9, 
   3.6827809003062625`*^9}, {3.6827809636600475`*^9, 
   3.6827809691730986`*^9}, {3.682781052145022*^9, 3.6827810576947823`*^9}, 
   3.6827811031071897`*^9, {3.68278114552192*^9, 3.682781148502773*^9}, {
   3.682781191030442*^9, 3.682781251899205*^9}, {3.682781354202553*^9, 
   3.6827813544128523`*^9}, 3.6827813991698384`*^9, {3.6827814442928348`*^9, 
   3.6827814467598443`*^9}, {3.682781487351517*^9, 3.6827814884135475`*^9}, {
   3.6827818109759817`*^9, 3.682781813545724*^9}, {3.6827853356617775`*^9, 
   3.682785337550229*^9}, {3.6827867368412943`*^9, 3.682786741159988*^9}, {
   3.682786807927786*^9, 3.682786819894947*^9}, {3.68278715946465*^9, 
   3.682787162255832*^9}, {3.6827874230740376`*^9, 3.6827874366378717`*^9}, {
   3.682789227649762*^9, 3.682789230497446*^9}, {3.6827893815529485`*^9, 
   3.6827893845262256`*^9}, {3.682874323027193*^9, 3.682874336182909*^9}, {
   3.6829343494785357`*^9, 3.682934438253458*^9}, {3.682934871900261*^9, 
   3.682934888830892*^9}, {3.6829350043195353`*^9, 3.6829350106554976`*^9}, {
   3.6829355309198093`*^9, 3.682935703315592*^9}, {3.6829357824619856`*^9, 
   3.682935807468607*^9}, {3.683022005274223*^9, 3.6830220091210856`*^9}, {
   3.683022039821942*^9, 3.683022086349081*^9}, {3.6830326439989023`*^9, 
   3.6830326466660814`*^9}, {3.6982787207453346`*^9, 
   3.6982787416320457`*^9}, {3.6982788335657873`*^9, 
   3.6982788373652954`*^9}, {3.6982788850684876`*^9, 3.698278897118658*^9}, 
   3.698279124824894*^9, {3.6982791582475395`*^9, 3.6982791711539445`*^9}, {
   3.698309861882863*^9, 3.698309882569612*^9}, {3.69831038648313*^9, 
   3.698310415785906*^9}, {3.698310468313056*^9, 3.6983104947750435`*^9}, {
   3.6983105670383787`*^9, 3.6983108051037474`*^9}, {3.6983108460196304`*^9, 
   3.69831084647191*^9}, {3.6983109559174995`*^9, 3.6983109779913588`*^9}, {
   3.6983110265178947`*^9, 3.698311291553689*^9}, {3.6983145988464184`*^9, 
   3.69831460419575*^9}, {3.6983146463789663`*^9, 3.698314707852988*^9}, {
   3.6983147821238956`*^9, 3.698314782640411*^9}, {3.6983150107432384`*^9, 
   3.698315047343246*^9}, {3.698315092713068*^9, 3.6983152004211903`*^9}, {
   3.698315232561533*^9, 3.698315260222073*^9}, {3.6983157676291466`*^9, 
   3.698315857264064*^9}, {3.6983164679800034`*^9, 3.6983164752378836`*^9}, {
   3.6983168783230886`*^9, 3.6983170132968063`*^9}, {3.698317121264511*^9, 
   3.698317124532487*^9}, {3.6983171651430187`*^9, 3.6983172096940494`*^9}, {
   3.6983172690091677`*^9, 3.698317285520046*^9}, {3.698317341261922*^9, 
   3.6983174086930933`*^9}, {3.6983175075561094`*^9, 
   3.6983175489928827`*^9}, {3.698317985726252*^9, 3.6983180308053017`*^9}, {
   3.6983180804420214`*^9, 3.698318153053418*^9}, {3.6983182050383067`*^9, 
   3.698318227520159*^9}, {3.6983184577908587`*^9, 3.698318459816066*^9}, {
   3.6983201490009527`*^9, 3.6983202171540594`*^9}, {3.6983202616319118`*^9, 
   3.698320359747717*^9}, {3.6983204038955097`*^9, 3.698320404847747*^9}, {
   3.6983204662064514`*^9, 3.6983204668746033`*^9}, {3.6983205699139247`*^9, 
   3.6983205727767935`*^9}, {3.6983206452559185`*^9, 
   3.6983207396592913`*^9}, {3.698320820824626*^9, 3.698320839575612*^9}, {
   3.6983210012734385`*^9, 3.698321017213336*^9}, {3.6983210938335676`*^9, 
   3.6983211554295063`*^9}, {3.698321266161542*^9, 3.6983213674918222`*^9}, {
   3.6983214012285056`*^9, 3.698321481513752*^9}, {3.6983215312120943`*^9, 
   3.6983216238692656`*^9}, {3.6983217143387938`*^9, 3.6983218106859655`*^9}, 
   3.6983218871641626`*^9, {3.6983221735633664`*^9, 3.6983221756940465`*^9}, {
   3.6983223206968775`*^9, 3.6983223430101957`*^9}, {3.6983226000175014`*^9, 
   3.698322604477955*^9}, {3.6983227729344378`*^9, 3.698322785837361*^9}, {
   3.6983228585817385`*^9, 3.6983230005510645`*^9}, {3.6983241502043796`*^9, 
   3.6983247033865213`*^9}, {3.6983247355954504`*^9, 
   3.6983247369419065`*^9}, {3.698324818157818*^9, 3.698324911463064*^9}, {
   3.6983251317568593`*^9, 3.6983251389555683`*^9}, {3.6983253273352985`*^9, 
   3.698325353730069*^9}, {3.6983253976947374`*^9, 3.6983254234251127`*^9}, {
   3.698325469724806*^9, 3.6983254824073663`*^9}, {3.6983256972091217`*^9, 
   3.6983257021931415`*^9}, 3.6983257621151047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.682777369516736*^9, 3.6827773754382195`*^9}, {
  3.6983259775553503`*^9, 3.6983259809093723`*^9}}],

Cell[CellGroupData[{

Cell["Check DGIBPSubG", "Subsection",
 CellChangeTimes->{{3.6983258405729327`*^9, 3.6983258521025915`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"branch", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nslices", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", "=", 
   RowBox[{"DGIPBSubG", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "4", ",", "branch", ",", 
     "nslices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", "W", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.698324758634654*^9, 3.6983248054901347`*^9}, {
  3.6983249364999857`*^9, 3.698324940575715*^9}, {3.698325054588522*^9, 
  3.698325054742776*^9}, {3.6983258176326985`*^9, 3.698325836345594*^9}, {
  3.6983258878299446`*^9, 3.6983259175102806`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "2.8660274619835073`", "2.579424715785157`", 
      "3.1526302081818582`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "3.646385630794427`", "3.2817470677149845`", 
      "4.01102419387387`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "3.0569647939442484`", "2.7512683145498236`", 
      "3.3626612733386736`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.526`", "1.526`", "1.526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.698324827395645*^9, {3.6983249183877783`*^9, 3.698324941107605*^9}, 
   3.698325055812455*^9, 3.698325919531186*^9, 3.7009866736812515`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.0093288350826826`", "2.579424715785157`", 
      "3.1526302081818582`"},
     {
      TagBox["4",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["5",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["6",
       HoldForm], "3", "4", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.698324827395645*^9, {3.6983249183877783`*^9, 3.698324941107605*^9}, 
   3.698325055812455*^9, 3.698325919531186*^9, 3.7009866736812515`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving a small instance using DGIBP ", "Subsection",
 CellChangeTimes->{{3.698325939397998*^9, 3.6983259605760155`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "2", ",", "True"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6798218509178233`*^9, 3.679821852271891*^9}, {
   3.6798220754379344`*^9, 3.6798220755372047`*^9}, {3.679822744321784*^9, 
   3.6798227445214615`*^9}, {3.6798231052765684`*^9, 3.679823107593405*^9}, 
   3.679823226558363*^9, {3.6798233451775875`*^9, 3.679823345308581*^9}, {
   3.679823525737986*^9, 3.679823549906366*^9}, {3.6798263139146395`*^9, 
   3.679826344570452*^9}, {3.6798288602280912`*^9, 3.6798288604903975`*^9}, {
   3.6798288950564623`*^9, 3.679828994620492*^9}, {3.679829044969572*^9, 
   3.6798290909698343`*^9}, {3.6798294100005565`*^9, 
   3.6798294105697436`*^9}, {3.6798295004715223`*^9, 
   3.6798295681002893`*^9}, {3.6798296319378924`*^9, 3.679829632507357*^9}, {
   3.6798299800985794`*^9, 3.6798299863477526`*^9}, {3.679830157933735*^9, 
   3.6798301597117043`*^9}, {3.6798302974701996`*^9, 
   3.6798303164031887`*^9}, {3.6798303891181116`*^9, 3.679830389302563*^9}, {
   3.6798304759096456`*^9, 3.679830478014727*^9}, {3.6799119298147106`*^9, 
   3.6799119406954846`*^9}, {3.679912001613147*^9, 3.679912019708365*^9}, {
   3.6799121456440763`*^9, 3.6799121778114533`*^9}, 3.679912535631927*^9, {
   3.6799174812432394`*^9, 3.6799174816978993`*^9}, {3.679918592547327*^9, 
   3.6799186296132526`*^9}, {3.6799255011209993`*^9, 
   3.6799255012742624`*^9}, {3.6799265772569237`*^9, 
   3.6799266196275845`*^9}, {3.679927091468864*^9, 3.6799271177650127`*^9}, {
   3.679927217233017*^9, 3.679927233987025*^9}, {3.679927271460558*^9, 
   3.679927271760435*^9}, {3.679927363032942*^9, 3.679927363786351*^9}, 
   3.6799274640577226`*^9, {3.6799274956489134`*^9, 3.6799275047564964`*^9}, {
   3.6802494864436903`*^9, 3.680249517698353*^9}, {3.680249838745507*^9, 
   3.680249885493765*^9}, {3.6802499632347374`*^9, 3.68024997989824*^9}, {
   3.6802500278218193`*^9, 3.680250042557376*^9}, {3.6802500816458673`*^9, 
   3.680250094230627*^9}, {3.6802501729429226`*^9, 3.680250245242584*^9}, {
   3.680250277069769*^9, 3.680250349656209*^9}, {3.6802561938862762`*^9, 
   3.680256217314024*^9}, {3.6802562822999315`*^9, 3.6802562845355077`*^9}, {
   3.680259514448849*^9, 3.68025956932335*^9}, {3.680259617915313*^9, 
   3.680259625069577*^9}, {3.6802596588968315`*^9, 3.6802596591149898`*^9}, {
   3.6802597057100697`*^9, 3.680259710865752*^9}, {3.680259778882868*^9, 
   3.680259779298339*^9}, {3.6802598345877275`*^9, 3.6802598347003174`*^9}, {
   3.6802634539441957`*^9, 3.6802634724224014`*^9}, {3.680264125324051*^9, 
   3.680264127539488*^9}, {3.680971309238633*^9, 3.6809713321665344`*^9}, {
   3.6809713775361547`*^9, 3.680971388619849*^9}, 3.680971453133582*^9, {
   3.6809717846377277`*^9, 3.6809717933103046`*^9}, 3.682752354734047*^9, 
   3.682757377902835*^9, {3.6827585847612524`*^9, 3.682758585270115*^9}, {
   3.682758922849889*^9, 3.6827589310888653`*^9}, 3.682758963373986*^9, {
   3.682777338739936*^9, 3.6827773397706623`*^9}, {3.6827773885972614`*^9, 
   3.682777509880164*^9}, {3.682777995186551*^9, 3.6827779952866464`*^9}, {
   3.682778057930979*^9, 3.6827780633222637`*^9}, {3.682778129241908*^9, 
   3.682778129377575*^9}, {3.682778697943698*^9, 3.682778699490327*^9}, {
   3.682778953526342*^9, 3.6827789556117177`*^9}, {3.682779505273485*^9, 
   3.682779536222084*^9}, {3.6827800751236987`*^9, 3.682780075207179*^9}, {
   3.682781360244443*^9, 3.682781393632818*^9}, 3.682781437277698*^9, {
   3.6830326521888623`*^9, 3.68303266619322*^9}, 3.6980724813342457`*^9, {
   3.698316545143901*^9, 3.698316631268173*^9}, {3.698316730685111*^9, 
   3.698316736404586*^9}, {3.6983167909271526`*^9, 3.698316800641884*^9}, {
   3.6983170748361397`*^9, 3.698317079814169*^9}, {3.698318182985692*^9, 
   3.6983181898300004`*^9}, {3.6983183336292505`*^9, 3.698318356878724*^9}, 
   3.6983187108076825`*^9, {3.6983189659733076`*^9, 3.6983189766865835`*^9}, 
   3.698324932826663*^9, 3.698325230415392*^9, {3.6983257987214537`*^9, 
   3.6983258007115965`*^9}, {3.6983259353272004`*^9, 3.698325936799776*^9}, {
   3.698325998727798*^9, 3.6983260250657864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"DGIBPSolver\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{{3.6983260200792265`*^9, 3.6983260265995455`*^9}, 
   3.7009866737346396`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of solutions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Number of solutions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6983260200792265`*^9, 3.6983260265995455`*^9}, 
   3.7009866737346396`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Illustrating the tree exponential growth", "Subsection",
 CellChangeTimes->{{3.697799201845194*^9, 3.6977992165628195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "IBP", " ", "Tree", " ", 
    RowBox[{"(", 
     RowBox[{"it", " ", "can", " ", "be", " ", "very", " ", 
      RowBox[{
       RowBox[{"slow", "!!"}], "!"}]}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfAtoms", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfSlices", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"or", " ", "2", " ", "at", " ", "max"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"node", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"node", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "5"}], ",", 
     RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"leafs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexDegree", "[", 
            RowBox[{"T", ",", "#"}], "]"}], "===", "1"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "leafs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"node", "=", 
          RowBox[{"leafs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"node", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "T", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Number of Vertex=\>\"", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697799241731846*^9, 3.697799254334177*^9}, {
   3.697799346715639*^9, 3.697799494692484*^9}, {3.6977995415977516`*^9, 
   3.697799554133665*^9}, {3.69779958568857*^9, 3.6977996515207334`*^9}, {
   3.6977997018072743`*^9, 3.6977998432952023`*^9}, {3.697800084682583*^9, 
   3.697800241626899*^9}, {3.6978002876775465`*^9, 3.697800679942664*^9}, {
   3.697805514452196*^9, 3.6978056518731575`*^9}, {3.697822288932176*^9, 
   3.6978223841049337`*^9}, {3.697822429222677*^9, 3.6978225315229197`*^9}, {
   3.697822594480259*^9, 3.6978225945599475`*^9}, {3.6978228346728067`*^9, 
   3.697822844849125*^9}, {3.6978235002195606`*^9, 3.6978235312395496`*^9}, {
   3.697823578517539*^9, 3.697823602359697*^9}, {3.697823669118662*^9, 
   3.697823677917166*^9}, {3.697824726940096*^9, 3.697824736486435*^9}, 
   3.6981575223574333`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl3EMQIEuzBtB/bNu2bdu2bVt3bNu2bdu2bdsz70y8xYne1aIjqqM6K/NL
0LBdxbYB/ve//1WJ8r//BfIMTBCCEozghCAkoQhNGMISjvBEICKRiIyl/heV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalE5X/vkqpU
ozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSj
Oz3oSS9604f/6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0
pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2
s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5z
g5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvOD
n/ziN3/4y/9s/gAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQk
F7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQW
talDXepRnwY0pBGNaUJTmtGcFrSkFa1pw7+Pdjva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8L6D9T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+/Edf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+HfoD
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/P/wBCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/Yl8AAhKIwAQhKMEITghC
EorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKS
itSkIS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK
0pShLOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orW
tKEt7WhPBzrSic50oSvd6E4PetKL3vThP/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/vKv0B+AgAQiMEEISjCCE4KQhCI0YQhL
OMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs6
0pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznK
U4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rT
gY50ojNd6Eo3utODnvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOHv/y75AtAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz78R1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZ
wlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nC
VraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/5d8AcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/+oy/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhL/+aewIQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+N
fQEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y7+m3gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V9DfwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8m+YJwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+TfIF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//BviDUBAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/g3wByAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/8I7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf8E9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv9CuAAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlX2BfAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yL6wzAAH/5X8SmCAEJRjBCUFIQhGaMIQl
HOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd
6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzl
qUBFKlE5yv9nqValGv8HVvJgbA==
      "], {CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
       "], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
2Kgpmv2ae4sBnsyUFDqxQQ8nbEuQORP8d5927SfmuVVH6cVbGhPxA4V6llEs
3NSPXVn/i4GcE1vbGEw2Vh8Z3XTdkAnZIidYaLKh4Rm3c96fCfvbsd1/CTzT
3se3MraYicrfmiIXIlmQP/m9n08M4HUqzi8i6qBqopgy08+Ey9olCYVEHVZL
VNV7KQDOf8Wq+yksqMi9a/XmBdxzBRLns1kgfTz7coRJ+EDqwQe2u1lw399h
+FeZmNenzQ6WhJ8of7lc8hIZEKUUJiwqyyFtB2u79sIy2Ns5Xm7/KYOX4xlT
LqLLEOst6GohIYOUcon3TUt1sI7vlK36Kzls5omajs7VwczTj78/B0pj4xC/
d8FpbWSesGsQ6pNBwM6Dgj+dtOH7jFWTGycN/sqlR8+56UARRSE7mmVxl6Hq
x5TUxl/nkKJNCQo40lig7u6gjbAk7fKyaTlYTJPDys01YfrLpDCOTwl0Jv9/
Ml80cNOiLWF0vSLGgiv+Gdtqwt5+X7tfliw0yG3yovXayLp8I1+tWAFhcR1+
WRwi/n3q3J9LctCSrvQw5NbBr8By5908cnhDnVNUzdTCtzzzvX7jWhi4dGHs
XqwaEu4zi58MaaHBKVumbFwVpvsU/fXmNVGvUjd7UEwVXmW2pZ0vNNFaulFC
o1YFH1rfBiut1YLGH+oWlwQVKIxvLzgQogH5OjbP3F5VPJ2v8bfK0kDrUIGf
sqIy3EQ/wqpEExPyjE2+G5Qx9iBCZc1TJZyPuTBruF0DYStcyf8MVcD9yhr2
oVrINs7Tqd+tjCQdmfPntbTw+L7p46xvyvh5XEnRWV0DNbuDTpYaqMLZ4FT6
ZcZS/Doo+zb3kjqiH0Ll9iF1mB/ofPGlVx35Zcbfu++qYpfH6vapJHV0Gg1m
krPUQPMZKjjxQg/OjQrlW0sVIK8rO5lwQw88wQ7b92YrwmT9U3oZrz60vOuv
brusCBmNulW/JA3w5sfHtQspSqhz9dkZzWuAqM1NhZY3FfCEX321P0Ufb8b2
3u85pABHtzsfdj7Xh9+W95197QpY8OH6sC9EH/5+8Uly9grw53PR6NtgiKcn
BB/G3ZJHxVCatoaIIeL9vUmNw/KQ7fs2udLTEM3ZHj2H1RWw2ThL6Vm3AVY+
nbXviJbHxLuKNfFLjJCdI80lUi8P8ZuZJucjDTGftvI9IXKRYVVQNCduhMKt
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
j4uHmtnw1Vqek1toAOv+Eoe339jIvMiZ3yVpgIqqkqPFZDxfdfy3oEAfmxVf
a1wKYENrYEM5hWoE3RcBj/6eYIPtspsmLGyEm58LwnmL2Tiu3mvTPmCA1r7f
M68KSXvZ92LkzhkgPjeG0slji8ept7USYg1w+4/aV15ZWxxzFRQ5EKWPayKR
Rz04bGFQu9425bIBFOsiXnNI2SJrvOTqW5o+firprVcUYsLTuvH8K10uUDbi
u9YVJigKkZWKMgsEbSTV6txOJpJWly9PM/xLyObSLnpVMdHVZpT3sX2ayGtR
trlmT+4jF/MjNpXOE9G3B98nbSTIefbvfvf5BaJl2YGdHUEERKM7zQVn/hJq
yQMhDsEEmv68Hbt9eo646PnykOZVAmhbYLtdGiOierUH2nMIPHGN9Nuwe4yI
X2HrJ5BPYKxFsW4keYrQEE78sjGR3IfUPz/Y+mSEuHs/oJq5jokmnu8t8we4
cGLuopXJHybQ8nR5y/wCwfnRZsXDLCaCnnhHf3X8jzg2csQx4x/p/+R74lTE
NFFoLKD6L4FAvaOZ910nDui9O5eBYdK/qpYjGQszhFaWcZPl5//5u99IUf8f
ceOH3+3uMdIf5lvxT9ZzxEDKyfIHyQTcHgkXndoxSRxRrD774D0BX67Cr1YJ
E0TM65JvrFukvKJGfXXaFBEiOntFrpiASnJ3YZ/LBGFZ++O0/1MCKa63o4sU
uVDHIxq2XhgYu1kfrZQwT8j3Wugqk/biPLcV2HNzonZkc+EFIYCjIFRLlXuO
mPqgJk+Mk/ENhZf7vF8g7K3jZX2MyPxk1q+x2zxL1PLJ6zeokPm1a67hODpP
qH39kqyylqSvfqNxuUwRfffC7y6K2CApPbuY9/EYkbTpjqRtkA18m+oq1n/o
I/4WXHdnmJL7/X+OT6u/jxBNrWy7bQEk/+z0Pt7+LuJjxf5NL0ptwFFFv1Gg
PUhcvx1wueGzDaI4ZfwtX3UTJZWyTZ8//Q8f2nz4PtdLJEuq51J/kfyrpl3D
r3oJJjO3yt6MPM/y05ami4NEQ9W2e7fI/T0qf9n6jZe6iJzeK5Xid0jaw2Lq
tXIPEZAhfybkkg0q327+S+HpJW44fglP4iL1eYzj+SpmCT2+Ev0DDiR/ukWw
YeMvomBrb3WfP+mfns72HtMBgik6HePtQ8p/k3orx+gl5O++POcwZgNoS7G9
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
pWriMH+mo8i5jw6dm0/PhKkKQ+eJ7bvmRDrCqUTlDnVh7Nu9XlD0JB0DiwJS
VxOFoMsSVAvRpENR1/i9RqMoYiNDdKkedHQ1mSvJj4kgRke/Yy8XGc8G0d6D
P8Rx+t29ZflsOtycipUf2ovi3VWl3HvOdLJfRLxiL+eHm8mfgSjSn9bvQyYr
pvnQvdk6Z/w/MyTNP1lQkhXFydfc1wNtyfOSe87vO8SHH7cgZfzEDCX7fZuI
IFFkLoYOXakzg6xGdVrKojCyl9leUSsk71ugu6rxB2Ecd9RSW5g3w1heY2C4
kBBC5wL/KDaS9XZ+7nLiqyCI353VB8pJfc+HVn8mBOH8Ns7iZBtpP9ZvJlZc
CFpu720dp8wgOshSP/uJHzWfzvFzD5qhNXF9Iu8DMj8H3tma/CPv66F7fWuS
hTExLPnBrt0MXTj8JMdJDIM9Stkp2nSIGvMJqT8XgOs091XNcUtQ/k62j1ZT
kbiGyvfS3grS/HalVyyoWFRz/xQgZ4VnF6/VreiiwiaH1zudZoWUlGiD9ZpU
RLz+UFnrb4UsupTdzlgqmiWn3Js7Sb5t3JbsfgpoJjss3kZY4ZJe2HLVy1SI
crZaub+zguG6Sw9/u1Hxe/xlWRKfFRItXz95/40KAa4baTNkvw75E/OA6wfp
z5SHR9FnS8TP67z2Jmh4+JvP79R2KyQs/1DJVUrFr3suy48GWaHYv110/39U
aH5Zbnj0lhUI46rNHfepiNn/lLPUywpvn5W6reamwT1lq1JKqhX4vxRdb0uk
wnT26vvYKStY8Wy+PxFEw0nPH+v++VujQ/PArJ42Dfs9Rp+/57fG8gMnj86F
0bAQa/DMysMazvYbt9So0CBrLW56mZwnK0T17eiZNOhHKHgcfW4Ft9W/13Sv
p6G8LCPgE+mvidruduO7NDg4BcU3fST7b/N6yikfGipnsnbMxlnD9JH6tVAB
GtJWdTwOumyNuIt7e/W+k/k1evVf8Qpr/MirUfLdSsM9IuCVBSn/V+ElwfWa
iqusMrqDnjU0K88sPa5KQ5OwmIhWgDX2+NzMm4mnYq/ycZ58QWtEaCr9KdSk
wSDy0ked7dYwPoQbS8up8O3TFJDPtAAv7SIlMICCU6WlH2PLLJBEi5jfHU5B
dltH2vlzFjAsenZSTIvMV1IoXfueBfbcN6967UbBmGvnkBBJG55PKKmNpuJi
2heDazMWoHx3utH2kgJKnM7AeLkFPNsnNZ4MUnCDU+jtPJ8lnolcSZK9QoGl
VwLr+lYLzAyaCpkeoaB8ldkrjuMWuKXfEHIql4Jw30dhK8MsEOH1tGvbLAWO
m29ffbPPAhO29aFJZ0n9XR/+badbYOOyXMd4Ur9PNEc618ECT8403daypqA1
rtrV2tYCFReKBernKLAvj9mc42sBifiCQxQmBR96LH1oKZZQjv7MU3GditNd
/qnz5y3BX3I4miOSit1bo/2c2JaQ+HX3svsMFYfCVme3kvuueM3cnhEyXncv
HXoAwxKzCm/cXpD5Xp4scVajxBLJaus2jjdTYDc0IhGWaIkbMbaD6/IoiNu3
vln2viVOlxWGBj2nIPnjXwMPLXJ/3rchM2MDFYL1hu/u7bNE7kB8dNkiBUmc
D648t7eE+VxJxmw7mb8bPFbF1y0h9SvDqnMZFRdav1bskrbEgPCOpb42VIxY
UbQ/k/u73dO33bq7qZDrO+9cvmAB8XZpydB5Mj7F8KCYDZbY+3rjmakLVKw6
1ibzyI7Ep/o5J4+KCmLA26s0x4fE74kXEp/9FEB74cOtG41JfMv/YCz4mCDy
VwXl5K353/fsCxUP1Aiit6HtSIESgaCbJytzu/jwqe9D11MdAnPijM8BDvzQ
GdnWk21Oyhecu+94jB+rQ2uCSp1IPEtkS0sf5Id4IY+N9Ckmkqb2yAhNC2Cj
l+grgyYmBjy5s9ay+KEn4szZM8AEZbe1/c8MfvjV3jD5U86ELB/PldQXfKhV
2HEwc8oGor7PTN39RKBzMdX2VTApn3Y4YvEDPwLtLGtE5ZloPcPwejQpCCft
xoIYV9LeTgtG7EYBbN572jaLxONNPSGa/NlCkAt8mVoiAdzfZXZWLlAAftRb
DvVKQMmsYu9Ta35U7bh3bYs6oOI/cEDyPh8+P0rLVk8i4OgY7PPzND9G+lud
AjtJ/L/ssYSACB9usDUK9N4TqF+ixTlE+suK/aVg+ZyA/+fUu442fBBua25Y
wk3ay/GQmpISgPqO6vZUftKeU92rxm98CGvfyefRSEDnT459Fl0QuSWtGw3G
CYj2/XiqqywAzxb9h93fyXz1sL0+JvBhf4DBAdthJjzP5nI18vCDcSB8he5p
JnT699/oNBPC0EE/TWt1sp5S/PmmFD4M3RKQDtsDZKbKZbp0i4K95PEf4ROA
6MiqlZfJ+Wi1ZbFZOAlgULbNTvQLg67RcqAynlyPilt7672FcVdZ61JuKuA7
ONEStVUMvg6N93PuAykzwnOldiJwmfzP+1kyoPiyU6Ppuxi+/+oqvXIPqOwU
owVwi2JXdNXhLTIkX+7mk7vPRMH3LeD1ugAgbtODns/+QuhxqTsfto2UP9ES
st5DCPftjMKPBQIDVdbz1D//m/9lBg9sSb6qRGDxPRHYM+IsB9xAOnxKpmxW
BGM3jKQ/qZL8pBPshb+iyA9q/KSyAfCccxee5BZBioLY9r2ugEadYfA4TQK8
oXtyrf1I/Sd5W/elicPYfMbF1RzIcb2sYPlGAj5ffG4l+QCXOr+4jQuKg6a6
3jz1D4EuG3FBTS8JyN9LF+8m1Sv3pVZuqBOD7miH4E9pwI1x4kqDhThWWvy6
fZfkX5JsPtC7RQyWTSvqm6vJ9xHOEJRuE8OBtftad/8m0F5a55h+RwyGgkbj
BvHk+0xqMornk0BH3z+1A0JkvhPFdOR4Sf1t6yqKyPwMVEe6/9oridydPooH
jpDh/0pJPZ0vgaFvPvKv9gEcHSWcxXskEGXTEVcSBAQUnVqfWiUBPr6siLly
S4hea7vTcJcPWjYGaw3/WiL88KKB4dVleDJZe9L9iyXcjsUJnlfgQ2BH3otY
YSvIsmbfidosw+5Rfm7DJ1bw3PFy0wr1ZTjlxt9pWmwFhqVfmvgQD1Tcbj+2
PEPuA0k9DQ/KeTAtSnGOJfFPvdnc+WMnlmHW+ULwSQkr+BsPC2a9FcI2C4+h
+UhSnnFIxHqCF3Np02Jlu0l+QSgtZhkfuAb8FpdetEKr8Tt39/V8SHp86of7
UisMXLT9/WGRD9uDCB1ZU1LeVmGZY9dSSOpNbzm1lfTnh8Rn4Q9L8e9oqtPb
gyT+ettAj4taCk+jjZqosYDjSN11O4tl8JW2f3DlkwUq5S7kaJZyI5Vp45Kb
awHfpy0eDjnLkOYemHvglwV0rhrURhVzo9PqGOftbAsE1US1/jvPi3X6XOx3
/RbA0XwrigAPgp9reL5+RepL73Hu28GL7cUn6XfIfszopU3VcixDT3LyveCV
ZP/3LyxIzOKC2mCFVfUWMv/BoR8zFrhAk1Y5nAESb3qsO7orjxvH1wbxOpiQ
fJ7ol8/fcCF2x6OIL6aWKNlodsaQbxm+fzEz2rmanAc/lix+nV6KxsfHidek
vFvPZtsRDh48vDlU9NqXxLd/bktvcFkGW7HcXpXzDARFKu8N3cSHRS06+8Z3
BpKKf6rUFHIhhlr85dkLBgZ0i2f8M7mheE63awUn6f+CQVzPIS48W5jcViVh
gbiv54r/THIgnjfy7DN9C3RdfcWT8PsfEfw1B7Ua5Px/GBu8SZsDj0tU3Cg2
FuDYJpZemLNI/JYeCG9mkPmxXfOuLIQTpYPmLt1HLRDVKDG1youUDxqK1NxL
nrekZP/Tkxx43/hKBl4WUEHNCv8oDvj7zT3ctpaB8Eq+0sQjS0GbNpJ8kcdA
kza9d3ciJziD8w0jrzFQyXUu+pMYF0Y9dS99fEXGc/7pjXunObHeu7X+LZ0B
z6SU1IIXXDi3ju7+9BADXafPGMm1/CNOFOx4+zeXAd/a+jd+ZX8JymavF7Gp
DHCU/Lm74fRfImDcxnS5MwOiVTsLP+n9R0BDtnmrN2nfj//0zsm/RJz9g44d
MmQ+31qXS40vQQlT8uWFvQxkynlJez/+S2x1uS9+w4sB2T9rFm2PLsWCW7jQ
8nsMqKxa2LEllgPSk8qb/Ul/ZEdETl4wXILZvaEVrgkM+DeazxfRl8Dvza0q
r3Nk/aZkt+xIWSSWBPfvUmkg/RUMC3X9ukDc0P7166kP6V/9HW0beU5E1q56
t7yTgaiwitMc7n8It9VHVkW4sHDM5EPznxMS0Ek/aUu9zoKg47eO5R9E0SP6
8o99FMnftV9u204xmMpMhNxMZSGu6vl23xBRiBu+WyX8mYWBFOZ9y4di0JQ5
56fayMJYv3xNHimfHrjcqSSDBcevHuk1peLYPawwbdzAQuvQmiXR+WI4/MNc
IDabBVNZvsjXO0UhdfOT73ABC1P5Vo4WQqIwubrp0MrDLFh/l1jz7KQE7lfd
j6IUsiDZuZmnO0UUBQsRz1qCWZiTenz1BksCAc/33bqXT/rXlrdzxWkxZK1o
nfB6zULASsWnjr9EYds6Nn6/joUhW5aEEIl3NwprP1kSygLlxee/McXCEL4e
k94fwIJbVX9M1pwQ+E97eud5sqCyWdbGVE4EKm+W13STfF6uNKmseGEk36jq
iTRgQXEfz8j7bFFs1+7at5zJQoEgPWZUTRQi5XycTFkWwqMD2vXPicHt242H
zr4s6BzMvlryTQQrqd3+O41YyIyIv5dWIIjwktCl446kPbGOP/9mBJB5LNN0
pxpJSx1okbUVwg6vq8uVyPPDs4I4EgYFcHrIpEnAneTf+O2t3SkILa6e9Y62
JO3T/aFhvRDoVtQPVzaQ9ZE8eNEiTggcgj5RA6vJ+mRt8J7fTdJaoefVxdlw
/3RB5OikJDolLUNiDdnY0Ze0lI8pgZinjdfv6rOR9GSksWxcHJt/t8iIm5L8
dwmzgoHkPKGO6lbMsNAZ5MSw/U8Koaa7mYNKbDQfPL3L3l0CirxZGk2SbOTM
ve68ZSyBlW2f0j7LshG36sk3n5fiGN22kDHZxgK/s7T1yoeSOGV5u8l9lIUt
5rKlzBOSEDl8qk7gf78/8JVaLf1GCs8Uli33/o+Fyho9yfvzEsgKu2H0qZuF
9C6X86XnJOC6qW+9518WVul5VtoPiiNvSLX43D8WNHQS3juEimO1WYtuxAQL
/suV/TIqxZHpeuVHKRmP+OHqp35NklDzybJzcyXz4ZHos1AoiTSlu8MKDmz0
nehudt4kiZnI31nFdmwEXn1xsu6BJGwO71fi/18+4t/1GPhK4fz79CBugg2j
3gJO84tSCHlQlR6iy8avzekVaULSuJy9v/oLnY0ndzOELpVJ4RiXRmOwNxuC
fV6crenSOO6amLhuKxsJhVmGAh+kUL1ti/PF3WxE04cfhXhL45uxdc/R7WwU
/dwm1qAgjQVKa1noCAs/7QTWOn+VhUrTlQhXazYY3vuiH+yXhsGflOMJjmzg
CP+sr9//o+jK46HswqgKSSpFpCjKvi+DmTEzzryvpE1arVkjRaFFtqRCSiki
RPYkCpUspRISEaVS0YJkS5ZSqVTf/f76fvf3vnPvc5/nPM85x69vRgopRVPv
ONMUbgWG70kokkLZpNMx/etsnO6S3CwjzUdEdsCs1m9sRPuW24YRnPNNIzSF
37Ixuna5Zb0tH+sX/N11p5aNdl+z5Z8cSJ/tTtVNInphtplbeMsEsK/z7m0b
FRMU/paP+ruJj512Xkrnetng2DrPj539//cvZu4tNyP8v/726w+kr97PX3vb
ys8EGhbhFT6/AR/5t5M/Q00gsaB19U8GHzYm2/bw9UzwRmdVj2ozcPDYgfjh
bSYYL5cV0GaTePul1x9rNEG6PwYXq5K5YSu1SGzEBBNr5rzTVCRz4590tVWm
CaLbNT6GPwXGZj5+qvXaBJ+GD44vJX2S4BIovp/DAbv/6R2b7RReTVAS2vEc
hNULesVnUjhr/cV6/1EOrhoPWLxJoKC65cyt55c52Henrlk8jeBCWkh0nM2F
X1hIi5EthQKHE2NMey6yPV783befwi6Pu/mvjLgYNx/uDQ6hsPP0BoaBORey
x0RuXSfP12iZceWrOUjc05A+vJmC50SxheBULp5/9/W+d5iC1UKqrUidS3yr
hQqdTMHxm3x9mRgXlkeXtIacoaA+zTn65G4OpK7vC4jfRaFds+iSdCUH755e
khqJplCS9Mxu+zsO1nhnc9QTKfz8hORZrznYKXNwL7IoxD4Z/Fk6YALqyvsY
zRIK53qmjy2fy4HyithKlwoK09JXRRU+MYHp8ozm3ssUuu/F7nylzUFeWaxy
YhWFS5apzB+HiZ5KSJ1y5DqF4Kb1YZdaTFDFf1cm/pRC3LfR6AtnTJDR7m1/
vpJCopBrq9MtEzhcjDPxaaWw/JrNT8FYE8R2/Ig8cYzCu4J75gsFSX6t+/84
NlEICH94eJ0kWQfnhPBrKWhWRzdK/jHB3C1ptq+eU8iRCqHD15pAvs4z/wSp
lx3rbVh7iAlejzorDTRQ4N93n1dNmSA3Sk2FXUBh+hs7/ZNJJgjhapj0kv1z
k85a9ohzsPfauXE/Exoe69rnzMjlwD0xSUkonEbx51uB3mc5cJ3fJhsWSWOb
bozR0TAOSk+/La0l6+m2zdsSGFyw7l9f+6iRRry/5uGqBVw0e1icvVBPY+y+
x79bulzE+/Aub66mselm9oGElVwMWu8VXPWAxkkvr6VUNAflp8ovPbtCQ+lt
4Nj6dg7EAxZOzL9Hg3X2zSKfBg50O6YPdNTQqOn3vJlym4MO70Fjrbs0jrtN
aVk4nYt5eTK91ddpfPadOmw8zoHAk3uOPLJfR5u3feFbDgKDQiyMc2lIiJsW
/R9f79aO71vJ88fxM3SvCBK93PT4koMTjfzTeX4ZtiZoG/16Zl4KjSH3Tdrn
Zphgip9A8Dl/cn7BzoEpRJ+z9cIWJKXRWBulUeFtZ4Kg1YMPd+2jYSVuU1l7
z4T4JHXDa8SYnRJKtwoj9U8bWxUaRvJ5Y+HiOuVCE0yydj0/WEjjnfjLe+pf
2dh2UfNIwCoaU+0KRNcQ/b572vVQ7k4aws1uW3/vN0F53bo86gT5/JWTwnpO
JojZf2d7YDSN5uhlDUbv2Vh88f3XHyR+zw0vtVfam2Cq+rUFJkXk/dftz+O0
TKDPFhK7eo6GY2/sigW+JuAlxC6vKfw/Xw+bn/kT/blp2T2TBhpRx+NPGBxn
oW6422B3Gw1zuZMdjQYsLJ3tXSd6lsaqO1WX5VJZMBKaWyn6kkaoqoXK0mss
vFIV2dzzgXy+6eN+9iMWLDuv5CUO03h+dOYct28sCPVqz1MVMMNAq1WvoCgb
boFfDuuQtZroxRgVKxZOhXeLBfvR2LEgqG9OOQuCHWku/5ppbAjvvTtI/InR
rf53Hwieqtw+fz/5hoWTA2IB6q9plB9vusj9QvxKRfHG989pFFrceKitwsZL
DZOLX8j5DgHJrXl8NgbN2/xfTtL49PJ88YbNbIQvzxXm/qZRdODLUVSwEP1H
YGpoKo3W4K/qkX9ZiPAJdLMvo7F0VbbrgyQWCr0mqrJI/XL6z6sKzmMjdkdg
ovttGt/NrSeTnrDwK+Z3oOIRGr9WiLUncdmIX/F+lkwljZ6djpMl9Szs+zZ1
SSWpV5uxXbgK8St5SUd/fbxBw6KL/XfOJAuyZWcev42goTFDxa1AnI3Gb3de
fSfrSCEhp/P2bLRRJfeO3aRRuvhK2h9v9v+/AxZZWUJj96lcavVtNsbVWNOb
3tNQN7Po2p3Bhuw2y3KrLoKnR09WpBeyMdHy/b1pL427X2vpL3Fs7Ht4qnRO
H41H53bOjXzFQqtGmJbJPwrlxp4R1+XYeGKglyfoSOOyocq8cWs2pjq1337t
RWP9ea5ohikbqux7qXs8aWQ9bjzRcZEN5Tzhz28Ivn7vSTecSfBYU6D0dW0p
DcGcXqVgwq+r7n1/sDWb5OPheCIIv8qubf0wTPr/aR47OvsUG9MUHmjkFZB5
sE9jJOoBG3+7LxksIf0uGfBphUsseU6XP029SCMiYONzmdds2NlIraZqSf9u
L8iNliL4tthfR66GsxHvAiUJ/x5o8D3+iuBB8GiS9VYR0t+3GvIfkHmxL475
YQeT+OVa/rrxZzQsM70+m3YAU5nry056U5CNunzF+wuQNe2IettRMk9b776c
eRW4vVrM/9ZqCh6WyakzxoCdWdq+woR/6oV5y3LEALXYmSvKZChkxXp8HtoI
glsnVthBCk7pxb/0vQH9n9umqJL5/lKn5PTeg0Cbw5bNIYSfforIzYqLBMTG
WgRy51IwHfD9euQacGm29gmWAQW3YYcQw3LgxOprsbGKFIJcfoV97wIcZlYY
LdtGoSjTI0k3ELis1jSUYE1BS2/o0fHHwKOtSxrnk/033+xoW7cbMFu/4vVv
cwqNfo3uF14ALadi2SPhFGwElrl/zAb+FH5xtDpOgVN5bI9JNfBb92OY8R3C
p3veKI0lAsLfDm15EU/hmeMTidBGwLFvb47XLaIT8/bXfM8EZF8e3GhUTmG/
y0FhRxJ/8/pVK9VqKFger+G8yQe+iX+MSSN8c8jqrNAPcp+glt3d+Y8p3Ok/
r3h1M1C4yHLZ7nQKrENX1NZ5AkNFVyODCymkUfOjLPYBe79csXlK+KuJchsu
DSb12CB8NpOcz55/8Ya8L3B1qDMERIeemLa3YEYFsMf4hoViJAWX6iWC1XeA
yDHnc9cIP97Oq0hc+hCwzLGwYV8gfKi/2Sf6oSl8AxfYexP+/lvCsrXmAiKn
7laxvlHoH9bpcDMCinUq9PU+Uag00b3ioAdwD+0M6fhOdOpSzzu9nqao09a/
9uoAhdSkkTuMGYCbQ4X/k2dEB5/37R6XIPX7q37j7QvyfnJu9WMZ4EBpxxY3
cn/fGR9Fv1sCZWqr7t0jfF5Soyc4h+DlgnbYph/jFLwlmhPMgwANja4Xq0Yp
XN5paVhN8jE8Sh8ZnKCw+Mj8+wkeQHhWY0rtTBrda8eSRqOA+IRXtnkLaMy2
y+yaRvBoue/b/ZVkvxN53vn3DwGsrHy5o4vJvBimpApXmOKN86ZaCxLvTg/N
rrQGUxj9/jK6VIPG+YLFR8RyTfHEJP2s6TIyLzT82GLVplCf4rQkhkHjFWP7
ten3TWFV9ql5szyNsM5d618tAeK6BEKtttGYs0END9QBzahtc4U8aNwPc1Nv
YgC5YZ5zX5K13Vr9V3FTgEVrHNjxZL/EH2u3kPGAkgnJk1tsadRb5XDjhkxh
i2PzDqnQ0IwQfytsRvBx7WNEjTWZ/29etCyfDVwxcQgQXEpDyolRHb8eePtS
c9cHKzIfDaPG41kEj185d7PNaOwp9hFzIvk4L3dUy9CChmLI7/Pa+VxwgnSu
Vs8j8/l8xbdgRR5iaZfmxl0kvsHS9WMLedgnGOVQGUzmidwO8yZDHvGLgVrR
gTTutJw4x9vHBdPQr6hHlPCH/5rF+YNcXOo5Z3JoPY25Fnl9jD1cDF3YbxtM
8m2ryPwuN4WHoKQC0R3k/O7kCOcXwlz4Hk4KvEs+r/ss/e2kBxfUUeM8QWMa
h1nFojo/OHiUpKBbTerNjH04eiOS6O3QrgNLiF4blUgbsGnjInyOcTiP7Nca
0TnQPsSFrq1J5oblNLqm4bltDRdP3g14CBF9YZnzeOLFHB6YP1bERO+gkRsD
FxFjLkrPsTnJU4l+EIiQiyrgYj2zQ+uuO40TTX+z/v+d+5F5dk96fGn0W3rq
H6nnQkDjc2810TsF+2Myy1OJvtrltfX1IIXeLSn1ziJcPFqglH4AZJ7PsnqQ
/IaDtAXtnBRdGmIpuVKrNLmoK70hNN+SxmBxeOXpdVzEzBipkgil4b0uKGPF
IS4WvdL8mxBCw0u6Z4HuNi6skn6M5JD8Z2S//XXZj4s82+oXv//XU2l7G2c9
5iCr+19sy//5669bZGxK9KBD2ptTG2jYiyks5LqShua5Gz/eTqPObWl3fQAX
grKTjDGCz7lrGsrlVXnICfK2dxkj82ruvcnpgTyw96Us/qpII3uLopKWCQ/d
OQ2zEgVpyJR5a904zcO0BGWRVoK3NJfPUdureeCcF9h2i+CTG+ntcEvcFFl2
e/18SP0Ubh8z8GOZYotZqdcngj9GS2xgn4op8m+pveGspcHUOnLYyYEH3dqe
fdKxRN9nnf4s2M1DmiXbvW6Iwpf6C+M9P3k4l2x0MpTEF3Y4SCj0Mw9eexW6
LLop3HjcEuB9joci8a/JIHi7kvh0St9rHkqEHg3rE3xaDsx44HmKhzXz3O7G
ONDoXFxcMK2fh3kqk9d89tAo+d3v4Cpvih+CzOU3SXxbXiVJXeKbYrfY3nvC
RI/5XdiUsUjZFM+5VjsWEb6/G7VAclTTFLfyazylD5D+cWqWKXlG4mWOpFUt
oZFy7NsN++c8SDDi/w3o0Ljq7jyPRc6Lyz5/uJKmcTpLce0FQVNkeLubB5P+
HX05w4jjyEPPr9bAMFIvr2TNkKuJPISaO0SYkHpXcuZHS3F4SL2mYF3OoRHt
+ebQ34s82C4+5Gexn/QjHenHWM3DeJb1j6MkPy52r5eF3+Khf3+ljSe579cE
8er0Jh565x5TVyPrzyZzXM++4KF5QfzGbZtozHSx+iFCdJ7QoWWbXwUaoskz
cvYw0W1Z7Qv/NbgYIuTu7d7+AaKbt6y+/pesW2POBi1faIaFp2KzB40N8eZf
sUT3JRoCFufqmi4yyP6V83iJxBdZVFhd+sTAg99OjzQ7afgK1hbU5jOw88hY
USrRydnP7m4dPMuAZbRPQHUM0fmZLhkd+w0h3B52daSOxJl8bMwizhCqtz71
1xPd9PnZxedbDxvikUKnn5WkGZaGJF6rXmmIvvSsCYVlZgg6mzEwTcoQWxJP
ej7fZYZTN/9YLu9moD68fvH92WYIrXy88AJ5PignfXi1jxnuK9v6zH7MQIiw
QrRwHskz71rH+BADtSbnG82IDvt7TCIk9gUDVQ8D1xgRnyOcL641/wYDgQbC
ClndpI4+be0j5QyYRVhJ7yE4ORNg5fZ2jIFzN34c+0F05daryV6n+hho73/2
4XMQDT0/sx/33zNg4+n7MZDocs71eZdftDBwxOju8iOLzHCmWvSVyTwGej8/
Yv4i676vTivadBnYY3fkU6K8GX4ZFT3yeW2AhqSNI1fdzfBhWar0mj4DqCfl
nnnrZ4bIqYszos0YUK7IK3y8xwxXlLLP+towsJBnmX6eNsNsVVmGpC+57zuH
isO7zfAm4H3AaT0GPB0E29uITp79TruhdZ4+pJ4M3zs+1QzugqEhs031MXXO
neOHyH1+q8Yse8TQR4SJhnrXFBJPhc6RzbL6OHP/o+V50hfL5nnHH4vUx/f0
7QevE915T6FUx5aljyRGxj0Tsl5s5s3adV8fqbFxpyNkzKDyLmOu40Z9PPq0
U27OJ8IL966/kjygD67R7bzYTaSesd8eqDjoQ9LTv3EO0fUOGnEmb4/pQ+TR
WIGuLXn+eTmf8tXH8+Q75wKIT7284mf9v359OFmUffEhPvd64GN186f64OTV
D0lk0mi/k/9U8qE+qqmD+mfmEnw8ts+e2aqP9p4gi+ZjNGbYh1/NvGaAqD/e
DRuJr59S4nVKoMkA2bvm3uwiuv7YqW/Wfb0GGDM6EqL9i8aB6ZEi5woN8NB/
MKDwAg1V/Zkcxdv6MNco4q0gPurcus4tw7n62CYJC3ty/8enFM4dKtOHe4XA
45dzzEBtD7Sqr9FHpVfRoY3E12YXbvloG2kA/WAbfus44cUncoukMw3wyy9P
ZCXBy3ix6MrcMwbgzl//2srMDA7T/W9JrzXAlrVPZGOJ7z/9IGeZ1E4DnHI/
8mLmdxLvnb6RSCcDiGqeH/nlaIaHhuphDVLkfdP1M8VdzJB40Nn+iKYBKqSv
nRIg+l3arXamt4gSft/aq7SeA0Qlmsv0VCmCt9FY5hzRe08y7deKP1aEm+X2
qicrgbVJH9yFmhVxJKBrWqAz0d9r8y4/jVGEhKYC58FWwPdOcPfATkU4fZ0b
8JDorcxNxw4MHVPEUgEp/4MBQF7m7R6ehyJmi3rU12QRvXpas6QiRBGTHXTX
rzQgoWds8ud6RWBH4LyPccAyczlp4xWKKN1yhtmZABhfZN865acI7YI9IXO7
TSEXc2A9K0MJ2ctcZp2QJn7i7i6d60eVEDPTfmr0Z1M4lk+wF9YqYZtsiJUD
0aNjs6fv3e6kBNG13o3zDfkYZT+70XpYCS/DZiQF8/l4ulf9AyOZfP7MNNpk
FNgatVno4yslMN9Ns8hw5OP7SUt31iElyBoneM6zB87Q46XzOSr42HD53uxk
4gcUzTYfeKIM2Yd35TuJnq3yHfMZnamC3LWy80zPA/VVm0+8zlBGqQStzh8i
enBDyPhOIyWsu9iwyG4WH+9uNx0ynK5E9PrzI/OU+PA7fCWLZ6yEtICs2UZm
fEzTXBd5RVwJt7YtKjNdysf2o1YK6XJKeBx75vbmRXywd/24smSNEib3afSp
EL9jNTHrOLNXCXK+x/Num/JRO3VWZvpyJfT6XWz8//+P9LLMNGG/UIK69ol7
ZccAW8lD7NhSko+PkgdrCoDs422qF9KVYG/8r5hF7ncjtveaFsnvtr769UOk
Xnh+d9TothIebWws73oF+JzmSoj6KiGDsVfX6AHRpzN3nk4JU4K2fEsffwCQ
czie8zNSieCWubOCnO+UpP8wz00JP1xOuhhcIvq9ZjR6hrISXFt6mfJ3gRRX
01lXdJSg2bX/x8XrxM+svbiVRfJVe2hflocpwGQzW9TtlbGv9U7gRiuCr3u7
jXZJK0Ov76YtsUUYqr64W1pTGSf2HgqWJn5hxqqZQ3qLlFEU5LF5EYkn8pNn
ge4PZSzqXFwqocCH61UVSSpJGec6RRUE9Pg4wXK7J7tPGermhsUBG/g4wzx8
PdNTGS1qDWOrrwDn/E5vXJ6hgi/DG7IihMjz755u3pXK+LTo5SXPSWCAp9Wb
mqsM867Fe1wM+PCxO7jWrUoZt8vmuZUG8nHeeTiHn6mM/hThF7v28nFA4tKA
SKgyMZ61V7128FHf16wZ56MMo+zun5dy+MDZPKbxDmU8kp9mBn8+9JsGho4r
K2Odi1aLkQ8ff77LaXFFlZE1MTLqWMTH0qbOjQsUlPFda5aKQx4fSTfNC8r/
EDzxFsUcnWcGbcMPDU+EmfiyZYPQCQszzLxyWp/fZ4wRN4/pkivNYMM/vIrz
zBjPp238s8DSDKxTGpXJ941xqbVoVXIS0cmf8r6OuDPxa+bDCcwi7wvWy6t7
MHH0TE1FWinhz0h2q+ABJvibXuCunBlua65czbJhgvnHtu7ZJIVH10Nk3UaM
kcVOOqFIdM35WLVFplwmVO9dTEm5TyPo5+sL1pPGKP5dmuBXT8Pfi7HSUpSJ
AQnOsfk7aWh7yDZGyTOR+uFQK6uNRk60I0d3LRPFg57euoQ/yt9PbCxRYOLq
wtqwWe+Ibt5hHpxmwoSDT+37umEKkZvuFU5hMHFind3IOVca/zoWH2NEMiH6
9YKulTOZx42rJaX2MnGmV22WHeEXCwuhiKXrmHD9JzTdLYLG+zWak1F+TGTX
a4lvPU58XvpxtQ8OTEzS/xyXEX59s7BVPJJ8XvdAzxfPGWbouH1/dcj/30f+
p+7jA8J/6i5zjrqT+C2L/70uFzTD+tzdWwX/GKNZ5M7Ug+eJL9AqSmb9M8Zc
/WMT8VJmyHNyr8vqNca4DudyWTqNS9/FcySOkPu8OGOeUUJ0qjqrQS6WiU+N
+i0pCmYo/LRAO5DEJ5Yg/PEz0Rci59N9Si2ZKFXSyTicTGPduQrxp2lGmDlv
cuT5CxpW/cu4VclGCPNReXT3B43J9vT9BWFGsE9ZEZ1N9NfcQm/Bq3uMoLr8
7PR2Q+Iz7fbbXhU1hqVgYbr0ZRoVV66ZPDI0hviDdMcbVTR2fuxJ9p9pDCo4
XKpzjMYLkSh9tS9GUNd0F7CaQnzFP+2QkREjtAyosbcR3VucyPihqmKMqt6F
2hb5NLYfi+ub98MIj1abl/5pojEt0fSQ8lcjJGcsyxs2IPrjni2j840RNNwS
fcKJ7texUfJdIGAMxlmvuQe/EPx5f3S6UGaEpSpL+s8NEh8/I+dGSb0RXmU3
WuwheDPLl5Ox4hvjpbTitc5DNKxbtjmc22KMBz2zzq9qJ5+fZjrnsznJt/X0
g+v/EF/KHtr9j2sMo4QFA2VEL91U0XhvU2sEyZGjESLLzdDjOnf0010jlF+/
Y21N9JrYeQFHoxwjOK45s+WPvxm+Pz8/xCs2QvfIxJ0vt2mwf1WdcoIx8bmB
B1QIHmoeSkcwNxuDPWF1nqFphjjBuR3jOsbo133WI7DeDBpp75+9UjDGefr1
BXeiH+ad6j0/X8QYOUbUY5fpZmhq7ozhK5L8Gw2ab3Im/ThfzlW/zwgvBTfZ
rXA1w16mlvjEbyPQNoMnrhF7+PGlXMSGZg3IrojjexsDGTaz+lImNSB+/pj0
CcL3kmqz33cFaiBuaUKiJ4vw1be5geZnNTBafKNrC5mvS3bZf539QB3R2eJn
i4leiFppOWjXrI7mqKzZc3SBTStKltT/U8eWb3VWxI7jSx+XeTBBHbdMrn+M
dCP64eZj7yILdQQ4s665HCT8YeAusG2JOhQsOM8MowBGro04NU0dKtmFnyfj
gf3ms2KHlNTRM/3MmpFOoPv1w6I389TxpVf3Q+dMPuZXLYnxMFXHWl222sU2
YGMb3aeuro5FPUEhdVP4qIuTuBQoow6Lss5Ju0EgILWq5P4aDbg+OL3tRjfh
v+/58cN+GpjpeaBI4Qsg+Gv325RI8jzzqtn/31OsfeLsqQHyfj77d+evYqD4
5feCXBNNbJntzv94H1jxYZn7/N8aCFzUMnCT7FdaFDPD6a0GbLrrA2c8Ar5l
lD7PeqCBMHOfvkprPow0zbeEXNMgRFe/9/NhPm6pOdsV3NGA+vhUxfwAPt4W
NE6N+KABX06vccoBPtbwlCwKTpHzVYu1qCZAQeX6e3ueFqa3P2lbI8bH386s
GOqAJua11p1c/B1oDbVP2ZGmiYOt3uoPVPgIPXQt632GJr58adwgfJeP93MU
rM5MVUXi5cmKwad8vJrl9VZHSBU9Szqbg84RPinYcGruGlUsMJfyZX3gQ2ki
fMJeQBX/nqw3SPXio63Z6xj3rCpOxpkrsAl/Xdj/uMXWQxWOAyHNLqkkHgWL
v6v3qmLoYVqPdD0fhVGLnJdvUsVL1XTp5RV8zNzsY7pGRw2WI4kZ88UoDO9I
XmVwWxUjV9PKH//iY3OQfH3+PVXMHUmMOjGHgsxmk/q18apEPye9+BcNxM4V
c71xQB3K61brPewD2jZG7leIUkOuEtfyaDaw/YEfe8Z8dQz1vn2aQPje7uUc
r1RnNUSZ5V3KaAWqq5tspDrU4J9qJmtP+D7g+5bA1lFVHBFvkDG240OL6Spg
/ofkJ1vu718rgp+ufN+lLarI0X1QtW6Ij7v7vr6Z8FXFtxH9L33/+Jgd8fRg
joUqHkU0Cepf5SPfIy0tQ1ANx2/6232fReHl8duuglaq+BwxxjzlygfTWfey
9CE1/GkTYo7k8zGiEZIQUELyGd9w04jk54ggK0ywThXncqUXNL3l49jd2JJt
BargjfZL37HgIzKuvGJERA0/IooG+gm/51dqLAtYqYp2Hcu5QvF8+O731byn
r4pc1s7MN6f52KX+uDh5gSoWzlLb7LGbwtE0iXGdZg7q2gTCf1+hoCnLuHNf
nTSqx2+tybcUOLvc3trIcnHzwyXVkJ8U2oNmbFity0VJ+cnHU89RMC937Srf
xEV+qvD1mf//nfmmoqblTi4qN26ca99NQUIqZ+DFNi423ZzHWv+JQrPjprd6
TlwcepPrf1iFxgfzb679vzmYrOvNmruahlhlr131Ai6e3BowdPtAgZr6ue9P
Bwep69oOn7MhfPT2K++HOBdh0icCQ3Mo3Nyk8NPbigvtNsdTrCcUJBOaSk5F
cvEueQo1eI2Ca6UHHbqdC2GJ0FNxs2hI2ms3W/lzwSlKooPaKOiE5H11DuNC
2jrB/vT/fxe1UP6gW8aFyPqbv9Z/pxDa+jIrPoOL1YdyZ67bRWNfy6Oj8mRw
VsmUfB7torDY4EJESgsX45kNLVKDFLwP5Brte8AlOImdXiND+MKk6F7mSy6q
ZQeW7NtE9NLrKeXlrVw4DtbuWMykcOa035fQZxws3TNvICOSQvfKjtLfu7iQ
khM5HfuKwvf5K9Rf7uPCaEOlUB7Jp8fP9JVeZ7hot2phXlpOQTt+jkCQKBdF
8vYCaXsonD+4oSPDk4t9cy/7t2ZQGDzvwOKe50JRN2x6wmMKIVNuDmte5kK2
+2zBSmsa+ulP2mrmcFDV+cXIw4HwbxV38vEPE0RlypprEH8ZU+JgareQA1Gp
lpxeor9kFnvV3JHhgHEwbvonch9Jw2//gg5zIOt63VPHnga966NQYhwHgTeH
fpdcpLHBkSdfepCDxCky3e+JPnicMW7q78WB4UO5zc+VadT/eDAo78PBQqHx
hJfLaGz6LRa96hAH/u8HEz4Qfi/aJdYv6MjBnpT7NtnmhK8TvHJz93LgvMEi
UP8CheNLQ6qsV3LgmSTRN1+S6MWpl0LzsjmYVccrLH9EoV+z599YBgemJymm
zGIavz4GTruUwsEvu4Dqzx0UwjaWScmocRE09nxKHMm3IHOZd64xF+HJO17c
MyHxNPUEJnhz0b/5WVAsaDRFva+ssSP4dFeWv7GBwu57ggvjPTmoHrvK/VlB
Ifpe1YbkAQ7Bp7ByAMFHXkGgpNEIB3/lZ039SfZv+troemuCg/Qir6XqRD9J
Ka9lpopwwdi2Y6dtAA2NmfxmQTEu7sYrdpURPbleUbvyYz8HOXy9JweI3lzT
2bf04x8OSuTOvSgl+lTQWXK+nBmJr3+2V8heUj/e52creP9/rxKj9tJJUl+H
1eqKXC5uBV7Vjs6hcVAh6EWrFhcr34lnqs4heC5bdlvPXg/cj39yZJbTMC55
+vn7ej1MzSjKHzelwXG96lZqrIeEzhrVt0dpJLlmLwhboYfQ5mSHj/40El9/
UtAl7z8ts49/nkjjlKncxoM+eqjR7fE/7EnjSvKfYRV3PbAUsntlimlMLJX1
vG2rh9rc+rK6MxQM7j2wLs3XQ7nkWMpiERrprpHZiyP0wPu831ZAg4b5k+nt
ipl6sEjctGv5KhoJEtSi1fF6yFZY19WWSOobHF165JkevodsDVpM+vX395LC
gEo9nP85KmBWQ0HMZ90UTq0eON1/b9eokfN3fvy0vF4PUYaVh2+SeeUh/fTv
4iZd7E4z7DH4QcFwLr85Nl0Xb0dzOuYsIvVxz4/WzNXFuWUFr5fPp5HCr23y
LNOFuc3C3PBiChtqT0TE7NSFarBjkch9Cm8kX23VDtZFAsfdfe9JEs/MyJUW
EbqIm5w7RYLMm1HBee6q+3XROO/i83xZ4j/Cju68+V0XwpdCly4i+cisSLpq
0KyLif5jhyZ3UrgT4eAVd0sXR2veZ0bkUfg8Q9hFY0gXdc9sFtSMEPxm833b
xfXwyaGgV4LkT3JWy0ZhQT14fhN6tGgDja7HodIRf3Rh/Vl79QMeDaMwmWkj
5LxL4lWKAmEU4lPxKHCKJnK8WAszj1JgBhe1GrZrQGiWe1YnwbdyBqfFKVIT
IvrF/usKKBz2Z7CMX2qgXbnlmMxmCoo9Q8uerdPEfo/dYrJeFOKWsNpalDWx
Q/BpyRpHCiuvzl2ZOlsTAynLtfb6Uhg6dvDwMnJeo3P6RfkdFMRjIhOiGzUR
9rIzVyOJQtLu+W9stDSRpHfn6CaS35wg1TKWmCbqN4rc55eRefxuv+waJU1k
XXnbN+M24ZMO+UGnhVpYt3HBfDcyb8Mfhr/fHKgJ/6Ejt5csoFEmqhXgtVkT
s0s0yv3JvDllftO09Ywmflpsawi5SyFBLrlmySotBClmZGjeotDzTMJFvkcT
zAd5OqHZFOxUjHf5P9PCI6vhVwUTFDpnTo2unaoFIfWhg0rkPg1x+Wr5ver4
67GNI03yp5iTHfbtjzr8prs+mu9PYf1DtwYjQQ0kLRoTjDtM/O6ZP1cEOtSx
IV981gWyfhH9oXHdWg3IyxRc1CX1LesNOt0/ro59El+4ueQ8D7VmRz1RDdTe
CtgqLUTm55x7C6NkNXB2rcgmfQ0KgYbpllOYmnAasBo5eZzCgvnGb5YbakDK
8CHNvEqhen5V8TVjDVhdWDwvporMt7cxN9ds1UDPw/qgX1403M9cTQ24qIu0
7ksF9D0armEPfXO36WLFNlfzLcQP3jp4r6Q5TBdvAqoHR1rJfErbtOroDl3I
bx2f0bWdxu/Bb9XHxHVxpPRPfCnhx4Tda6rn1eqgPflB2ZQiGgNSKd9OvNbB
VyfL8Z5LxM+6TV8m8EkHG5LmpPPJfF109kOu1hkdXBd5NVvzGJlXYT8l61br
YNY7hpAqwavlbpGnU7fooExfbuAq4ZOkD1phDa46ONn17rwiiXcqCzpCiTow
l7z5mXefxszhbr1Xu3Tgf5iyGCV89myJeGdToQ5KL9z/avyExuUoIf7yAh3U
HF39Ipjg7fFNB5lgI120p4pcv/ObwrtEff0lorp4NO95S6QuDRvFG4NxJN56
ax3eym000gbLW3Sm6GKNupAt+xmFRdkVn6ZPJf2+x2xcS4nGiqcC8jbeOlir
Ica6QfTKTtOp+nmeOrCZjJKX2Uz88e8aVVNaB3vzM1PUDtN4E9TZ6FxP8lf1
rLnlIA2HGbsC9wfqYuR2jvZqMr+nHPNJCbXUxd5Kbp3SOxrSfR/cnT10IdVq
aTdzDY2r6XpOsnt0Ifna5OGuuzQkIsRuDWjo4kr1vbL6szTiZSJ9I0g967oK
wnPI/SMepbJmkft633HZnPmQ6A/Jny+6wzWxZ7Z0nL02jVnCFyYYDDIPHgbs
0m0m+LH5tyn8kiaWWl1dPo/w1ff0G0Fp1ppYcyX0Z3Mu0Vd5t47ez9BCt+za
4hEyT3vLdsgfCNCCWIzRousV//++eiYr4akmHl24upFN5vORyD2pbv3En7xd
tfx/Pq6vME+rz9SCZVxUhtxWGotFjq7J4GrhuJvshkZSv1uvO6MmD2hBcSDL
pD6axqve415eu7XgledX/XeIwvjnT9k1RVqQU7o1MF2CJjxoZ5CoqoVNCqeb
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
1dwgdcvrMbDkGr10WIboCUbOq2+EN2aufNJZQfjghsCiiA9pwLH5z+ssCJ+P
8DuPa5G6jM4Uf/O6nI9IvaNV6kS3nfRStC66xkfv7q6yeA3CW4KLyjs2A2f/
zct5uwM4c8hQ5TKpR+EKly25zUB8Iqcp5QTQ8kt78ur/dZw+sKXhLrBf5uWZ
AZK/eM8fS65u5YNnL3j4ThNg9WmlX+85Ptz7P1zcSHhWMttj67NDfDQJ7rPS
EiV11yh++Z7oMbsU94JCgit2U9RQ43Fgwd3T7lHXgMFcO+EdZP9TtbbnLUm8
/tvKxFNIfqyHHwhHbuSjbEXqt/Nz+Hhz0PfxDsLLokc/6UmoEb3BtjZYQnTB
muiHvw4Y8HGZ+Wrhbks+1jXqrjaV5yM96Uq74ErC+33pS3+u4SOo9Fwi14Xo
zD/V5VpE36bmF/TIXAGK5gp6WJHPcdTalf+MAK5xv57E+fMhZLp+XQXJB2fZ
b+7tKD70egQnSxaROgS9WKbnBxz/OL7lvTdwb6XAsHMKcP9s18W31YC+86c8
1yf///tuE1eFf8QPtosukfkAbPtteLKM6O7J0DXvWKXk/r8uOo0WAJXdC/6d
ugHccVbpayX5RGzxzCSyZnSMlV8iOJDz3J69gOTDa7pZndNcPmIiV4hPjgJJ
bskRd8l/BedrXBQkOOMsv2oQv4QPsAQPzNhJ8LG4C8GkL2IiTq0848rH/k0p
eU1r+ZCO+LRRZQWNKbSKy+koDhYnxLun29Do7cozKDjMwWyFsmlL/p9n649N
jNZxEPRg6taWzTTeJIhQjiUczN1oKmBC+L8jM6Y284EJnjSt/OP3nkJs4HTe
w58mmCN391w8mVcBKlWVj3kcDAre3LN6Cg2JI/WhJww46BVsHT6yhvjN33Ul
YyEm8H9a9mI18bsni3r3W2eb4MjOAOmqZgryEbe4dXkm+BKsMy79gcw/7z7W
9W4THL6tpNhA/H2aervhvl0cGAnW9D1oojB1VbWQ/HkOkqVfV1XeoNBjo/TH
vogDi0NZzQ/HKEwIVa3484iDc1tPmVi6UKj4j6Lrjqf6e+PX3ntf69ozO+vi
8zYyioxURDIaKnxpSEuiREUqSslIKiSpVJLQ1jRaSFJGysje43d+fz6vc85z
nnWe5/3GdRUKRqfMmbA8cX7nLJm3qs5nFLtsmHg+dvbGV9Lf99Ja2zQCmeCu
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
D7KHU/o=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.5], Arrowheads[0.00692590432665045], 
         ArrowBox[CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
          "], 0.11338981485158617`]}, 
        {Hue[0.625, 0.5, 0.7], PointBox[CompressedData["
1:eJwl3FMQIDu3BtB/bNu2bdu2bVtnbNu2bdu2bdszd03dh1V5y0NXddKd7P0l
aNiuYtsA//vf/6pE+d///o0BCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZEz5
v6hEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOF
rGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUq/3um
VKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50
pRvd6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/r38AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWo
SS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGf4t3O9rTgY50ojNd6Eo3utOD
nvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvOHv/zb+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38f
/QEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y78f/gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85d9hXwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8u+gPwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+XfJF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//LvgD0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/hX3BCAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/wr7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf0W9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv4L+AAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlXzNPAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yr5EvAAEJRGCCEJRgBCcEIQlFaMIQlnCE
JwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQn
AxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
FalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd
6URnutCVbnSnBz3pRW/68B996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYw
kUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCR
TWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU98
5gtf+cZ3fvCTX/zmD3/518QbgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIy
UYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZ
yEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehK
N7rTg570ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4Wp
TGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1s
Yzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zj
Oje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7
P/jJL37zh7/8a+APQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJ
QUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clB
TnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFN
alGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU96
0Zs+/Edf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxk
FrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQX
u9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3
ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5
w1/+hXcEICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c
4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7y
ko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepS
j/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f/qMv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//gnsC
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/oV0BCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/wL4ABCQQgQlCUIIRnBCE
JBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQk
FalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2tGeDnSkE53pQle60Z0e9KQXvenDf/SlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje8
5R3v+cBHPvGZL3zlG9/5wU9+8Zs//OVfWGcAAhKIwAQhKMEITghCEorQhCEs
4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3p
SE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUo
TwUqUonKUf4/U/X/AGYyX5g=
          "]]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{
  3.7009866772604585`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvXd8VeeVLqyLGt2Ok4yTm5lJ7uTe5JvMnWSciRMn7nbcsMF01CUEqKDe
e0EVgXpFQkK993LUC0IFgQRCFNF7790USXD385a933045I/v97N8Dvucs8u7
+lrPWu/itd4OG1zWejuuW/urrzzXujs4rvP61ZduntIh/f+hp/c/4qW/yF/p
4f1LPT3+v5fSfy8T8D8c+f///jF50X/vxLk75B35F/4/ixwib+UPybEt9If3
8UJ/p1+eWrTvpal781Gv2D76E7059JhH80sT9+b7tgFt+Py+rX8bOca/G0fP
dY+8GHZGZ+1+aYKP6VfwqjcL7/SMf3XjNrnVjyZP335m6d2i4zsGyjH3Znx/
Mz37XfJiUJVcOMZvCK/kR7PI7+fj2/INs7PS77k3T1l4teCuXkjHnkpXji1v
Ocrum66K0eznUzNPrHw04q9nzD3ZyfVx6LdXbjzEV/Av6ZiRfBHhJ/Z1nQf/
TQc5NogXIx8lFDceERdnWroYf/Ah3y2d+KZD19C5B2v92vRmyQ+rXiHL1v7J
f6LnXN8zch7vyCshshH9gKyJtA7nXCK69ezofdymy0k/oqd7Qa8g3ZDBoEds
61Nzz6anX63Pdypu3jOLcgOWSPpWE39m/GJPQMJO6auNZyx9a2Y/fTbFOMdQ
9fCc/RbQq553jujmV1ToN5fcn/h16RWXnDbzlJf3lHtUD1vKW/TplG/IS2n0
3NSj8dmX63ZkbMrQFPom1p/7zCbJd3v1IL0347aAhI6ZNW71z75al3/zLyZb
/mvy9NXjX9qlddkEFrH7NyZsbMoWTTqiko559NJvPn4yxYmhZ0ipiBvk38Vv
ye2BshIB2O3pczEgf7bi08zD15+DV/G8EmGurfGodMuv333pQ4vE859YJyVH
b2s/9ff1qcFZ5f3sVt/4yZ37jy9+Y5/97D++j/zhr+bJv7p07e61z9dltdiF
lfJ1lOSGCTK93dNuUT2ElXXd0mz6eJRMlNSU6+iXZz+3UET3lHSiB6ae9Xg/
Y+ZJBGuDyGNvg4epYLk3/2Dq0XDpQ6uEo4vs0m9/vSG3OiBJc2iNZ1FCzPZ2
kex8BV+scW/E64O1/kT3/GDlQ5bmmGdsHxSISi6kWyH3e09SVDjRHPoYfz94
4pb8GEzWXpi6N3GWkp6medJ7c5+2InphQq/NFZGhIrpc1PQsxSd9E8Sjao3+
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
Bu7N0Y9/un+V5w4x/zAYmNDHL4LwTTvSlGKxXvwbVAlPLe1rtt9UvsvMJ79Y
UrkxCfndBX6JDXpv0LUYWuOVV+QdX0d0KF2LH3dEZg5yNj/qGK7h/sgZ+9BW
HlWBB8+u9ii9sy6grSpu+3BkSeOhHyRenBG4+4XAJSqeXCNyCTFlT6yp2nxo
5dsixTNNXA9TPcHOMbPGreHWUufSo4vsM9i9zv5o8vQt0U7wVx6PsjCfX/77
7t3H9kpi0LEupCQ4s6w/NrGgx6yp7yBdDSOsRm5gciO/U26V6FkWikGgT1Hj
6MbSllHojisfWCaGpJf3uxU2jPzm7MVbOy19CzR2YWWxhfUTL5T7l/lQ8LSv
KDGazB2Spi33S2r+YbVbLVWT8/lTDflu6br7sXVap01QUW5gSqNCdfrkM7IX
Y+LO9HZQfecJEKlyS+4wXTMjyMrZVe4l+5a5ZteHpnbFbcnv+ujIyZuMJYal
RUiXdAL5F2MJWArJ8DXkZZSMgV4wgIfsQxvDpajg8+EDZ/xyKwf7LPwLlkrr
CysDtQUL71imGcUZVKGUhagujfARzxdKUbKGe3CMcnh7fH1wY/3W3D3kK6vd
6lrdYhsoabxbqPD9SPTn8fB31wWSLMwHY0fOx0hE5t7sNYfQDpFXeKxOcmML
6QIcWuNVBN0hLMAbmVt37DyyyDGDcwYsi6NEfr+c6sF3Jk9dqXOKrHQsaxkF
C3wuuX6SHR/406ETl4lc2YgP/KaYasPfibUBNZxwJHmx1Knk8sdWydpxDI/n
6BPPUT5S+5+/O3X+RnZIWnNFSuEYd/3V0qGONJmtlHPmxH7OUh+7bB/Szo7N
gSXyzakespL8CnhYDhWtY5Ig7LVq6D4QG1/Q/cmeg2d5JnAPUUNY919QLViW
Vrx/xtyzZXdI8qBrSdPojKns9i548qFl+uUPLBK25tXsv2UX1K4kkVmcxyMp
6ThXM3pa8h2WXr7rlcy35FqLakRHftBYWzvjO/wYj2r572A+wVJRSYW9IRnl
/bY1neOxklqN37y9Y0X74OQ6+uwjlL3FvJPo7czWEWm+RYUNx0KqWifv2vq3
Pl3jXkfMxRq3eviIWP0uny1tD2x8NVccwzq1Hdnk3Jrxl6vdGrCwcE14bgIR
a3pu9QGE4nioH0w9iZl5IQbR0jlubQju4BzBQ/z8tOJRzhHEsZNsQEJRw2Gu
gy07h06WeG+ta3CMqPjJnXuPM8IzNRqPuAbIA56F5KFIFp9J/m7qk6gXnXtC
utIB+jzoIvlBukyGoncx/8nTKdGi3pLivtnPnk01bIyoaHCKrnqiUioGxzcE
N74vaYYX76yMP/yNQwbLaUx4xnbTxXZvWNE5fPQFC8o8WEpcFCFyl3ShjKAF
EYTxu8YiFEsLwtae36hEy/rPh8bPmPWMnH5g6lmHdX/AhBrKUQiTjEW2wQNy
PiHpWuZrD8vrqqfPKzBcKBAflSXl79WKowm/8aiNZ4dVC85POU+HYZL+MqOz
Owddo5nafQOHvtx78AKCjFqX6MqE7VX74PdLMtc4/Y1dsWSkmnrCUndxd4Ko
w5c0h68K4yS1fMnEs0qMzfVvbwhsl+0lXeo5UgC3G2Ejv9fFvXuOcf0uCCzM
n2HT1ty92hqSBVD6WFOU7gQBN+QKhhctYI24rzKk5jmx0CRHSdKx+IQC2SVj
Aa+c0TGjksZUsrjo2sTmRRmV1WSWGFEhLPH9xY5F9hWaMXjwkpO3E+ENvnHQ
hSYYHlp4N5GkMxPuxYP7zmgLHFsMgymJ32dYMezihuBW6ggYwFmCXyzzBVQ7
e6rRoMRd/DRytU2oYM4W5eXWhqB22Tirhf2DY6dvybz3hsx9n9NVH6Txmq56
Jl5J5pPllJRiHtUIIK5cfRIc0mO2gfVMl3EXgtyJLuNA/YG3lkjrcOlDq6SJ
Jc5ZP7t5+yH8JbPmvkPat8Xzu3cldwv6ljs+8PtAMqGeoA9dQOIP5TpztNcb
sR6MDd7zMjMjmaGSwPOQjZzoLBs/W+UmFGvYGkgsuDs0ZVDvR5SIXKviMzhA
n4m8buzSPnBW+wz9YamDoCKL31UZfJn4zCbf+ZtF0vvHztwSORx2G0sGjqZq
fG5eQGLj1ffN41e27TriWKoZRcIMn+DyLwSC07POCcyrHYHzxQVerqia0EoI
uTtdxKTB34+1FxkOHLIN/A6RUXnC6/mMXy+udi9HkfX6Sreyp0scy9SZRD39
HxY7lvD7EFdGvD5ha2YvuqMydytpM6oW4Ip9Kuh1vQVk/c0UEr/Q4n5Cdulz
6ifJd2TCI8oxt+i2J0scS3H8vERdIY4vCk5pkReGMsPCtyXOPvaVffq+pc45
7+87cj5PioNIGkb6lGQSJQ4eCEkeeG7q3lCauGMEi4jFZAarNDZn15Q5zThP
m8oy2UyckDfpd8S1R0ICzrKWlzWn1XFTJS/CPpfOc+ET66Szn9ok3/6rWTwt
Yype391V7lU3TT1rGIc2XTT1qjy32r2U68xZrypt2ZayiioFYShxPleKeJeR
W3NQ7xOVyxJX2jz5yMqnZXqVe73ClHAOmi5b+NaNLXfLyUssGEKgKCbPJI9J
k7w5txNKihldqpskaZAU0Ngy15yf0Hu1rekYv/3nNVscy1rHCvwSGoj8s2SN
ZkNoaUxCYc/u1V557x48TmILr7y6YU6lZd0jx7H0BpTIG+q7D3F7y1TMPPin
sBjcj4WKwXJATaGE2R6a0rd/mdv2GSUjOKcoKKn51BLnvHOfWSdPWvpWwbYj
F3ncI6ZXtIG45vkv12f84vrN+0LoNAchOlGTWlVADkcg5BBqlaK7wbU605ok
k8359kNRW5GSBSc0zzziPc176yNsPL0+WCg/MB7qctxU/cLEQ6XF+GunfXjl
T5m9kyh7YZF9TnpElmZ559AkfbY3reu6xncEJDXWOUVVrGobOIKjcE8QA5Nn
k16Pm3lXwJW/I7l8QHN0BSb1wFqDNtTS/ty6rvsAz/AhnO4OTxvgsZhHft3u
zLCMllNLXHIv2ocQvNKMZLDPrw0gHvwTyZIg+3/2c9sUXYbyualn06d7Dpzl
hTu+SGLWhHtFD1FZZbUeRhJj7nDcXO5cenO5SynFG3iIitZg5cj4JU4XEOJ9
0XwbqTwgIaAjZGDMqgBjFLWK1OtdE89aQa2S+xz1iG3fbRNYrsdoQ+uExOVp
3JRS3EdpsxDVS/j/qFJx7xwm16mkmbjFSIMgUEYJ98ASp6xuq4BCiBLVh4Yi
TdZLId5ThtHA8xaEpGnOsaI3norx0ozwELc+tEj+eFQKhaWfb0sr2ftC5mJD
0SyI6k+23ft9t/SJxp0vGvkhjYgWekiO8LX3LeLvmHnVcSkUv3t5Y3gXJwcv
4UHi/kZJM0BDN215e2Djp0Ky8YoUCrcSNR5971R6X1plYo5QWVJ4Z7bgKhD+
eCoZg4GgRJKpBFLkx3RZta94yNy3jAcn8XF5naVeW2rXV7Xv44EQJwOoucM/
qdGyvvvA5fctEoq8E+pZJDhHJBXsOccntIWm9n22Z+Icii9cQ91eH9i2Pats
PwADjNHmIFrkcRuSyJsL6g48tvbRQESaIjL6ldBJb45ba/8ZcYU6IjOHbq3x
qCZ2z9yzRdCGs7UDK5wBwKybpl61WtaDLwcH/on8LkMU3qO0C1buR0bvfEFX
l0cMmTmV48u7Ro5BrGQ0ItO/j5e7VOC9aO3ggFj6VotcaMjEVAYOwc/Q6Vn9
SLn2NYeQjruo9DIvnKcNFveOHOs398t3Lm7awynL7Q/+BTkMzSzrv/o3i3iX
4sY9jLILOWVFucW/cRyKMh65Iim6aIjK2vV998gxIBQyM8r20md7m6+ofblm
LDS9vL/aNbqq0i22+s0HD5/gFDypyAl61S647fkX63Y8Mfdqwu2zz+QqbW5a
8R4tRMh8WZ9KOnLGRCliPP7Oofjq906FPOsLDx5L+NpU1J8pdYPEsFEJSL+h
C7IvIGGXqBZgjF8KVxVf71v5NHPeYlHnD5Y+LUBCzphRu4oSJCBLZQk7djN1
SqCRUwKAk98kFu3AEpdtuTE5PZyGsGHw4iCdkclFvZL01l360Drxo70HzzEa
ysaNO4w8tPnjkZNX8FucA59vC01rAbgCycQs6f3Vpc6FNyXa8hQAXB1kWsok
DYGcPXGonzydEsIiGU963nlT93M5ca/P4VKEJakCXaCrWgt3+u73G4svfWCZ
iMcVQ5cXLA3koQ0aYnQLVIJKLfSW/jmXTV3y17/Q/p47V6GGIo4EjtwLJTuq
P80AD4K5NhSjM/P2wWOJMTkdehRCaxBY034U4LQ9UhSAFWaCeMXSp05LOI0g
SHBIELOiDHr8qw3pIBal379w+nG/BrQGLcTwFPJZ5RpbLcnfYfhBydHZ7Qe/
25j15n26iPgetHpUUlEvfqeNUcLCP7fw1rxQ53WNZ1a7NwBNM+CztVOMfwRL
qK/EqfLvDIGyefvGbTlKFPGhM6vdGtT1JS1BfFcUxNlQa09lgLeHSiTAgpSe
P+Katz02e4SrCBy7Lon/8bWBdUNrfPLuf7Eud3qNW0PqjpoJnkB5LtF1ZrVr
PYSY3/2ddQGtdTHZg7+8fP0uNCPx4ildjUAFJFih0vjTIdzQMjk8vNoVlEQQ
bwAFwuF5S21V11V37P/nqzfv46zfSj4SSVtQxbYQ+hY6Fe7u9qDUpl4r/0Kc
Fp/i96jxRCQX97758PGzV9K4HG7Cjj1b7V4/Iwc/6uVmnPnOkVNX+t1jWiST
xQ3zPHGt8RdT1HAQVcB7SzYWdW6MrLu+eGMByoViNtO+e+isiF/6k2g0Z384
evj85WXORYCEA74oSjhk4lu6ykjz7Fvmkt1hE1R05QOLhNjEgl5WbUJIdMeE
Bp1go8N2oY2rW/sPSz665vfHz17DspHMDiXYbIhLdGJBT2RyYS8Px8AYt5hq
Y265RVPfIREA88HB41f1tKgVlFmxC1ltSJ9kSfeSPAj7PaQK1Ftb2zketzW/
OzS9dKfeLPKNOcDuocqPc/BoD37QGbsQDUHSwhdibpyk+VtEvYL38QV1BzlP
M+gwFHGnbUipkHT/cWZe9UFOKSR+Hqx2r6GqjAIUH5l5Np7/xDr5zLrARhSB
UGvgl+BoKl7T1vujSDajX166ce/q38zjz362NgU8yFO3uviJWsrZv7h2835S
THY7aro/fL+xjKoZz+ZD9mFNCojFSOMUWT3+vXO2Z17dkE9u7RDPUbzNnCxJ
4QVuqxwgAR3j1E0pJX3/fE0V5BpCwRXH5ewCHuO4bWA9ERRKPiOQ791Dxy+D
PDiPfUXbGAJxqr9+DtWLOhKWFKlsTu0lPSPHJY+3wbR55yGRRdfWdh04u3jj
dqf6rsNump2n4AKgUgEtM+4Ro5Q3WWaJLA6FF84DAyZu3t5R5B1fP+gS1QRH
pyEycxdUA77RE5kxpM5uManaaRtYCtbjuHBDpj1NWJocZ/8vkWRzcKkKj9hq
JG+a4raP4Ae0gE5h7YoTu4jqm6DsykE8h+h3cK1asSV394kvN6Qd+m5jZkgm
rbkt7Rw+CmoxSuF6gVkVuzx31A1zSoGgJJgg/6KGMTqxsAel6kYpNASVBCLB
S0WRDYXdEMkbhehSIs0FfbfG5XbWOEdXfjm475S55ID8x4lzN3IDk5uSo7Lb
4YgoDLngpKOC03zKAu37lt5NjT7xzTOmWu4aS0sxGs0F9+FSvturB459ZZcO
RwQ5G9BITFcJ2XbDPR6xHVwAOK8QIKF2iv33lEbedEXk8IEsAT0WklHaPyEJ
hBA6GHNWohUV5dbJbVPyGeQn7BiCIbux3KUMaAK63EYf7z14ZvJrh4w9Vv6l
Hvn1Iz7ba4aQ0pgjBFX8Dlh6FDICQeDOxQeSznYpatpjwIlaPbRnhUduv7lv
vh6LKkE98MTK9sEjYQyTwBIYC0HkDpfouo61wcV4D57ZUNk21mfpV8CjRs5n
yQV1h3g3F1WIc/izwnA/sPFtmVYpSOaKsCYDuK6h0uUL/BMblslZIgPtmFdA
hPUFJvXy5+cNMzxeQ6JHaFFium7Z3oNXtMnpRe0Eb0YiSvml0oIi4i/xfnnH
0OTlb+xyGGhezHmSDBvjLJNXLvc1PcfX/XtP8swycgqM1D1hacSlubEuQJMZ
ntlSGZTcigWnjGUoZyIY45C7mq/EEZA4V8llwRH8G5E8MZgsO7C6bdfh3au9
ctFkI9IdQu9a1DACliHfZ4krLge3bfzIaviWtRwYNPHe4VTSspfnG6sjMvuQ
LYSDd9vMq27KXAUDfm/y1PVb1n6if6HLdzGAosgJTmtOicxuQwjDMMDbUotH
nkiOxj7nSA3zfrRLf7+4duP+ze/s87UADUYPvncqRYfQD1a+rWddI7v5ov2B
EtyTvFAoiYlirB/ZUNieCP3fE5REqML7jm5sCG6fMhPSqvpqDiAyzWyo0tEg
4EUEl5otybGNm8hlkeYRm+agXsTaplh8lZdwrm6h51aQaW2UHnnGDT+nWtsA
Mp8uecNZYekawG0Y6bUFjustgmOR1cLDJ6VeW2th1Y4scsws8YlvENvzdmSW
7j+82Hmb0jvl0ZyZV3OQifoXkhFAKqHQL6EeXKevMPKmlKK+xOjsDkDjezzj
WtErJJRwFy4aPXj5shRhXlwfrNIkD0lmjVFPK1kOnvm9SHu5FVKoXBiJv+A5
C0WVGZ3/yi5rRiwcmgiJ2FlKPCQzKJX3uepSnHvz785fvidqzfKEvBHEMYx3
+c+psGslE8Vr6QCqGmEBPfPrd8NOEN0l8YWCEzdEjUPJXDPnhiag9CXzshvJ
gc1bdnQxnLwBbhHwt6Si+sOvcxgpWRZ8Pjx+GpX0wMzyXac/X5da4hVfO2nl
VwVHvSoxf+9Oc/+CM5/bpmQnF+6Wk0DMaG4LS2/ZaeFXAFgqi0sNV7QPTCbF
5LTHxBd2F3vH1yG7yPsc5aQRj+oZoSbtQ5uVFiI17gmv5L4ZH3goMiryrQCT
akGVmLLGAoU1PNCQ1NyyKX3nYYntJ638q2DaplAvZncBLwx8IhbE5BX7RllY
rALc6aikwh720N1ecW0odjRvyuj/7ZmLt1RADxPlFrRrbaVpxftZiZb40mkR
Wa1weBDACEGpAfzmiNLmQwhfQABS15qlwC308yOyuvau8sglwGAKsjLMC0hq
5PyK6h0BL1E5nku8Ac3Oo6f+bpuKKk6LXVjZx3sPnZXrwVLgDMoxvNaKgbHz
SGzYVUj3xJ4ZaqrQJ7EhbVNmq0VDzwRJetD7fVO7r0H2JiStkh+Z1RlS2Xrk
jvQsYg6PixpMq4rW+mJLrQoqc9gxvOURaSiVTcjCpuisQdSm0Da30z68apfk
Lz1e4VqtnSZUfG6P5trE/NEl9FqpUdva2m1DSlAX5kgvPKnkOu3791Pnb5R7
bq2XO9oYzwm1bzgSd829GyDPtPhoCMfMvoLiIhDCwmpyC8rVfdzWvC5EzwsE
G860FNS+yqYz6iI2rHOOrMS/EGYReDOVS+NxdxoPgYoAF/z7yfM3bOq7J56/
Di5vKChXGFRzr0Y9oetpe1Bqc6kn8o87D4q+CdyczVt3dJ923tRJdSjzHi84
hnU8+d5JhgwoAi1Y1P8UFbuBmM9SvEVyvikWSXNQ2s11QW3bg1Ka+sPSCGIb
PcaqdrcXjK3Q/X/CPbqHm8/F9FJ4BMcyzd7twalNiJdZQhBPA6GzrerYnx+/
Y4jnM1mS9YXk5V9d7V6OZPDBxY5Zbyhii5uByMqVfkZenhRJjtrW/qWszQ1E
B1VGCop98PKjGjxn2AIe0VL9bvi7k+duAI2KfyFZRaI9Jtq/vnjtrpjINm/r
P4oKANpaN3YMnOVKnJ1KFwZU9JqRcYH/uLxjmGdBnODvZ1YMCOVyfbTeTVmo
eiQMRB/iHxrB34n+vEFkcePBF2vcGkm23oQU9rWtvGgsyAmF5nYDgscwUZ6G
STYybUU+8fUQFvaA83lRBUDvpzJsjFqT/PTiUTTunFm8cfvVL9dn9VgFFM6R
9S7zh7hwq2EhC7icI17+un/sJKc2DwR4owmuBX2nDPmgbDAlaDt31r8m6kdG
O7G2IFcDmY/vUd1+8PxKtxKkZroDk3rgTQC1z1CuWWkle27asTKDFmYPqIGl
XUOM3AtxheDMiv6R1R65Pd5xrbeYERKBZHiQR4sdSu59vSH33rqANlluZunI
NDNyr6J3ooqFZ+k4xjIdZz6zTTn/6dqUl6xFSwckXHT/1IUh+gPm8z/lgB3J
V9BbSs/+9o07D7eFprcglObo4VuSnqGmgqpi5GCfvGeaZNnQc6BhC83t4Ix3
bfw1zPMylAEZgvpmqtQA5IGaRoIbYR4DuICH8A7ZDhh6FXb6FeygkSqMkP6y
s8r3z9C2GTViV1C1rM2WlzxQ78cNUAIbAjNPpGqNez0sOcnjsq4hsAwQOUKn
jG6VwcwFmCUtMqv1yCL7DGgl4XcLeN0R6/ngO4eiZs+4xmqXmKrHv18eM/3N
hmLymakHQRQ+WutHulu5lVhJb0eFiNaC65NjP6PH7Ms1o08X01hdMA3MK8RF
Hlr5kgd4Dly9xFJPrLxbTtuHaqC0kCi9tZ4Sn3MzV3SqvBJVLaRjHHbQraBh
pC8yY1jQ4CrufAiUnZXaebhhJwdns9WoeYXyyEaAsehEIDj8enNgqWBzeF0K
H+HfzqUtY3KFTevJtZDPfDHFUNhEFZDrako24Ggqrn0MFK4QZ2eQn7LeEmQH
nIub9win0c9LKBi65hBCAwomIQBUw/tCiAlXln517mcjE+dmBKQrzy3OLHeu
QVd53Jb8zn+7eOX2O5RXVlAviOIN1cGkFvhZ36+h56T8fLQSbPyTew+eEO+Q
NiiTWhW4RKgXzJkR0g+nFjlu+9PhE5ePfW2XvqxzcFK78tYYn7uXdH8Ag0rv
Tf8CG5KgBAVC+ouyRXDHjJlqeNFzS2+NkNNS11IFlO2P5NQqezCwBVYUngLE
X4QVQD5RYKFzivxlABlvVVUANjQM00YO8m/KpUV2w8gZyAvLqMvLbtxNYod/
efna3QnbwBqeMGA8A8bmhXL5kSXFFZ5WsnONMpJB7tpHD/H+71224XN8j3l1
+Dl8F0RDg27RLWwiA8fWYWyGfJ+Mf5ZTdaVq85b+UOjhEgoEAYIxnnJCNYCk
lZWhXTQ8n3veIVQetgW/GiEeUKMSRzWh2j3F8uJs3eAA4itfDuznEzbUgHhq
NQ0uIOkpjDZh5CJVEeGeZUfQRMG9i6wBYAWbhTVDSu+eKsUDijOlH5xRvkuy
GQPcz8Cr6Od+ve8IyZg+MvGoYxk/VbhlSgc+8GlKgo/YdGOFS9mNv5knKm3N
BmJRDYvJWIX7VRy+zFQJGHxA8lGJL0RRt/pinZ4v5N+Hxk+jhVM4JgMDUaeY
WOKU9dGeg+cYa81FRABtiylUtc5RlRCix2vcCTTvB2vfVk4UVmxdRvWHdr/B
UbuQJo4G5SJTEJ7e/lIQGRh2XlESrQCuoK9gqHXhLAzjEwv79qzy2B64rWqg
MGpbjxKN6um7V3coYkgbaN5Qd+J5NCNQv/29U8nj/1wWPf3u6ni0B+30j+9C
lawtLLWvMm77EMmfmchqwZDrU124j/Nf22U9V4cCKkwYiohVrjHVSBT+4djp
q7AnjJGG/BMIuBbToQBfY4UY2GRagFBMC3eTeRLw2oagtgcfWKaeXuKSh0kc
02vc6lHqniU4DnyEmjCUAboPOgm6SV9xw4OyKnaFpZft5NwkJ2QEbkKiBg6+
yE3artHvz17kjr3xH46euZa+KbMVPfg5wanN3daBRcFZFQMCxFJtb/9bVEfz
uBa4aOJVyWvMUENk+Il/fPeIdVDZOYfQ9pdm6jzTZ4dP3FRYT7D1sh6gfTcL
UFVFbwkWfnzjpuZQ6fk7bYOKW2Ip0HSGZkyapqVwG3mOEy6Rnaz13Vgeksae
u8surOI/Tpy++vw7+xKxlwzd4rdXYzbKq9XW+WISFpEqcGW46A9LNpb2bIyo
iSlqmEAGCQwLsWPDRXy3Vw8Btg/XHXVMHOWxCS/lXbcNkKEsUytda9FoCHd+
wGtLB0/z+Nd3Htf2vMhzr3CusatsHWM9sWqz4CFXB7hVRc6eNn8pCc6LjmEd
KVHZ7Sxna6xSTsxCQ6EKI2V+hCihJiKzj/tI3M6BawEoRDzati6kBMkugFg4
Hl5lLf4saibVSL+LNv4NotT++uqNhxet/eu1qUIYBqyCXjsKvtLFq6yegWzw
oKn3jmLv+Hog21Z1DB4FfzO1fu+vZkmPljqVc/ajnZFG/Jb7fbd2PvnPpdH1
foktDN3jIUA4OXGEwFKFlXlldBr8qHWBrY/+sDLWDsLLgnaUltGsjtKb0txl
iAQrkrhbS5smeTWUr05nVOYQ8fXcojgK0BDTVQCbBKgGvqGok1fsPnAZq63S
j9T+ko5ajgJ1qGzbLw7j40xjOjB2gbWPcO3Elxr2D/8mWAs2RwasD+P0C4bP
4CbktGtk97CJd+7h7xwzAZP74+FTV3gHwRLZU9GbK4ZQADaJLWTw5PAYWitv
IOZKcNhQ7fiRE1PNMhesOvm1fbrGLrwUwSQeoWZTei8yCafXBTU++uOKzdOv
mbBCWWTuSbuQZq7xSKODFvoTiksoNj6W6IeyfFZ2xTjXBzIdmG18+BeTeBQi
KTWpTofenzDxLkJVjesFUffTSSyU1hhwpvD2P/O75sNEHlh4N6VmlY+iOonw
YdJrcx9fM1ihkqSCEcTteHDCPmwmF0o/S7uHj/EkrjLwS1lr0IkNb+BxIFcN
YA38W4CqQimubt11hKN3tAOUgtC0VsT55BcfUe74VuEO1RBBBfdvFJ1eNhBV
3HgQHTTJ+bWE6vAttEBwyuw/uYNOHfnQgFRkQapM5m+Oz+/es9Jj+5Dk2tnU
do2jywFYg67oLGKQHpt5NojazoquiLYNbtucvUeIsC5a+dUV+sbXozAAdD97
mqm/mqWS1DxjPF79Y500aNWVeZIxS23Cjr3UW4np5UqB+xQ6jJBRSm7VOBQM
h/aq68nzSgOTmr1z64Z2BCY3qUpbpgrxpdOJYZbhFSlmspWW5hnzt4TPDMTf
Y4VpRsdIBKDjj9si5tVArcAUCRJgCNOGZE6H79Z2PgRKj7XtMRyMqHvBIyxZ
ddMuqOOgS2QbRkkRs17aMgpjxS425B/fy7W6iP3X5R4QQtxf69/GB57p0hZs
ThhcywuL7LPRv4SxQt55tUPVSQVjr01tWFPbzrmpILV4bEogwcxSp6prX6zL
6lwbWIyhkzyiOb8xnAwmPKZMXDbeVNZ8WPJSGp5/v7HipTAXRkDM/KOk+2wZ
SSn9C8PtAFXEDLCl3UNHwf3sMmhORG532HNzO9L7qNPa1PfQGo+hrKdZmBu+
rXJ4S0HdAWqdmGEX0wQ0vjAUtYnc0SX4u/gcBom70GAc+F9xW/O7YFZZB/M3
r41W5vBkQVJBvYzvQ+8EyqbeubVDQGzys5+wDyVm6AUZ7cCUu4HsxjJba9I1
fPycYxiJpwCxI3E4ravP4UoUDhjuXRu1S6wVnXZrXB6T3Y8hDwPeWzunvrUj
6chplnXi4Srv9eREY0kGGS2/3LkmsKbtKIqSSo1Fn7dD7/SL72JsMlvbBURs
jRIrGjbcCxt2s8GC0MutG0JLgrLKd0mHR+o3RlZAx5D5MSZuDc9NPBrF5I8R
EPOSyWlDFxBw504NXUemPrbaZqiWLsJx1DyryggQe+JEM26Ef4Qgh3uXID7U
A24fquILlRbAXUmBsQbqaEY26HOXDO4/J7J7SlrJ8Ne7Rk8GZFeSjixk3JRw
TzARClSdJyYlVmiUoxvpWO+G0Mopc3XRXoZm0rT3K60d7x05RVpBC7fkDkK6
iDqjY7UN8Jxg+lUdQ0fBckLPwZ01HtWtAQkdD6QHFMomr9ibkO3Vuz131A8z
lxgZf7iKnNA8Cc94/IuhfadGV7jnYP7g3/YducDojl80OEVWALcZKZGRJH2x
VHfvPX72F5NkoblrIUmNSpYMfYocax2/Obdzj88WgqB6ucyp+rhtYB3G6kEr
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
wm7HTVVyn64RzUTcWeFSjmmOt76xy7v9nlm8MFZ6Xl5YRptp38gZQKewmtzz
xmoBdlIVSbqTxClfc8E6Va6bq73yaoYRJWPlsOoIGhIl6kCTg5JGil5A7EmI
FEGPZYVltPTZh1eTY3N0MAHjIdRosdc0OcZcQ/AQdtNFmn1R/+hJ3KoyIU2d
tH49/d/CbcVvzu3w2V49hDwOglqRAAhkM8IzNNCaGMTHu6o5f1yTiMLGDEJI
nvOJJNJfr0NY5Su2gQUjDQk7RoUak6p+wJoB/y+9Te1+O+2Wfj72TnHuWFcG
CoiH7EIbGyR3DbxAPEq9t+6scq9C5xV2ImXmqCl5W+XYtBRsIHIe8oxt5y04
d9hkQe5pYfEwlZRYV6oQ0VmFulP7OgKyawTX4OMi34T6BMkMkFSQseKwwQAT
w8xYgG8oC4AopxNnAVKyp7+dg4qB7ABKf8h3T5h6F6VEb2uzrus6QMq8Rjqc
xTmvNRdGZr0jp6sleca9IsRVa2GDnvWh5ag0wxBDKNjUHWy+gFL1hEN404Tv
lp3c5LONlIkj9sJE7uf/9MDRKzMCtlx3YvKPIs3nKGOwqBZf2bP7pHYzIvda
n5vS8dDYruKehXcTXhH3PF5kV6hxj20ojMjsPP6NfQaZd2YkBKFrVHsNGWal
Fe8OSy3tO/eJTVKZ9NTPlWyUEXbawQpAoFC2RQUJDh3bwBqbQ7atCy3J909s
AAyGDLssaBhDjz42TGWqXOw40Nv0D3xJXWxASDsL25uzxGY769ODwsW9CGpG
3jOIz2CVeEGL9gYi8gcGj9VsRgNppQ4+H+ZgESwZZcE3oF0wD9yhsnWfdt5J
fIU6wK5QjY6byu5+vT4P3gYv46iGJfy3qPZ/ykPHCZeottNLXVSO2C0rP/S8
vRITHFjpvkMjuaamvXvO/LDcpVIOd1ieShtTP6PMvH2Dew3PzbyIijrjEtF1
8WPrxMlV7vnHLHwr7zF8Ana/RMwNwa/yT9IgXOdjTBq9tzQBuIdNRcSx91fs
ggkXCIIvNyJFKpEyLFpHSDIZGz5PUfUy0VnAgc0WMH2UJBPZvDmdAZgu15Ax
H0yMvK8ivdYrm8NoF4R0ZcxYJzJvtnMtahxptw0mWw1rgpK7BImaTbeLVjR3
s0t0DTYy6rPyL7z2oVWK0NtAULY48Z9EN/HHIqAPqUUx2aP9etI2sKHMM67m
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
cMxqgWTicPGDiz0RqlI9jU3zyP9TUyu0jSlql5cbg+2htg4xz+e5LKxAfDKS
C2hUkkmi1NxGXjofCcK1K5OaDruafcztNp4BGabYjSWCEpoGnCCRp6nyalwP
I+zwvL/bf/yKwViu8vHDrkYEiD8+/OvCLQta+08jAQ7MgeS+kFqGRxWWaQ+m
TnF9o37M5cDZmmvAT0wPeYJhEA6GN9sdsLopPS6jLVZTWGYu5tdp27BUsr20
eieOHFaRpjECVQlLGlRQL3oL7XS6CsJNszUdDWnljQx4MOzCTnTbULSl9hiz
v9BwKP41x0ZlO1j32LSfrHSqn3u1x7yyg49jOE3A1oY94jW1x7h7IPXwM31V
ZhveB+pJ4gKjHKg1FsE5vOEWLLpB7s6T4Tr+BmFWt2TaxX/huziaQ0d5JYU+
Qq195xU249bsZbILnSR65Gl0onFZaP/Edq7cWLqd0cGGba3fC1pD8FxS6co0
DVM1vEXUdp5+6uJfvyswqR0lynmq8GMRUQxY2Bqe0oCyG+2aqVgyYtdMBfMx
Njs5zlANevr9uczZrk/K69SCqg7BiihFjJaAkFgQqdiNpdtASA7xiS9pPs7b
CG8sWt5Jrq5NvsQSxEChi1X5L5PnpDqnW697ybG3NzyjOkcxAj5IUVJKYd9T
Hc/wN17t/XrpGP/RY/HZp3APsDTYC8SE1LCKf+ORsWdrk/O7UF8FxQujeTdp
SMUFi9W78ru5qbtdgvJwKUDsjs2LrAYPU0vcph0cLksIMXEiZ9vsyoh9NJ1N
5tbRGAjaRyvrBkxAZHZl/+a1BSL15Mxcl5myPYXl64KLm/bvnLmsQHQoa1ff
sySukR6dsyK+AFtNr326KKpDuAhqH+V8uDetBJ0z2gdMjGs5KzM6CHCOS/xW
U5foigJ294LfKnEmwRIZq60uKElR+sNKY4rZY4Pi9feHTgooHStdCDqODzSR
Ro+qT3HTXo4bNVlK6dCMw7EBignEfKfeWby5aXFcGTJ4727fdyZx/dZeODSC
BlL6l9BdI9Jts+TlTZVuY19VUsEEL7Sb68D2OnVD0QCDnTtAUAfDZRH684WR
bQ7GkcBvNFtQLsubwIPAFb0+zb88YEv97q55kcXIIktbfOIypIuPL7DqXnBC
3PIIb3vOWEnp59t7j1xWey3TeDrn+NmAhF5sxq+1veyJ2zTAPKYxJz7yzzeG
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
kr3NrIw+WSx5Q4ZdpXaQKelXaHTM0+l+dXRbI9jB0cc6M6gO41tAUcUIAHHH
ljvTya/ysqsOM+G4qQaIiw/K7oXXsKnoQVy3Oq/rgGd0HawgOnNhlSAEOP/Q
AwGFDbvxb7I44CdoWRRbxqY567M9v3fj63sG1ffrXyp/DsKBhKteTWUt/iJP
/75XmSBX844T07gK04r26pgCs1XBb1uTcrZT2dlaI2Hnx/n4FN88TDheuaG4
j7brc8UYREeEspbiP0U0tNbGOVYNfEjL3/rLwrz7mpn/bEZgReeC6DKeZFQa
6vZUv0oqw/yv6zfu8G1CuuChPsGKmQnOWqVOxL6IdTueTfet27qhaN9nv3Jf
d1PzS2+6BtYam605Xi5yfPdjTYo+nb2sjj7PSgTjrVw39zSTxjmXyYEXpGWS
SeQ15HHBNbU8s7L/6KQlmXf+dWri6Xc8N2EiN1HOtS6KKU1NzOmILGk5PMw8
q3Xrt25z2bbvojJbOjoK7MQI2etXpPfAUxpYtrbLGLb43cbwlDb0QMpHkreL
k/6jK5/evPPnBTn3fuWWdvndJTk8k8LOGavyyoNzfdEKQqGNt2PAxc9P3YKr
9n/kl332Lc+NV/+6KBspRdo607IoVSLwlaO+B4nfvK5g+4U/eWwEPdxnv561
HtAmkYfXRP2RqIgFNJMvSXnhtwf2n7svAMsykUNuNYhiYTSGjeLbG2b9GSCK
OE9/NmP9T05f+vyLP3ls/vR3s1N5xvyxu0yJYcn0oe6uAbwp0OyHOto85j/L
DC2ynegh3bIqq3vf9ICc+790T7v210VZhIwGAwWSMacXx4zARm2L3TjAn9kS
zo5Hjeanpy9eP/Shb3ZkceOBcz4ru2g9lF+J++Y9L4631ZwC2j5WiHr5oXtw
070PvEsf/GFu9jMad8tnwMGpe26UvI2VGOV06S+eGZf+OD/19hSZ3aH7Vq3n
G2VMrNcitasCD5CYWbn79m9mp7u1bD8KPXrhI9987LSqNWKBI7LL++9N9i7H
zdz0iGijAp+mkLYQsyjK+a2xm3bo9NPMfQL1DU1qogdBLQKZQPW2YTFfjNkN
S0bvP6TPiBtsW7ii9LynZDcUY/DUx4BaPeFtIDoA8VbWiZf2bBm6nktwxk2X
QH0OAn6yUpEYqjsrpOXz6QGVhBsTuVulsB8qFDxcULKj3APSwWF2cTBO27WP
/Itf3DKk/MAN4sebttV0tQzI8RFLBQqKj2bLjCQ2iJ71wOyw0ufMKFGe//L7
S3PZ2NrqqA2dGA8kDvRU35ovRR3alMd4RbeBM2V4Q4CJe5N9yq3p+Jr1BXvp
kf9Veq1WziKP1v4zETnVg0/ddOYMUzhu9XCpe314hn/D43e9is+4h1QMu/jX
ry9qOE7x0o8vXL3J42AnmYERjixxZOlDSwKb70/2rTAQmqMNx96AHuA1IsUk
MOhnmktHJ9p2QNZH/BiOMXQ4D/SonKEneLgbh6sRnpMJyvjm5Ny9ssa7oosP
9dSx0NrfLvqt6nmm5wXkouldO5oy7qYs/IsiPiiSfzVbQLwE93owKlWkwR4q
hD67Nwc6eeYxJ6a+l/uugfWfvL0oG13pitQJyc7rHy4tROsQqKdOzAmvgiX6
xCNSAM/505t9DnnJW9p7qNnTtH+MKoM0KdVl+XR5XduqGeDE3iENpjMlbriD
ez4goZf71RQ24uOCgom9F4aRBmVwgdZxHa4j/MQnRrOV4CK2SiTnXbLmkrge
HfVT6UJYo+iLbGQk75ehzBtFeuMevuWRP8L3YEbqxvzwFmP8iPPns0MbBJO3
diYBhzv3lwXpV387JxXiJu9QzsFwgAo6EGnEGy8x1ct8B6FF1bm2znZXHDyb
jGIEh/w8NHi2TOKHL6a9Z9SG9HFaTLxGbNaP1UwacgJu6ZOeglpIxQsgrLZp
n7oEVoi6gPb1IiPiYGysnof/F+morCltPgmgBuyoLTjUci73hyZvQ6hzf9KS
0hs/c00+4LlChD7//0CHtEP6Z/D0CLbP4tqdl0iDdhzoR4Afiylf/NIyqvut
eWQP+i0ssGY2aPs9rHKGDXEh36sMPfgUZOXGnjmn4G2xREjkTEXtucNXjMCL
e2ZEcEPiF9LmQT6LBVkzWnuM5WlowVKQXP+iDVeRWiHIXaPsJZtOPndNmQ6a
wZnWOA18Nxo04lHuK4BECnweDXTDCmhRNaiCQx8ag+0/aJm67PBf/+yV4PuN
Q/PWAhvjs87758x4FlcG78vAcuwfYKu6ZPnWC0hDYszIa2tgc3OXo8qWvgA6
96NtzKRzybVrQQtVQQu8/kEPZoYuHUSfHEEf64axIYctMMyEVF3IjRHkSXno
GSPghBsPaWeA9ldi60tAu0WgfUjgVlhm/S7QMqfl3fOOI5toCBkEwbZXUvrV
28/Im0N/QVfDgBp3/8IKNjyIr9wAazNDk9YLr/Q5Nz3SpyKN+LAi1+Gw6gm2
Qxj5HHrQBCdKkyI4Z63p5ZtPGUogQbMKUX4guxTcRkIaa/uNtP4AtrsCbKUJ
IkKQ25c563ZffuuVPg80QfjdN2MJ6FwKkB7E+ZuQ5TdcP6JKNv5wT5mPfCUA
cuUGCzYmhFvQV6Wjp7VZPfMOwdshkPkyhtVI40hojW1Yk2Zv9YR9yKdMYbRK
IV5lhzVKfoUXbHiYUoPSicI4nQq+Mx753mGI/dAzFFBmmJHm/pDbNkilKPwy
Q6jH1uAc8oAv6ACdt4wxF2WGyIPIp/qDD2xBash+iS3bAi3owHc9vQwpWAFL
hrBmJbwhB1WDbA/S2t0fKNci42z7F0D8tQV7ugQrtUQYCluBgDKIPadr7kFg
tdtXMg9ymcgTYEMKVs3DVwVjs5sDUeSCCgJQdXs/r2Uv8vVz8JVoIAxZCcCw
FUscQK4k54FPSqO1tWDzk9+iijfObJ+9D1Y5ITUEwMtqkY8/5sdiDTQXQ7yA
erA3UqKBZShYDkFJcx0QI75Bkh7q3gvUeAI2xRALmSBjbQzfEY1E5NsCUBze
B1EKtq6XumwGRgBKD5WV\
\>"]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Vertex=\"\>", "\[InvisibleSpace]", "5461"}],
  SequenceForm["Number of Vertex=", 5461],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986677553858*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl3EMQIEuzBtB/bNu2bdu2bVt3bNu2bdu2bdsz70y8xYne1aIjqqM6K/NL
0LBdxbYB/ve//1WJ8r//BfIMTBCCEozghCAkoQhNGMISjvBEICKRiIyl/heV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalE5X/vkqpU
ozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSj
Oz3oSS9604f/6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0
pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2
s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5z
g5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvOD
n/ziN3/4y/9s/gAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQk
F7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQW
talDXepRnwY0pBGNaUJTmtGcFrSkFa1pw7+Pdjva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8L6D9T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+/Edf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+HfoD
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/P/wBCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/Yl8AAhKIwAQhKMEITghC
EorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKS
itSkIS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK
0pShLOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orW
tKEt7WhPBzrSic50oSvd6E4PetKL3vThP/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/vKv0B+AgAQiMEEISjCCE4KQhCI0YQhL
OMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs6
0pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznK
U4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rT
gY50ojNd6Eo3utODnvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOHv/y75AtAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz78R1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZ
wlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nC
VraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/5d8AcgIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/+oy/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhL/+aewIQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+N
fQEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y7+m3gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V9DfwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8m+YJwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+TfIF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//BviDUBAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/g3wByAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/8I7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf8E9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv9CuAAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlX2BfAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yL6wzAAH/5X8SmCAEJRjBCUFIQhGaMIQl
HOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd
6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzl
qUBFKlE5yv9nqValGv8HVvJgbA==
      "], {CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
       "], Null}, {
      FormatType -> TraditionalForm, GraphLayout -> 
       "SpringElectricalEmbedding", 
       ImageSize -> {381.93548387096774`, Automatic}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
2Kgpmv2ae4sBnsyUFDqxQQ8nbEuQORP8d5927SfmuVVH6cVbGhPxA4V6llEs
3NSPXVn/i4GcE1vbGEw2Vh8Z3XTdkAnZIidYaLKh4Rm3c96fCfvbsd1/CTzT
3se3MraYicrfmiIXIlmQP/m9n08M4HUqzi8i6qBqopgy08+Ey9olCYVEHVZL
VNV7KQDOf8Wq+yksqMi9a/XmBdxzBRLns1kgfTz7coRJ+EDqwQe2u1lw399h
+FeZmNenzQ6WhJ8of7lc8hIZEKUUJiwqyyFtB2u79sIy2Ns5Xm7/KYOX4xlT
LqLLEOst6GohIYOUcon3TUt1sI7vlK36Kzls5omajs7VwczTj78/B0pj4xC/
d8FpbWSesGsQ6pNBwM6Dgj+dtOH7jFWTGycN/sqlR8+56UARRSE7mmVxl6Hq
x5TUxl/nkKJNCQo40lig7u6gjbAk7fKyaTlYTJPDys01YfrLpDCOTwl0Jv9/
Ml80cNOiLWF0vSLGgiv+Gdtqwt5+X7tfliw0yG3yovXayLp8I1+tWAFhcR1+
WRwi/n3q3J9LctCSrvQw5NbBr8By5908cnhDnVNUzdTCtzzzvX7jWhi4dGHs
XqwaEu4zi58MaaHBKVumbFwVpvsU/fXmNVGvUjd7UEwVXmW2pZ0vNNFaulFC
o1YFH1rfBiut1YLGH+oWlwQVKIxvLzgQogH5OjbP3F5VPJ2v8bfK0kDrUIGf
sqIy3EQ/wqpEExPyjE2+G5Qx9iBCZc1TJZyPuTBruF0DYStcyf8MVcD9yhr2
oVrINs7Tqd+tjCQdmfPntbTw+L7p46xvyvh5XEnRWV0DNbuDTpYaqMLZ4FT6
ZcZS/Doo+zb3kjqiH0Ll9iF1mB/ofPGlVx35Zcbfu++qYpfH6vapJHV0Gg1m
krPUQPMZKjjxQg/OjQrlW0sVIK8rO5lwQw88wQ7b92YrwmT9U3oZrz60vOuv
brusCBmNulW/JA3w5sfHtQspSqhz9dkZzWuAqM1NhZY3FfCEX321P0Ufb8b2
3u85pABHtzsfdj7Xh9+W95197QpY8OH6sC9EH/5+8Uly9grw53PR6NtgiKcn
BB/G3ZJHxVCatoaIIeL9vUmNw/KQ7fs2udLTEM3ZHj2H1RWw2ThL6Vm3AVY+
nbXviJbHxLuKNfFLjJCdI80lUi8P8ZuZJucjDTGftvI9IXKRYVVQNCduhMKt
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
j4uHmtnw1Vqek1toAOv+Eoe339jIvMiZ3yVpgIqqkqPFZDxfdfy3oEAfmxVf
a1wKYENrYEM5hWoE3RcBj/6eYIPtspsmLGyEm58LwnmL2Tiu3mvTPmCA1r7f
M68KSXvZ92LkzhkgPjeG0slji8ept7USYg1w+4/aV15ZWxxzFRQ5EKWPayKR
Rz04bGFQu9425bIBFOsiXnNI2SJrvOTqW5o+firprVcUYsLTuvH8K10uUDbi
u9YVJigKkZWKMgsEbSTV6txOJpJWly9PM/xLyObSLnpVMdHVZpT3sX2ayGtR
trlmT+4jF/MjNpXOE9G3B98nbSTIefbvfvf5BaJl2YGdHUEERKM7zQVn/hJq
yQMhDsEEmv68Hbt9eo646PnykOZVAmhbYLtdGiOierUH2nMIPHGN9Nuwe4yI
X2HrJ5BPYKxFsW4keYrQEE78sjGR3IfUPz/Y+mSEuHs/oJq5jokmnu8t8we4
cGLuopXJHybQ8nR5y/wCwfnRZsXDLCaCnnhHf3X8jzg2csQx4x/p/+R74lTE
NFFoLKD6L4FAvaOZ910nDui9O5eBYdK/qpYjGQszhFaWcZPl5//5u99IUf8f
ceOH3+3uMdIf5lvxT9ZzxEDKyfIHyQTcHgkXndoxSRxRrD774D0BX67Cr1YJ
E0TM65JvrFukvKJGfXXaFBEiOntFrpiASnJ3YZ/LBGFZ++O0/1MCKa63o4sU
uVDHIxq2XhgYu1kfrZQwT8j3Wugqk/biPLcV2HNzonZkc+EFIYCjIFRLlXuO
mPqgJk+Mk/ENhZf7vF8g7K3jZX2MyPxk1q+x2zxL1PLJ6zeokPm1a67hODpP
qH39kqyylqSvfqNxuUwRfffC7y6K2CApPbuY9/EYkbTpjqRtkA18m+oq1n/o
I/4WXHdnmJL7/X+OT6u/jxBNrWy7bQEk/+z0Pt7+LuJjxf5NL0ptwFFFv1Gg
PUhcvx1wueGzDaI4ZfwtX3UTJZWyTZ8//Q8f2nz4PtdLJEuq51J/kfyrpl3D
r3oJJjO3yt6MPM/y05ami4NEQ9W2e7fI/T0qf9n6jZe6iJzeK5Xid0jaw2Lq
tXIPEZAhfybkkg0q327+S+HpJW44fglP4iL1eYzj+SpmCT2+Ev0DDiR/ukWw
YeMvomBrb3WfP+mfns72HtMBgik6HePtQ8p/k3orx+gl5O++POcwZgNoS7G9
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
pWriMH+mo8i5jw6dm0/PhKkKQ+eJ7bvmRDrCqUTlDnVh7Nu9XlD0JB0DiwJS
VxOFoMsSVAvRpENR1/i9RqMoYiNDdKkedHQ1mSvJj4kgRke/Yy8XGc8G0d6D
P8Rx+t29ZflsOtycipUf2ovi3VWl3HvOdLJfRLxiL+eHm8mfgSjSn9bvQyYr
pvnQvdk6Z/w/MyTNP1lQkhXFydfc1wNtyfOSe87vO8SHH7cgZfzEDCX7fZuI
IFFkLoYOXakzg6xGdVrKojCyl9leUSsk71ugu6rxB2Ecd9RSW5g3w1heY2C4
kBBC5wL/KDaS9XZ+7nLiqyCI353VB8pJfc+HVn8mBOH8Ns7iZBtpP9ZvJlZc
CFpu720dp8wgOshSP/uJHzWfzvFzD5qhNXF9Iu8DMj8H3tma/CPv66F7fWuS
hTExLPnBrt0MXTj8JMdJDIM9Stkp2nSIGvMJqT8XgOs091XNcUtQ/k62j1ZT
kbiGyvfS3grS/HalVyyoWFRz/xQgZ4VnF6/VreiiwiaH1zudZoWUlGiD9ZpU
RLz+UFnrb4UsupTdzlgqmiWn3Js7Sb5t3JbsfgpoJjss3kZY4ZJe2HLVy1SI
crZaub+zguG6Sw9/u1Hxe/xlWRKfFRItXz95/40KAa4baTNkvw75E/OA6wfp
z5SHR9FnS8TP67z2Jmh4+JvP79R2KyQs/1DJVUrFr3suy48GWaHYv110/39U
aH5Zbnj0lhUI46rNHfepiNn/lLPUywpvn5W6reamwT1lq1JKqhX4vxRdb0uk
wnT26vvYKStY8Wy+PxFEw0nPH+v++VujQ/PArJ42Dfs9Rp+/57fG8gMnj86F
0bAQa/DMysMazvYbt9So0CBrLW56mZwnK0T17eiZNOhHKHgcfW4Ft9W/13Sv
p6G8LCPgE+mvidruduO7NDg4BcU3fST7b/N6yikfGipnsnbMxlnD9JH6tVAB
GtJWdTwOumyNuIt7e/W+k/k1evVf8Qpr/MirUfLdSsM9IuCVBSn/V+ElwfWa
iqusMrqDnjU0K88sPa5KQ5OwmIhWgDX2+NzMm4mnYq/ycZ58QWtEaCr9KdSk
wSDy0ked7dYwPoQbS8up8O3TFJDPtAAv7SIlMICCU6WlH2PLLJBEi5jfHU5B
dltH2vlzFjAsenZSTIvMV1IoXfueBfbcN6967UbBmGvnkBBJG55PKKmNpuJi
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
zAd5OqHZFOxUjHf5P9PCI6vhVwUTFDpnTo2unaoFIfWhg0rkPg1x+Wr5ver4
67GNI03yp5iTHfbtjzr8prs+mu9PYf1DtwYjQQ0kLRoTjDtM/O6ZP1cEOtSx
IV981gWyfhH9oXHdWg3IyxRc1CX1LesNOt0/ro59El+4ueQ8D7VmRz1RDdTe
CtgqLUTm55x7C6NkNXB2rcgmfQ0KgYbpllOYmnAasBo5eZzCgvnGb5YbakDK
8CHNvEqhen5V8TVjDVhdWDwvporMt7cxN9ds1UDPw/qgX1403M9cTQ24qIu0
7ksF9D0armEPfXO36WLFNlfzLcQP3jp4r6Q5TBdvAqoHR1rJfErbtOroDl3I
bx2f0bWdxu/Bb9XHxHVxpPRPfCnhx4Tda6rn1eqgPflB2ZQiGgNSKd9OvNbB
VyfL8Z5LxM+6TV8m8EkHG5LmpPPJfF109kOu1hkdXBd5NVvzGJlXYT8l61br
YNY7hpAqwavlbpGnU7fooExfbuAq4ZOkD1phDa46ONn17rwiiXcqCzpCiTow
l7z5mXefxszhbr1Xu3Tgf5iyGCV89myJeGdToQ5KL9z/avyExuUoIf7yAh3U
HF39Ipjg7fFNB5lgI120p4pcv/ObwrtEff0lorp4NO95S6QuDRvFG4NxJN56
ax3eym000gbLW3Sm6GKNupAt+xmFRdkVn6ZPJf2+x2xcS4nGiqcC8jbeOlir
Ica6QfTKTtOp+nmeOrCZjJKX2Uz88e8aVVNaB3vzM1PUDtN4E9TZ6FxP8lf1
rLnlIA2HGbsC9wfqYuR2jvZqMr+nHPNJCbXUxd5Kbp3SOxrSfR/cnT10IdVq
aTdzDY2r6XpOsnt0Ifna5OGuuzQkIsRuDWjo4kr1vbL6szTiZSJ9I0g967oK
wnPI/SMepbJmkft633HZnPmQ6A/Jny+6wzWxZ7Z0nL02jVnCFyYYDDIPHgbs
0m0m+LH5tyn8kiaWWl1dPo/w1ff0G0Fp1ppYcyX0Z3Mu0Vd5t47ez9BCt+za
4hEyT3vLdsgfCNCCWIzRousV//++eiYr4akmHl24upFN5vORyD2pbv3En7xd
tfx/Pq6vME+rz9SCZVxUhtxWGotFjq7J4GrhuJvshkZSv1uvO6MmD2hBcSDL
pD6axqve415eu7XgledX/XeIwvjnT9k1RVqQU7o1MF2CJjxoZ5CoqoVNCqeb
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
1dwgdcvrMbDkGr10WIboCUbOq2+EN2aufNJZQfjghsCiiA9pwLH5z+ssCJ+P
8DuPa5G6jM4Uf/O6nI9IvaNV6kS3nfRStC66xkfv7q6yeA3CW4KLyjs2A2f/
zct5uwM4c8hQ5TKpR+EKly25zUB8Iqcp5QTQ8kt78ur/dZw+sKXhLrBf5uWZ
AZK/eM8fS65u5YNnL3j4ThNg9WmlX+85Ptz7P1zcSHhWMttj67NDfDQJ7rPS
EiV11yh++Z7oMbsU94JCgit2U9RQ43Fgwd3T7lHXgMFcO+EdZP9TtbbnLUm8
/tvKxFNIfqyHHwhHbuSjbEXqt/Nz+Hhz0PfxDsLLokc/6UmoEb3BtjZYQnTB
muiHvw4Y8HGZ+Wrhbks+1jXqrjaV5yM96Uq74ErC+33pS3+u4SOo9Fwi14Xo
zD/V5VpE36bmF/TIXAGK5gp6WJHPcdTalf+MAK5xv57E+fMhZLp+XQXJB2fZ
b+7tKD70egQnSxaROgS9WKbnBxz/OL7lvTdwb6XAsHMKcP9s18W31YC+86c8
1yf///tuE1eFf8QPtosukfkAbPtteLKM6O7J0DXvWKXk/r8uOo0WAJXdC/6d
ugHccVbpayX5RGzxzCSyZnSMlV8iOJDz3J69gOTDa7pZndNcPmIiV4hPjgJJ
bskRd8l/BedrXBQkOOMsv2oQv4QPsAQPzNhJ8LG4C8GkL2IiTq0848rH/k0p
eU1r+ZCO+LRRZQWNKbSKy+koDhYnxLun29Do7cozKDjMwWyFsmlL/p9n649N
jNZxEPRg6taWzTTeJIhQjiUczN1oKmBC+L8jM6Y284EJnjSt/OP3nkJs4HTe
w58mmCN391w8mVcBKlWVj3kcDAre3LN6Cg2JI/WhJww46BVsHT6yhvjN33Ul
YyEm8H9a9mI18bsni3r3W2eb4MjOAOmqZgryEbe4dXkm+BKsMy79gcw/7z7W
9W4THL6tpNhA/H2aervhvl0cGAnW9D1oojB1VbWQ/HkOkqVfV1XeoNBjo/TH
vogDi0NZzQ/HKEwIVa3484iDc1tPmVi6UKj4j6Lrjqf6e+PX3ntf69ozO+vi
8zYyioxURDIaKnxpSEuiREUqSslIKiSpVJLQ1jRaSFJGysje43d+fz6vc85z
nnWe5/3GdRUKRqfMmbA8cX7nLJm3qs5nFLtsmHg+dvbGV9Lf99Ja2zQCmeCu
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
D7KHU/o=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.5], Arrowheads[0.00692590432665045], 
         ArrowBox[CompressedData["
1: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
0n+t9NcyWBbLYfm/Vv5rBayIlbDyX/8Pa8W+Aw==
          "], 0.11338981485158617`]}, 
        {Hue[0.625, 0.5, 0.7], PointBox[CompressedData["
1:eJwl3FMQIDu3BtB/bNu2bdu2bVtnbNu2bdu2bdszd03dh1V5y0NXddKd7P0l
aNiuYtsA//vf/6pE+d///o0BCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZEz5
v6hEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOF
rGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUq/3um
VKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50
pRvd6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/r38AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWo
SS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGf4t3O9rTgY50ojNd6Eo3utOD
nvSiN334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzoz
mMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvY
yS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
fvOHv/zb+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jE
Jg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQm
D3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYO
dalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//
0Zd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCX
feznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd7
3OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38f
/QEISCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604f/6Es/+jOA
gQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CF
LGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc
4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzzi
MU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4y78f/gAEJBCB
CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlC
UYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJT
mtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYxmCEM
ZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85d9hXwACEojABCEowQhO
CEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4K
UpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglK
UorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rS
ita0oS3taE8HOtKJznShK93oTg960ove9OE/+tKP/gxgIIMYzBCGMozhjGAk
oxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8u+gPwABCURgghCUYAQnBCEJRWjC
EJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQ
lnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCW
cpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2
tKcDHelEZ7rQlW50pwc96UVv+vAffelHfwYwkEEMZghDGcZwRjCSUYxmDGMZ
x3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk1/85g9/+XfJF4CABCIwQQhKMIITgpCEIjRhCEs4whOB
iEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSi
M13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgk
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5z
hatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOF
r3zjOz/4yS9+84e//LvgD0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShE
JRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQl
G9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa
1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvxHX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b
3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/8
5Be/+cNf/hX3BCAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/6jL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZ
zGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv
/wr7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD//Rl370
ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxn
AQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXf0W9AQhI
IAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEK
U4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrT
hKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh//oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLv4L+AAQkEIEJQlCC
EZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKR
nBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGc
EpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwW
tKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pw3/0pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlXzNPAAISiMAEISjBCE4IQhKK
0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKU
oSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rSh
Le1oTwc60onOdKEr3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0Y
xjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrW
so71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO
93zgI5/4zBe+8o3v/OAnv/jNH/7yr5EvAAEJRGCCEJRgBCcEIQlFaMIQlnCE
JwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQn
AxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
FalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd
6URnutCVbnSnBz3pRW/68B996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYw
kUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCR
TWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU98
5gtf+cZ3fvCTX/zmD3/518QbgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIy
UYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZ
yEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWo
SjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehK
N7rTg570ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4Wp
TGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1s
Yzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zj
Oje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7
P/jJL37zh7/8a+APQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJ
QUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clB
TnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFN
alGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU96
0Zs+/Edf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxk
FrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQX
u9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3
ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5
w1/+hXcEICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c
4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7y
ko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepS
j/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f/qMv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//gnsC
EJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYP/9GXfvRnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/oV0BCEggAhOE
oAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4Sk
JCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIU
ozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOH/+hLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Mu/wL4ABCQQgQlCUIIRnBCE
JBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQk
FalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWt
aUNb2tGeDnSkE53pQle60Z0e9KQXvenDf/SlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje8
5R3v+cBHPvGZL3zlG9/5wU9+8Zs//OVfWGcAAhKIwAQhKMEITghCEorQhCEs
4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3p
SE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUo
TwUqUonKUf4/U/X/AGYyX5g=
          "]]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{381.93548387096774`, Automatic}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6981573292577677`*^9, 3.6981575443386173`*^9, 
  3.69815761745061*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
t6W1zgiyMekU2gbkf2ZzUCf3BrgNA28T3l3t3HD9fdN4yczKTkRRWskks0+K
LbH2bVOW7U0ZnEiH9rlFdl+x8mkW2WuGLZ20bE14nNjihgMS+7bs84kZII8v
mWK+XDcZm700cW4Em+IzbYAri7fVLA9Cn2N7QaMZ/uT6rXsVLpE1IYnFvd5Z
1cNQP+yzRRuqOybOm7hWgLynrP00Q6YeeR1OEfVFfgkaQnItbcxfT1p4l8PQ
6OIcA904a9InVtZi+6TXUMSQeCLNVDL4ks5V8J5ko9Z7tbx76OSV9ycPn28K
TOq5uDmoS9umGnqVNZMTicaJqx+JBW/IN7dOWDOGx8HioAtnNbx/uM6rldGu
mawnZSsD1/z6XYWSSsLf/+fk+evMT5/z5MmzWxYeDfjJHSuflhvrvDVMmzff
WelcJXoSL01dZdBWtC218+EX1nlYSqL9mN1VaUTpSJNtUOnIGvect2/dfRAZ
l9/N4DUBctJyvpC47TmhlkIpjhE/nTpy7am5tsmez1HKNQvPBpzs1yfOXjth
6VWtACEqI4SyIqOxS8uwVcZks3Suvk3P7rOyjaCLbQBm7NgQWBwi2bwvhvae
MFCs+jMBmDw3VfMeHHcJBjadtvJtOGPuXslF+KaNX9uN90zj3ps8dJ45hgZj
K5yzJASw/ev+8WOx0Tmd9MrzCrzjG4o9Yuv+uP/oxacSKOGW4gW7jIRQO5QF
WqDty1+1C+wA5h8y9cwbsAuu0diHVo46hbZwMon66X/QG1FFE+Qzvy7qi2ub
/Nu1IapoYremlA7Ubw6tcCps2M389OrIjCHwy7hbROeO3Op92u7/oZWuhRe+
sssaMfcqhAhzapxd7JAtiwF1Lw00diHloyuds+3Km8edCxp2U+Iawh0fNPPK
67QKKN5c0bIXSJMb0hmBfa9t8CGK/9lqp/oZ2Qwpt+Na07H/rrl7PVlqacl/
ceHqbT2bWcz0NviYYi61UQZvn13v05AQld1JHBb2GWDrEfdI2Yv+5YUrtwfM
vfKzJHAFo8CUG6Rl12q33DDJRfu59BVcBoyDU/UFJvRftvEjl3wgYa4Br5hO
GvaSJHiDTysWn/ETnEGsxDd9Y8f+e/rYRXbTuJCEUjQR8QXdGVt3NE3aB2ug
zs+s96mftA+SXns0H9sU0JTjn6QBw9z546qYh1/Z5GtbwYeSWYBl0qVKZzOV
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
NiLw6O3gjErBcaXyBaUoFWoBCE60FEBHkoPJcMTc/ponVNGyFKxM3itR69aT
kjdnplaUItJSK1IRuVJPG71XavHX8NDUVkJqDXcHRm3w80BGAb0AUT+cMUNQ
diMyAEu7Z2XzIUxjfzRaxzA+GOZXzDSDTvxpSM2BMWE5VsbThU/o0Hos9cya
8MtpyKsyQiq90UsjzWOWFPib7yVhecOKfXDZnDWp+x4qklSaHcDZ9mRoF1IJ
ZkZ8ksavUBqU0qTYfhke9SLXxkx8G69CMpA2A/GR8I5URxQug/dRX62CW2g5
dyVglLWj1IgqtmCEJ/i0EFCrB3iBBv7ULN7QBqniBCaYjUM5UfLvH43wK/1K
TfVBBySwa46OgFJlWnbmX50COv8KFMaf6y2TRzg/ZvKoj/i/a0rk6vLuMwLd
Ln44feOBT3w27BoelAxmUPB0PecKOXzOZdmS5PplK1K3MrH54bXx4ZoCdpol
/NTGZYwwAl8tcT22CrBdvSjfQ0nfTx0kSr7Wx84sJbL8w2YJqwcF+19dJ69K
eIKFIH334PFrsAHoBX9dJftA4ENGSUFuHdg7X+Sv4XhiVaGrSAuQCEECUXIh
5jne3Is97O/geEvRciW8HqUSlQs1q6Th6Jjy5i7QXcHN7PSPq8NViemQjX/q
SyR1JqSRjiv9W+k2ch+UOtMyPUqdUR/3zvDlWwFb7S0TTGaO03LFX8VN09vv
jvAthsJNT8jcj09gjYjsCrXPyPW5LTOyK9vBWINQ55fHz17Dew6ELBaC9nio
T/F3vxq86KmpvvratFu5U6GYJMCKllz5nxlkBQQaXP2rVtMPrUDnsQ1eKm5r
pFlf9MiLWF19bcisLP7dyIn/vsMwY8qpgnnDWRKQgadWOeQZ0DLnsSgaXSGU
DmT334+c+kxqs56EEiZbiIT9fx44fhmyJ4aoyt116N115RoPoixl7TX6wruj
g8rPqro5Jot/M4bm7jqDOEQKyXCSQLMJKXjEmCOlOnhGnPieg4VXztr0nKp9
CdEJlUKn/dAKY/cO8d8UuqmwFV6DdBpeJEglMl5YddRjlyzd0rAvUppkKNwy
7wV5p8aFFXTXWlZMqNSEffwHBIt7WTKBJfqKbw73yxdjK+1pnVe4WLlqMBvz
i15KX5fZgaPaEba0ef9g/00ETrQ3mqAPGBYRPeO/7TwqMnDdim5yZ/tCrrlh
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
kqfWtHi3yPTyzkdMBbTMXb1DDYbh0ktSScknkx1LaUis3cyypqNfjAwQU8Hh
CZDGQ3lJWn+NNo86EtQl//mLiRFy6h0DxPJmpSGGAkEhmCbifLC9/eT0nKp2
ZBVhc0kxcKZw+rzGL2TbXor2aOC1lLr+dsWRvHBjE/QMJgMmRidU/qbz6KUN
S5O3+2WU7cX51AF8On5TqS8NxKaEW8v8qCHE9q/2KW7osiaTdaNm/njPgUt/
2dV5BhxttrjSlQjRdGyHC816Ev/JemwvCk/JyFAMpils1VCowdstf4KN6TP5
qYiokKskRWiLyG98UUMnKrkovym0NO7ZfjYRs7aOCEneGRhXw3Xtt5RYMDaR
uxVUJqUkae2ChFYc0p2Bi2qhzQ4GxjXm+y8p+u3+YxfNW3uTuxn9VKNjpVnS
YYcPNetbY4NNNAtSiXaSdNuualTyyOZwC3RlQgSfM+NSELm6pmpqdDbrYvS4
PkFyGYN3KGhLyR5EdKjXCJWqMrV8KIO9P53D52xuEf0UOTk1oMrKzsqsNC73
48tffCVmRCvKchzLswqTQTulMH/EAsPlX1PkyqsmFBVT7q44ZgWLknaSMVVj
1yh22xa1shkgTrAxrIrPaF28Ia+tJXgJmCVFo73K7NnBT5/KbaAiNYk5rxWZ
rvM/W6GBWbRQD6G1ArBmtw+3t58SW2HLFpvWRT4hApS6iVEZ+CoE1ILebmxI
0Tt7D5231HhPCBBwjMAzFvoszA9OLmqFRdEbdF7gU2ns1abSOfGNUL3TDOV0
a0yQVMeTI2tPqdl5plFRZSaZuzWnlDxkosNp1vhUXXm2X7QjSu+OtdqDzk2a
XV42PTZnV8DCatK8GBP3eIhPIWnfIz4x1UiWqTMLZkXz8CjbAlEiOhS8JlvI
A6kua0am5I8RSZcddqsQZeCfe8IgCFhuaK2ceWsbGBqQp4/wFoZnNUuFypRr
NVIXh9fcLZFC9wSwRMql64X3yYmG8mbRNYhUMdc4zw2Rh4BcZRJfzuDNNbXK
VWpJCXULGu2veg1yNq606QCTdOeEnvzba1lBy4rePnj8ir/xdfDt0kJXlCBG
R+ICn9kRuXxrUcSq6o+MU4HSEphNDB8t0/ABC3h9mLC5+Pd1wbBuNWPcmmxh
8Kgdlhcnnt2kpvK/1gREOyqdWIM8+WB4hmINFQQDO+eu2WlpS9cW30UVJTMX
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
ifgN0fhjBrul969bvmV70pz4Cri8ipLWrumIIZLklUpzHg62tad+CRSbQLlV
OjM2972dHaepk4nsk3z7y9Jr5OVtGiViBRJfjQwo/vbdiZtujwoQ7gfMqNVX
HFBRtWRjW6NXZFqhz8I8N926PRlljoMUm2X4bhlFsxbkceoo1ShiT5uggfzi
NNkVCaMHUitxuIyPSlcwoLx2/rodHpZrh/kLzO52c1nA3gEXbs/QgM2/239U
ZHI4ooB1v0OaXr9+U2TQMCzwMYNtzk4qFKhkJaOX6Zjb5FwCCFy4Kn3OMsPl
3346I4vG9Oolkm59SjQwSfz3R648X7OvGt0IiubCBj6VHR/cCTw5M6aGn5bU
BUlbMf8jPCl/BzzQ82NCCrnNQ2RsYgHlQ/exLy0MSUHkqhoaj4vN9c0ob2eB
WrdgUzngvzxx7urEooZOhhr2mFnadIS7ABpLdk9rd7kYIt7lsZSzC+QhqoTG
au0OXSo6iNbOX1/d6BWRhjCB8vv2pxPAPiXGl/82NenMJ94pn02T9C7kVMoW
2u44pZEWkMAJioAnK5sRmwtubyXKKBlNMH5lht+Dhi6emDanAgsxompbV83E
uZmiUK7yZlhzJAHQy29Jj2tpVHwDtW5Y69DXu7bFZA629wRxOXyi2sHocFh+
YHn5/9fal8dVdWXp+qI4a1JJqlLdVb/qft39ql93/6pfddeYSlVSlZihKpOz
gIgjKIpwmQfBCUVkEAWUGWWeZJ5lUFEEQRHjPM+zxhhj4oD6zrf3Xuesc7jm
/fP+SITLveees/faa/jWWt9avLo0R3PCrN0ZDI0jdKV+bepeXV1J0nDVdDyg
p4lWDIfkw47es+qYWZ3QroUrq40u55H3tAhmZUL+TjpSUBkXZgdXwT89Mze0
Kk+L3A0EbSQiHGpip3ZEyOXBQOnzIR1o+GKvvKjvCrobZRo4PmJelmtIdvWC
FUU9E73TQaVHypuZUL2zSGHtdjqVBnydsSSyrR7vAjD8ds+h84iqtZO7Wwti
6lCZbQwAFSTgYjKSpmp+fu7SrW8/XSAahK/NCqo+Ab/MhJwONs1/khwSI3SZ
0u7mG03/4+MA1EDHjfXLTs7XJ2kAbUxdmlgjnAQly5gOjhI4HjaZzJb87CsQ
/5MfzEuMj0xvwqSN7OC4CkHow/x/9B2N23vwwkV32Srx5dzg+tyg+CoD0RCV
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
RZtWbKpXkQ/CXZyabr+o5syQ+Co1VwwqC94UundhDLxzKrua5oTlIjdNs55v
Kx5DPcKQ2/5jfPaaUnFGRGQYBE0B1CStz9lDDykwBBW0EXwNAiW0O4blVR3g
kRT2WZ6Jn+YExlZQ2Tt5d10sC4mFouP0lSadl5x8i6Hv0Bi/b4J3akps1s5v
/2tC5LW3XGKFtn9u5R71sWP4BUIIi4pKDFTsAJyPW5PepGCJ7TNDcp7qwKHc
3VukSdUoXWxJ6ZqU3TgToOe+rGhHqGuYJvAhw8PxnKcDASyHfgsZDaO1Mzub
n3JH6nWr2QKHEM9z0RGAstZxUAuQwMk41DEQjMAslDBR5jjJgNYysURyXvia
0mc/1NNn2ufuOPuWwQJvWp5URyvDAwG0COEWK6NlmRLglGtTvAvE6rIEPEVn
ez2WVzZ7RVbFbizorHNfXoiDAhHGGAJKNuj1E8r2dU+2pSWsTK7HIKdp7T3n
2d+GTWrcdRSNBYSovt39xXlnLXhmNnDIocC1pul9xJUNpgXl9CpUbbiJZVFb
hi/nSXpcVEo/1mfqOdDe0oq8MMhQk4mn7Np3MTS9rJNZilesPJv4nXtl01u7
zt4eNyf52p9mxH/tLAMa4F3f/dFlo2925V6lQmTLmPWgjHgy3Z9xv9hqiAoo
NiqjKdc/upwF96JLArm1S44+ghn06YukWFXCUqPOjJY9Z/sm2tKfGQTWmAF6
h/emKGJNXHEYieu3jrZKyIwWmVQ+tWQYqJxSBAMmSMrcDzrYAsqSuVUcLxyK
w/u5q0ys1YqLFhAPp3EEC95jVjlDhBxqYSlqIQYiTFA995fZ6//tzPmbtQuW
F7GCYz0+yA2IKa9xX15Aw6nf7eo7i+ww5y4jW9svoEus11CygudVJxO8T6My
4nXOJ1CkRauoWCUmbn5EgemI6hktjBCFtFvkoPmo/KojMHkXZwdXvWiQkcqC
Y8gi51a+OC+0NiW16ABpCeX8fOviX5MQmdZUkJBtGp5DhcjqG2gDxLVlVm00
h/+pQQXvgdE85B5WCdtBRJlAgNXRPmmTfCNYJgb6ihIUzdCxduKxl+eFCC9M
8hjINkFsyPagGOGJgycEdWeABuHhFvhGl8EFVaXXuQGxFTXzVxSCpqlv/tIq
LMfpeUuqcaiwqqrKBVH4LcVDgfqYhx/N24wbuz3Vu+SNW3fuG+ZWksVI5Ggk
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
Wez9knpzMGl48fds9vfG/78/D/of/xe9KTdG\
\>"]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Vertex=\"\>", "\[InvisibleSpace]", "5461"}],
  SequenceForm["Number of Vertex=", 5461],
  Editable->False]], "Print",
 CellChangeTimes->{3.6981573292577677`*^9, 3.6981575456895137`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Number", " ", "of", " ", "nodes", " ", "on", " ", "IBP", " ", "tree"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NumberOfIBPVertex", "[", 
      RowBox[{"numberOfAtoms_", ",", "numberOfSlices_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "numberOfSlices"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"numberOfAtoms", "-", "2"}], ")"}]}], "-", "1"}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "numberOfSlices"}], ")"}], "-", "1"}], ")"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"NumberOfIBPVertex", "[", 
    RowBox[{"9", ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6978228548611045`*^9, 3.697822917604511*^9}, {
  3.6978229575375485`*^9, 3.6978231634677305`*^9}, {3.6978236566561227`*^9, 
  3.697823659776985*^9}}],

Cell[BoxData["127"], "Output",
 CellChangeTimes->{3.700986677669463*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NumberOfIBPVertex", "[", 
        RowBox[{"9", ",", "i"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Number of Vertex on IBP Tree\>\""}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.697823173590905*^9, 3.6978232361668634`*^9}, {
  3.697823267024607*^9, 3.6978232863122206`*^9}, {3.697823356320365*^9, 
  3.6978234212662773`*^9}, {3.697823707493438*^9, 3.697823746026819*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 4.844187086458591}, {2., 8.605387202152153}, {3., 
      10.93287479991082}, {4., 12.610180165866266`}, {5., 
      13.920870973622096`}, {6., 14.996451247809466`}, {7., 
      15.908451940358823`}, {8., 16.700070850850967`}, {9., 
      17.399388959583536`}, {10., 18.025686934930246`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.887465323263068},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.611537753638338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.89921982609012, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.304684934198283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.458835614025542`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.592367006650065`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.710150042306449`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.508657738524219`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.914122846632385`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.201804919084164`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.424948470398375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.60727002719233, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.761420707019587`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.89495209964411, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.012735135300492`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.811242831518264`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.216707939626428`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.50439001207821, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.72753356339242, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {17.909855120186375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.064005800013632`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.197537192638155`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.31532022829454, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.11382792451231, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.519293032620475`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {19.806975105072254`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.030118656386467`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.21244021318042, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.36659089300768, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Number of Vertex on IBP Tree\"", TraditionalForm],
  PlotRange->{{0, 10.}, {4.111881539321277, 18.025686934930246`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{6.907755278982137, 
      FormBox["1000", TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {9.210340371976184, 
      FormBox[
       TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {16.11809565095832, 
      FormBox[
       TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {4.605170185988092, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.298317366548036, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.703782474656201, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {5.991464547107982, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.214608098422191, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.396929655216146, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.551080335043404, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.684611727667927, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.802394763324311, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {7.600902459542082, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.006367567650246, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.294049640102028, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.517193191416238, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.699514748210191, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.85366542803745, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {8.987196820661973, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.104979856318357, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.903487552536127, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.308952660644293`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.596634733096073`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {10.819778284410283`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.002099841204238`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.156250521031495`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.289781913656018`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.407564949312402`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.206072645530174`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.611537753638338`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {12.89921982609012, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.122363377404328`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.304684934198283`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.458835614025542`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.592367006650065`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {13.710150042306449`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {14.508657738524219`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {14.914122846632385`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.201804919084164`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.424948470398375`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.60727002719233, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.761420707019587`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {15.89495209964411, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.012735135300492`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.811242831518264`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.216707939626428`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.50439001207821, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.72753356339242, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {17.909855120186375`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.064005800013632`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.197537192638155`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.31532022829454, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.11382792451231, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.519293032620475`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {19.806975105072254`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.030118656386467`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.21244021318042, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.36659089300768, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{3.7009866778278513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Top", " ", "1"}], ":", " ", 
    RowBox[{
    "Sunway", " ", "TaihuLight", " ", "at", " ", "93", " ", "petaflops", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "^", "15"}], " ", "flops"}], ")"}], " ", "on", " ", 
     "November", " ", "2016"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"NumberOfIBPVertex", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"365", "*", "24", "*", "3600", "*", 
            RowBox[{"(", 
             RowBox[{"93", "*", 
              RowBox[{"10", "^", "15"}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "40"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"xy", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Time to compute IBP tree on 93 petaflops\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Number of Atoms\>\"", ",", "\"\<Years\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697823996331522*^9, 3.697824013870758*^9}, {
  3.69782413901967*^9, 3.6978242355134754`*^9}, {3.697824272133033*^9, 
  3.6978242812725134`*^9}, {3.6978243603271613`*^9, 3.6978243609971724`*^9}, {
  3.697824393211303*^9, 3.6978244203256054`*^9}, {3.697824458619769*^9, 
  3.697824517973592*^9}, {3.6978245542102156`*^9, 3.697824700730853*^9}, {
  3.698157868126751*^9, 3.698157870975642*^9}, {3.6981579468509655`*^9, 
  3.6981579486031284`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQEcDtlz4mRdtH0OQPgCDlZnNpeyCnlD+SIOeWG/
wsTYvKB8CQced0flzb89oHwZh9WdfP8bPrpD+QoOny5J/g557gblKzl4i6jt
1rzrCuWrOLREbpr875ILlK/mcHaeX/7lE85QvoaD6BMf7xX7nKB8LYe4zHD1
2i2OUL6Ow/KyZOagVQ5Qvp7Dg8z7+3wd7KF8A4eNn76Xfde2hfINHbhrBfQX
iltD+UYOU9k1n3sxW0L5xg5qkxznf3lnBuWbOOyQiQqfd8sEyjd18FxexO9x
zAjKN3O4bdh9/ONGAyjf3OFmhft/M2tdKN/C4U9vRX6XkCaUb+kgv3jl/bsv
VaB8KwenHbf8DQ8qQPnWDqdmiTdwGkpC+TYOAkcrEzbcF4DybR3W3dveuE6G
Ecq3c+g+xzNfoH7dfgjf3sGyYv+frRoMDhC+g8O1iX9lt6QKQPgNDg4T0mfb
8m6XgMo7OiydN0fPuEUBKu/o0NSZve/+GhWovJNDfImVX89VDai8k4N1POc9
i386UHlnBx7VN9uKJhtA5Z0dqmdd/ndiuRFU3sXhJf9uN/k9Jg4Aff+mvg==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Atoms\"", TraditionalForm], 
    FormBox["\"Years\"", TraditionalForm]},
  AxesOrigin->{0, -61.93201471186605},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{-55.262042231857095`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "24"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-52.95945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-50.65687204586901, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-48.35428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-43.74911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-41.44653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-39.14394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Time to compute IBP tree on 93 petaflops\"", TraditionalForm],
  PlotRange->{{0, 40.}, {-60.619842220592936`, 20.734852238339872`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, {{-55.262042231857095`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "24"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm], {0.01, 0.}, {
       AbsoluteThickness[0.1]}}, {-52.95945713886305, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-50.65687204586901, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-48.35428695287496, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-43.74911676688687, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-41.44653167389282, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-39.14394658089878, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-20.72326583694641, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-16.11809565095832, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-6.907755278982137, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-4.605170185988091, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {0., 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {2.302585092994046, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {4.605170185988092, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {6.907755278982137, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {9.210340371976184, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {11.512925464970229`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {16.11809565095832, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {18.420680743952367`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {20.72326583694641, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}, {23.025850929940457`, 
      FormBox[
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
       AbsoluteThickness[0.1]}}}}]], "Output",
 CellChangeTimes->{3.700986677985332*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4) Solving Manually", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["Solving Manually: Continuos Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
  3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
  3.696000958663651*^9}, {3.69827002677421*^9, 3.698270028592888*^9}}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766607424917`*^9, 3.698276672021037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGByHandGetX", ",", "DGByHandErrorMatrix"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandGetX", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"d", "=", "1.526"}], ",", 
        RowBox[{"\[Phi]", "=", "1.91"}], ",", "a", ",", "b", ",", "c", ",", 
        "i", ",", "p", ",", "u", ",", "v", ",", "x"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "\[Theta]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "d"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", 
            RowBox[{"d", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", ",", "0"}], "}"}]}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dihedral", " ", "rotation", " ", "axis"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"u", "=", 
           RowBox[{"Normalize", "[", 
            RowBox[{"b", "-", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", " ", 
           RowBox[{"c", "+", 
            RowBox[{"d", "*", " ", "u"}]}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"b", "-", "c"}], ",", 
             RowBox[{"a", "-", "c"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{"\[Phi]", ",", "v", ",", "c"}], "]"}], "[", "p", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"dihedral", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", "c"}], "]"}], 
            "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "p"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandErrorMatrix", "[", 
     RowBox[{"G_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "edges", ",", "M", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "-", "dij"}], 
              ")"}], "/", "dij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "9"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGByHandGetX", "[", "\[Omega]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"DGProblem", "[", "x", "]"}], "[", "\"\<G\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xrange", ",", "yrange", ",", "zrange"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RotationAction", "\[Rule]", "\"\<Clip\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Mean(error):\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"DGByHandErrorMatrix", "[", 
                RowBox[{"G", ",", 
                 RowBox[{"DGByHandGetX", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", 
                    "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", ",", 
                    "\[Omega]8", ",", "\[Omega]9"}], "}"}], "]"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"BoxStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"DGByHandErrorMatrix", "[", 
          RowBox[{"G", ",", 
           RowBox[{"DGByHandGetX", "[", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", ",",
               "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
              "\[Omega]9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Torsion", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Torsion Angles\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]4", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]5", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]6", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]7", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]8", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]9", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Bounding", " ", "boxes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Bounding Limits\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"OpenerView", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Solution\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]4  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]5  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]6  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]7  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "7", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]8  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]9  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "9", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, 3.698072481114099*^9, {
   3.69827040072288*^9, 3.6982704392809677`*^9}, {3.6982704767129464`*^9, 
   3.698270486055981*^9}, {3.69827075311152*^9, 3.6982707839129333`*^9}, {
   3.6982708784692116`*^9, 3.6982710009520674`*^9}, {3.6982715503151693`*^9, 
   3.6982715571021194`*^9}, {3.698272298434101*^9, 3.6982723177884903`*^9}, {
   3.6982723607627*^9, 3.69827240129832*^9}, {3.6982724730876207`*^9, 
   3.6982724852625875`*^9}, {3.6982730960285783`*^9, 
   3.6982731030891294`*^9}, {3.6982731437015963`*^9, 3.698273157638199*^9}, {
   3.6982732033569045`*^9, 3.698273255405436*^9}, {3.698273380784088*^9, 
   3.6982733865643682`*^9}, {3.6982736799909735`*^9, 
   3.6982737316605234`*^9}, {3.698273897730236*^9, 3.6982739858410864`*^9}, {
   3.698274019835471*^9, 3.6982740332992177`*^9}, {3.698274112747086*^9, 
   3.698274124762021*^9}, {3.6982742677501135`*^9, 3.698274306521473*^9}, {
   3.698274498396601*^9, 3.6982745027545166`*^9}, {3.698274571764159*^9, 
   3.6982745897139077`*^9}, {3.6982746688748364`*^9, 3.698274741074173*^9}, {
   3.6982747716472054`*^9, 3.6982747847418785`*^9}, {3.6982748189324727`*^9, 
   3.6982748841478977`*^9}, {3.698274926542649*^9, 3.698274949153207*^9}, {
   3.698275160206649*^9, 3.698275187277109*^9}, {3.6982752501926146`*^9, 
   3.698275267361329*^9}, {3.698275308349368*^9, 3.6982753398186407`*^9}, {
   3.6982760798753653`*^9, 3.6982761022060823`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2167117464549246`", ",", 
   RowBox[{"-", "2.7585154595703383`"}], ",", "1.4209163412999697`", ",", 
   RowBox[{"-", "1.8444268622558457`"}], ",", "1.4771003768150948`", ",", 
   RowBox[{"-", "0.06602256412040575`"}], ",", "1.4018204803085386`", ",", 
   "2.4862164532997095`", ",", 
   RowBox[{"-", "0.7328125168090178`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700986678059055*^9, 3.7009869688897357`*^9}],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`xrange$$ = {-3, 
     3}, $CellContext`yrange$$ = {-3, 3}, $CellContext`zrange$$ = {-3, 
     3}, $CellContext`\[Omega]4$$ = 
     1.0492919462989911`, $CellContext`\[Omega]5$$ = -2.0483184101405447`, \
$CellContext`\[Omega]6$$ = 0.38955748904513454`, $CellContext`\[Omega]7$$ = 
     0.9299114254625789, $CellContext`\[Omega]8$$ = -1.715309588860027, \
$CellContext`\[Omega]9$$ = -2.8902652413026093`, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["Torsion Angles", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`\[Omega]4$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]5$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]6$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]7$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]8$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]9$$], 0}, -Pi, Pi}, {
       Hold[
        Style["Bounding Limits", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`xrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`yrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`zrange$$], {-3, 3}}, -10, 10}, {
       Hold[
        OpenerView[{
          Style["Solution", Bold, Medium], 
          Column[{
            Row[{"\[Omega]4  ", 
              Slider[-1.8444268622558457`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]5  ", 
              Slider[1.4771003768150948`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]6  ", 
              Slider[-0.06602256412040575, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]7  ", 
              Slider[1.4018204803085386`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]8  ", 
              Slider[2.4862164532997095`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]9  ", 
              Slider[-0.7328125168090178, {-Pi, Pi}, Enabled -> False]}]}]}]],
        Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     569., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`\[Omega]4$189990$$ = 
     0, $CellContext`\[Omega]5$189991$$ = 0, $CellContext`\[Omega]6$189992$$ =
      0, $CellContext`\[Omega]7$189993$$ = 
     0, $CellContext`\[Omega]8$189994$$ = 0, $CellContext`\[Omega]9$189995$$ =
      0, $CellContext`xrange$189996$$ = 0, $CellContext`yrange$189997$$ = 
     0, $CellContext`zrange$189998$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      3, StandardForm, 
       "Variables" :> {$CellContext`xrange$$ = {-3, 
          3}, $CellContext`yrange$$ = {-3, 3}, $CellContext`zrange$$ = {-3, 
          3}, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
         0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
         0, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[Omega]4$$, $CellContext`\[Omega]4$189990$$, 0], 
         Hold[$CellContext`\[Omega]5$$, $CellContext`\[Omega]5$189991$$, 0], 
         Hold[$CellContext`\[Omega]6$$, $CellContext`\[Omega]6$189992$$, 0], 
         Hold[$CellContext`\[Omega]7$$, $CellContext`\[Omega]7$189993$$, 0], 
         Hold[$CellContext`\[Omega]8$$, $CellContext`\[Omega]8$189994$$, 0], 
         Hold[$CellContext`\[Omega]9$$, $CellContext`\[Omega]9$189995$$, 0], 
         Hold[$CellContext`xrange$$, $CellContext`xrange$189996$$, 0], 
         Hold[$CellContext`yrange$$, $CellContext`yrange$189997$$, 0], 
         Hold[$CellContext`zrange$$, $CellContext`zrange$189998$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
         Graphics3D[{{Red, 
            Tube[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}, {
            PointSize[Large], Blue, 
            Point[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}}, 
          PlotRange -> {$CellContext`xrange$$, $CellContext`yrange$$, \
$CellContext`zrange$$}, RotationAction -> "Clip", Axes -> True, 
          AxesLabel -> {"x", "y", "z"}, PlotLabel -> {"Mean(error):", 
            NumberForm[
             Max[
              $CellContext`DGByHandErrorMatrix[$CellContext`G, 
               $CellContext`DGByHandGetX[{
                0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]], {3, 2}]}, BoxStyle -> Directive[Dashed], 
          ImageSize -> Medium], 
         MatrixPlot[
          $CellContext`DGByHandErrorMatrix[$CellContext`G, 
           $CellContext`DGByHandGetX[{
            0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]], ColorFunction -> (ColorData["TemperatureMap"][
            Rescale[#, {0, 1}]]& ), ColorFunctionScaling -> False]}, 
       "Specifications" :> {
         Style[
         "Torsion Angles", Bold, Medium], {{$CellContext`\[Omega]4$$, 0}, -Pi,
           Pi}, {{$CellContext`\[Omega]5$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]6$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]7$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]8$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]9$$, 0}, -Pi, Pi}, 
         Style[
         "Bounding Limits", Bold, 
          Medium], {{$CellContext`xrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`yrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`zrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 0.1}, 
         OpenerView[{
           Style["Solution", Bold, Medium], 
           Column[{
             Row[{"\[Omega]4  ", 
               Slider[-1.8444268622558457`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]5  ", 
               Slider[1.4771003768150948`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]6  ", 
               Slider[-0.06602256412040575, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]7  ", 
               Slider[1.4018204803085386`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]8  ", 
               Slider[2.4862164532997095`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]9  ", 
               
               Slider[-0.7328125168090178, {-Pi, Pi}, Enabled -> 
                False]}]}]}]}, "Options" :> {ControlPlacement -> Left}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{877., {228., 235.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.700986678059055*^9, 3.70098696932056*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Manually: Discrete Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
   3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
   3.6960009726613865`*^9}, 3.6969455372420783`*^9}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766832687664`*^9, 3.6982766889084167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGByHandTreeFromBranches", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandTreeFromBranches", "[", 
     RowBox[{"G_", ",", "branch_", ",", "branches_", ",", "check_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "T", ",", "X", ",", "k", ",", "i", ",", "n", ",", "b", ",", "x", ",", 
        "y", ",", "z", ",", "dx", ",", "dy", ",", "dz", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"v", "=", 
         RowBox[{"{", "}"}]}], ",", "styVertex", ",", 
        RowBox[{"styEdges", "=", 
         RowBox[{"{", "}"}]}], ",", "m", ",", "color", ",", "valid", ",", 
        "nodes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"DGNaturalOrdering", "[", "G", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"VertexList", "[", "G", "]"}], "]"}], "-", "3"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"creating", " ", "edges"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{"2", "k"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{
              RowBox[{"2", "k"}], "+", "1"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"highlighting", " ", "current", " ", "branch"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "0"}], ",", 
         RowBox[{"k", "\[LessEqual]", "n"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"v", ",", 
            RowBox[{"FromDigits", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "k"}], "]"}], "]"}]}], "]"}], ",", "2"}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"styEdges", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"coloring", " ", "visited", " ", "nodes", " ", 
         RowBox[{"(", "branches", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"styVertex", "=", 
        RowBox[{"{", "LightGray", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "branches", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "branches", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"X", "=", 
              RowBox[{"DGBPXinit", "[", 
               RowBox[{"G", ",", 
                RowBox[{"nodes", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"b", "=", 
              RowBox[{"branches", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"check", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"checking", " ", "partial", " ", "solutions"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"valid", "&&", 
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], "<", "0.001"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"valid", " ", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Red"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "checking", " ", "only", " ", "final", " ", "solution"}], " ",
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], ">", "0.001"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{"valid", ",", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    RowBox[{"color", "=", "Red"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "b"}], "]"}], ",", "2"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ","}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"T", "=", 
        RowBox[{"TreeGraph", "[", "\[IndentingNewLine]", 
         RowBox[{"edges", ",", "\[IndentingNewLine]", 
          RowBox[{"VertexStyle", "\[Rule]", "styVertex"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"EdgeStyle", "\[Rule]", "styEdges"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GraphLayout", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<LayeredEmbedding\>\"", ",", 
             RowBox[{"LayerSizeFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"8", "&"}], ")"}]}]}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"9", ",", "0.0", ",", "5.0"}], "]"}], "[", "\"\<G\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", "G", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"branches", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"{", "}"}]}], ",", "node", ",", 
     RowBox[{"X", "=", 
      RowBox[{"DGBPXinit", "[", 
       RowBox[{"G", ",", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DGByHandTreeFromBranches", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}], ",", "branches", ",",
           "BP"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DGPlotAdjacencyMatrix", "[", 
            RowBox[{"G", ",", "Sym"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Tube", "[", "X", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
                RowBox[{"Point", "[", "X", "]"}]}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"s", ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\[Omega]4\>\"", ",", "\"\<\[Omega]5\>\"", ",", 
                  "\"\<\[Omega]6\>\"", ",", "\"\<\[Omega]7\>\"", ",", 
                  "\"\<\[Omega]8\>\"", ",", "\"\<\[Omega]9\>\""}], "}"}]}], 
               "}"}]}]}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Branches", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Branches\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]5", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]6", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]7", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]8", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]9", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Try\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"node", "=", "1"}], ",", 
           RowBox[{"node", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"node", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"node", "+", "3"}], "]"}], "]"}], "=", 
             RowBox[{"DGBPGetX", "[", 
              RowBox[{"G", ",", "X", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "node", "]"}], "]"}], ",", "nodes", ",", 
               RowBox[{"node", "+", "3"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"branches", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7",
              ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Options\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"BP", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sym", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"show", " ", "solutions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Solutions\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Show\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"DGBPSolver", "[", 
             RowBox[{"G", ",", "nodes"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Branches\>\"", "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"branches", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"branches", ",", "s"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]",
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Reset\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"G", "=", 
          RowBox[{
           RowBox[{"DGRandomMDGP", "[", 
            RowBox[{"9", ",", "0.0", ",", "5.0"}], "]"}], "[", "\"\<G\>\"", 
           "]"}]}], ",", 
         RowBox[{"branches", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, {3.6960012909403973`*^9, 
   3.6960012938883305`*^9}, {3.696156255994712*^9, 3.6961562650100794`*^9}, {
   3.696156295886201*^9, 3.6961563106886444`*^9}, {3.6961564013359656`*^9, 
   3.6961564517039223`*^9}, {3.6961565250416493`*^9, 
   3.6961566543467717`*^9}, {3.6961567288961554`*^9, 
   3.6961568441226873`*^9}, {3.6961568909910555`*^9, 3.696156903900296*^9}, {
   3.6961569672255335`*^9, 3.696156969304701*^9}, {3.6961571034179225`*^9, 
   3.696157110312049*^9}, {3.696160282114659*^9, 3.696160302223087*^9}, {
   3.6961605625418644`*^9, 3.6961606222501583`*^9}, {3.696160658944554*^9, 
   3.6961606778289185`*^9}, {3.6961609283775125`*^9, 
   3.6961609808174286`*^9}, {3.6961610459570017`*^9, 
   3.6961610477260633`*^9}, {3.696161209739623*^9, 3.6961613158159175`*^9}, {
   3.696161357319108*^9, 3.69616136948481*^9}, {3.696162431625352*^9, 
   3.6961624330647745`*^9}, {3.6961628027014465`*^9, 
   3.6961628571260533`*^9}, {3.696162900512824*^9, 3.6961629049376287`*^9}, {
   3.6961642456888447`*^9, 3.696164270507456*^9}, {3.6961649316798134`*^9, 
   3.696164998676358*^9}, {3.696165041400201*^9, 3.696165083729754*^9}, {
   3.6961651566015034`*^9, 3.696165206769026*^9}, {3.6961652700456624`*^9, 
   3.696165289007637*^9}, {3.6961653864122925`*^9, 3.696165497141945*^9}, {
   3.696165743808255*^9, 3.696165799254837*^9}, {3.696165845290099*^9, 
   3.696165990776334*^9}, {3.6961661230691767`*^9, 3.696166191968793*^9}, {
   3.6961662871277575`*^9, 3.696166327478566*^9}, {3.696166386078822*^9, 
   3.6961664236976624`*^9}, {3.696166496850869*^9, 3.6961664989856625`*^9}, {
   3.6961665602905154`*^9, 3.69616677076039*^9}, {3.69616684916016*^9, 
   3.696166888844514*^9}, {3.696166989227959*^9, 3.6961669927334337`*^9}, {
   3.696167046616452*^9, 3.696167051273269*^9}, {3.6961670863546443`*^9, 
   3.69616711698417*^9}, {3.696168089856365*^9, 3.696168121062352*^9}, {
   3.69616818237259*^9, 3.6961682224238987`*^9}, {3.6961683411240253`*^9, 
   3.696168384465231*^9}, 3.6961684150385275`*^9, {3.6961684819548564`*^9, 
   3.6961685051447563`*^9}, {3.696168568475537*^9, 3.696168570263974*^9}, {
   3.6961686351296844`*^9, 3.6961686370314665`*^9}, {3.696168686385473*^9, 
   3.696168691443553*^9}, {3.6961687468176303`*^9, 3.6961688101433983`*^9}, {
   3.6961689711518*^9, 3.6961690483381233`*^9}, {3.696169125123598*^9, 
   3.696169175323496*^9}, {3.69616950254916*^9, 3.696169563303851*^9}, {
   3.6961696075874076`*^9, 3.6961696257426414`*^9}, {3.69616969935327*^9, 
   3.6961697070144925`*^9}, 3.6961697386375637`*^9, {3.696169815828497*^9, 
   3.6961698450990944`*^9}, {3.696169882730567*^9, 3.6961699262763777`*^9}, {
   3.6961699622860117`*^9, 3.6961699750439024`*^9}, {3.6961700134511185`*^9, 
   3.696170017009848*^9}, {3.6961700553549232`*^9, 3.696170086868808*^9}, {
   3.696170163107408*^9, 3.6961701814566517`*^9}, {3.6961702450598593`*^9, 
   3.6961702610064096`*^9}, {3.6961705582279353`*^9, 3.6961705711466084`*^9}, 
   3.6961706335282717`*^9, {3.6961707824291086`*^9, 3.6961707949249997`*^9}, {
   3.696170828378927*^9, 3.6961708451917305`*^9}, {3.6961775244960194`*^9, 
   3.696177536639609*^9}, {3.6961777114223776`*^9, 3.6961778726060057`*^9}, {
   3.6961779536871257`*^9, 3.696178001287077*^9}, {3.6961780446438513`*^9, 
   3.6961780491063614`*^9}, {3.69617808066495*^9, 3.6961782203938217`*^9}, {
   3.696178433914888*^9, 3.6961784492746*^9}, {3.696178482911583*^9, 
   3.6961785279941273`*^9}, {3.6963358148945017`*^9, 3.696335824944496*^9}, {
   3.696336702720662*^9, 3.696336711565955*^9}, {3.6963367506934752`*^9, 
   3.696336898626133*^9}, {3.6963369663555574`*^9, 3.6963370245934205`*^9}, {
   3.6963370579884453`*^9, 3.6963370911332693`*^9}, {3.69633713867729*^9, 
   3.69633714758457*^9}, {3.6963371784547625`*^9, 3.696337330668229*^9}, 
   3.696337506286955*^9, {3.696342030265442*^9, 3.696342055614204*^9}, {
   3.6965973436925826`*^9, 3.6965973584907165`*^9}, {3.6965973978907404`*^9, 
   3.6965974400600586`*^9}, {3.6965980687982664`*^9, 3.696598082182392*^9}, {
   3.6965987379952097`*^9, 3.69659875237007*^9}, {3.6965991595664005`*^9, 
   3.696599161357998*^9}, {3.6966041446608152`*^9, 3.6966042105828886`*^9}, {
   3.696604264613673*^9, 3.69660426850031*^9}, {3.6966042987761164`*^9, 
   3.696604362039445*^9}, {3.696604415473429*^9, 3.696604443979203*^9}, {
   3.6966044989890485`*^9, 3.6966045013103867`*^9}, {3.696610914922676*^9, 
   3.6966109153078117`*^9}, {3.696950003267107*^9, 3.69695000492143*^9}, 
   3.697995540885202*^9, {3.69799566194641*^9, 3.69799566224811*^9}, {
   3.6979957004319425`*^9, 3.6979958659780674`*^9}, {3.697995991555769*^9, 
   3.6979960054415*^9}, {3.6979962537211037`*^9, 3.697996260026286*^9}, {
   3.6979963909522963`*^9, 3.6979964058568335`*^9}, {3.698058369377993*^9, 
   3.6980584397127724`*^9}, {3.698072481305226*^9, 3.698072481323738*^9}, {
   3.6982767055230107`*^9, 3.6982769867686496`*^9}, {3.6982770477143927`*^9, 
   3.698277084070335*^9}, {3.698277363050057*^9, 3.698277378524715*^9}, {
   3.6982777503800545`*^9, 3.698277789489343*^9}, {3.6982778195086*^9, 
   3.698277825100151*^9}, {3.6982781608132734`*^9, 3.6982782111922708`*^9}, {
   3.698278364609772*^9, 3.6982783666122537`*^9}, 3.698278459380054*^9, {
   3.700314326154815*^9, 3.7003143261704407`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`branches$$ = {{0, 1, 0, 1, 0, 0}, {0, 1, 0, 1,
   1, 0}, {0, 1, 0, 1, 0, 0}, {0, 1, 0, 1, 1, 0}}, $CellContext`b$$ = {0, 1, 
  0, 1, 1, 0}, $CellContext`s$$ = {}, $CellContext`node$$ = 
  7, $CellContext`X$$ = {{0, 0, 
   0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
    0}, {-1.5400158059023181`, 
   2.151695713893481, -1.2557989215202836`}, {-2.095982477212611, 
   3.572511843793394, 1.2851005496045187`}, {-1.8601428294032145`, 
   4.238040451247418, -0.06772143912176457}, {-0.3923574938186157, 
   4.0892677967820665`, 0.4577841339878251}, {-5.29136293140702, 
   4.186747890501423, -0.7436069184961955}, {1.6241180228822127`, 
   1.2333852219423116`, 2.1484289991834986`}}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`BP$$ = False, $CellContext`Sym$$ = 
     False, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
     1, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
     1, $CellContext`\[Omega]8$$ = 1, $CellContext`\[Omega]9$$ = 0, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["Branches", Bold, Medium]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[$CellContext`\[Omega]4$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]5$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]6$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]7$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]8$$], {0, 1}}, {
       Hold[$CellContext`\[Omega]9$$], {0, 1}}, {
       Hold[
        Button[
        "Try", {$CellContext`b$$ = {$CellContext`\[Omega]4$$, $CellContext`\
\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}, 
          
          For[$CellContext`node$$ = 1, $CellContext`node$$ <= 
           Length[$CellContext`b$$], 
           Increment[$CellContext`node$$], 
           Part[$CellContext`X$$, $CellContext`node$$ + 
              3] = $CellContext`DGBPGetX[$CellContext`G, $CellContext`X$$, 
              
              Part[$CellContext`b$$, $CellContext`node$$], \
$CellContext`nodes, $CellContext`node$$ + 3]; Null], 
          
          AppendTo[$CellContext`branches$$, {$CellContext`\[Omega]4$$, \
$CellContext`\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}]}, Background -> 
         RGBColor[0.87, 0.94, 1]]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Style["Options", Bold, Medium]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[$CellContext`BP$$], {False, True}}, {
       Hold[$CellContext`Sym$$], {False, True}}, {
       Hold[
        Style["Solutions", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Button["Show", {$CellContext`s$$ = Part[
            $CellContext`DGBPSolver[$CellContext`G, $CellContext`nodes], 1][
           "Branches"], $CellContext`s$$ = Table[
            Part[
             
             Part[$CellContext`s$$, $CellContext`i], $CellContext`j], \
{$CellContext`i, 
             Length[$CellContext`s$$]}, {$CellContext`j, 4, 
             9}], $CellContext`branches$$ = 
          Union[$CellContext`branches$$, $CellContext`s$$]}, Background -> 
         RGBColor[1, 0.85, 0.85]]], Manipulate`Dump`ThisIsNotAControl}, {
       Hold[
        Button[
        "Reset", {$CellContext`G = $CellContext`DGRandomMDGP[9, 0., 5.][
           "G"], $CellContext`branches$$ = {}, $CellContext`b$$ = {}, \
$CellContext`s$$ = {}}, Background -> RGBColor[1, 0.85, 0.85]]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     869., {294., 301.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`\[Omega]4$212647$$ = 
     False, $CellContext`\[Omega]5$212648$$ = 
     False, $CellContext`\[Omega]6$212649$$ = 
     False, $CellContext`\[Omega]7$212650$$ = 
     False, $CellContext`\[Omega]8$212651$$ = 
     False, $CellContext`\[Omega]9$212652$$ = 
     False, $CellContext`BP$212653$$ = False, $CellContext`Sym$212654$$ = 
     False}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`BP$$ = False, $CellContext`Sym$$ = 
         False, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
         0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
         0, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[Omega]4$$, $CellContext`\[Omega]4$212647$$, 
          False], 
         Hold[$CellContext`\[Omega]5$$, $CellContext`\[Omega]5$212648$$, 
          False], 
         Hold[$CellContext`\[Omega]6$$, $CellContext`\[Omega]6$212649$$, 
          False], 
         Hold[$CellContext`\[Omega]7$$, $CellContext`\[Omega]7$212650$$, 
          False], 
         Hold[$CellContext`\[Omega]8$$, $CellContext`\[Omega]8$212651$$, 
          False], 
         Hold[$CellContext`\[Omega]9$$, $CellContext`\[Omega]9$212652$$, 
          False], 
         Hold[$CellContext`BP$$, $CellContext`BP$212653$$, False], 
         Hold[$CellContext`Sym$$, $CellContext`Sym$212654$$, False]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Row[{
          $CellContext`DGByHandTreeFromBranches[$CellContext`G, \
{$CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}, $CellContext`branches$$, $CellContext`BP$$], 
          Column[{
            $CellContext`DGPlotAdjacencyMatrix[$CellContext`G, \
$CellContext`Sym$$], 
            Graphics3D[{{Red, 
               Tube[$CellContext`X$$]}, {
               PointSize[Large], Blue, 
               Point[$CellContext`X$$]}}], 
            
            MatrixForm[$CellContext`s$$, 
             TableHeadings -> {
              None, {"\[Omega]4", "\[Omega]5", "\[Omega]6", "\[Omega]7", 
                "\[Omega]8", "\[Omega]9"}}]}]}], "Specifications" :> {
         Style[
         "Branches", Bold, Medium], {$CellContext`\[Omega]4$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]5$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]6$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]7$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]8$$, {0, 1}, 
          ControlType -> SetterBar}, {$CellContext`\[Omega]9$$, {0, 1}, 
          ControlType -> SetterBar}, 
         Button[
         "Try", {$CellContext`b$$ = {$CellContext`\[Omega]4$$, $CellContext`\
\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}, 
           
           For[$CellContext`node$$ = 1, $CellContext`node$$ <= 
            Length[$CellContext`b$$], 
            Increment[$CellContext`node$$], 
            Part[$CellContext`X$$, $CellContext`node$$ + 
               3] = $CellContext`DGBPGetX[$CellContext`G, $CellContext`X$$, 
               
               Part[$CellContext`b$$, $CellContext`node$$], \
$CellContext`nodes, $CellContext`node$$ + 3]; Null], 
           
           AppendTo[$CellContext`branches$$, {$CellContext`\[Omega]4$$, \
$CellContext`\[Omega]5$$, $CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, \
$CellContext`\[Omega]8$$, $CellContext`\[Omega]9$$}]}, Background -> 
          RGBColor[0.87, 0.94, 1]], Delimiter, 
         Style[
         "Options", Bold, Medium], {$CellContext`BP$$, {False, True}, 
          ControlType -> Checkbox}, {$CellContext`Sym$$, {False, True}, 
          ControlType -> Checkbox}, Delimiter, 
         Style["Solutions", Bold, Medium], 
         Button["Show", {$CellContext`s$$ = Part[
             $CellContext`DGBPSolver[$CellContext`G, $CellContext`nodes], 1][
            "Branches"], $CellContext`s$$ = Table[
             Part[
              
              Part[$CellContext`s$$, $CellContext`i], $CellContext`j], \
{$CellContext`i, 
              Length[$CellContext`s$$]}, {$CellContext`j, 4, 
              9}], $CellContext`branches$$ = 
           Union[$CellContext`branches$$, $CellContext`s$$]}, Background -> 
          RGBColor[1, 0.85, 0.85]], 
         Button[
         "Reset", {$CellContext`G = $CellContext`DGRandomMDGP[9, 0., 5.][
            "G"], $CellContext`branches$$ = {}, $CellContext`b$$ = {}, \
$CellContext`s$$ = {}}, Background -> RGBColor[1, 0.85, 0.85]]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{976., {326., 333.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  ControlPlacement -> Left,
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.700986678422826*^9, 3.7009870316495337`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5) Geometric Algebra", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}, {3.698572390735381*^9, 
   3.6985723924870296`*^9}, {3.6985725480912857`*^9, 3.6985725546008253`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellChangeTimes->{{3.698577578833886*^9, 3.6985775868468275`*^9}}],

Cell[CellGroupData[{

Cell["Clifford Algebra", "Section",
 CellChangeTimes->{{3.6985733298720264`*^9, 3.6985733479329853`*^9}, 
   3.6985733917705536`*^9, {3.699033073962926*^9, 3.6990330852745094`*^9}}],

Cell[CellGroupData[{

Cell["Basis", "Subsection",
 CellChangeTimes->{{3.698573081533852*^9, 3.69857309289161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GAOneAt", "[", 
    RowBox[{"n_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "v", "}"}], ",", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", "1"}], ";", 
      RowBox[{"Return", "[", "v", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6990178180185194`*^9, 3.699017911391343*^9}, {
  3.699109200938834*^9, 3.6991092011558094`*^9}}],

Cell[BoxData[{
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "s"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "1"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "1"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "2"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "2"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "3"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "3"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "4"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "\[Infinity]"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "5"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["e", "0"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"GAOneAt", "[", 
       RowBox[{"32", ",", "6"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<es\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "s"]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<e0\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "0"]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<e1\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "1"]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<e2\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "2"]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<e3\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "3"]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AddInputAlias", "[", 
  RowBox[{"\"\<einf\>\"", "\[Rule]", 
   TemplateBox[{SubscriptBox["e", "\[Infinity]"]},
    "NotationTemplateTag"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6985725619244175`*^9, 3.698572619816434*^9}, {
   3.6985728784851418`*^9, 3.698573028242709*^9}, 3.6985731015842276`*^9, {
   3.6985731353952813`*^9, 3.69857313620581*^9}, {3.698573225159588*^9, 
   3.698573229624856*^9}, {3.6985733637847943`*^9, 3.6985733690922585`*^9}, {
   3.6985772660121737`*^9, 3.6985772680883656`*^9}, {3.698577469334139*^9, 
   3.6985774844442167`*^9}, {3.698577565286372*^9, 3.6985775678495755`*^9}, {
   3.6985776140366287`*^9, 3.69857773755114*^9}, {3.6985781004692173`*^9, 
   3.6985781424636903`*^9}, {3.699017805039068*^9, 3.6990178131701813`*^9}, {
   3.6990179207120323`*^9, 3.699017928730451*^9}, {3.6990180754786963`*^9, 
   3.6990182296925573`*^9}, {3.6990182748103504`*^9, 3.699018282591694*^9}, {
   3.6990183859995475`*^9, 3.6990184218858123`*^9}, {3.699086207836732*^9, 
   3.699086230760082*^9}, {3.699086266983693*^9, 3.699086310694848*^9}, {
   3.6991034534481583`*^9, 3.6991034644810033`*^9}, {3.699109207259478*^9, 
   3.699109218844327*^9}, {3.699111208589842*^9, 3.6991112128414984`*^9}, {
   3.69936552655753*^9, 3.699365534969078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["e", "\[Infinity]"]], "Input",
 CellChangeTimes->{{3.6993655914044657`*^9, 3.6993656072360697`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6993656094820786`*^9, 3.6993656230614376`*^9}, 
   3.700986680124567*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"GANum2Str", ",", "GAPrint"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GANum2Str", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sign", "=", "\"\<\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "s", "]"}], ">", "0"}], "&&", 
         RowBox[{"x", ">", "0"}]}], ",", 
        RowBox[{"sign", "=", "\"\<+\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"sign", "<>", 
        RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GAPrint", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(r\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(\[Infinity]\)]\)\>\""}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "7", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "9", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "10", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(0\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "11", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "11", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "12", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "13", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(0\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "14", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "15", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "15", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(0\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "16", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "17", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "17", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "18", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "18", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "19", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "19", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "20", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "20", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "21", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "21", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "22", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "22", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "23", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "23", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \(\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "24", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "24", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "25", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "25", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "26", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "26", "]"}], "]"}]}], "]"}], "<>", 
          
          "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "27", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "27", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \(\
\[Infinity]\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "28", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "28", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(0\)]\)\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "29", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "29", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "30", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "30", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "31", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "31", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)^\!\(\*SubscriptBox[\(e\), \
\(3\)]\)^\!\(\*SubscriptBox[\(e\), \
\(\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"x", "[", 
           RowBox[{"[", "32", "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{"s", "=", 
         RowBox[{"s", "<>", 
          RowBox[{"GANum2Str", "[", 
           RowBox[{"s", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "32", "]"}], "]"}]}], "]"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)^\!\(\*SubscriptBox[\(e\), \
\(2\)]\)^\!\(\*SubscriptBox[\(e\), \(3\)]\)^\!\(\*SubscriptBox[\(e\), \(\
\[Infinity]\)]\)^\!\(\*SubscriptBox[\(e\), \(0\)]\)\>\""}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "s", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6990861283855076`*^9, 3.6990861290161886`*^9}, {
  3.6990863788524494`*^9, 3.699086404311874*^9}, {3.6990864480534096`*^9, 
  3.6990864642729006`*^9}, {3.6990865352580957`*^9, 3.699086547667979*^9}, {
  3.699103223095646*^9, 3.6991034958056774`*^9}, {3.6991035310830555`*^9, 
  3.6991035434611645`*^9}, {3.699103573656558*^9, 3.6991035829654336`*^9}, {
  3.69910397287743*^9, 3.6991039819145355`*^9}, {3.6991040322293444`*^9, 
  3.6991040779439883`*^9}, {3.6991041387580557`*^9, 3.699104145099367*^9}, {
  3.6991041964555807`*^9, 3.699104215963225*^9}, {3.6991042556240215`*^9, 
  3.699104360822156*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Products", "Subsection",
 CellChangeTimes->{{3.698573081533852*^9, 3.69857309289161*^9}, {
  3.699020789857728*^9, 3.69902079188084*^9}, {3.6990330072316456`*^9, 
  3.6990330158137646`*^9}}],

Cell[CellGroupData[{

Cell["Inner (Pq n\[ATilde]o tem z[32]? \[CapitalEAcute] sempre zero?)", \
"Subsubsection",
 CellChangeTimes->{{3.6990323984241357`*^9, 3.699032402051016*^9}, 
   3.699033017562742*^9, {3.699110433764721*^9, 3.699110454268583*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GAInner", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "32"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "18", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "19", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "11", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "12", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "13", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "21", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "17", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "31", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "8", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "25", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "16", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "20", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "19", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "28", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "8", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "20", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "16", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "27", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "23", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "12", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "13", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "24", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "10", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "18", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "26", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "19", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "18", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "17", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "29", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "20", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "30", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "22", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "22", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "20", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "18", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "30", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "29", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "24", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "30", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "24", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "23", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "22", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "17", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "17", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "9", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "23", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "29", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "8", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "24", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "21", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "19", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "19", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "30", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "9", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "26", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "27", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "26", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "23", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "20", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "18", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "30", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "26", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "24", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "19", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "30", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "8", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "17", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "8", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "26", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "25", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "17", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "22", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "27", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "16", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "32", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "28", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "27", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "29", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "29", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "28", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "20", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "30", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "27", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "21", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "30", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "22", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "11", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "32", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "23", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "32", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "9", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "31", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "24", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "31", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "10", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "28", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "25", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "31", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "29", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "26", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "32", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "32", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "31", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "30", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "27", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "32", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "32", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "28", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "32", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "29", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "32", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "30", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "32", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "31", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "32", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "z", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6990320401015053`*^9, 3.699032049995983*^9}, {
  3.6990322164519033`*^9, 3.699032239059506*^9}, {3.6990322806359596`*^9, 
  3.6990323659437127`*^9}, {3.6990326163143964`*^9, 3.699032621727733*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outer", "Subsubsection",
 CellChangeTimes->{{3.6990324823441033`*^9, 3.699032490737565*^9}, 
   3.6990330202051888`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GAOuter", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "32"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"y", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "7", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "7", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "8", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "8", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "9", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "9", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "10", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "10", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "11", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "11", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "12", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "12", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "13", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "13", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "13", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "14", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "14", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "14", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "15", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "15", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "15", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "16", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "16", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "16", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "17", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "8", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "17", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "11", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "17", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "18", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "9", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "18", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "12", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "18", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "19", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "19", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "13", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "13", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "19", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "20", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "9", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "20", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "14", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "14", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "20", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "21", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "21", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "15", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "15", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "21", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "22", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "9", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "22", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "16", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "16", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "22", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "23", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "11", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "23", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "23", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "24", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "11", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "24", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "15", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "15", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "13", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "24", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "25", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "25", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "13", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "25", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "26", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "15", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "26", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "15", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "14", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "26", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "27", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "11", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "12", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "14", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "17", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "18", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "27", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "23", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "20", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "20", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "17", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "12", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "23", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "27", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "28", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "11", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "13", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "15", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "17", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "19", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "28", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "21", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "21", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "17", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "15", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "13", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "24", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "28", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "29", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "12", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "13", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "16", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "18", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "19", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "29", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "22", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "22", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "18", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "13", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "25", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "29", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "30", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "14", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "15", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "16", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "20", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "21", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "22", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "30", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "22", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "20", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "8", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "15", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "26", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "30", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "31", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "23", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "24", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "31", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "25", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "25", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "23", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "26", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "11", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "15", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "14", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "15", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "16", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "31", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
     RowBox[{
      RowBox[{"z", "[", 
       RowBox[{"[", "32", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
                   RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "8", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "9", "]"}], "]"}], "*", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "10", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "23", "]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "11", "]"}], "]"}], "*", 
                RowBox[{"y", "[", 
                 RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "12", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "21", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "30", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "13", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "20", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", "14", "]"}], "]"}], "*", 
              RowBox[{"y", "[", 
               RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "15", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "18", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "16", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "17", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "17", "]"}], "]"}], "*", 
            RowBox[{"y", "[", 
             RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "18", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "15", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "19", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "14", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "20", "]"}], "]"}], "*", 
          RowBox[{"y", "[", 
           RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "21", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "22", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "31", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "32", "]"}], "]"}], "*", 
        RowBox[{"y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "z", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6990325012908616`*^9, 3.6990325038047495`*^9}, {
  3.69903253511521*^9, 3.699032549854497*^9}, {3.699032591470318*^9, 
  3.6990326903445935`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geometric", "Subsubsection",
 CellChangeTimes->{{3.699032708518649*^9, 3.6990327130598946`*^9}, 
   3.6990330220327425`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GAGeom", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "32"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "18", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "19", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "11", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "28", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "27", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "12", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "13", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "21", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "17", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "13", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "27", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "16", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "8", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "25", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "16", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "20", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "19", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "28", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "8", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "20", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "27", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "23", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "12", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "13", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "24", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "10", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "26", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "17", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "16", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "27", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "8", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "31", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "13", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "22", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "17", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "20", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "23", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "19", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "24", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "10", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "8", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "14", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "23", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "31", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "18", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "20", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "19", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "10", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "29", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "25", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "19", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "21", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "31", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "17", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "11", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "20", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "14", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "23", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "27", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "23", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "26", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "17", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "12", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "+", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "+", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "21", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "31", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "19", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "13", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "26", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "25", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "23", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "22", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "20", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "18", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "17", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "31", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "12", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "28", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "25", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "21", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}], "+", 
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "13", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "20", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "32", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "22", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "16", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "25", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "26", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "29", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "24", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "13", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "18", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "11", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "17", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "14", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "32", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "20", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "27", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "23", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "27", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "9", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "11", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "17", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "12", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "22", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "31", "]"}], "]"}], "+", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "10", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "16", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "13", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "19", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "20", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "23", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "8", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "26", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "25", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "23", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "22", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "20", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "31", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "18", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "12", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "17", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "32", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "18", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "14", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "21", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "+", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "32", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "24", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "15", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "21", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "19", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "22", "]"}], "]"}], "+", 
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "19", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "22", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "20", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "13", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "31", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "16", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "22", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "23", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "20", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "14", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "23", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "24", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "13", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "21", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "22", "]"}], "]"}], "+", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "16", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], ")"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "25", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "24", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "25", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "20", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "9", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "10", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "18", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "26", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "29", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "25", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "26", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "31", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "20", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "27", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "28", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "29", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "24", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "25", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "30", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "26", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "27", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], ")"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "-", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], ")"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "18", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "12", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "14", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "27", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "25", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "22", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "23", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "20", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "25", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "20", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "27", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "23", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "27", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "28", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}], "+", 
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}]}], ")"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "31", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "19", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "13", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "15", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "29", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "16", "]"}], "]"}], "+", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "28", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "25", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "22", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "24", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "24", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "22", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "25", "]"}], "]"}]}], ")"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "21", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "+", 
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "17", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "+", 
             RowBox[{"x", "[", 
              RowBox[{"[", "29", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "30", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "24", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "28", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "29", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "32", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "20", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "18", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "28", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "10", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "30", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "25", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "29", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "30", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "31", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "23", "]"}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "22", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "21", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "32", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "20", "]"}], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "23", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "19", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "24", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "18", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "25", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "17", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "8", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "9", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "15", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "10", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "14", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "27", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "28", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "29", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "26", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "30", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "31", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "30", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "23", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "17", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "18", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "26", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "19", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "20", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "20", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "21", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "22", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "11", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "13", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "14", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "15", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "16", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "32", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "9", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "28", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "32", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "31", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "29", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "30", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "29", "]"}], "]"}]}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "28", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "27", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "*", 
                    RowBox[{"y", "[", 
                    RowBox[{"[", "26", "]"}], "]"}]}]}], ")"}], "-", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "25", "]"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"x", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "*", 
                   RowBox[{"y", "[", 
                    RowBox[{"[", "24", "]"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "10", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "23", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "11", "]"}], "]"}], "*", 
                 RowBox[{"y", "[", 
                  RowBox[{"[", "22", "]"}], "]"}]}]}], ")"}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "12", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "21", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "30", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "13", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "20", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "14", "]"}], "]"}], "*", 
               RowBox[{"y", "[", 
                RowBox[{"[", "19", "]"}], "]"}]}]}], ")"}], "-", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "15", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "18", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "16", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "17", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "17", "]"}], "]"}], "*", 
             RowBox[{"y", "[", 
              RowBox[{"[", "16", "]"}], "]"}]}]}], ")"}], "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "18", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "19", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "20", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "21", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "22", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "31", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "32", "]"}], "]"}], "*", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "z", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.699032722281039*^9, 3.699032878351595*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GA Elements", "Subsection",
 CellChangeTimes->{{3.6990328921915298`*^9, 3.699032897849437*^9}, {
  3.699110674874135*^9, 3.699110685229311*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GAPoint", "[", "x_", "]"}], ":=", 
  RowBox[{
   SubscriptBox["e", "0"], "+", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    SubscriptBox["e", "1"]}], "+", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "2", "]"}], "]"}], 
    SubscriptBox["e", "2"]}], "+", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "3", "]"}], "]"}], 
    SubscriptBox["e", "3"]}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Norm", "[", "x", "]"}], "^", "2"}], "/", "2"}], 
    SubscriptBox["e", "\[Infinity]"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GASphere", "[", 
   RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"GAPoint", "[", "x", "]"}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "^", "2"}], "/", "2"}], 
    SubscriptBox["e", "\[Infinity]"]}]}]}]}], "Input",
 CellChangeTimes->{{3.699018325250024*^9, 3.699018437407477*^9}, {
   3.6990185651065836`*^9, 3.6990189064976764`*^9}, {3.6990189365875254`*^9, 
   3.699018938727786*^9}, {3.6990189778516483`*^9, 3.699018981277065*^9}, {
   3.6990190232776833`*^9, 3.699019049989348*^9}, {3.699019146572296*^9, 
   3.699019188633562*^9}, {3.6990192206180105`*^9, 3.6990192674150724`*^9}, {
   3.6990193774513855`*^9, 3.6990194480311637`*^9}, {3.6990194863311195`*^9, 
   3.699019728862648*^9}, {3.699019808734738*^9, 3.6990198293991547`*^9}, {
   3.699019972551751*^9, 3.6990199732560973`*^9}, 3.699020506152524*^9, {
   3.6990206333894005`*^9, 3.6990207124864893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GA Plot", "Subsection",
 CellChangeTimes->{{3.6990328921915298`*^9, 3.699032897849437*^9}, {
  3.699110674874135*^9, 3.699110709753286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"x", "=", 
  RowBox[{"GAPoint", "[", "x", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"GAPoint", "[", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"z", "=", 
  RowBox[{"GAInner", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6991107166196404`*^9, 3.6991107851121416`*^9}, {
   3.699111042769721*^9, 3.699111103646028*^9}, 3.699111149026208*^9, 
   3.699111254865798*^9, {3.699366692968521*^9, 3.6993666934566827`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "7", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991111435947466`*^9, 3.6991111493402767`*^9}, 
   3.699111255266681*^9, 3.6993658058156757`*^9, 3.7009866811395435`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "\[Alpha]", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "\[Beta]", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "\[Gamma]", "]"}], "2"]}], ")"}]}], ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991111435947466`*^9, 3.6991111493402767`*^9}, 
   3.699111255266681*^9, 3.6993658058156757`*^9, 3.7009866811395435`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "7"}], "+", "\[Alpha]", "+", 
    RowBox[{"2", " ", "\[Beta]"}], "+", 
    RowBox[{"3", " ", "\[Gamma]"}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "\[Alpha]", "]"}], "2"]}], "-", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Beta]", "]"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "\[Gamma]", "]"}], "2"]}], ")"}]}]}], ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6991111435947466`*^9, 3.6991111493402767`*^9}, 
   3.699111255266681*^9, 3.6993658058156757`*^9, 3.7009866811395435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GAPrint", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.699366696328525*^9, 3.699366701079791*^9}}],

Cell[BoxData["\<\"1\\!\\(\\*SubscriptBox[\\(e\\), \
\\(0\\)]\\)+1\\!\\(\\*SubscriptBox[\\(e\\), \
\\(1\\)]\\)+2\\!\\(\\*SubscriptBox[\\(e\\), \
\\(2\\)]\\)+3\\!\\(\\*SubscriptBox[\\(e\\), \
\\(3\\)]\\)+7\\!\\(\\*SubscriptBox[\\(e\\), \\(\[Infinity]\\)]\\)\"\>"], \
"Output",
 CellChangeTimes->{3.6993667022518663`*^9, 3.70098668115517*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6) Comparisons", "Chapter",
 CellChangeTimes->{{3.681569813484808*^9, 3.681569816344872*^9}, {
   3.698278686267685*^9, 3.6982786870934486`*^9}, 3.6985723945250854`*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["Speed", "Subsection",
 CellChangeTimes->{{3.6815698264989896`*^9, 3.68156984638715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"GenerateRandomMDG", "[", 
    RowBox[{"350", ",", "5", ",", "\"\<DistanceMatrix\>\"", ",", "0"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"M", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<GA      = \>\"", ",", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"S", "=", 
      RowBox[{"GASolver", "[", 
       RowBox[{"G", ",", "False"}], "]"}]}], ";"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<BuildUp = \>\"", ",", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{"Y", "=", 
      RowBox[{"BuildUpSolver", "[", 
       RowBox[{"G", ",", "False"}], "]"}]}], ";"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<LDME(GA)      = \>\"", ",", 
   RowBox[{"LDME", "[", 
    RowBox[{"G", ",", "S"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<LDME(BuildUp) = \>\"", ",", 
   RowBox[{"LDME", "[", 
    RowBox[{"G", ",", "Y"}], "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6815698480721264`*^9, 3.6815700048257246`*^9}, {
   3.6815700435273275`*^9, 3.681570079052247*^9}, {3.681570156011415*^9, 
   3.681570156787325*^9}, {3.681570210274677*^9, 3.681570210412711*^9}, {
   3.6815702446462665`*^9, 3.6815702520650797`*^9}, {3.681570284928616*^9, 
   3.681570304578995*^9}, 3.6827523547930994`*^9, 3.68275737795257*^9, 
   3.69807248137027*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"GA      = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "Null"}], "}"}]}],
  SequenceForm["GA      = ", {0., Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866811864214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"BuildUp = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "Null"}], "}"}]}],
  SequenceForm["BuildUp = ", {0., Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866811864214`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"LDME(GA)      = \"\>", "\[InvisibleSpace]", 
   RowBox[{"LDME", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GenerateRandomMDG", "[", 
       RowBox[{"350", ",", "5", ",", "\<\"DistanceMatrix\"\>", ",", "0"}], 
       "]"}], "[", "\<\"G\"\>", "]"}], ",", 
     RowBox[{"GASolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GenerateRandomMDG", "[", 
         RowBox[{"350", ",", "5", ",", "\<\"DistanceMatrix\"\>", ",", "0"}], 
         "]"}], "[", "\<\"G\"\>", "]"}], ",", "False"}], "]"}]}], "]"}]}],
  SequenceForm["LDME(GA)      = ", 
   $CellContext`LDME[
    $CellContext`GenerateRandomMDG[350, 5, "DistanceMatrix", 0]["G"], 
    $CellContext`GASolver[
     $CellContext`GenerateRandomMDG[350, 5, "DistanceMatrix", 0]["G"], 
     False]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866812045527`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"LDME(BuildUp) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"LDME", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GenerateRandomMDG", "[", 
       RowBox[{"350", ",", "5", ",", "\<\"DistanceMatrix\"\>", ",", "0"}], 
       "]"}], "[", "\<\"G\"\>", "]"}], ",", 
     RowBox[{"BuildUpSolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GenerateRandomMDG", "[", 
         RowBox[{"350", ",", "5", ",", "\<\"DistanceMatrix\"\>", ",", "0"}], 
         "]"}], "[", "\<\"G\"\>", "]"}], ",", "False"}], "]"}]}], "]"}]}],
  SequenceForm["LDME(BuildUp) = ", 
   $CellContext`LDME[
    $CellContext`GenerateRandomMDG[350, 5, "DistanceMatrix", 0]["G"], 
    $CellContext`BuildUpSolver[
     $CellContext`GenerateRandomMDG[350, 5, "DistanceMatrix", 0]["G"], 
     False]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866812100554`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Robustness", "Subsection",
 CellChangeTimes->{{3.6811369593317337`*^9, 3.681136962953414*^9}, 
   3.6815697884056425`*^9, 3.6815698199673333`*^9}],

Cell[CellGroupData[{

Cell["Example: Colinear Points", "Subsubsection",
 CellChangeTimes->{{3.681575755660693*^9, 3.681575771130968*^9}, {
  3.6815759375107937`*^9, 3.6815759504074736`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"(", "i", ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"a", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"b", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"Length", "[", "z", "]"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", 
           RowBox[{"1", "/", 
            RowBox[{"z", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"build", " ", "graph"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"weights", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "4"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", "4"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"edges", ",", 
              RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"weights", ",", 
              RowBox[{"Norm", "[", 
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", 
                RowBox[{"X", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"G", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"EdgeWeight", "\[Rule]", "weights"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Z", "=", 
       RowBox[{"BPGetNodePosition", "[", 
        RowBox[{"G", ",", "X", ",", "4", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<k= \>\"", ",", "k", ",", "\"\<  Log10[E]= \>\"", ",", " ", 
        RowBox[{"Log10", "[", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "-", "Z"}], "]"}], "]"}]}], " ", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ7SfbqmOW+9qx6ckcExDdPWerD4iOLm3xA9Fefcei
QTRLmFIMiGZTtE0E0frR01pB9KriuZ0g+kCJfzeIVudQ5TIH0skhYWog+txT
XiMQzdop7QWi7xrtDADRZmZ/wkE0k0R0A4je87QJTF+aJNwKopM+SIHpGP99
PSC6XCawF0TvM+5PsATSj27KpIDoVQfEMkH0le6abBB9ky+qhSfvteN0Z6Ep
IHq1RudsEL3r8vdVIFpg47V1ILpH8AuYPnT7ZJ4OkN6j/KcYRJ/q8KgG0R0b
NOtA9ItO4WkgWlHbcjqInuGzfQuIdtl7fDeIPj7zcKUxkM6IVKwB0R2R8w6Y
AekqprTDINpXu/MEiN7U1gumS36kl/kUvHYUsWAoB9EAGS2xGA==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example B", "Subsubsection",
 CellChangeTimes->{{3.6815757784336452`*^9, 3.6815757805693655`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "i"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", 
     RowBox[{"Length", "[", "z", "]"}]}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"X", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"z", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5", ",", "1"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"build", " ", "graph"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "5"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"i", "+", "1"}]}], ",", 
          RowBox[{"j", "\[LessEqual]", "5"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"weights", ",", 
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"X", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"X", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"G", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"EdgeWeight", "\[Rule]", "weights"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{"{", "5", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "=", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "S", "]"}], "]"}], "-", 
        RowBox[{"BuildUpSetPosition", "[", 
         RowBox[{"G", ",", "X", ",", "S", ",", "basis"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "=", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "S", "]"}], "]"}], "-", 
        RowBox[{"GASetPosition", "[", 
         RowBox[{"G", ",", "X", ",", "S", ",", "basis"}], "]"}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6815757863621497`*^9, 3.6815759019046144`*^9}, 
   3.681575932212285*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7) Articles: ", "Chapter",
 CellChangeTimes->{{3.681569813484808*^9, 3.681569816344872*^9}, {
   3.6830321679776583`*^9, 3.6830321725073566`*^9}, {3.6950518168642263`*^9, 
   3.6950518230488887`*^9}, {3.695718544230457*^9, 3.6957185487638164`*^9}, 
   3.6957185793601875`*^9, {3.6982786898794775`*^9, 3.698278690522171*^9}, 
   3.698572396080601*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["MMAS' 17", "Subsection",
 CellChangeTimes->{{3.695718588561105*^9, 3.6957185934945707`*^9}}],

Cell[CellGroupData[{

Cell["Problem", "Subsubsection",
 CellChangeTimes->{{3.683032240630539*^9, 3.683032245583842*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vertices", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}],
    ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "edges"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "3"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "vertices", "]"}], "-", "j"}], ")"}]}], ",", 
       RowBox[{"k", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "j"}], ")"}]}]}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"extra", " ", "distances"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "graph"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"Graph", "[", 
     RowBox[{"vertices", ",", "edges"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "edges", " ", "values"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", "=", "1"}], ",", 
   RowBox[{"k", "\[LessEqual]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "vertices", "]"}], "-", "1"}], ")"}]}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}]}], "}"}], ",", "EdgeWeight"}], 
      "]"}], "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}]}], "}"}], ",", 
       "\"\<DistanceBounds\>\""}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"k", "=", "1"}], ",", 
   RowBox[{"k", "\[LessEqual]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "vertices", "]"}], "-", "2"}], ")"}]}], ",", 
   RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "2"}], ")"}]}]}], "}"}], ",", "EdgeWeight"}], 
      "]"}], "=", 
     RowBox[{"Sqrt", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", 
         RowBox[{"k", "\[UndirectedEdge]", 
          RowBox[{"(", 
           RowBox[{"k", "+", "2"}], ")"}]}]}], "}"}], ",", 
       "\"\<DistanceBounds\>\""}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", "3", "]"}], ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "2.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.15", ",", "2.15"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.45", ",", "2.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.2", ",", "2.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
     "\"\<DistanceBounds\>\""}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.4", ",", "2.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<G=\>\"", ",", "G"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<EdgesList[G]=\>\"", ",", 
   RowBox[{"EdgeList", "[", "G", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6830327705159297`*^9, {3.683032825412712*^9, 3.683032825841506*^9}, {
   3.6833897373710327`*^9, 3.6833897383116617`*^9}, 3.6833898066456614`*^9, {
   3.6950519461372876`*^9, 3.695051971253236*^9}, {3.695054339359205*^9, 
   3.695054374964918*^9}, {3.6950544382550755`*^9, 3.695054471742462*^9}, {
   3.695054520813548*^9, 3.695054543675331*^9}, {3.6950545886517105`*^9, 
   3.6950545996175528`*^9}, {3.6950546478888445`*^9, 3.695054668863003*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"G=\"\>", "\[InvisibleSpace]", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {1, 3}, {2, 4}, {3, 
         5}, {4, 6}, {1, 4}, {2, 5}, {3, 6}, {1, 5}}}, {
        Properties -> {
          UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[2, 4] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[3, 6] -> {"DistanceBounds" -> {2.4, 2.6}}, 
           UndirectedEdge[2, 5] -> {"DistanceBounds" -> {2.2, 2.6}}, 
           UndirectedEdge[1, 4] -> {"DistanceBounds" -> {2.15, 2.15}}, 
           UndirectedEdge[3, 5] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[4, 6] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[1, 5] -> {"DistanceBounds" -> {2.45, 2.55}}, 
           UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[1, 3] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[4, 5] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[3, 4] -> {"DistanceBounds" -> {1, 1}}}, 
         EdgeWeight -> {
          1, 1, 1, 1, 1, 3^Rational[1, 2], 3^Rational[1, 2], 3^Rational[1, 2],
            3^Rational[1, 2], 2.15, 0, 0, 0}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.8992213698874534`, 0.18124038639721024`}, {
         1.8994656545303237`, 0.9291120406182872}, {1.0560037981726877`, 
         0.}, {1.055855588584719, 1.1089041321622912`}, {0.9066967041894052, 
         0.5534959725734141}, {0., 0.5556260170818872}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{3, 6}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.021790480245124977`]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.021790480245124977`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.021790480245124977`], 
           DiskBox[2, 0.021790480245124977`], 
           DiskBox[3, 0.021790480245124977`], 
           DiskBox[4, 0.021790480245124977`], 
           DiskBox[5, 0.021790480245124977`], 
           DiskBox[6, 0.021790480245124977`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}],
  SequenceForm["G=", 
   Graph[{1, 2, 3, 4, 5, 6}, {
    Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {1, 3}, {2, 4}, {3, 5}, {4,
      6}, {1, 4}, {2, 5}, {3, 6}, {1, 5}}}, {
    Properties -> {
      UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[2, 4] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[3, 6] -> {"DistanceBounds" -> {2.4, 2.6}}, 
       UndirectedEdge[2, 5] -> {"DistanceBounds" -> {2.2, 2.6}}, 
       UndirectedEdge[1, 4] -> {"DistanceBounds" -> {2.15, 2.15}}, 
       UndirectedEdge[3, 5] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[4, 6] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[1, 5] -> {"DistanceBounds" -> {2.45, 2.55}}, 
       UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[1, 3] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[4, 5] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[3, 4] -> {"DistanceBounds" -> {1, 1}}}, 
     EdgeWeight -> {
      1, 1, 1, 1, 1, 3^Rational[1, 2], 3^Rational[1, 2], 3^Rational[1, 2], 3^
       Rational[1, 2], 2.15, 0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866813257327`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"EdgesList[G]=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}]}],
  SequenceForm["EdgesList[G]=", {
    UndirectedEdge[1, 2], 
    UndirectedEdge[2, 3], 
    UndirectedEdge[3, 4], 
    UndirectedEdge[4, 5], 
    UndirectedEdge[5, 6], 
    UndirectedEdge[1, 3], 
    UndirectedEdge[2, 4], 
    UndirectedEdge[3, 5], 
    UndirectedEdge[4, 6], 
    UndirectedEdge[1, 4], 
    UndirectedEdge[2, 5], 
    UndirectedEdge[3, 6], 
    UndirectedEdge[1, 5]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7009866813257327`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Reference Solution", "Subsubsection",
 CellChangeTimes->{{3.683032240630539*^9, 3.683032268346609*^9}, {
  3.6950524843359594`*^9, 3.695052487617569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGApplyRotors", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGApplyRotors", "[", 
     RowBox[{"X_", ",", "\[Omega]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "Y"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Y", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "X", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "i"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "X", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Y", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"RotationTransform", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Y", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "-", 
                 RowBox[{"Y", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "2"}], "]"}], "]"}]}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"Y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Y", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Create", " ", "BP", " ", "instance", " ", "by", " ", "removing", " ", 
     "the", " ", "edge", " ", "1"}], "\[UndirectedEdge]", 
    RowBox[{
    "5", " ", "and", " ", "choosing", " ", "the", " ", "lower", " ", 
     "bounds"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EdgeDelete", "[", 
    RowBox[{"G", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H", ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      "\"\<DistanceBounds\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PropertyValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H", ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"H", ",", 
        RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      "\"\<DistanceBounds\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<H=\>\"", ",", "H"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<EdgesList[H]=\>\"", ",", 
    RowBox[{"EdgeList", "[", "H", "]"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "solving", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"BPSolver", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XL", "=", 
   RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BL", "=", 
   RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6830323369314127`*^9, 3.6830323752327642`*^9}, {
   3.6830324064069014`*^9, 3.683032518447234*^9}, {3.6830330028395824`*^9, 
   3.683033003422675*^9}, {3.6830337363905363`*^9, 3.6830337369824314`*^9}, {
   3.695052527876314*^9, 3.695052657252447*^9}, {3.695052770792269*^9, 
   3.6950527768632755`*^9}, {3.695053260248283*^9, 3.6950532803955593`*^9}, {
   3.6950551430748186`*^9, 3.6950552071468477`*^9}, 3.695055263405859*^9, {
   3.6950555806726036`*^9, 3.69505568640932*^9}, {3.69505743477678*^9, 
   3.695057479245922*^9}, {3.6950575813323817`*^9, 3.695057623299964*^9}, {
   3.6950576823027267`*^9, 3.6950577531837635`*^9}, {3.695057799076247*^9, 
   3.695057807915103*^9}, {3.698067582510762*^9, 3.6980676073652587`*^9}, {
   3.6980724813907833`*^9, 3.698072481402791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"H=\"\>", "\[InvisibleSpace]", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {1, 3}, {2, 4}, {3, 
         5}, {4, 6}, {1, 4}, {2, 5}, {3, 6}}}, {
        Properties -> {
          UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[2, 4] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[3, 6] -> {"DistanceBounds" -> {2.4, 2.6}}, 
           UndirectedEdge[2, 5] -> {"DistanceBounds" -> {2.2, 2.6}}, 
           UndirectedEdge[1, 4] -> {"DistanceBounds" -> {2.15, 2.15}}, 
           UndirectedEdge[3, 5] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[4, 6] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[1, 3] -> {
            "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
           UndirectedEdge[4, 5] -> {"DistanceBounds" -> {1, 1}}, 
           UndirectedEdge[3, 4] -> {"DistanceBounds" -> {1, 1}}}, 
         EdgeWeight -> {
          1, 1, 1, 1, 1, 3^Rational[1, 2], 3^Rational[1, 2], 3^Rational[1, 2],
            3^Rational[1, 2], 2.15, 2.2, 2.4}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2.077635572424192, 0.14538312809263582`}, {
         1.622121700519018, 0.9989210826630444}, {1.0379005300359831`, 0.}, {
         1.0388715748066573`, 0.5716078363709886}, {0.454770110930767, 
         0.9978125230323187}, {0., 0.14605821591057733`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 6}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.023238294114515057`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.023238294114515057`], 
           DiskBox[2, 0.023238294114515057`], 
           DiskBox[3, 0.023238294114515057`], 
           DiskBox[4, 0.023238294114515057`], 
           DiskBox[5, 0.023238294114515057`], 
           DiskBox[6, 0.023238294114515057`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}],
  SequenceForm["H=", 
   Graph[{1, 2, 3, 4, 5, 6}, {
    Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {1, 3}, {2, 4}, {3, 5}, {4,
      6}, {1, 4}, {2, 5}, {3, 6}}}, {
    Properties -> {
      UndirectedEdge[5, 6] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[2, 4] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[2, 3] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[3, 6] -> {"DistanceBounds" -> {2.4, 2.6}}, 
       UndirectedEdge[2, 5] -> {"DistanceBounds" -> {2.2, 2.6}}, 
       UndirectedEdge[1, 4] -> {"DistanceBounds" -> {2.15, 2.15}}, 
       UndirectedEdge[3, 5] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[4, 6] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[1, 3] -> {
        "DistanceBounds" -> {3^Rational[1, 2], 3^Rational[1, 2]}}, 
       UndirectedEdge[4, 5] -> {"DistanceBounds" -> {1, 1}}, 
       UndirectedEdge[3, 4] -> {"DistanceBounds" -> {1, 1}}}, 
     EdgeWeight -> {
      1, 1, 1, 1, 1, 3^Rational[1, 2], 3^Rational[1, 2], 3^Rational[1, 2], 3^
       Rational[1, 2], 2.15, 2.2, 2.4}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986681377328*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"EdgesList[H]=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}]}],
  SequenceForm["EdgesList[H]=", {
    UndirectedEdge[1, 2], 
    UndirectedEdge[2, 3], 
    UndirectedEdge[3, 4], 
    UndirectedEdge[4, 5], 
    UndirectedEdge[5, 6], 
    UndirectedEdge[1, 3], 
    UndirectedEdge[2, 4], 
    UndirectedEdge[3, 5], 
    UndirectedEdge[4, 6], 
    UndirectedEdge[1, 4], 
    UndirectedEdge[2, 5], 
    UndirectedEdge[3, 6]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.700986681392953*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Lists \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"S\\\", \\\",\\\", \\\"work\\\"}], \\\"}\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"BPSolver\\\", \\\"[\\\", \
GraphicsBox[NamespaceBox[\\\"NetworkGraphics\\\", \
DynamicModuleBox[List[Set[Typeset`graph, HoldComplete[Graph[List[1, 2, 3, 4, \
5, 6], List[UndirectedEdge[1, 2], UndirectedEdge[2, 3], UndirectedEdge[3, 4], \
UndirectedEdge[4, 5], UndirectedEdge[5, 6], UndirectedEdge[1, 3], \
UndirectedEdge[2, 4], UndirectedEdge[3, 5], UndirectedEdge[4, 6], \
UndirectedEdge[1, 4], UndirectedEdge[2, 5], UndirectedEdge[3, 6]], \
List[Rule[Properties, List[Rule[UndirectedEdge[5, 6], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[2, 4], \
List[Rule[\\\"DistanceBounds\\\", List[Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]]]]]], Rule[UndirectedEdge[2, 3], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[3, 6], \
List[Rule[\\\"DistanceBounds\\\", List[2.4`, 2.6`]]]], Rule[UndirectedEdge[2, \
5], List[Rule[\\\"DistanceBounds\\\", List[2.2`, 2.6`]]]], \
Rule[UndirectedEdge[1, 4], List[Rule[\\\"DistanceBounds\\\", List[2.15`, \
2.15`]]]], Rule[UndirectedEdge[3, 5], List[Rule[\\\"DistanceBounds\\\", \
List[Power[3, Rational[1, 2]], Power[3, Rational[1, 2]]]]]], \
Rule[UndirectedEdge[4, 6], List[Rule[\\\"DistanceBounds\\\", List[Power[3, \
Rational[1, 2]], Power[3, Rational[1, 2]]]]]], Rule[UndirectedEdge[1, 2], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[1, 3], \
List[Rule[\\\"DistanceBounds\\\", List[Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]]]]]], Rule[UndirectedEdge[4, 5], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[3, 4], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]]]], Rule[EdgeWeight, List[1, \
1, 1, 1, 1, Power[3, Rational[1, 2]], Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]], Power[3, Rational[1, 2]], 2.15`, 2.2`, 2.4`]]]]]]], \
TagBox[GraphicsGroupBox[GraphicsComplexBox[List[List[2.077635572424192`, \
0.14538312809263582`], List[1.622121700519018`, 0.9989210826630444`], \
List[1.0379005300359831`, 0.`], List[1.0388715748066573`, \
0.5716078363709886`], List[0.454770110930767`, 0.9978125230323187`], \
List[0.`, 0.14605821591057733`]], List[List[Directive[Opacity[0.7`], \
Hue[0.6`, 0.7`, 0.5`]], List[Arrowheads[0.`], ArrowBox[List[1, 2], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[1, 3], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[1, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 3], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 6], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[4, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[4, 6], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[5, 6], \
0.023238294114515057`]]], List[Directive[Hue[0.6`, 0.2`, 0.8`], \
EdgeForm[Directive[GrayLevel[0], Opacity[0.7`]]]], DiskBox[1, \
0.023238294114515057`], DiskBox[2, 0.023238294114515057`], DiskBox[3, \
0.023238294114515057`], DiskBox[4, 0.023238294114515057`], DiskBox[5, \
0.023238294114515057`], DiskBox[6, 0.023238294114515057`]]]]], \
MouseAppearanceTag[\\\"NetworkGraphics\\\"]], Rule[AllowKernelInitialization, \
False]]], List[Rule[FormatType, TraditionalForm], Rule[FrameTicks, None], \
Rule[DefaultBaseStyle, List[\\\"NetworkGraphics\\\", \
Rule[FrontEnd`GraphicsHighlightColor, Hue[0.8`, 1.`, 0.6`]]]]]], \
\\\"]\\\"}]\\)\[NoBreak] are not the same shape. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866818933725`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "BP", " ", "instance", " ", "from", " ", "H", " ", "and", 
    " ", "choosing", " ", "the", " ", "upper", " ", "bounds"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"H", ",", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
       "EdgeWeight"}], "]"}], "=", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H", ",", 
          RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
        "\"\<DistanceBounds\>\""}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"H", ",", 
         RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
       "EdgeWeight"}], "]"}], "=", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"H", ",", 
          RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
        "\"\<DistanceBounds\>\""}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "solving", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S", ",", "work"}], "}"}], "=", 
     RowBox[{"BPSolver", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XU", "=", 
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BU", "=", 
     RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.695057056090493*^9, 3.69505705754543*^9}, {
  3.6950571272277336`*^9, 3.695057219509966*^9}, {3.6950574882308807`*^9, 
  3.6950574997439814`*^9}, {3.6950576362600946`*^9, 3.6950576415895653`*^9}, {
  3.695057787475413*^9, 3.695057850965598*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Lists \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"S\\\", \\\",\\\", \\\"work\\\"}], \\\"}\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"BPSolver\\\", \\\"[\\\", \
GraphicsBox[NamespaceBox[\\\"NetworkGraphics\\\", \
DynamicModuleBox[List[Set[Typeset`graph, HoldComplete[Graph[List[1, 2, 3, 4, \
5, 6], List[UndirectedEdge[1, 2], UndirectedEdge[2, 3], UndirectedEdge[3, 4], \
UndirectedEdge[4, 5], UndirectedEdge[5, 6], UndirectedEdge[1, 3], \
UndirectedEdge[2, 4], UndirectedEdge[3, 5], UndirectedEdge[4, 6], \
UndirectedEdge[1, 4], UndirectedEdge[2, 5], UndirectedEdge[3, 6]], \
List[Rule[Properties, List[Rule[UndirectedEdge[5, 6], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[2, 4], \
List[Rule[\\\"DistanceBounds\\\", List[Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]]]]]], Rule[UndirectedEdge[2, 3], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[3, 6], \
List[Rule[\\\"DistanceBounds\\\", List[2.4`, 2.6`]]]], Rule[UndirectedEdge[2, \
5], List[Rule[\\\"DistanceBounds\\\", List[2.2`, 2.6`]]]], \
Rule[UndirectedEdge[1, 4], List[Rule[\\\"DistanceBounds\\\", List[2.15`, \
2.15`]]]], Rule[UndirectedEdge[3, 5], List[Rule[\\\"DistanceBounds\\\", \
List[Power[3, Rational[1, 2]], Power[3, Rational[1, 2]]]]]], \
Rule[UndirectedEdge[4, 6], List[Rule[\\\"DistanceBounds\\\", List[Power[3, \
Rational[1, 2]], Power[3, Rational[1, 2]]]]]], Rule[UndirectedEdge[1, 2], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[1, 3], \
List[Rule[\\\"DistanceBounds\\\", List[Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]]]]]], Rule[UndirectedEdge[4, 5], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]], Rule[UndirectedEdge[3, 4], \
List[Rule[\\\"DistanceBounds\\\", List[1, 1]]]]]], Rule[EdgeWeight, List[1, \
1, 1, 1, 1, Power[3, Rational[1, 2]], Power[3, Rational[1, 2]], Power[3, \
Rational[1, 2]], Power[3, Rational[1, 2]], 2.15`, 2.6`, 2.6`]]]]]]], \
TagBox[GraphicsGroupBox[GraphicsComplexBox[List[List[2.077635572424192`, \
0.14538312809263582`], List[1.622121700519018`, 0.9989210826630444`], \
List[1.0379005300359831`, 0.`], List[1.0388715748066573`, \
0.5716078363709886`], List[0.454770110930767`, 0.9978125230323187`], \
List[0.`, 0.14605821591057733`]], List[List[Directive[Opacity[0.7`], \
Hue[0.6`, 0.7`, 0.5`]], List[Arrowheads[0.`], ArrowBox[List[1, 2], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[1, 3], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[1, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 3], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[2, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 4], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[3, 6], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[4, 5], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[4, 6], \
0.023238294114515057`]], List[Arrowheads[0.`], ArrowBox[List[5, 6], \
0.023238294114515057`]]], List[Directive[Hue[0.6`, 0.2`, 0.8`], \
EdgeForm[Directive[GrayLevel[0], Opacity[0.7`]]]], DiskBox[1, \
0.023238294114515057`], DiskBox[2, 0.023238294114515057`], DiskBox[3, \
0.023238294114515057`], DiskBox[4, 0.023238294114515057`], DiskBox[5, \
0.023238294114515057`], DiskBox[6, 0.023238294114515057`]]]]], \
MouseAppearanceTag[\\\"NetworkGraphics\\\"]], Rule[AllowKernelInitialization, \
False]]], List[Rule[FormatType, TraditionalForm], Rule[FrameTicks, None], \
Rule[DefaultBaseStyle, List[\\\"NetworkGraphics\\\", \
Rule[FrontEnd`GraphicsHighlightColor, Hue[0.8`, 1.`, 0.6`]]]]]], \
\\\"]\\\"}]\\)\[NoBreak] are not the same shape. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866820790586`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "XL", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"XL", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"BL", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6950579175660443`*^9, 3.6950579558232527`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Points\\\\\\\"\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866823268757`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"\<\"Points\"\>", "\[LeftDoubleBracket]", "5", 
    "\[RightDoubleBracket]"}], ",", "\<\"Branches\"\>"}], "}"}]], "Print",
 CellChangeTimes->{3.7009866823425026`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "XU", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"XU", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"BU", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.695058027324939*^9, {3.6950581001956034`*^9, 3.6950581040611625`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Points\\\\\\\"\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866824115176`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"\<\"Points\"\>", "\[LeftDoubleBracket]", "5", 
    "\[RightDoubleBracket]"}], ",", "\<\"Branches\"\>"}], "}"}]], "Print",
 CellChangeTimes->{3.7009866824115176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]0", "=", 
  RowBox[{"DGCalculateTorsionAngles", "[", 
   RowBox[{"XL", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6950541262807856`*^9, 3.695054186192066*^9}, {
   3.6950559450171585`*^9, 3.6950559471075864`*^9}, {3.6950559775138326`*^9, 
   3.6950559821965356`*^9}, 3.6950576634842234`*^9, {3.695057872082612*^9, 
   3.6950578791489077`*^9}, 3.695058330038464*^9, {3.695058909831279*^9, 
   3.6950589178761344`*^9}, {3.6980676263249917`*^9, 3.6980676267762733`*^9}, 
   3.6980724814153*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}], \
\\\"[\\\", \\\"\\\\\\\"Points\\\\\\\"\\\", \\\"]\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700986682513444*^9}],

Cell[BoxData[
 RowBox[{"DGCalculateTorsionAngles", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "5", "}"}], "[", "\<\"Points\"\>", "]"}], 
   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]], "Output",
 CellChangeTimes->{3.7009866825174484`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DGCalculateTorsionAngles", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         RowBox[{"-", "0.19160809959361638`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",", 
         RowBox[{"-", "0.1940650449558058`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         RowBox[{"-", "0.5650653124835617`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",",
          "0.41921898553883463`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", "0.2961851299103264`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",",
          "0.560268355330575`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         "0.19160809959361638`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",",
          "0.1940650449558058`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         "0.5650653124835617`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",", 
         RowBox[{"-", "0.41921898553883463`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", 
         RowBox[{"-", "0.2961851299103264`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",", 
         RowBox[{"-", "0.560268355330575`"}]}], "}"}]}], "}"}]}], "}"}], 
   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6980724814333115`*^9, 3.698072481496353*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.526`\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\
\\\", \\\"2.0337555109089696`\\\"}], \\\",\\\", \\\"1.4390484151485563`\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"3.547672337964905`\\\"}], \\\",\\\", \
\\\"1.443311855896645`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.19160809959361638`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.055116583577064`\\\"}], \\\",\\\", \
\\\"2.8824679631395647`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.1940650449558058`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"5.535245944780861`\\\"}], \\\",\\\", \
\\\"2.898338552188936`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.5650653124835617`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"6.314751736361553`\\\"}], \\\",\\\", \
\\\"2.0310259548177694`\\\", \\\",\\\", \\\"0.41921898553883463`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"5.8519784317208705`\\\"}], \\\",\\\", \\\"0.5821023754385368`\\\", \
\\\",\\\", \\\"0.2961851299103264`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"4.351017496990884`\\\"}], \
\\\",\\\", \\\"0.5043057015628287`\\\", \\\",\\\", \
\\\"0.560268355330575`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.526`\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\
\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"5.8519784317208705`\\\"}], \\\",\\\", \
\\\"0.5821023754385368`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2961851299103264`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.351017496990884`\\\"}], \\\",\\\", \
\\\"0.5043057015628287`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.560268355330575`\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866826072993`*^9}],

Cell[BoxData[
 RowBox[{"DGCalculateTorsionAngles", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         RowBox[{"-", "0.19160809959361638`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",", 
         RowBox[{"-", "0.1940650449558058`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         RowBox[{"-", "0.5650653124835617`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",",
          "0.41921898553883463`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", "0.2961851299103264`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",",
          "0.560268355330575`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3.547672337964905`"}], ",", "1.443311855896645`", ",", 
         "0.19160809959361638`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.055116583577064`"}], ",", "2.8824679631395647`", ",",
          "0.1940650449558058`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.535245944780861`"}], ",", "2.898338552188936`", ",", 
         "0.5650653124835617`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6.314751736361553`"}], ",", "2.0310259548177694`", ",", 
         RowBox[{"-", "0.41921898553883463`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5.8519784317208705`"}], ",", "0.5821023754385368`", 
         ",", 
         RowBox[{"-", "0.2961851299103264`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.351017496990884`"}], ",", "0.5043057015628287`", ",", 
         RowBox[{"-", "0.560268355330575`"}]}], "}"}]}], "}"}]}], "}"}], 
   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]], "Output",
 CellChangeTimes->{3.700986682611303*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]1", "=", 
  RowBox[{"DGCalculateTorsionAngles", "[", 
   RowBox[{"XU", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6950583416494923`*^9, {3.6950589254273415`*^9, 3.695058930410454*^9}, {
   3.6980676314404917`*^9, 3.698067631852744*^9}, 3.6980724815043592`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}], \
\\\"[\\\", \\\"\\\\\\\"Points\\\\\\\"\\\", \\\"]\\\"}]\\)\[NoBreak] does not \
exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866826951447`*^9}],

Cell[BoxData[
 RowBox[{"DGCalculateTorsionAngles", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "5", "}"}], "[", "\<\"Points\"\>", "]"}], 
   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}]], "Output",
 CellChangeTimes->{3.7009866826951447`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6950589530100813`*^9, 3.6950590657287765`*^9}, {
   3.6950592779488635`*^9, 3.6950592784443636`*^9}, {3.695059459889648*^9, 
   3.695059460153572*^9}, 3.695061808122598*^9, 3.6950619070409408`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"XL", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Y", "=", 
  RowBox[{"DGApplyRotors", "[", 
   RowBox[{"X", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56", ",", "0"}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DistanceMatrix", "[", "X", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DistanceMatrix", "[", "Y", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]5", "=", 
   RowBox[{"{", 
    RowBox[{"0.56", ",", "0.62", ",", "0.733"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DGApplyRotors", "[", 
      RowBox[{"X", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{"\[Omega]5", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "\[Omega]5", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"DGApplyRotors", "[", 
    RowBox[{"X", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.68", ",", "0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".025", "]"}], ",", "LightGray", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"figs", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", "Z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".025", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", "Z", "]"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"figs", ",", " ", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.695059069380664*^9, 3.695059079218292*^9}, {
   3.695059165067521*^9, 3.6950591683089304`*^9}, {3.6950594704683523`*^9, 
   3.695059490913286*^9}, {3.6950595327211742`*^9, 3.695059557567137*^9}, {
   3.6950595935692854`*^9, 3.695059596442844*^9}, {3.695059903701016*^9, 
   3.695059910940896*^9}, {3.695059964986123*^9, 3.695059966233364*^9}, {
   3.69506056720686*^9, 3.6950606298272543`*^9}, 3.6950608355869904`*^9, {
   3.6950614559913406`*^9, 3.695061460562259*^9}, {3.695061910985814*^9, 
   3.69506193350578*^9}, {3.6950620351205225`*^9, 3.6950620425233655`*^9}, {
   3.695062075629792*^9, 3.6950620811496515`*^9}, {3.695062126537776*^9, 
   3.695062146555786*^9}, {3.6950623484888964`*^9, 3.695062356687842*^9}, {
   3.698067638576352*^9, 3.698067648133065*^9}, {3.6980724815188675`*^9, 
   3.6980724815323763`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.700986682747436*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DistanceMatrix", "::", "wrarg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Arguments of DistanceMatrix can only be lists. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/DistanceMatrix\\\", ButtonNote \
-> \\\"DistanceMatrix::wrarg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700986683475215*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"DistanceMatrix", "[", "\<\"Points\"\>", "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700986683475215*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", "}"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700986683475215*^9}],

Cell[BoxData[
 Graphics3DBox[{{Line3DBox[{}], 
    {GrayLevel[0], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}},
  Axes->False]], "Output",
 CellChangeTimes->{3.700986683495229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DGApplyRotors", "[", 
  RowBox[{
   RowBox[{"XL", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56`", ",", "0"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6980724815413823`*^9, 3.698072481559395*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.700986683860115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"DistanceMatrix", "[", 
   RowBox[{"DGApplyRotors", "[", 
    RowBox[{
     RowBox[{"XL", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.56`", ",", "0"}], 
      "}"}]}], "]"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.6980724815678997`*^9, 3.698072481587913*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.700986683860115*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6950599702795286`*^9, 3.6950599865026665`*^9}, {
   3.695060028731949*^9, 3.695060031712731*^9}, {3.695060890252981*^9, 
   3.6950608964950476`*^9}, {3.6950610532620497`*^9, 3.695061053338114*^9}, {
   3.6950611685828285`*^9, 3.695061170026735*^9}, 3.6950619146793003`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]6", "=", 
   RowBox[{"{", 
    RowBox[{"0.56", ",", "0.62", ",", "0.68", ",", "0.733"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ApplyRotors", "[", 
      RowBox[{"X", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0.68", ",", 
         RowBox[{"\[Omega]6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "\[Omega]6", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"figs", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"figs", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", ".025", "]"}], ",", "LightGray", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"Y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"figs", ",", " ", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.695061500319137*^9, 3.6950615551899457`*^9}, {
   3.6950616344677877`*^9, 3.695061662826518*^9}, {3.695061824960895*^9, 
   3.6950618250694942`*^9}, 3.695061897375805*^9, 3.69506196754156*^9, {
   3.6950620167280955`*^9, 3.6950620295541925`*^9}, {3.69506215795319*^9, 
   3.695062162916585*^9}, {3.6950625666231346`*^9, 3.6950626238052263`*^9}, {
   3.6950628167809553`*^9, 3.6950628180579033`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     Line3DBox[$CellContext`ApplyRotors["Points", {0, 0, 0, 0, 0.68, 0.56}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[$CellContext`ApplyRotors[
       "Points", {0, 0, 0, 0, 0.68, 0.56}]]}}, {
     Line3DBox[$CellContext`ApplyRotors["Points", {0, 0, 0, 0, 0.68, 0.62}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[$CellContext`ApplyRotors[
       "Points", {0, 0, 0, 0, 0.68, 0.62}]]}}, {
     Line3DBox[$CellContext`ApplyRotors["Points", {0, 0, 0, 0, 0.68, 0.68}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[$CellContext`ApplyRotors[
       "Points", {0, 0, 0, 0, 0.68, 0.68}]]}}, {
     Line3DBox[$CellContext`ApplyRotors["Points", {0, 0, 0, 0, 0.68, 0.733}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[$CellContext`ApplyRotors[
       "Points", {0, 0, 0, 0, 0.68, 0.733}]]}}}, {Line3DBox[{}], 
    {GrayLevel[0], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}, {Line3DBox[{}], 
    {GrayLevel[0.85], PointSize[0.025], Point3DBox[{}]}}},
  Axes->False]], "Output",
 CellChangeTimes->{3.7009866839135017`*^9}],

Cell[BoxData[
 Graphics3DBox[{{{
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8116033137690675, 1.5427066755333547`, 
        2.360766275813594}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8116033137690675, 
        1.5427066755333547`, 2.360766275813594}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8116033137690675, 1.5427066755333547`, 
         2.360766275813594}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8116033137690675, 
         1.5427066755333547`, 2.360766275813594}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8325743899998022, 1.5898872789129277`, 
        2.3665450926178595`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8325743899998022, 
        1.5898872789129277`, 2.3665450926178595`}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8325743899998022, 1.5898872789129277`, 
         2.3665450926178595`}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8325743899998022, 
         1.5898872789129277`, 2.3665450926178595`}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8562956528844772, 1.635840898683012, 
        2.3715206945287646`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8562956528844772, 
        1.635840898683012, 2.3715206945287646`}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8562956528844772, 1.635840898683012, 
         2.3715206945287646`}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8562956528844772, 
         1.635840898683012, 2.3715206945287646`}}]]}}, {
     Line3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
        1.663033743157206}, {-0.8794690305440742, 1.6752803202112725`, 
        2.375233306610885}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
        1.3500876663997305`, 1.663033743157206}, {-0.8794690305440742, 
        1.6752803202112725`, 2.375233306610885}}]], 
     {GrayLevel[0.85], PointSize[0.025], 
      Point3DBox[
       NCache[{{0, 0, 0}, {-1, 0, 0}, {
         Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
          0}, {-1.3112499999999996`, 1.5523505362836068`, 
         0.7023754337959144}, {-1.5015795671235659`, 1.3500876663997305`, 
         1.663033743157206}, {-0.8794690305440742, 1.6752803202112725`, 
         2.375233306610885}}, {{0, 0, 0}, {-1, 0, 
         0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
         1.5523505362836068`, 0.7023754337959144}, {-1.5015795671235659`, 
         1.3500876663997305`, 1.663033743157206}, {-0.8794690305440742, 
         1.6752803202112725`, 2.375233306610885}}]]}}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.9343460610311477, 1.273330916304608, 
       1.5856033049914173`}, {0.044173487394552506`, 1.373500947181597, 
       1.765785041753762}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.9343460610311477, 
       1.273330916304608, 1.5856033049914173`}, {0.044173487394552506`, 
       1.373500947181597, 1.765785041753762}}]], 
    {GrayLevel[0], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.9343460610311477, 1.273330916304608, 
        1.5856033049914173`}, {0.044173487394552506`, 1.373500947181597, 
        1.765785041753762}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.9343460610311477, 
        1.273330916304608, 1.5856033049914173`}, {0.044173487394552506`, 
        1.373500947181597, 1.765785041753762}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-1.0324059357654696`, 1.2660712072358646`, 
       1.619048839977824}, {-0.06678889023882852, 1.2891909663806485`, 
       1.877987439119232}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-1.0324059357654696`, 
       1.2660712072358646`, 1.619048839977824}, {-0.06678889023882852, 
       1.2891909663806485`, 1.877987439119232}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-1.0324059357654696`, 1.2660712072358646`, 
        1.619048839977824}, {-0.06678889023882852, 1.2891909663806485`, 
        1.877987439119232}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-1.0324059357654696`, 
        1.2660712072358646`, 1.619048839977824}, {-0.06678889023882852, 
        1.2891909663806485`, 1.877987439119232}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.9829550688237976, 1.2685729079270271`, 
       1.6033153295760538`}, {-0.009263719422088758, 1.3298587788415488`, 
       1.8227901530213768`}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.9829550688237976, 
       1.2685729079270271`, 1.6033153295760538`}, {-0.009263719422088758, 
       1.3298587788415488`, 1.8227901530213768`}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.9829550688237976, 1.2685729079270271`, 
        1.6033153295760538`}, {-0.009263719422088758, 1.3298587788415488`, 
        1.8227901530213768`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.9829550688237976, 
        1.2685729079270271`, 1.6033153295760538`}, {-0.009263719422088758, 
        1.3298587788415488`, 1.8227901530213768`}}]]}}, {
    Line3DBox[
     NCache[{{0, 0, 0}, {-1, 0, 0}, {
       Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
        0}, {-1.3112499999999996`, 1.5523505362836068`, 
       0.7023754337959144}, {-0.892248306411026, 1.2793971316347617`, 
       1.5683627429755442`}, {0.0878218578058983, 1.4144002879050193`, 
       1.7140906435598429`}}, {{0, 0, 0}, {-1, 0, 
       0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
       1.5523505362836068`, 0.7023754337959144}, {-0.892248306411026, 
       1.2793971316347617`, 1.5683627429755442`}, {0.0878218578058983, 
       1.4144002879050193`, 1.7140906435598429`}}]], 
    {GrayLevel[0.85], PointSize[0.025], 
     Point3DBox[
      NCache[{{0, 0, 0}, {-1, 0, 0}, {
        Rational[-3, 2], Rational[1, 2] 3^Rational[1, 2], 
         0}, {-1.3112499999999996`, 1.5523505362836068`, 
        0.7023754337959144}, {-0.892248306411026, 1.2793971316347617`, 
        1.5683627429755442`}, {0.0878218578058983, 1.4144002879050193`, 
        1.7140906435598429`}}, {{0, 0, 0}, {-1, 0, 
        0}, {-1.5, 0.8660254037844386, 0}, {-1.3112499999999996`, 
        1.5523505362836068`, 0.7023754337959144}, {-0.892248306411026, 
        1.2793971316347617`, 1.5683627429755442`}, {0.0878218578058983, 
        1.4144002879050193`, 1.7140906435598429`}}]]}}},
  Axes->False,
  ImageSize->{386.07046301129776`, 386.9094108468787},
  ViewPoint->{-2.812485700589807, -1.8790147117895213`, 0.09606194280998626},
  ViewVertical->{-0.6490481996450563, -0.544508297076808, \
-0.8147870624501306}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.695061560082364*^9, 3.695061687193681*^9, 3.695061826599939*^9, 
   3.695061899939538*^9, {3.695061944628637*^9, 3.6950619781705823`*^9}, 
   3.695062052841627*^9, 3.695062089639553*^9, 3.695062164549741*^9, 
   3.695062362854325*^9, {3.6950626047349925`*^9, 3.695062631346203*^9}, 
   3.695062678846036*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["a", "Title",
 CellChangeTimes->{{3.7002159084437485`*^9, 3.7002159163419933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "+", "7"}]], "Input",
 CellChangeTimes->{{3.700474067184164*^9, 3.70047406928526*^9}, {
  3.70047417395918*^9, 3.7004741760245066`*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.7004741779418325`*^9, 3.7009866839291315`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SolveEq2", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "delta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"delta", "=", 
      RowBox[{
       RowBox[{"b", "*", "b"}], "-", 
       RowBox[{"4", "*", "a", "*", "c"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       RowBox[{"Sqrt", "[", "delta", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2", "=", 
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       RowBox[{"Sqrt", "[", "delta", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7002155020255737`*^9, 3.7002155767902403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveEq2", "[", 
  RowBox[{"2", ",", "5", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7002155809554787`*^9, 3.7002155996472025`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.700215589477339*^9, 3.7002156004250956`*^9}, 
   3.700215644308463*^9, 3.70047409688163*^9, 3.7009866839603815`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", ".3", ",", "1.2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", "=", "2.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r4", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"r1", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Cos", "[", "v", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Sin", "[", "v", "]"}]}], ",", 
         RowBox[{"Cos", "[", "u", "]"}]}], "}"}]}], "+", "p1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r2", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Cos", "[", "v", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Sin", "[", "v", "]"}]}], ",", 
         RowBox[{"Cos", "[", "u", "]"}]}], "}"}]}], "+", "p2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r3", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Cos", "[", "v", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Sin", "[", "v", "]"}]}], ",", 
         RowBox[{"Cos", "[", "u", "]"}]}], "}"}]}], "+", "p3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r4", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Cos", "[", "v", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "u", "]"}], 
          RowBox[{"Sin", "[", "v", "]"}]}], ",", 
         RowBox[{"Cos", "[", "u", "]"}]}], "}"}]}], "+", "p4"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Yellow", ",", "Blue", ",", "Red", ",", "Cyan", ",", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", "10"}], "]"}], ",", 
      RowBox[{"Opacity", "[", "0.2", "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ExclusionsStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "Red", ",", "Red"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/Ssh3thl0mvHlBdspiD645nFPiBaorizAETrbCip
ANH/1nvXg2ijL1IdIFrrduhcEP0r1EDTDUjfn7nYGkRvClVyANFmOiudQHRJ
j3E4iL7Dk5oMoh+w7c8A0W1PkrNBdIvqixoQnSL7oQ1Elx+L6wbRSZPl+0H0
JSmnySBag3PvHBAdfXbqErC807RNIPqg+vrtIFrvtcZxsHkhf0+B6IkV8WdA
tL7sicsg+gDHnJdgewy9F3kAaRUnxcUgOujsilUg+t/ZvnUgetp96ynfgPQi
0ZezQPRCyQ8vQfRaj3dvQHTeuqWm34H0t9pWexDdtqDeGUTndP9xBdFVPkuP
gOi8Y+XXQPSHg9z3QbSQ9+IPIBoAyhjE3w==
  "]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
/NP7rmf6ltjOcnydMhPTdTUmYDf7oLIrZdV2Tv1t1Hbl2NJP5u9LPWXdNn54
ElskVH73orU52N36yz3mtKxU7+OhV9yxjzf5NsdifqHXrEzq/M9rHjq7Yx/X
7HjkMed7MLtQslh7pxvX3LGPU7vs42Rd+T0MiS/f5wYPm/Kz/64+qNVr6vuZ
8jlRgTgNRRxG86/WfHCvH/lb0vyjI4x+xrfE/MsOHjO4boQ/u2k7/Uv2Zl/2
JvCp4fDDcSzhwTnHq0+CWNrzZ8eDWvox6+9G9fbV/CxxlZ1y2OIHLkvEG/ns
tetI/p55PL7YpPs5P7blgKtPsedvmX1Zq5gp7sFMf1DHOsHhfqzHwqWDeyTe
LxBHfi9B/Jnw5zS+g4jPKS55L03y7y7y58hbI+AN+ac8BAoeeBXgszrwifNV
3wU5Uxf3ecy6BR6/5Dz8Bbu0zyWk69BkbgJxEkUcjnyGQv7aT37lz5GfhYC3
i8DLEW8o5N/c51f+HPPHfE5BfWI+eltfmQXez+FeMZuntf440xLr3AjsfncT
f9rd8Vzsg7qabDXhZ13JuQ79t6jjSP+Gwl8+12N9clGfck7GfIq7qdZVSg4Y
stzNLJlvXxy/z2nNE5ZjdvXyz+8X6hxOXby6fzo3S3gbefoql79fmFlzVe+c
i994Zo9PgdVu3GfpAzv4nb2tqxnroRPmfSGVK6U6jx6xKFTGGXRg5aWVht/4
c82pvk+aBco478MnBVbumMVzrSYuXZnsL+Psn7Fox+5OmXz95vdBVj5fZJzi
q3T3/vx+8lb8uPcxP+oE43z6Z0fMkqc5vKtVYt2i1m9knMdjg8v+7Ast540Z
YfbjXGEc/H71oNf2De2e5/3OKGXm3Z76tlrK0nkrdGKOv5VxciuWjLj5QUe5
Mmbjqvz54O90Cu9vdyJ/Psr27j7dPbWVSV7H5kxzDpRxMkevvFyuXiHl81aX
B8Pz8YO/D1rlUGzF43z87I+re7NhoI4yYYJrm0NrvGWc7FOfnh2fqa+sjC+9
/Xi+/cLfJe3cYffyRL79yp7lsrL9wJ/ff9313qZ9tkCcxSIOp3EcRBz5feN8
XnLMyrq6yps+iUOr3rjPKa5PAhenuOwFLhlnp9fxWjNH6ShlJtyMtU/255Tn
y4JnTnnWFzzLOCE31lW1qqCtnL7e44uh9RsZ54l632WcbPW+yzjt6184kMxy
+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
zY1nYX+pG1gPi0gfDFoXWT8p5pnsC8gz4tpA+uD25dVtMuq+5SVIH/T99fdH
3ov0wWtPRi0e3SqSm5M+GHpn74BF56L4A9IHqT/yTOMjz7shn5KkD26H/DeS
PugLeMeQPrgV+FlK+uB34HnsX/ZBBuf0YtCzBOOp2yyQ5+y+bby+xyiyn8p6
hno7WKt5a0Od0xZSN9yKRq8rEs6xLyDP4cDbgs2lZtg9v2KBPPv7Oxu2nhDH
8dyp57oELvh1tkCeqT/yTOMjz46QD9abmucX/BDkjzynAF7kDXluD/w4q/mR
PHcbuXGtz4Jxbf62nueJ/eLIcwDs73Cxv5zW83pRDxx5xvoxFvXDkWd/qLfu
ot64nJ+hPpuI+uTIM/LGgS85PxN/5JnGlzyTfGg9w1zKkWdvwAtzLKf1vEjN
j+R5pNgXt//iGfUnQOiP5DkG9ArzRJ6Xgr5NFPomeT4GenhF6KHk+RjgchL6
KXm+A3pbReit5NkR6g3xI8/UH3mm8ZFnW8gH5kzJ80LIH+ZSuU60uh9JnkcD
P6/V/Eh9Dhbn5T95nqmeNyTPYep5Q/I8Sj1vSJ53qecNyfNm9Twgea6onh8k
zxbqeUPyTP2RZxofed6pnjckz6PU84bkOVQ9b0ieZ6rnDf6HeeM/eX6inp8l
z1vV87Pkubd6fpY8m6vnZ8lzK/V8K3mOV8/DkufR6vlZ8kz9kWcaH3k2V8/P
kuc+6vlZ8rxVPT9Lnp+o5+f/M8+4biDRDXweNCW60RuepyYT3bihfv7i9Hnw
NNENQ3i+q0Z0A+9PrIluUH/6PHia6Abmc43oRh/IfyrRDcRbkugGPte8IbqB
z4Nhf6kbeL+xhPTBmvC8P4b0QcS1ifRBvN8oSfog3j/0IX0wBu4rWpI+iPcb
j0gfpP70fqMP6YOYTynSB2n+9H5jLOmD+Ly5nPRB5Hn8/6oPpsNcd9SN3teJ
ue6yG72vE3PdLTd6Xyfmurtu9L5OzF3cjd7XiXN3343e1wl+77vR+zr0p/d1
GJ/e14VBPvS+7hDkT+/rxgJeel/nrOZH8izmujkuyPOGXRNntFqezLa2n6bU
X32OjS45fvMy71xW9XajahWeJ7GQRa29soLvS/vxpDN307Yksgbh15MNXz4t
YDdX26VejZnRsPmNc97SH+1T1HbOy191KBERUyC+O9hpfPcdJ+4+nRDNQkme
bmD/pLbz2KAmVXfoRrGdBO9XsB9Q26X/JmHn6H8P4geL+JzmWV/kmecP9uZq
O+WH/4Ef6Y88NyTx0d6CxMd9DCN5VgP7Z7WdYz3sJXg3gv2I2s67LJ0/akzb
ZGZUb4Xr1JA7ks+Up89GORfW1cwr93padPUA9rzdin+PHEtjA2Ze05sWpKWZ
M+F7oa6tYqQ9wOx2r7YtCmkOPt+tk1QpiG18XrXaJP1EVqbtv24O+3Q0d+aP
uaBEJEj75OEjXFq66GvasYWtxoW/ZbnnJnv1qP6JdXpw1O2ij67meJmqo7Vf
JUm768AmZZrZF9YEFmrx+nav92wC1N2amh/jLafraS6s6dtp9ctkaaf+I2Ef
qD/aaT7ZYl1O80H7K8B7CPBuELh4WcDrAnjRTvn0FrxxyifaN6r3UdYz6gA+
F6MOWBh3XRTSLokZuswzfTPpsdzHTi123+zv9411NHxaPmNsityvBoEDJu+6
n8XmJli9nj05Q+7Lh7mz50eXz2F7z8z6tqVlluS/c78LD/S9c9gn65ulBp7O
ljxTO/JJ4yBvDWHdebAu8kPzRB6wziOIDrQHvKZqvDxmsu6oct4JrOchiyV3
E58V0CvEj3+jvdOwYkNHls2SPCDP69hI3x7m3yUPaMe4yAO1Iw80DvKA63aG
dZEHmifygHa8T8B9jwW8A9V4ee0G3zo+nxhXgIekelfq3nQNKlAP/c9cHXbt
m2+Beqgy1M76Yp0nBeohdN6p8KdH7xeoB2pHHmgc5KEvrEvrgeaJPCAuitch
bFaxDg5fWVFS/30Ne+89Vuwun0v06o5v04+d3QK4C9GliuW/R0yYF8xPEP0x
2buZZ90J4xeJzlA74qVxEC+u60r0geaJeNcDrhKkzucVLtmx/aYoVpzo9rE+
o9I2tg/iC4lu91/yvmVUQAQ/QvTZadqsT28jojkjOvy5//0Rnlpx/C3RW2pH
vDQO4h0I6x4lOknzRLx4r4L3YFjncwDvP2q8vI6TefLOV5HszBH7nSmHV1hQ
HmaL+JzysE/kwykPrUT+nPLgL/ByygPaKQ8Yh/LgCOtSHjBPyoMz0Xncd0PB
g+zvtlA/s0T9SLxuUG/QfyXeGlCfx0R9SryloJ7Pi3qWeKkd8dI4iFch6yJe
mifixfltF5lP8FwXEfUv8caAPlgJfZB4rUFP5gg9kXhNQH/2CP2ReH1BryKE
Xkm81I54aRzE20OtnxIvzRPx4nwbQea3dYDXRI2X6rnkAesE8EsecsAOfU3y
gHboR5IHtON6yAO1Iw80DvKAduhrkgeaJ/JQS63n/A99XOK1gjmhE9n3euq5
QuJ9B3PIPrLvHWFu+Uz2ndoRL42DeOvDuvPJvtM8ES/p1xIvzm9FSZ33h/lw
HjnXOFe7knON8+pJcq5x7r1EzjW1I14aB/HiunfJuaZ50rlloZhb5P0A4i1B
6rwzPI8YE33D+XkJ0XN87jhB9HwSzPOdiJ67wHNBCNFzakceaBzkAdc9SfSc
5ok84Bx4WPQ1yQM+f5VR45X+t4T+S//YSxPWtdyTzJx/9bttbuhfbe34Ykub
6mjWT6kz9dSJj7Lvt114fKqLuZ7G5uIZ/1qrv8i+/+zlnewuBwtpXKIiYgJa
RMu+P/v0MMN6A/Q1G04MXl/M8avs+9SO/NA4yA+uOxTWRX5onvJcAC68KEJc
rs1yV52s8J2dDh1f5O3VRIlrxN2rg2xna2kazfVeaNo4VeLy27T9iv0UbY3D
OrZo6OF0iWuwVZ0T96O0NUV6Pg5Z9j5D4qJ2xEXjIK6RsG5jWBdx0Tzpvh8k
88yox/MOZhqksshd++6NNc57HpnY/JT90sJp7Fz76QfnTsmUuF4YBz93vJPG
/G/dmT1tdo7ENb/D89RpJdPZnHO2jcZr5T2PUDvionEQF657HtZFXDRPxNVl
TqmnhnGfCuRvvv/md/3EjwXyHx/acbzP1vAC+ZdeNqFUjTdhBfKndsyfxsH8
m8O6NH+aJ+Y/KcDI90ln9wJ1pfW6kd0/jhd5Y1JXBvcMvhmefcw3kLqyqbmm
WvlDPtyQ1BW1Y/40DuZfBdZtQuqK5on5G9StMTV0kx/fQM7759C1lz/5h/Jh
5LzX6/MxqcK0z/wuOe+e+6fUPWsdxTeR807tmD+Ng/lHknUxf5on5m8en71/
0aq3/PVWXfdjqWctMH+HG+WvuTb5zJ8mLjij+XjJAvM3WuF6bM+kGH7lZTnT
g2evWmD+7rU8y2Y5xvMVF+bOubfB2QLzp3bMn8bB/DfCul6wLuZP88T8jQDX
OoFL9iPkYbDgQfajBsDbbcGb7EdewPN6wbPsR9SO+dM4mH80rDsE1sX8aZ70
+eIs6S82UG+nRL1JXBqoT9Bbiass1PN6Uc8S1ySofwNR/xIXtSMuGgdx2ZJ1
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
5+KQD4N8kOcRkP9HyB95LgZ47wBeMtfxRsAP8rwB9LnpX/L8DPppkzHBNR37
OEme90L/7QL1gzz3hXWfzVo+8OGSd5Jnf+jvyAPyvBTqwc7UrnubqpGSZ1OY
H0z8ungbfo6WPFeGc7p8eauXAwO/Sp6pP/JM4yPPLyEfD8gHecb8X0D+yLMj
4O0BeJHnF8BPWeAHeT4K80aTv+T5HsyHlGcHmCcpz51h/qQ8P4Z5lfI8HeZb
yrMhzMOU5zIwP1OeqT/yTOMjz08gH8pzV8if8rwJ8FKeYe5llOd9MD//Lc8w
D7NmRDcM4PnoDtGNwfA89YnohiE8f3UkuoHP6ZlEN5bD850H0Y3H8Dw4jOgG
9SdznYyPPMOcyToT3YC5lH0hugFzLFOIbuBzTT2iG2vgefBvdQPvNyqSPghz
Hevx+z7IjpE+CHOdzJPMdWwj6YMwp7HepA/CXMfekj5I/clcJ+OTuY55/r4P
yvzJXMe6kT4Icx0r//s+aPG3fRDv69Cf3tfhftH7Ojwv9L6uMdjpfV0jsNP7
OrTT+7pGqjyTC/jT+zq00/s6zIfe12H+9L4O8dL7OuTnv+7rdtVL7N7+ocL8
9k2/XKTSKzb56O2OvLquZnanLZdbRbiyuu4f4p23BUn7ErDXA7vW7trpwV+W
s/eOjhe/BF1ic0ZW7L466a3098oot2l0xlgL3Xa136/yfiftb4U/p/6zRHxO
14U8Oc1zP9j9wY75oP8en/TbI7r7Sf85EH9xX9PYSZeeSXsw5PPZdHfbx18e
S3vj1NN9t81d6vZ48PJST5o/kvbXgPcT8Yf82UISfxHY54Od5MlontrnnIZo
cn48d3Z5XKdvXKC0L3Ne9fH9wmjWxXjlO94thN0bNfTO2HFamt3FFlkebfuJ
dTrpqLtjfbS07/tYaWDStXjW7fXoA56vQllMqbDFllNyWCub1O2Xp0ax9ylz
D/QKiZV252kGC4tfSGSjFhmm9z0fxrxXxMzYu/EbK9LOetTUwTEs823JNhPL
JUj7wmbTbr7an8RqRW5T+pYJZ7VbzKy0fmgqMxw28M24V7Hs+apx2ypcS5B2
6s+apnULMUos4I92mk/L58kxR29HFcgH7Y4Eb+oJw9d9MsJYa8AbDHjRTvm8
etIncPXyQEb5RPt+cl5wH/tE9s19fcqpwD1tUdjHvrCP6P+m/vmkzFk3Wd81
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
twj/45nT+w1OL6TFu2fYHNDzgM6i+TRd+OMSmlOja0lm++4Q/qu/bz3QuXEJ
re/geUs/b/Ej/K8OT45a3sxC6z587XatZxDhb55tfv/go6KafeyNxpE/8E9i
1tsmIy4U0iqt7upwVc97WtbMLVaB+020ji27bM+MfEh10Ltm0V4T2xTQOhWo
U92sTSDVQdTTSumhOng7Kc71YvESWqhZ9v57ZolUB40z3dZMc7fQtJlHHNpO
j6M6WKiM6y6vr8U1s1DL/uVmvKc66F5k2Pl/8PvtbT87puErqoPot2o3//Ub
1cHra8O8nfYZa6FLzQZ/50/Cv3mJzVzb6fm15TX8/wo5EU34beAcTUL/PUfC
f/l2UGDNkkW1Op3s48/ovhH+Q2WeVHhqUVRr28ip5Xf+JPz1p2/c0XtKEe14
l+zIefUyCb9zSkyzf+LnvPvAXVuOpRD+YxC301TcEv6uG6rPWG+ZT2vZ4uWl
7/xJ+I0LJTWpvtFYS9+ftPk7fxL+TMijZiqPCH+f2otf15uTX9uanOj2nT+p
b0yvMM3ljwpmWv6E8fm/8yf1jQ4DK9lXH2OmzThQIKamRy7hb5n70CXge/5a
Hndt/J0/Cb8N8Iat4g3Cb9Fy5uWxl3LlskKx3b/zJ+EvMSH4teiVK21O1wz9
zp+E38KQxwj/X7pq/S7P/iK9i9Y98p0/Cf/X+InV74Zny+lzK/3+nT8J/+Or
8wfur5ErX04tMfo7f1Lfq/4+uJEG/Qrh7wS8/V7xNuE/9Oza4S/LsuWkgnOW
llj0ivB3LbLsZs2wzzL9N6NipRM+EH4HqCNzVR0h/PbxDTba730vd5wp0j0i
N4/ix7/Cl4mTL8TJ54U211nUO4/iJ8i3dlauf5Ls0uVs6Hf+JP/vM5nnPvx7
/SrN/L/VsG7q7yPt6jlsbvBFjr7kt/has2eEP3NOZpPMgmmyVrxT0Hf+JPys
jhN+txeHjx1xuyt6eVX0qPg1lfDrDmZenH3ppIxPP9TmjzNphD/cOmzpQrsA
OcQyNuY7fxJ+xzaTWrz93j9cZPGPfUu46lsIf6hDo3wzW2bJNQNnO2cYORP+
xJIn2mQ+SpZVn9Z0LjvrFuHHPqqD6qMIv8/+zvfvXQgXnnH16lrsu0P4m9zv
2r5elL+YtHaxb/YWP8Kv27MsfVbHM8LzUPFZ93sGEf6u+3scLPm9fwtj/IN9
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
/nSNPTdThX+vKRcuRsQS/lavmm70Sk8TBYceH1l1SArh12qnL3mdnSnium2r
VWdfLuEvUy4woLpjpnDMq9/xrH8O4T9zot6TCx8zxLftM1YfTv5C+Ll+xO8H
eHwBD+I3zh/Qyqv1p5/wW6e7erzYEv8Tfqd+zilrysT9hH/11bJFupm//wl/
8PNhwz2D3/+E/+LV89OPW0X9hJ/rR/zjAQ/H//XBiIYVfo8TJix+qtUoPeKx
R4SYyOLHMT2j7owzAeIMi5/Twdeyozb7yqosfuzvvPY5a3tPzmTxYxTo4vY8
9JhMYfHD9SP+WoBnHIsf2+GzYhppUWIg46Uqlys7FXsTIJowXjKqtfhw45KD
pA3jn3IbcyoEOcRJE8YPK5/eeeXfLVpWZPxQq+7minMj30pPxg9cP+KvD3ga
sLzObvjkncvaSOFTr0TQrs2b2yN+m5HdJi8yfyZcjniPKG16oD3it9sSs//K
Qk8ZXdp1cl9nl/aI3/pm4uHfvBNlm4O/7RjS/1J7xL+lwuRDwdU+yvmXzbQ2
f7i1R/w9u1Qe5NsqWn4d4jBk2ogL7RE/14/4twAeZ8DD/d9P+V9y/zdS9kry
v5Xyz1zlH4n4K4D/8yr863+J+O3A/2WV/yXitwL/31T+l+R/ph/xWwEeK8DD
4z+fin89fog34E/Cvx3i85SKT8LvDvFfWcU/4d8L8T9dxT/h10H8J6n4J/xc
P+KvAXjGAB7En8+Qfwj/WEP+IfyOhvxA+Jcb8g/hDzDkH8J/3pB/CD/Xj/jH
GfKP/AX/E34/Q/4n/C0M+ZnwexnyP+G3NOR/wn/akP8JP9eP+J8b8j/hx/pr
wuIH6+9EFj+hUB/PsPhZCvW3KoufclB/Z7L4wfqbwuKH60f8iYBnHIsf7OsG
sfzFvq4Zy19T6GdsWf5if5W/omH+Yn9VmeVvFPRXXix/uX7Ej31RI5a/a6Av
Uvx5wBPxX4b+SvHnOU/elyp+u+LJ+8/grSZeRzLcPbH/xH5S8eodT7QL+0/F
q5on2oX9quLV2568b0T9vG9EPLw/dAb8aK9LXq/dG+5niBYJxw48qHSP6l1U
I8e6+bdlC4fdA84dbuRH9a6k6V9XLmwy0l2edauU98UAqneOqzqtXLXKTNfH
36fn9PxxVO9samXMDU3Lrzsy4c2z8Rsj9f1w/RIr9/qY6lrbD5y7xfY11bs9
0z2/05uRLrHZuWkR/g/1/ZLvWssUq3Qxe6zxLNdD/oSzt/OnDrdPZ4ndrcOW
LR34jnCu65BVcE+nb6KeV8Myky/FEs7j5ZfP+GBjrCvj6j4zccpnfV1efKxn
8EJjXU5y1x2usemEc4bvqKg5H/Pp3FYWPqp5pBDOYxuuT3i2KlcUKnVuyZBd
UYSz9PIaQXO+r/PLnWgakRtMOCfVDoyfWjhdPBpl1b9QFX3/lr6kVh/Xp5li
53rLSo9nJRNOoyIlb3V2yxLXfsuxdrTS928Dms6Ndbv3RcT1jH97NTabcFpW
+lrEufFXceu9/7oPjlmEs6Dfkg7r9mWJROnf1a1KEuH8rVadsMi1mSJxlku5
155R1D88Pmmb5xT3SeyqMPjE5EP6/rNgSc/XuZ0+iWV22xvZDo0j/N/6eyYd
ypcolnR06llS0/efm89fvdJ/ebTwLfPOvmSKHr/9rZmVW43/IMb1Cqv80vob
4Z/jcfd9PdNPIuZYhSzX7V/1/U9IdfsmecmkH/FnZVbfYTQuRdgCHsQ/Nkl4
jHoQJ1pVqB9/ckwg4d9/40qv1lnvRQrYi/iDZLlCSfteiwTwD+KvdqbiyIp9
7sjyWrnKV/Z+Ify6Rs+bhw/dIZqNv7B+jPkXwn9/wgpPx4KPxN2w419W9vpM
+EsXuTHdZdJ7Ol/E3+rasPpNPsSKOxAPiH9Jg5hdi0tGi5wK7b5stfLR9891
bj7rtiFIPN++d9a24qGE32f3nsDyJu6iAMQh4q9/IOBeteQY6Vatn3HW6ETC
P+HuyMK3LN7L/RvGV+m1KInw28fqms73DZI1Hz7pU/VJIuEPLNXRrUeat6gL
eYT4g7b2Mi885rVwgLxD/OXW92lwzj5SRCzqUb70VCfCb5l7u1fdk8/E3blV
SxZMvkb4I5o5DHs5x12+h3xH/JWuvsiNPZco19yf26KolSfh99p5vd3ZO/Ey
ocTATXWXPSb8le4/mDzINkrO35m381nAC8I/YE3EnOtDLsnzwFeI38No1stU
2yjRTPEe1ak5PS+O/3jvhdiseI/qFOq5qPRQnRqcm//Lt28fZE/Fe1Sn/HYE
yunPY+UhxXtUpxzPdc0aXyNStlS8R3UK/fBB+UHf50zJCqrsGitmKd4jnIHg
f0flf8IZAudlpc6LcFZ7GvFnn1MBsrTiPcKZfq9UN49DATJb8R7hPPLAs1vi
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
3Ze9UwlnBXVeEs8LcZbI7eBXou1juTLxfu8dC0IJ56drY+KPvQ+RHbOsZ5eY
+Y5wflbxI2dA/CDOOj23FOiwLFk6l8reP/7FR8JZIMw5oGChRGl1Y3a3nUsS
CGfnko0yqheKlz27Lm20pFQC4Syq4l9GQfwjzodpK3Kbfnwq/ZfKb10KBRLO
XSrv5HbIO8QJeSotIE8R57H+J/IaPE2V3ev/NX7arGDCedj7+ptVR1Jko0Hl
uqTWCiOcXYt3ndd0aZK02Oybsiz6NeEEnpH7gWcQJ/CVXH7CtKBn4mPOV1Ku
8t+7MOcu5ytplV3o95EOtwlnjOIreT7r3bvfdPck4yt5X2RFtEt2k4yvZJNL
wwJujdzL+UqespySXrKiD+H8oHhJlst4FDW+mEY4+yleknbzg8s49d9HdbwI
nMuDxq1bbrG9S3W8puIlWcG06+p1y94TzkeKl+SozgvqBWW9kYyXpMujP/o/
GxFMdRDj6v6dZ5ZTM69RHbdSvCSPPw8fFdPyCuG8oHhJnu/8cFO05R3CWQni
POPkHts+rQMJ50PFSzLUf7xNuT3xhLO+4iX5/vblIq/exxLOPMVLMiL8Uf7o
6EjC2RvytPKVR+sDavkTzpOKl0Rr7XmRIjcuEc5AxUtC21+37TXj+4RzDfDG
kJxnPXZOCSacDoqXhLbaJvjiRn1f56d4SRxPCag55dQHwplP8ZJYei9hdOse
MYTzBPAe6kec9oqXRIxDi3wFE24RTgfFSyKh0Nlwr9vXCWd34OGqYC/i/Kp4
SVwtv87TpXI04dyieEnM6WTSdt68KMJ5X/GSqDJnXFbT4e8JZzmoI5/hvBBn
ScVLwj+p8+9nYx8Szo+Kl0TPizXHVFpznvIoA+paIMQP4qyreEk81bY9H93+
BeE0U7wkkgosquW1xV8yXhINamxN36y90N+zoC5j/DNeEk4fT06rMdqf85I4
uyMzwunFc85L4hDkI+Ml0Xfxm4I5aU+Jl4B/xOnrzT8E5rvD+UfUB95gfC44
n3/+puQrQI7f06BOiQRWp45APPM6Wx/ykfcJ0OdI3ucgH55l/dtukB8BOeJB
nt/N/AnxIF+wePgb6mwCi+cr0CfwfKwOfc4xxidR0KeVYnwYAfLfQI44O8O5
mEFdwO+0ntA3ukLfiPJuEFddod6h/AH0aebQp6Gc96X4vdcc4hbrKcp5H4hy
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
KmeeXtfHP8RPLvsO0Aji543fgIZnhruTvDXEZxC8x6H8KsTnMZMjzevOuUby
c5CnV+E9HfHsgrzm8uoifOHMx/aeZUKmvez2xo30TId8nADvgyhfDfk4J9rv
+bRM/fpRkO98/QDId77+IvAe9xvkr4hgfn4HfJjJ/NkM+C2Q+ccV+O0I8w/U
HfGExT/Opx1k+eIBdfYoywt4nxVb/jvOxWMW58dhvQ2be3GE9f6wns8rYn+C
dR/r1xE2fzLQ7K1NXl6eXFTPe/w6vy0dF/z7u0wTXZPNEx8vSkyS78POT8+3
I1SMaPXIP8PUWHe6Xnyt+Ph3svbtml3XlokU65odqZTeLU+Uq9uzy+UwH3l3
YFDVlUmxouesm3H2yVnCCOT3QN5NyeUh0FMP9NgpPbIa7JsI+w5T+2p2qWt3
/4Oz9Jmq1iaH9xPOzltXDR/ukSaXRRr17785jnC6bR39KsYjQZ52H7hry7EU
wrlp5YGLb7wj5S1ds9MWlTMJp/vcbt3qlgiVJY+7Nr6+7Iu4X8WlYNbIFOEG
ckuQ31VyaQ96PEEP2nUa9j0P+6JdHQDnBsCJdrX/PPbBP3btiv/Usuqko2SX
+SPHE3LUFzmt7bMK3ubJZNfs6oljvGwyZcOPmz5tKvSZ7KoSbJmsM0+XlbOd
bvwdlUN2BUy6v3FSy1Rp3eZ8wosTRjq0C+XjQY52oZ5qoAftmgn7NoV90S5T
wDkPcKJd8J+50co/2f53u6fvxJti2TZHV5ngf79Ksw0dsOMfHGgXylu0tR37
93fcaJf6Oxd50tht3dJ//hntQvmzUzZp//z7aBfK/xjkuf6f/eaFJU5s+31/
lKttTHUFF76SF4ufbI/y/rB+llovuX70D8rzAx70D+JvDfjRPyhfCfZy/zQB
/7xW/iF586q+9VL8j2E8aBb2tx1yr+TTTCzKLx2yIIL8ufxAy0bVBploPE56
JZm/OOJtqvE4meeYsfFtdn6Nx4nT08qe/aLNNB4ny20qxLayLaDtyLaYftbE
mPyZ6FgmcOipAlrfvavGd1lqTP7E9TthPfoT9fN4mw94eLz1Bvw83laCvTze
SoJ/yoF/0J8T1vlV+sef/W8NafVDfmnldp166lzbRHuwt/3smIavyJ9vWmsB
ATXMNM4ng8NP9+r+wlzjfDKmWvnB9sUKa5xPzAcNKxt2u4jG+WSoaRP3g4+K
aq7m1vPa7coW6E/r9cWNJtYqpmmFqho96Jkj0J/DYP1FWI/+LAj6OS+NBTyc
l4YAfs5L78BezkuVwT8x4B/05x2zji3/8WfuTq8feVjL13XD2N2VTDXz1SFh
ceIJ+bNF5akOE0zNtUhWR5wWedt2W19Yq8vqyNYVT8K6Liim3Wd1xK3S0My4
QRbayFZ/Jbfa/ZH86bPCvsXLfCW09BfTncNCPpE/6/hKt+odSmhe/8faV0d1
uS1hUyI2diMWdhcqul8bFbuxULEDMLGxi2NiF2IhFnah+1URERAREQGRlu5u
Pjh75r3fb9B11rfWd/45687ad/Yzs595Zt7f3tw7yXT8zIvJSj4/wfosWI/5
RP8zwT/m8yjg+UD61xnA34H0L0OIN5X0L23ITwfID+YzcMvRYWX5ZB2s5v9f
/VcOALuV6MtvsC9gPkOEf07z2VLg4ZjPI4CfC/yc5nOyiJdjPh+AfSrYaR5k
8EPzAOfIaR7iASfmQQb+QB9X4goFHm4SPOS07m4K3ipxIc9fCp4rcVWGuqgp
6kKJq7JqPSpxzVWtXyWuqbCvE+yLcUUAzj2AE+NCnTku+rgSF+rVYqFXSlyj
Qd86CH1T4loDethY6KES11nQz7lCP2WM66yqbssY1xpVnVfiMoF9O8O+GNd2
wLkKcNI+xeWZZf1IiYv0cSUuddU+rsSFdujjSlxohz6rxEXtGBfaof8qcaEd
+i//S/9V4gpN2R2lcaaQQz/lqFfaMM/Q81oB8w89L5yXmpDz8lWdu5S4KtT3
7Ha8dmk9if4oo17p+/tOm/gglY8W/VRGvdKC9dB/ZdQr6h/z0wTw6JFzXwb4
u5Jzx/nNgpx7EOSnPuQH9ao/zKtjRT9FPsjegc7mbo/zuCz6hZJPCebedaSu
nWBOvkbqeifM1U9JXTvCHF6V1LXhr+0Daz36ym+K/sgxnwG3KpZ8efGZvxT9
lGM+cb0jrMd82oP/6kQfbADPc6IPDoD/JtGH/hDvTqIPbpCfMMgP5nMrfNfk
in6q5LN4Q8bg7245PM3m336h5LMjfB95Ef23h++p+kT/cw3E99d9ov9Sx30n
B7x8zIYQ/bcP3mc8qakPCxL9Ucmn5bvCKo19v7Frop8q+aTrMZ9mxD/mMwzw
PKB9BPA3Jn1ED+INJH0kA/JTW/RTJZ9j4HvWQPRTJZ8Z2nt1Y2JS+bLjgyoy
jUAW39vMZM0gDWmVW1ff1Ycj+bVBJatdlkSwllP8W4dklbDUPnaDLPW8ue7x
rxY65jGs9o9x/ke885jNUpfqva87MVYsX9DtkcDGuN16ljcznUmRY6qOHObN
PFJGnky9lsQ+V1kQv6Igkjk2qtPW8P03Nr7X5mrDzyWzzzUMxjfPeMBsanzu
avf0Fbu3s3bNL2kJLDPFe/uGqak8t9vJ9js/vudHg2bfab4+lrVtMbbWlmq5
vJgF7r41PozHaiVFWsmRzK7azTOvjxTzwpizKcdrJ/OOe+zVlzUKZheHbZR+
uKrLXva5cr5rNi9svtZy1ilv9v72NaenszXlS2PTYm9lF/P5hdsa5G88z0ad
9ZxXWKQpm2yaE5k2JIUHvRtfveKcVKapvTzn9jg1afDelKD0r795qNH+49r1
s1jRoMCHC27ms+fbG3zwzQ/mtcJejB39Npdt3n5isPGMDKZTsuBLsPE3PlCt
jZd7pwI2UmqieaZ1NJt+41K1tDrevFcHk5B5AwrZIs+LwWPS3rItB/f3XvYr
nL97+SpqVM0c9mSy1/7TrXO49jO7vUPHxvOt1564/ApIZ/VmTXsw91sR1/mY
6Lp9QjpPtTJYrzY7gdXiCVdb7VCXJziY2G7rkMtd1n/2rjAxlBV4XFjxu09p
HQ1Nz1NbVszbOv80S537gjXsvSknLUdTLqo349masExu5N3J7VRQPtMMX2Ic
uKmAWbTxVvP0Sef3199fb+1Xwq5e2d3pwcRMdtrI1WbesjQ+/aLOjrBz6pL3
p1e9x4wu/T642levK0/l6XXmr9i7tHQOW/80beVvDzY5slfD8M1ZfGhW9yem
C/LYhdYV8kp0i7jkPjZCs28uP/B946VbbunMqmH2toS+6vKHsO9y4YwCHlZ3
+LNIq2i2eo2aca/qmvJVzbBHV54W8+ZB3bUmBbqz9f135IYn/e870aZwgYuG
cRZrlRvarl+Kmtz8n/3z/M5pypWaPdfOj/zIp9Ud9e3SxdI5ZLjRs6q2FeUl
wU6BpfznUS0udyrj/5w8nV0LmlSRI+PqfSnlP2/rYOz5q5T/asPd2zbUqy7X
rNH5ZSn/+SrtQQvK+O8+s86WUb105WVvbn4t5T938gvpVsZ/kx21JrRP15Wb
Bdd+WMp/7hHC3ZaX8j+ucNOuHkY1Ze83T3VL+c8Lm9nH1C/l/5IJhwcHrdKV
GyWXhHunJXCtlkMrWZfy36j5zkf73leXP5nWWFzKf65neOVgGf/zp15d+j2h
ivzY+NehUv7zdqu+5P3L/xujtRtv1pF3rPnWc2mjYK6zQ2dBGf/XObWZtfOi
lqznq/PQ9JQ37z9uzesy/g/5VfTBabea3Kqv84OEjee53Cd2QRn/W2v83rB+
aQX5uI5daOD133xJ7ftDy75r1bbbPdTsoiMXFbVdWFoXfJBzgGdZXZy1fLNi
16HKctfwLYGldcErnD8yuKwuflfSe3vdrKrsXttoZ2ldcONRbm9GlNaFk5vP
2qhT1eTx/1yJK60L7nn8Yfip0rq4NqlFunNpnoffHBpVWhfc94Fbu5GldfH4
yOFJ1/dXkZc0a3qztC74vHUXS+soh095dPPpqhWVZMdF41aW1gX/p6pzXbPS
ujAdnZrMfmjL5p3eviqZlcCPfZ7mXlYXajOd90rxmnL+j529tCaG8sea63aU
1UVD45AxJR5qsr7mp1dxc1/wzVqPCsrqwql1ovY/kpZsUNe9XtG+TH64od/9
ZlfUpOUNmxm6Hakgmx5+1/p0UD43US8ICiitFy9udPjcaW358bG5r0vrhZ98
/OW2c2m9TMyabfxlVEV5zNW2p0rrRdaJ/lDfpLReFncel7HYvqJc53e/1aX1
ImdsHTBoaWm92H9fO6fG4Aqy7+6G40vrhddP3WimVrOIj2pWMXtrpKZ8Zss1
g9J64XWv97leVi9Do/V3q0/SkJe0aXsvwiqa36keMqesXuJPzKh0/5qabDGm
8f2xge68jtn34rJ6wflwU/3zy8rmgbWFDic/lH5no933cvHGsvrpnzHntXpp
PaE970HRt3thGnK8WtaDJiviFXv65yNbvEM15YFOqSNrxH9V7Busw41K65Gv
NkmZUOYP69R03ADvpivi+cDxzV6V+UN7arc99jXjv/Jt55qvLfN3DfTZu0BF
nyX9FTf3ntr4g+e2mjrnXPN8tndug36mpd+19rWbzyzI92H95m548F47mTml
Pi+M7B3KltSVvzVb78Nv5NeoYh1RwPRqT61Z9XNQuX70TPQjTvV5ltBnTvua
h+hrnOr8cKHzHPujBP1xpOiP3Bn6RR3oFxtEv+A+0GdrQZ+tLvos7wd9JxL6
Tq7oOxz7uxH5XtYYJnQ+6r6Kzkt7td5/cRmWwT9OmdSj1ctiVtku8mClvtks
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
vIcp/CrewwwQ72EkfLevuUP1nWFGYV7mwJMaslmDE0amem958LHGHctwFpqK
9yS/4D3JU/GeRGoIfy/gSt5/5odUrWs5R0P+nLPI0SbDl9c7sMSvLG9DAP9U
eL+B+GvC33FokHe5eK9npfo7uZKfEXAfLJG8wd8fcfr3R3tUf++VXOEcQ8U5
cnh/JWW2MPTYdTCfZ4Ykf7o5M567uBx6W5ZPE+DVW8Erng+8ul14anXZfHVF
27dRWV8eB/0kE3jblrz/fwm8dVXlrfJelP79RS7wUA942FXwUE4CnA1C/8XJ
nguc8k/gIf27GMyDMfBqg+CVYp8PPBwA9yTGwKtJwKtrglfKO5ylwEN8hzP4
zOguZede/d2sTTtKcbrpN/IuO3fkg7fgA0M+lACvCgSvGL5TGgp+mqv6kQvB
Tzj4qSv8yMhbc8FbhrzF92CtxHswhu/BcmD9Nlj/U6xX/l7DgLwvxfWboS5w
Pf69zG/yvhfx6wv8/C/4OeIfCXmeKPLMMc+1oS7oe2w8r4niHPl6co7w92XK
+lTgibbgCX8JPHkL/E8F/lvB+8N04FsXwTcOfJOGA/9DgP958N4yCdYPgfVd
gJ87bRZ8mOaRy9VvHhqcG/mRp57NDy97l+gM/P8u+M93gG6/AP1v1uJf/ecy
vF+9A+ujYL0N1Ivfzb0b5ntm8OD1DQfp9PVjRXrO98p0QE9uHLrHMbu0vtwH
Zd6LUOwjHV6kvE7L59Oc03X7L41V7Ji3tHXzZpXVBbUffTeviVFpP36z4tyK
Mj352bmlTvN9GjL1czWm9ouFcepy58dTcyqtj2BXi6o8LtPbtGardV/f1pIp
HtTVEOA/6mqy1jD7Mvu6Nm01yvrX5hidDWX2eneMXMc20pZ/kXgtgOclQucZ
6vz9j3e9rC9UkM/9+HG46hlf1mOQxaQyfUM/gcIPRz8Ep2IPhngni3j5X/Km
2I0hz1PJ+u/nrn/o2an0u/NydJzO+ghuZx/kVoazCZyXTPatfcm99fZSvt3Y
92uJZinf7jcLP1SWBzx3T4LfDfiTLeYH/g7mB6MlPRKqf8zkTWx7P6pyxpfH
/jRZVpYHAT8Vfy/Hf6SqRy+e8/lWyLrord/wWfrOrGZ53nLxK2QNgv+5s6yP
uvT21fcxyw+GsNEhFda918pjT2Lfr7x4WFOa37P/4uLWkcw36VCEfUYGewr2
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
eeK0VDY6MrL2zv1Oyv1dG7hHmA/3CCZwj9AC7rtv9lW97/N6uN+w+ZZ0ZiX8
c7jfUe5Vrch7J+z3Xw9rvrHPclTsjcF/5b4q+JkP+D8P+PH+CPEvFviV9cp9
ruo/0v+r3QPyWVE1XmYG+TyrGi/rO2dWnzbjU1h71Xz+f8NjBu9A0si7UGrH
9yHfIG/3yLmTe6hyfDBRzSc/lGZc++P9VNakon5V/z0vFT4gr+5AHtAPvpeo
rPpegtWFdya7yLtZQ8gbPUfMf1XCB8z/BcKHOLinJvvySIiLnosB8HyqKs9Z
c+ChLTl3T8jnMnLu+L5oL3nvmtu1Q3FR80y2uXK/qW8XvFLuMfEdF31XjO9m
d5N3OLqXbmlqucSwDcKPcp+I75M3kPdO7SCuI6R+L5SMPLnXNYtVT3Q479bk
PX84K+fL6fklrBhwHgH/v+EeMxfegQTAPfgMcQ/ORkF/t4X+Ygx6PLGbRYzz
+zy24+T425c7+eA9MqsFfKgE7wd6AR9a9bm4zTQ/l7XXtvpaS/7Mc8T9NeF9
Klv07z8aUpz5sq5uNkksbOb0Wv2bZLM2U/pvTjyhJl0KC7V17J7F8q+b3fD8
mMsqGXQy2/ShkK30WLfFxy6f7bk2c/N1jQI2Wm/y1w9p2WwV2PeCfaSw88vg
pwD86Ag/PAH2DYd9DcS+8saj8afHtPvB9K7lL5zkkcV6790YZ5KqLv0N/+O7
V65cs4tmQf4+4yeOKlDwp9RmlvP7prLcA80MHzRRkxD/dI2eaZ2mZ7KO6udy
63XUkBC/WkmPPT5WOcym5Ozg2Oea0p49NWbopqSUs+8Sdk79YLx0X4z3GeAM
BpwYb/0vawP8an5iDxsvtpGP5vxnvLss5o1MtAxga7v3arBALlbizR791uT0
kXA2LtVi+OSzGkq8VUY+yx5VIZr1/t1v4JJRFZR4T73Y3HuCWRwz1vP+Gjq+
ohIvtWO8VcFPH/CD8ebAvuNhX4x3D+BcDzgx3k9fqru+091pND9oyKBJXXOV
eHcX5qd7Xzhm9O7dvo77c0qUuDx9+5m2HnfWqFUNp9gIa00lrpu7Htqedrls
pHWiXtfX87WVuFx9bttOGOlgJP77Okpc1I5xOYKfCuAH4/KCfQ1gXyUuwPke
cGJcXhDXAtW45LrifDk93x0iP5yeY6bIJ6fnWFnkn9NzPCnOi9NzdL7Sy+/U
ugQ+88X0ra+O60gfHu/becMsjHkMvs/mtE/kVza0PP2jREe60rtV89DR14zo
+vdiPaf+MW+Ih/IhC/BTPgBvOeVDA8jPI9X8yIm3K2Vuq3nZRV2V/7K10AdO
9QF0gFMdSBL1yKkOTBP1y6kOlBT/W++c6kC9+Iqm2+bk8apZmp3YfS0ln7P1
QrN2VsjnXY6kbHqrUUHJJ12P+aT+iZ7wv+gJp3ryFOKlerIF8tNMNT9y9QdN
19Z6fKdcPt1WXVDXGBLCI89WP9+vRYaST+gLPPzPfYEX/Lkv8L2kLxwxunCV
XynmXsEDzrd1LmSYT8EzNTnIp9Eyz5dFDPMpeKkmL7ryo1mXusUM80nXYz6p
f8znKoKH9CNe+Od+xCNIP/KE/ESp5kf2ju6nOUt+6EL0Wf4I6/t7RXw6+Cru
P/U8HvaVjMf9PPAxUskz4my0ZOuir2HBSp4xrtSVx2oty/qm5Pko5OF5w5oG
r7Z5KHmmdsyPBfhJBj+YnyuwbwPYF/OTSHDS/PRTjVfeBDx0fVa554zlUf+Z
B+TzmWsuLk/9fWkf5zbZZQVgyzEPM6BeZlXycX1m9pVjHtRFv+aFBV/qDP74
i2MeqB3zgH7MwA/mIRX3zRH7Yh6eA047wIl52AbxvlONV9YHfbvk3q1kW0jY
f+bhH9BJ94A7W7zzHil5KARdXbtzew8HDz8lD7VBh/3sEnLt2/1W8nAZdLvR
RsMR24ckKXmgdsxDHfDjD34wD0WwrzXsi3k4DDifA07Mw90+9QxaNTzvYn0q
Nf/hwFAlXtdN1it6L3dyUduyKfVGipkSVwO9O5qzCh66tNo4flj9jz+VuFwi
9tyy+vzMpZaJqZx5ME6Jy+CF+qT8la9cxjqtzw5ok6bERe0Y12vwUwf8YFy4
b0fYF+P6iDg3CZwY1wOIa61qXHJjmN/o+e6F+Ucm55gL85I1OcfqMF/5k3M8
C/NYE3KOT0W/Zk9XP8hf3zqNo35+Ef2dDU4Z3vl+SRpH/aTrUT+pf8wb4gki
fED8Wwgf9kO8zoQPepCf86r5kTNEfzfC38VRP6GOmBvRjRcwP9sTfUiDedsm
S1UfZsF8bkL0QQvm+ViiD01Ev2Yt/Go8LnSJUPK5QPR39tDoTUKFKlFKPul6
zCf1j/mcDXgmE51JB/xq2ao68xLivUR0xgbyQ3RV9hA6zBjpO6DbzJj0Fwf4
LutO+oslfMdVXaXaX+xEH2GFpL/MFn1ZOrqx3f1r7d4pffya6OPS9Pg9GtXv
vlH6OF2PeaP+MW9WBA/m7Srg70r6VAqJF/PmDfkZSPqUr+jjRiWEh6Ntpx5P
/ZDAIhqeNN4tZzGLG+5aJzzVpCH3jp+4Y5XJxnc8F/RzQy6bENd+8YTFRayO
f6/bqXl57Izf2q/b3uUzr7Phwyq9yWFhDt/ryqXf6z0+rTmhsauQrR9TnJYX
War3byKsYtapSRfCvpyMcyhip76mS13nR7AZo2tOb16sJvU0flbTtXYxq1xH
/crWXc6s4ksX7xM6JSy6Z2MLOaiQpU+7NfJNjWQ+pZnT+yntC5j1sIZr7KQC
FvJly7RI/Wye/8Lw8NyULHZpf58X2XXz2EGzjpE/mhbyO52tLjv1SmF1KmV+
ebo+m4366N8lZXopr0Jm7MooCGObT5zbsnV3BvNt3eJLg6/q8mnrOwvm77rH
vo08dqPJwlSWGedYxdZcQ14zreqdG02T2csO2lO/VS9hfgEOc400i1m1nHVn
Gy3OYHsLXpr880hduhc25NjuPbls0NRO58a5ZTP92/U+t1mgKa1uVddf63Ma
85rc1qKdeh5b1N7umZ2NltTLWqeltlkUy9kws4VOQR4rfNWp5u4iLWnq3Zcx
33bILDzsBQsxzGKWqcHNLC5oSAcTd8QfGp3Fza9saxI2NY09HM+qW95Wk1iN
NY8OWRbwcT0n1jzbMY61bXRrv8mpQnb8XVOtm43U5CVvTcyP+wQz0661z7bq
mcN6GC6vOfaeumy5JKfy1g1RrFnLiEvjTLWklvZt9tYwzmO5ORVPzBscyyoZ
5iSNvqYtVcyoEbfxYTpLW2ygEfw9nunvGvBwUncdyd1j38a3M6LZz+7v7gXp
JrIJr7StrFJ1pBZWBhEn37gzec3qZz2WxzA3x7l3VrTQliLnTNkZb5XJD/cM
7WYzI5JN9qr87tFdTany5uHPn7/O58E2bjV9LwWzO+u/jdW9qia9zLitPehh
CQ8+1a/CwMZf2Y+F3kMbT8pnM+73fpixT11ebjrj8uszJ40KHbQ31fVQl3oe
1pC/ti3hrvFDHs3wOWhk0HZBz21tClnSMo3lNeeoy88f1Hvzpp4ft/xYxT+h
WSEbkjrj9v2u6rKJ4D838vq+KmdblML/oYL/3G3s6ZNH9UMo/7nj3Y4vtbL9
KP/52qfzzBNiPBX+Lxb8l3sW2Ex4FPuO8l8O2HIo6s37Nwr/dQT/edh0g32F
7T5R/vMW8ed63CvyVfhfIPjPbX81b9za8SflPw9Mqm92vFakwv8dgv+8aqCH
doWcWIX/ZwT/+cwVvx66ldYN8n+t4D8P29+PnWx9T+F/dcF/bvb8vqefoSdH
/g8W/OdqM54sGdjwJ0f+fxb856dujQ+ZqBHBkf+5gv88MeXpUN3sSI78jxD8
57t3xRRbR/px5P9CwX/etV78R/VVTzjyf7zgP/fq/Ozl+TGeCv+XCv7zMZcD
Pz89Ha7wf4PgP7e23b954NJw3hr4r5b7L/+5Xljwsy7H4rkO8D9f8J8baW82
v2meyj8D/6ME//ml9dUiIsLSeC/g/0nBc35h/lTdSyt/ceR5tOA5t/y+KqjS
/McceR4heM5vLHFLPP7IX+H5F81dfQ53d3Zx77LMftoVL448r5W6eviQJtdc
fN5Ez6ru6q3wXG1HcWvj1IesUs+L52x/prOC71GrX03RkAbxdy67t3PWdNjo
KGc5k7XS6drVwFBDLrL5dz2n64eI9VxPdb10ImBQvJnFV956/dF+ATMz2Rjt
MI+AlhrSGbA/rh16cJxxDNrlOgIPjz/9wSPaOJ7lg/8x4P/juqV9Lm2LVvDo
An66vg/g91RdL71Yu7Fm3+nP2LKvPr9y6yQxQ5N806I5GtJegYfJqnikf8Du
QnB+BD9LVP3Ic68MqVVxrTe7sm5MtZsn0ljLQy+6uhtrSH/pO2zBn/WZOc+v
1dr8Zh6b3u1ArYfftKRLft43OjgGlOuDWbX/1QFO+4KJqAtO+6md0BNO+0sP
UV88AvpyT+jLa4QucdqnrESd8vqkv38S+sah3tk+1X7HC/XM+/uO/cjCdq0Y
ERSXruTnEOj8JND5qoL/bOGDPmYjxsez17WjezwOryj9cu9RNIHFs68zD1Q6
HpnAAmoY3WryXUda9uHQeH7Cr1x/aSjqi9N+5CbqkedA/9JR7V+c9rtWot75
aeCDgSqfZc1mf4xLbmD6w8+y3wvWca1xhI13hhJvXWHn1H4QdIDmwQL0h/bf
bIGf0/47X+SN07wlgy7Rvuwt8slpPgNBr2i/pnbM8xfiZ5Hww+m+mP8FgPMN
4PwpcPIsiIueC80Dngvwh9M5oUDwjVO+zYe+QOuuKvQpOqdJ0KfonOYJfYrO
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
97T2B7GUtoMeTdoRzxo62NWPqqIhHYc813VcvKSGbiJrCfehKfDejH6f1oPf
bWg+HwGeD6r8lNfDu5FRqvfmUjDMP9Oh/16F/qpzyKTOqHXRzH/9tqKjD6Px
Plo6BnVXGd4bfIW6u+R54UDvG1HsyuP5RWarY5ipyI+iD/+OJz2+MfFvTWm3
wabANp9C2E7rsE33MkLZlF6p3X2ZhrRqSPNLZ/VK95uQ0VX/fQSr1y7WomJj
damhu0XFuy4JrF/igR+e9X6zBlmTkt06lLBGYO8P9oEfRoZtjQ9mFsRP7Pjp
jea89WF7Yd9dsK/Pq7k6+ivesAtrzI5/P/GFzVxr92LZ60Amf7rVvcT7EjN4
fn58ww7ubHiNHT+5cSizD/3c82SWxl/jsmjo8SjvyA824ca2Nafm/Vbiul2p
ZGlOUhgbevWM5rF98UpcdtU2Drzc7zfrfLNWgKFfshJX/PVpk96vj2XvLluv
76yTxl5Grxr1bV9BOfuMkuQ+Bq9/M+oH83AH9h0O+2IerADnRMCJebiktadh
SNuXzOZpt+LD28L/M177g6ZHsm0+seA7U/d2Ko5V4r1p+ahztUm+TOfXyz49
nqco8Q65HrbZPN+fBTrvHt/ydroSb4uTk6u6bgpi1Vq9vNnaPVOJl9ox3mHg
Jwj8YLy3yL4Y7xWCE+M913jEbP/A1UY3wx/9qtk6QonXvtay9B9mO41uqNV0
Dxwcr8S1b94A3cAlB42cDyftM/uQqsSlz/v/jj981MgtYelGxy8ZSlwjJle9
FVTnhNFQrU0lAxpmK3FRO8aFfj6CH4xrP+z7APZV4gKcjoBT4bM4R07P8aLI
A6fndUPkjdPzGizyzOl5NRfnwul5FbzZ1LvvzWA+42z0m5L62azfNGlKinUO
G+yp5R684Bd3naw3MuhANvAno9x6Uz2TFslBSeX8Y34QDz33mwQ/5seexIv5
uUzyg/XeWtQ7p/UOdc1pXTuJ+uK0rk+IeuS0ruNE/XJa15sf7IwMto7nh1of
Hti/UrqSt8N1Sja1apPA60wzqTzXLF3JG12PeaP+iT5wqg+gS5zqgyXES/Wh
LeTHGPKDeTsj9JOjfmLeQOf57j/rPE/+s85zI6LzNveCnjzITuEdot5fLvCP
VvJm69UwvfvoNN4gz79n76QYJW85+yZsqfY6jRuVnC/aNzpWyRtdj3mj/jFv
jQge0l8U/KS/KPGS/sJnkf6S7HClYa1jV116gq6izp6F9Q2irs7ImfDpP3V4
D+x76ln9e6EeL5Q8I86wCblHZC1bJc8Y15Kjy4cd7HuPY553QB6c9+0xH6L3
mmOeqR3z0xj8WIIfzI8l7GsP+2J+9gPO44AT89MGeLVz1skO59a7/Ge8yM/U
MzM1Gq15wDFe6Hd8sHxy0IYJnznGexL4nxHzZmSVwT+UeBOgXi432LJm0stf
SrzUjvGinyzwQ/osHw77YryrAWcm4MR4HUF/hnrWHz9k1O3/jPcW6Nil6H9M
4jp8VOK9B7p3c1KNSmqVA5V4TUAnt3T2X1m7ZYQSb0fQ1ag6g5o0mB2txEvt
GO8Y8LMN/GC892HfW7AvxnsbcDoATox38a34Q2+H27rIDbKm1Y2wV+JNaXw5
Ycix8y7evTZMOjfQS4mrdaXOXg7eV11m+o170fh+sBLX/UuB08z8HV1Mr9nz
piuilLiWbzteNOLyHZfJ32VP45JYJS5qx7iciR+MC/edC/tiXGmA0xdwYlwO
MC9J5BwdYN6wJ+flBPPJLXJeI2Ce2UbOywDmH3pe6vzfvsm2lJwd5VUYy1H3
jEWfZRPXV5q7IyyOo+7R9ah71D/mB/HYkHNH/LfJuV+HeK+Rc78O+ekI+UHd
6wBz9UFS72tgLg0mdX0P5tjepK5Pw9ybQOo6Bebkk6Sud4i+yULqx40cEhqm
5M1O9FmWumlh+MF/wpW80fWYN+of83YW8CQRfbgP+PsRfVgH8YYRfegE+dkL
+cG8nYfvlBakL4CusudE/63gO8hskqr+N4HvptQjqvq/W+g8W0L0/7Dom2xR
/SPaVWPfKXnLE32WpXe52m7SPFclb3Q95o36x7w1JXgwb2sAv/4k1T5yEOJ9
SPqIPeRHH/KDeUsTfdaoO+mzey9+GlWzIJiZrm0ybETPULbXwaPjz1kakt1l
vet9p5Se48Z+Tk8tItgG/6J9bJi6VPL6tXnNxgmshY5k8PNbFMu5n7ByxqkS
ZrnVPCtzdwqzXV6rVujNaNa3n03lrpqFzGHl/op6ndLY7Tq5h0f5xTDLlBNv
ootL+ZY1t8vQV2nMbO4eg2qjYpmt1tPD1V5nsLdpvXqWdE1ltz/k7lupGcNM
Nu//0O9ZNGt+fsGBh9MT2SM5u82Kab/Z1Mgx7isuhbAKS3Mb7omMZrYjX497
UCeSbVvcya13M1/2KMz/4B7jMLaz6T8NB08PY2b99Uq2tXjLxmW8bVj8/Cv7
otEjZPPBIKZ/X89txcarbKbT0G0aPy6zlu/aT+uj7cfUjtbq4pgykNXJeWMZ
tCKUtaqb91V7fBx7OS2oeeJKdSmpagt7XRbF9t541dcpIIk169vLaGVxCbto
uHX75/cxrPHSQ7aP7pV+H/UfuNxtSyFL8K1tsLF+PBv81H/ugYA0du726Mjo
XbnM//E6jV5NEpjhzYpjY0zTme3pLQZewzNZyzdaFnVaRzOXaZd07r1JYRrx
Rxf5dQpjRkOPvAipH8H8f7WdZP0ggRnULI4O2/+N2R85M9BraBBbFv77ecmr
aDZ90KR2y9q/Z2er5vwYVdObybNOj0tsWvodNNd7Y0dNRzZwl8e3UTO/s/49
e0w455zGpizb8CC7m5pUY3XtrwvHl85nQTbRunUy2bmjdilbMwvZSJ0v+2zV
gtnnF9nxix5lsdVdg/P8KuYxW53E/gNG/mKdQjq+dt+Yzez6zTea5JPJsoLT
EoItAliV/dua2NpmsI1POjdP1A1nBz7++hLS1Y/9GGA0cGthKjP4MfR67WI/
9uKCg6vZr8+sqp/9suLLCSx2m5PnkjEf2PKLulHXAt8ytRotPS/PjWLSvnHP
/TTvMsNJNeL0Duw1qjo7q61zxWS2v3HGy6qHPrL9gs+8t3ubPVvcXRQ+nxR8
5qlt6zc7ZnGG8pn7jP3cdXtlJ074zF3e5WXPuf6KI5+vCj7zoD21LWbvfseR
zycFn7mzs/HnxTNdOeEzdz7R8Ybvjjec8JnnLm9y42PzBxz5XFHwmdvcjFsX
uWMV5TO3vdv18/4fTymfedePi3S/P/uo8HmW4DMfeq1/jS5mvgqf6wo+c3lf
/c1j17hz5HOy4DO/Gq1bLXnUd458viz4zCsM/Oi5eHLpHAJ8ThJ85uP7brIN
3RrGkc8/BJ+5UePgJed3hnPkcyvBZ157pL9TVr1AjnweIPjMh0xJYAcLfTjy
+YrgM3e2OtnJfLgLRz6fE3zmFx6FNOnj5KzweZjgMx/cq4eFeucwPhX4XF/w
mY/a6X02OTOKXwA+TxJ85vOllw7nesTytcDnk4LPvMUBgxFz5Dh+Evh8VPCW
Zxw9ePzwoV8ceesqeMsfDPq56lSgD0ferha85bJL0bZPbg4cebt0m2fnH9H2
Lo8m7U7Ic/zOkbfNH9VxqP3+KpOHb54c1y6QpZ5NybZpryk1E3ZO7Q2+tThX
zcKZ713X8+Q8vV9sjsfrhzUba0qDck0HW3Z7xyffN5ucMDqYaTmu1tykqyn1
AT9DmX/LfGsPxU932Jfaawn/zDN8gUOlo+8U/7pHG1WsMcuRdQ8fN/FBGx8W
mVTBckoXTamH2Jf1W1WlVXZPV1YB9u0P9u5gl04PCzs96xjTAz9dwY+aTftl
DZPnsJDNdqzQjbMjTROyzm31Z0svPxvCW2pKVOeH7F1papKiJvUHPfQDPaxu
Nale/Xdq0rp+K3STXeNZxXiN70O6pLPtfnu89y7LLtd3guY5/5h+K72cDv/0
jmPnmqWX61+JSdfGlXgnltfzdb20S8r+/6WhDx6GPjh7utezFW5R5fqCw9Tx
2exbJNN4o9pPXQPjw3tIPxnUI9sP/aXJE1fHqMuBLBbycxTyo2bXJickZhu7
HxtxiE18zuYmdaj3fkSgkrd9oLffQW/HnTn4xvKEmnTl95Z67db9ZPsS61Yf
PjeLrdR0TtGtms9G9th9pLDhLzblV0d5yOxsFpth1cYkIquczn/roNW+9qm0
cn0hdnmdwBav41k10kdO376a5BMZUa7vJA8PqRZVKYCFT+R1B05yYu0nNhiS
3uqngr8+8BB5buO3ZJ1N8/0sVKzndP0eqFMa7wDQB9rvqoI+0H53WeSH0/yM
AN2gfXCEyBuneTsAekL7I7VjPo3Bz1Tws3115sBGu1PL7Yt5tgec+wFn5ocV
SU6PY1kVEhfmn+YB8w884bQv3xW84pRX/UC3ad0lQB+hc9EF6CN0LoqHPkLn
orWifjmt3+/QX+i8RO1Yv9TPl5Zvu/CclPL7Qv1SnFinMO9xWo+gP5zOY/WI
PiNvUYc/gp6r7eu+z9rcCnWP/0X3+GGiezi3/GUO54f/PIfzO3+ew/l8ModT
O+ok9YN6aEX2Rd0DfeOtiL7RuHDOAX3jVN/oXIR5oHMX4qRzGuJcDThdYa6j
OMNgDkScoYDn/rHssFNfvyjnAnM4HwRzC/J/A/AtyN53/eQO4Rx5S+ci5Ge5
OQp4SOcu5CHOaTdhTkMeOkOd6qavtR8+wEPBSeeWsaCHd0A3gq7nxk4/FMNX
gL5NAf1Zv89gzOR9cTwGdIzORb6gV3SOigZdonMX6s9wMqeh/iSAnlu3vTA8
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
M0vhR1rnUJ7cwOaj/wFJ3zmK
   "], {{
     {RGBColor[1, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAXYFsXXxndXxXh2UXF3Ld7ntbu7+29iJ1gIiklLSwiCiSAiZSGphIEo
YhEqgoqglCAqiInY3d/94x6v77oY9ux5Zmd3Z2fOuU+92zZpeU6LJIqiBnWi
aB0du2ZRtE3dKLpSzNFxFBVql4t/S00UrapG0YQ0iu7Xb/+Kv6HaqEoUVcVr
qj6n6PhWHkVPie5eRFFaRtFW6vOo2hZqTRhf/Ir4W+p8tK6t1TVXit9U/D/V
NhC/vp5hhPjniL+xeN+o/Sa6ro5r1H4V3U9jXKL2i+hfYh83UVtHv5+mpkeN
NtXxB7U/RN+sPn/quBP9xPtO7XfRme7VUffajnuJvkn0DvQR3U30jtxXdGfR
24seo3FKtcaitxZ/uPhnix4r3uZqV4jeS7zWerabRbfWXG2kljOXumez0vO2
ua4dqH7Hqc/BOj6nebtH9IP6LYv97qX6DNBvx4p+QLw09r22EH+Q+MeL7qbv
8pFe9gGddxe9QvRDom/Rva7Tvaq6pq7uX6NjI+ZB/Lri19f5GM3/Nup7lfg9
xM/E31r8XhrnY40zTr9tKP77TKboJ/XbNmotdfqEjrVqLUT3VJ9rS99jrMbc
Vn2biX+j7rtx4mfoqTFXapxH9VsnnX+v37dkXen8Rr37vqL/1XGp+vymMe5Q
W1+/HSz+KvU/V+0F0U/puK1aK9H36p5XqEU63zTzWIxzj87j2PM2SPf/Q/S/
fGs9Z+PS9J+xr6vVYZKO26m1Fv2G7nuMxnlE9Bzxjo/9XeaIf7T4w0W/zthq
/UTvrzH30pjHsB802CN6z0f1LLPV/yj1fzjyN+yV+3n2Uv8O6v8/9T9A9Jd6
32P1+2ydH6fWn2fQ8QS1AaKn8u0S96/qeKKOt4l/v44VtbNE36l7baAxDmE+
xftHx13V7hN/U/FP5huJ/5eOO6v1Ev23jruo3a4+ddTnINEb6XmW63lind8k
fgcdJQq0cKNomfi/i9dZ1/4o1lZhr12sd/lJ9KWif1ZbT78PVFuXdxA/11zc
oXEO4HuJt07sdVtP/D7i7yf6ceY7996ppzE+0L02FG+A+iax9wj7bEDu9b+Z
rr1N5/uLHqhn2kT0Scyz6Lqi/8e9RG8s+kTRlyMz1OqwP9n3auuLbqZjEz3/
Rqxjze16iWm+/8zca+AAnT+v1o1vreNUta6id9TxGbW2rA31n6L79RQ9W/Sz
Fe/9A1mzat1Fvyj+RPHbiD5IvBfVeoh+QfxdMvd5SfTjFY+5g36fHLv/y+I/
If6NyC/xno1N355ajjA/szVnI9ir4s0RPZJ5DHJgY71jA/XZI/ZaZ52/jpzQ
Wh2q6/cVb4paR/Fnij9W/DfFn8ae133bib+ffn9O7TrR2+v4dBjn1tRyirX9
sOhqZn3xZGrdgF7YLbbsQG6MR9Zmlhub6bluK7z3do0tU+BvJP5NhXXGBqI7
FZa5/yJnCsvBf3S8pvAe2Fltotq1unb32DIC+TARmZ35vsi7CbFlXXONeW8R
3lv0DaXl1PU69i08HnprXOznR1c9FvTXE+iHzOOPFL1N5nW7ia7tXVgmIkPH
x9Zr9cS/tbDM2lR0n8Iy9BFdW5tZj+yq41s6v5O9nFq+s0fYS/eFfXSAeKv1
2wTWoegvRI9HX2iOtxB9AWtM3+5Kjd8v9foeHHv9TxO/tfhDxb9HbUtdfyby
IbUOY0/dK3qrzPKkjfquq2fdVNc/oPE312/ni99K/HXE34R1rTGb6Pxu/dZC
x4Q5FP8h9A3yWv27aB19qH79wQwap9TxPPHbsxfV/0jRG2reN1P/00Q/pD5b
qs+FotsiS9SnHvtPYzTWeV90hY5Xl76Gca4prVuHpN7/7H0wxJDYMuFZXXu/
nuOWzNejV9ApT4l/uq7vknq+7hL/UPGniz9a/Weq/12p5SOy8VXGUf93xOut
Vuj3YyLLkL/RAZH1+19qR6BT1P8M0V1TzxEyGvmMDBoU+zkfFL9G41wW+T1H
xP6O6NGRQV8PTo2HwAN8j0difwvef2iYN+b94TDnE3XfY3Tf5qm/N3KQNTA6
9bfkWr7f8NjfYlT4NtCR5vL6wvijregHS+ucfcTbne+FzhHdUfdIdN03kpFz
dT6H76U5Gyv+peKP1fM+pnaPrr2bPaW2DXoNnKN79RL9ra59W9e+wftKybyp
PovU/3Lxh2us+uIvBEuqz0RUtY5tNf4fuv498fvXGGcu0vk5qel3xB+vfuNE
LxP9qsZ8WvT7oueIP5nvruu2lJ5eT/f8SO/TUG00ck/3nqE2SvS76j+x8P5q
pf7DWStgW93rVB1HiL9AfZ4ovB8vFX1KYZ24ro7t1P9v9W0ifvsaY8uGoo8u
jFE31/1n6Nn+0Rz9Kv4y8d8V/3qNfT17m7WkPtPU52edX6I+HTROjnwQ7w72
pujfxWipe/2se10sup36bCb+jTqOZ39qvO/En6/x30Rfa6zraOhw8Yeq39vi
XyX65MJ4oJnoUwvjh6aiO9YY916ue55YGD88ojHqav5u03xdJv4JhXF1I3AN
clv0T7p2mK6dJ/oX0W/ot3eYBx2PV5/N0V+iTyqMA9uo72g9cyM98xfqP0u/
zRT/S9FL1OcV0d31++3qNwXdEhtXXiz+GPGfFr/UM83Rs81VG6VnGyh+D/HH
gMM0R1vpeJH6P63fu1a8Jnurz13q8wp7XXRf0XNFb1D43XivUeIPFP9P5Kr4
l5a2Cx4Vf0iN53Ww2kvgVvGHiP+g+HeLd7/oPqIngXGqXrffopdF3yl6BrSe
9Vu1Z3XtuKrnbT32UNXfaN3Mv38X+gzX+Xu61xR0kPrcqz5/aJzT9ftpahsw
J3rGFaWvuVN97lafpdglOo7Q+fmiAb/3obc03tea57f0brPF/ofnxH4R/9Pc
408T/7Pc8zBd9OGa+y0SY4avcs//LPapxhyMXte1H4n/osacKv5K0dMKY/iP
Rc8Q/aLoFaJfEv08+1fj/aA2X20ANo3GvFPjfKzxVpX+rb/4XcW/X89/q86/
V3tN1/YT/ybxh4l/rcY8P8jk+8S/Gdkk/jXijxC9u/iPa9xJavcltgewETBz
Ttb5qYn34K+x6fVFVzXeJ+qwt8Z5V3N/EpgMWaE+DWLj/HeQtWA4aGQz+pC5
0rWH6flP1fk+uueH6vOg+IeJf4j4p4i/t/jLkdHiHyr+QeKfLP4hog9gn8TG
GmBl8MbkxPPPd5iudlhsuQou2zNgsxpdW7807uuADaq2i+j64m9dGivl+l4v
sU4y45rnU2ObbUVPFt1c9NbIttI4Duz2bGqcthV7tzR2A2c9lxpr3V0YU3Gv
zTT+RM355/p9gebnZDCl+myvPm1KP3899XlMfZaoz56sbfUZxjrX7x1L2zy7
iz9f/L7i76dr9xT/aPF3E/9t9Lf4+4q/h/hHib+H+O+ie8XfS/Qy9Bz31Ryc
BTYSfbD636T+Z+p8Y8mOz1mXrE+dnxN7Te6naz9LrVMWindGbLugn553tdbD
J/ptgXinx7YNV+p4duw1v7Binwi6qb7ecbbutYXu87KeYbvE90X3IR+RjSP1
e9fSz7elfj9Cx07o+sSYFHyLDbFTGuwC1kdsW2M3vcvnep5D9Ns08Q6NbY9U
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
HHPWbI/I9ZXUAvUV/X9hvxby
          "]], Polygon3DBox[CompressedData["
1:eJw1nAe41UTXhZOAIJ7kKnoSQc299t57773Xz94AQUUBAUWkiygIIiBNinRp
0hQRRFRQsKCICgoqRUCxgmLv/3rvyv88RmZnJpPcZGbPWmvvObs1aH55sygI
gldqBoH+CzaUg2B5ZRD8EQfBy7IbyZ4i+27Ze8p+LQ2Cv2U3SILg5jAIRpaC
4E2Vx6iTa1X/ntrXqgqC4To3QfbwPAgGq/1otbtR9irV11b9SNW/IPsD/btM
xyRdv4/6m6h273Ot7NtVv7fue6nsHWW3lP1UFgSf6vhW9mDZz6r9J6qfIruN
7A7qv0L9v6Jz58nepH8365it+odlf6HylzqeK9rfpb5e0PGM7H11/wf19y3Q
8y5Wm3E6d5DsR2R/x/PKHlRy30+pfL6u3131D6p+vc49q3N3qq/ndIxXuVL9
ddXz9NPf8AR/h9o/JHue2g+QfZnsUbKnqnyJrk91za+y8wpdq2OZ7NPV/49q
f6rqv1X7vup7iY5VqjtE9qc6v0rHNNmH6X6/qvy7jpdlXyL7El2/RdefoXN/
qv3d6v9Z2R10zyNkz1NfZb2vH1X/oq65UO1v0Lm/dK1OB0Nkt5Jdqbrusqfo
e+6giisTv89F6ucqlatU34nvobaR6t9L/A4+1v0+0P02qd101Qf6u0IdC1Q3
VuZz6u9p1X+u97pIdhtd/3LmZzlLz/Coyu/oWCm7LuNFz/OP2t+m/u9QfT/Z
u6r+Vd4131P3m6H6drrf4bKbx353f6tezYLWqn9I57pxXvZ9smerfQ/Zp8t+
R/Z5Kq/XMVr2aer/B9WfpD6+kf2YOnmXMajn2ZX3o/Z1qzyGJ+rcKNV9puN7
lcer/l7Vv6DrH1F/p8n+vhiPc4q/70Wdv1z2TrJbqP4etS+pv1k6d7zsj2S/
r+u/V7tpvC89z1+yb1b9Vbp+l2KsLOd62T3Vfrsqz8lr+HvV/lW1XyB7pNr8
VoyPeSoP4H561oPV9xU6t4vONdP1M9W+i87tq/o3df1HsrfRPd5U/TzV11T/
g9T+UdW/wN+iY6jq6uj+swt7iOwDVR/r+ra6forO9WfO8i11bFT5AdVfo/rN
OrqHHo93qt1YHb2ZS6G/8xgdj0X+3tNUnq5jgGwNnWBqYQ+U/Z/s7zSO/tGz
36a2H8uer+ddpPsv17m+smfLPkblt3Q8KHuYnqWG/p6B6qO9+hgp+w21f1J2
Z9mL1H4r1Q+R/aTaD0jctoPqTtQ9hqr9Jzq+lt1D9Wfqb9moo4vq9pZ9m66f
rv5a6n71ZZ+nunU6HlD9Tow/Pe+9qtuicom/X+3/U/sHdY/dGD/6I1vIriN7
B9ltZbeUXcJfyD5H//ucdxy6/zaqv4fvpfoy/cu+T3Yie3fqda/xKveNqqdi
cL2efaKOfrJ/ln2/2rdR+wq12UN2pL5by35adh98nuxvdDyk++2n+rNV/gof
KHsf2Q/o+gfUvq7aHyb7XNV9raNr6PH0P5W/x6eGnp9nqbxWx/2y68nup+ue
0PGA7nW4zjVV+W58ueyvVH+52v6u4zHVHYM/VLlKz/9K6O/ZQ/fvpPvvzTeS
3Uf1lfgU1XeR/ajqO6t+H9V3lH2F6v/U0Vv1x8p+XOVc7efJ7iy7o+xf1P4i
ta+vc5fJ/lVHL5WPVv2lKv+so6fso2TfofJ/OvqF9idN+Ujq7wnZZ6h4g+yf
dDxatL9b5VD1/WWfKfs6/L2OHrKPlN1dz9tR99+L8Sm7m+q2U/txqr9Z9gJ9
5FP1TT/S0U92e7V/XO37azCdQ3vZQ2SPk92I76Pr6+j64br+ctmPqH6Y6ser
vjHrke4zWkcPve9GatNB9X1Yr1R/LuND19fW9UNDr2dtZW8te1jo9eyK2Nd3
1/ULZY/BX+r6YTrXVefaq/02OveU2l+h+ofV/1DGl/q/jb9X9TuofoLqG1Av
u67sp2XfIruL2g9Q+6fU/mqeX/Xbs96q/lbwge4zgrVJ97qOb6j2/dV+uNr/
T/UXxK7vpvpZzH/V92O+q/5i2WeovzU62ujaHZl/KjdR/zWZ77I/1/tepva3
qo8jdK636v7FX8puInuz6j+W3Uj2MbI/lL1U9k2yD5bdikkpf9JN9qHgFcah
jttUt072xbF9+6H4Wtkf6/7ddI/DZL8m+xPmjuyjZX+Az1D7R5gjsk9mvWM8
6n7n69y2+hu6636v8Pep3dnMv9jY7Si1f0f2UrW/XP1tUtvFsp+QfbfsHfC3
vP/E/QMSt1GbXvhiHa0LfLNE7S9jvVP5bbW/Kba/Pk71n9Kf6mbp/g/pXFOd
26L3vLMcz4cqr1X9f4nxwGvgR/Vxva7fUfb7spepfo3a15a9SPYC2Yv197yj
/tap3SjW+8I/nK36WrLfVv1i8ITqR8ruqfv/VPI7bqQ2b8reRe+/vvr8QPZN
zEe1P0f1WzGnYq8/Z6juM+aT+ntJ9Y/r/HG8D13/VuZrm6n9V6rfWf3toP7e
1bl2sueqfe/Y/uQB2S/Kfiy2v/pKz7Kd2r6jtu+zPoAXVX+m7llD597V81yq
c9+p77fAI7IvAe/KfhP8Ibup7ArGt+yusu+QXUf2BbIrY/uq7WU3xPXEHguJ
7CvxL2o7Vfc7Wef+UJ/zdf15OrdB5ZfwF3rel1V/nupLuuYJzY8xsj8D9wbG
Qc11XBgZD01U/fb6+0ep/gbWF10/R+3PVptaatMxNvYMVd6L8aD6+aq/UOe2
Ay/p+jq6/pTE6/lVep5bAWqqO1j/VMT+NluDl2TfrLppuv40nfsXn67+Ql3f
XfYpqn9F15+rNutVN1f2PNnnyF4H1pL9pG4yUdd/oeddwnzR9c+z3sZez4ao
fpLsL1X/nuydY4/3VpH/vsGqn6D6Dap/V/Yequ+j+vtU31T2Kbrf1brfr7rf
dqwnievbFPyiWfH+flO5tur7q7+x6m+V+ntV9nhdfyr4PjTe66P6UapfpvoZ
snfQ/R7V9S3U30WyJ6j96Wq/OjS+fkn22bI/lz2H9TBx+3vUvoyP1N/7t/rq
xBhR/e1q/6+OvqHxKXigBmumyn/q3H2yX5PxP/CI+rgrNva4V3VfB15LRurc
zonXlBG5/f1Q2Q+q/fOp8eslavM/1b+Qmg9cKvvq0ONzqJ5nRGh/taPsYbJH
8v5Cry1r1X6nxGtMvdi+fJTKdWkTe60bxPukD7iW7IEq1wq9Vq3R9fUTr1l1
Y69lg+lbx1O58d5g1XfS89aPvbaMVt32Osboed9i/Ov8ebLviI2tWqu8UX//
Aeq/h+rf1fmTWLNl95S9knEre2pu/vi6+uyv9i/q/T8s+zXZT8jeKHuc7NWy
58t+Tfajst8pmX+At7vLfqNk/Alf2BOuqb4PBB/HxoatVP5C9QtT8/erdf4W
nXs2N37fWj7nDf1936m/8fhP9feG2i/S825bYT+Lfx2t699U/Se6/tzQWONz
2XlizLFbbKzwDNxDx0zZu8E/wYOhx9JqtU8TjymwHnwLPAjmA2utUn2vkjEX
2PBT5l/JGBFs+ZnsriVjzKGyX5e9VH2cIvvi1Py1vew/9LwXpeZ7D8j+Hf8P
l6+0n8W/3pLa/zIuGA8NUvtnxg3jpVFq/864YDwMzb1eddXz3hkZW6+UfW/J
GBusukJ265IxK3i6vcrtQuNnsP0nqm9TMsYHu6yTXZkYw+Cfx6puYmg8WRUb
m02CD+jYNTYWmqzyzjpmyd4djqPy/qGxznr1V5UY88zQ9+wi+0XeV2DshJ6w
a2IMBf+N8U+h9YP7Y3OBDrJ/C+yft4PrhNYHeK/bMhdCv1/eK1ygY+j3W41t
dS5LjHHxz/107wGh18+dM+PrOTp/gOxncusjc9Wmm66fqeftKvvlkvkj42q4
2qahxxfvaQT9h35fzHu0kzj0/MfPoJ0kof0N87ovPin0/Oa9jAJDhH4/e8ie
whjlXYWeO9N4p6HnUD3ZPWXXDI3BWe/b6/kGFniX9zhG9fVCv0/G+kTZVaHH
PN9mMu879DfaRfYg3llojNtQ5ebqayv1tYH1kbmqcz+w1ml8zVHdYtnHh9Yw
psqeJ/tg5paOKbJfkn2Qys9xT9kvyz5E5edpg19Rn+0ic+p1iTUxtC30qMkq
99W5+1X+IvJ3Q4uIQn+/Weh3YJPQnOcV2cvQKlR+Q8ds2W+DfUJzrG8Tf0u0
H/SweSVrAR0jc+D5JXORM8Av/E0lc+/TwS/4/5K597GhOdkvet+T9b436vzS
wOvTvbI7lcx/N6Tmo3fG9rcnsnaqfFNozFobnJFY+7hHxzEqf42eERoDrFB/
l8f2r6yvR6t+I5pLaEywm3xfe51riFal41a+jdquAluqvonq/tO5xiqfovrd
Nb4f0vPMRz9jfMnuhj+XfWRo/agXekOxXh+l679A6wu9Jt+g8jclY9ul6u9Y
1X+rc1eGxmAnyP5F9o2hMfXxsn+SfUNoTHic7B9lXx8aEzbR/e4HX6vP/dXn
qtT6QNPYfPmz1HrA7bK/BJ+rfSvZbcHhskfm5vftZO+C/8+t13STfYDs9an1
g8ax1xf8OtpZGNq/o1dsJbt7yXxmp8z8+4XY/qp+Zv76fOz1YbLad8DGZ6r9
jom1txqhOfJ3qfWDtrH9Uwu1bwd+Lhl/TweHqu5Qxq6OqzLjuZrwC9lXZsZn
NRLrR+1lH6M+x+nafcCjaIuyn5a9r+w/GWs6t5/K14NZVD5Z9TNVf6DOPST7
bdnPyz5I9nCeT+f2ijxHnpLdTvbekcf4tNScD67HGATPb5J9cuQxhHb5Y9n8
CG0L/vWD7GNl3x5a21teNv+DB85Q/TLZh0QeI0+jLel+B6DVhuZfcE64ZhN8
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
8Sg5U/BzxjRjmW/8f+DQplI=
          "]], Polygon3DBox[CompressedData["
1:eJwt1weUVsUZxvFLM5FvlySwu6KCEY6kAAlEEQsIlsQYPeqJJsFCUZoK0qQI
oaso0ntvImWVBQUEDBFFEbDSPEHaQo5KOaGqgKAR8nsznsPDzvuf552ZO3Pv
zHw1Wne5p3PZLMuWUgXqXz3LhhVkWTPli/OybDrNwEZjLbBq4uH5WbamKMve
pJqSm4lP0HS+cVg9vnJ8z2BzsUflVsNKxItpjHgAPoNnJrVUN0fcCledzfff
AnpHW6/i5SplWVlarq6PeCh+q3478nSU/7b4hsJUvz2XZefwaXwntbcXe5in
AraRbztfpzJZ9jPtVaEHeM7QSXn9eMrx7+O5T/5prDs9yd9P/Dzf39RX1d40
mop9jZViD4nLy1+rj1fwb5XP0jx1C8Uj+G5X/gD7kJbxLaeKnmOKPjZh8/kG
8DXiezuen97iaViY2vmY71TMId/qyJd7SHyQNslbilfwTOVpIf8s8Wy+KcqN
Yrx8PbEHectjbbC29LX2H6RhygU8wzzvFL6v+G7RR4eYlxgztqsgzfOF+qhI
L8U6Yr34dvB8SiXYsmB8n4k/p79of5GxLFNeQufVFfMs4t0jLg2ujV7i1ngV
9e2Mp32MW95F8usoj+frwzeTbybf43xX4KPwL3nup6HiKuLnPccLfMXyx8p5
CSum3lgbuf5lj/F2oCXYP4Eh2GGeI/Sa+ArtNVA/QdxX3WJtvRhe8er8tFan
+F7DLjEfl9I+bLZ4blFah1viG+J9gm8evkb5jfz0nRzS/gPYeWs7mJ4y5oPx
HNg58aDg2HGsGT2rrcpyh2JltP84Ngmrik3ABuljgdwN4vXURB9TsWJsi3gr
PYItwqrKrSt3bH6ax5Pi5nwXYM/rd7j2TmMtsB9hw7AR2HLxYfn/ktMcL4r3
TfwyvlNbu/LT2lc0vr7y5/JUw2bJzbAO2ATsImw8dkbcUu6PY2/Rx8gyqf3u
WAvscC71NRYbiM3CZlMrbKT4TXy48kfYx/QPcW1tXqv8AT2t7km+5gVpj3sE
e5Ru5NlPA/X3E2PphL3CcxlWT3kNdee/WXyABvH9lK8r/ifPsRY7rXwt9oW6
G7Eu+rkN+8SYS7F12mvAdxP2aby/2hvFsxGfprwD20m3xX7Kd1L5mvhm5A7j
W8LXhe/1eC66iWcv9VKfx9cZe5Xn51h95TepB/8RbKL8/4q/p+3YMWwyFpts
+3g3fBNHsUnxrvGcjzGqniA+gG9Wvh/7jurHuuFNld/3bNv0Xw97DGuCvYdt
xcaL98vdJPc+/FtaKr7c+H6n/Bb1VHeN3JKYV/GVxrJD7nC5K3j7qV8b+zr9
gu8RvGHk6mMj3wjxSr7+fO/g6+g6viXaO6R8lfZ28jXBOvP+Edsmdw+2Wl4d
vuuwD+OMylKftbCrxStyqf/YC+pi12Orc2lfiPesHnZDzHMuvXNL44yijfqc
nEt7fDeectikmA9sKn8XrCw2ERuHTYl3LcYc6y53VC7tJSX6uJj3N+pLsE7Y
NvG9fMflfo6V5R+A5bDZ2HRsHn9/uUV4ZeWR2PVZ2odrYFfGOuTSd7kPGxf7
e+z9sXbYep47tHdAe7v5zuLzxaV01HuyGZup39Z8ZwvTNxrf6ii+RjEH2H+U
G8T3r64x1kkft2Jb+XZjK3iaFqV1iPU4Gmc/dqow7TWx54zA3uVZRxdUSud5
nDcLxftiDuKcwebo513PcbXcm+MdwCbwrRPfzrdfe7uwM7En8DUOrvwR9iLf
qvgmi9I3Gt/qMXXLY22L0lhjzEewleIV9In+7qBK+t+rvbGe7YT6L2mj9rZg
o7EvxPvpdWyPvI7Y7/PS/MU83oNt1k8ZbTWmY/Hc2Dn53/D0wO7lm8hTC9+g
vm7cXbQxRjyaTmt7EDaY/q79jnJrYr15+uSlc7EtXuuHdyj29hJ5BYXpHYt3
bWWcA3wVYyx8vehSdXeLvypMd4C4CwzE7xQfK0xnTpw9fbG7xCcK0xkbZ23/
vHRvfDjOwdifc+kO+Z5+36crPdO/sarWtD3fhXKz2KvoEsXdPI/KbSzewHeY
/0Oe9XglOS/oo62+5sh9hq+Eb3Fe2huHiOcVpL36l/GeR//ip/GXlRdR57gP
YU/FfUD8Ul76tgaJJ+PtlC/HFlAL8fm4F8b9T+xP1jIuC/HuC3rm/X/o2SZj
e1B+ecFzsd8b82DxFN726mvgC+lZbH5B2pd/JV5GT4n74mPi/KW7s3THbo1V
F7+YS/ftwdhDWCE2DbsLm6nf9thV2BvYZfqdYWy/xbeYo/rm6hN102Mfifct
9uo4+7G22Hc0KvZRuaOxueKGRWkPjr14d/Qf52dR2kdjPy3F5sV+WJS+7/jO
98U7aRw7jHGtcf1ZfJyGVk/7WMzva7Gnxn0CW1yQ1mGleBU9pL1vCtOdIu4W
I2Pt407H+wflLVhxluazDVYTK86luX1OvKAgnSW/jm+XJsazFqV1iPUYkp88
7Xhr/7D/hb8rVlm/F8bdgGpj3bFWfPmxHnxNs3QGPoE9gB3MpfMwflP0iDtq
fPu59Psi7tNn6VTs17l0ty4Vd+P7K99n2IYs/Q7KxTkQ32ku/SbqFnddrGKc
RVidLN1/y2Pfizvn0l14M9ZVe3fGfQFblaXfS2X4vhX3zqXfTpM9/9bYK83B
GGwo+D/jWg6X
          "]]}],
       Lighting->Automatic]}, 
     {RGBColor[0, 0, 1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8F9MXxr+a+STJTLbvvSETKSVFCSki68++lLKkiGypRClZylJJdrKl
RZaQNfu+Z98i+67NmjU7v+ftuV7+uK85nzt37tyZufec5zzn3M86A4buM6RB
XV3d97W6ukzHlfO6ulqoq2urH2s3ratrrnKtzh2t+lV0fCjVr6VyjX7/Fevq
vm1eVzdK9VtJPkzXzpDcTfKhkqdLbqa2QWWq2k9QP811/FP1rVTXUmWWfi+o
r6v7UNc0SPXrqdyg+kFqv6qOD6u+j+SVau5zvyRfIPlgyaXkWyQfIrmp5Fsl
ryJ5eY2hq+S2VV3ds5KLsq6ut+qbqM001d+vsV+mc7cWdXX7q75Q/YWq76lj
e5WnJS9Wm5N07YOSr1O7rzXWVSUfpvG2V38/SD5DbTdT+UEvc4iOnVReVP2b
Ot9B5UfJK+iZfkZWm9G615Xq6xXVD1XbziovST5e9Zeq/lnJB6n/Mbrvo5Lv
0Rgu1Thn6dzb6mMLlUxtl1OfP0l+QW0u0O+11U9TyYdL3lDy9ZJP1bGDyvOS
29VcvzDzsV1q01b9nKm+b5T8hZ7vK92vkPyj+j5GbTZWuZZnVXlO9e01lj80
tr31e1eN89jgd7675GGSb5PcpvJ8+p/aLFIZobKtfv+s85fr3B76/YHKI7rv
Gqp/T/I9kkvJz+r+U9Tmff1uqLFlOneaxrBEx1NVdlOb73W8jn4l76f7Tlf7
6/V7rNrVp/f/rn5vr1KoTUO1uUJt9tPvAySfEtK8Uts2uk9vHRsxTyW/ofq+
anOq2jwi+TPeg0oX9bNAx/lqs4XkjyTPlbye5I8lD1BpL/kTHV9WfYfc74/3
yPs/XfImKi9LXrfmtbCc5KU6/7vaH6P2K6pkuu8mql9f59dUuVvyPhrPm6r/
XPKZOr6r309JvkXX/aJv1lJya7VdI33TbXV+ntotph89d1P1u5Pu00THXPWd
Vd9JxzfV7kDJhY5R134geb2a5d0k76z6abp+KvNM3+UqyZ+xDpgPOg5Qf19I
nlh6jW6h9lPV5mL9/pJSeL2up7q31d+KpXVCVJmme4xRWb3mOfy7rv1a9yjR
M7pmA9Vvlfn7Pqxygura1lz/juofYewqI1W/s+ouUvlU9W/oHjN0358k78Sa
VvlE8q9q+5vKpfrdU9dcrONE1pfqdot+/6/rnfwiebLO3avjHiqDVf+b+vyV
uaP6QmMvVc7n+9V8/Ej93K62l6nNYWp/jeSTJO8ieZ+a7/mF2lyr+rYqu7I2
co95NLpFdRtEz+3OKheovq/qd6hZ/lhy99zPMkjyEbnHOEtyLx0vU/lFuuUU
njF4TU2VvG70uhun83eonKlye5LRRcvrOdqgRyQPV93NKpX6vErXDdf4e+ja
k1V3l8pJKnkz2QiVOZKX17FRM5+7hPeU1kiFPlbZSfIA1rf6P1J9npDqH1f9
udiL0mtk15q/xQL0nn5fIvlynlHHGTXPz6N0vJr5oPPj+e66tpXkkeh7lbPU
5lwdz1M5SvI4tVkhem2+ovfxc3S/E1S61Gxr9k3vbank23S+O3ZL7UejE1Re
V/2JOrZM7+QYnX83WJ8fJ3kzjWE5tV8hd5u3VP+O6j/g26vu+NTPl6pvoWMr
9LDq39b599GbkgfpuKH6+T6zPlgn6YTjVb9I92qATa75+r2T/UR3/JV5HbRN
a6RVanOi5OG6dnFINqLm78G3yPStGqjcpt/fJHvRKPf3oM3Rmdc967+T6q5Q
H3+qr7VV/7WO36gcjj3QcaPo8Wyu483RdrijvvXqTW07BqrdlDTO5knG7nP9
dGyS5Pml9QDrHb1xS7QNv1XHLaN1y6nRtmZNyRur/6Zq/3cD66W7ozHCTjre
FY1TXpT+mMW6BTuo7WoqV+p+R9Y8n9Bv6LHr1WZ3tTk/WO8whk46vqzfn0ne
TvIbkpeAYdLcY41vovpXVb9I8mq5n4dn+Uo6eAvJKyc9f3lhu/4l9knHXzXm
mZVt68oa0x/q5+no77Cn3sMD2CpsaGWdNqv0+uitfvZVfUe1u4/7ZZ73t+au
3zLVHyH5Gl37jfqvb+r1f53KDvSpfu5X2U7yWWrzltqsr98XSP5U8iDJ50n+
WPLhks/B9kruK/l8yZ9IPkryRZIXSr5a8iTJ70reR/LZ6HbJbcEDKvdh63Wv
iap/R/Ub6PexKgcXHv+5qv9I9QNVt5HGeI/KYehG1S9V/Zoa/8d6B8v0TrvW
/F4X6J3/nVnmXbOGlyYbh837SPJbkr/C3qm/21X6sEZ0vEOlv+RNk3xwZr1z
t8qhkm/QuL5Tn2ughzWG7zSGdTWG1jp/m0rvzLrtSZVhkrdR3QMqx0reWsf7
VYZm1pUP5m7DWuupMR3HGmxm240t/1t1r0Sv6SHqr1/hZx8qub/kgZI31jX3
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
cDIYpH3CIczDZ6K/Iz7rFqkePw8/4ZrMftjXyRdrBGcT7PufkXtMjOc2PdOm
KqtLXl1t2gX7PlfqOEy/69T2V8lNg+dYM37n7ud31a2ssrnks3K3XS3zGP9O
47ldfW+uUo/OVN1fCS/hy3bLrZ/x9bvmfva7gnlG/OabwTtwE3qG2ZJPl/ym
5HqdPy+aJ2isYxXsWz2j+4zDp5H8Qm4/6hzJ6+r4e27/bl56P9jilny73M8L
f/tpaZ6QseQ1j2ea+j5V9729sB18KVoXnZ973a+Z+d1nNT9vZM7k5m1eT2PA
d3stt78KrjhPx4a551j3wrEm5jM28cVoLNEi4QS4uztKx3dCZl24fM1jqJIu
xbaiCxvVrEPAFa9Hry/WPtwfvB/v9tVofHJObl3wz/xR/WvRuIh3u2EwjwTX
+3TCJBer7mh0qOTWzCvmteZk49xYDZwGHgQXguXgkuGX4ZOJczVWGZ8w3cSE
UcGE5yTMD3Y9O2E8bAj+AvYOTPhTdDsw6XLReHXTmvsjLoMfDc+DTFyK+Aox
IGJhDVQG63fHmo/EC7Cno5NNvUTXLqf7PaNrv4TH0rdesam5pAkJ97Jez0pY
Fy6JerjiHmlMjIf4EnE+YkzwTsQuN9fvZ4KxN89Gm7FpDMQ3xqRxwpmPDLYv
zJd9g+ct8cMz0jMOrcxDohc7pn5eTO+BNsQZh1fGI83BppX1MPzBsMo6Fo6H
ub9/8oP4RvD+8P/jiNOq3bTCPj7+0cfpfTJOYjEb1Rw7JG7VIcnD07zeL3hu
X1zYx5yb2YaOSLgI/4J3hd8ED4o/TMyrU3pvxGvwh4l9EveEPyf2AMe+KPl0
YFu+HRz6KTr/qfrZGR5HbUbU3B7uumGKQcBlrJXaM5ew89h7YmT0c1zNfD5+
JriRmMKgyrEYOKo3NR86BuPS24Jj28S139V9t0ocCDqDmDh6A76shcp1rEm1
WUfyyMw+/03pee/XdXXNjOcXlo5r0yeY6saa43pw8CPSs3RI85l3PjzVE9ft
X9n/W6m0Djgq6YFBNfcFNuuc3ueo3Pc/No3h6tQe3gBuHx4cDvyIJIOf6YO+
iEcMS78ZGz4W7xC8dGDl2GEPjaFvZbyyXWnfZVTNcQ1iIMRLVpV8ezAGI+bT
IrXBD4LDbKhzG6jPv3RcNZjPJO7ZIDiOSduRqT0+EDJ+ELEj+gNP3qx7t1Fp
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
712DfdXBhfkg+MajdPxI5YSkk99I+pb47ZJgrgM9/HrCyey54n3DPzMP3y6c
O0EOQ7fgfoijdQ3OYSBO1SXN/wY1v3v4SXIqugTntMB5L4u2U7znzSvPb3Ik
8P3w++CQyYEmtwObuFMwtmd/A7F+8kxeQB8E8zxH6vdnue0+WPyT3HaZ/GA4
W+JK+FD4P/g+5Cbmpf3u+1T/U70xJDkMcBnwGOTaE7sk92Ogyqe58R45FhMK
90/eM/nnV9WcY02u+OU15zrDbS5NduHV0twF63eAnrcs7RvGYFyK34q/iq9K
DvpHubkLcqHGF97fRN4fuc3kSKD74WLQ/+CRNaMxCXsJPs7dnvnbLHoOs6+L
vFBs/QzmtcZwR2EsNyh4Hxb6dmTlnBLiyMSo0Hu/6918Ecyz/SH5y2DOkDz8
EWp/Yelc3/NV+ufGsf3U5srMePig4BwA8DExJPJRWAfke5ATQnycPEvyJ3+t
93uHy8LPbRmst8m3H6Vrp+jclhr3zYXtOD4mfiO+GNxLL8mTMnMkxKiI18LD
9AzOs9qqMEcMFwe/QuyKHAL2My0Mrmc+rFv5HvDZfCtwJjFrxsfYiEPAmeK/
E6clXrtWZr07NelecuzgFtHPcPPnROt/4hlwtZskGwoni+9PjsbkaJ0ABhkd
jUPQtZcn/I+NvSLZ2U14j4V5NubCrWk+oIPPiNbD5JGcnns+b1w6jwQujhxI
9mGxxrAn8DDYlI58l8I8GGtmbO75xp66bQp/d8YAp8l7wIbOTr4SeULkGIGf
4Wi/TvgNnD8neo2Sh0iOJrmIcPlw+nBr+BjkO7GPDH9hXGUsxf4xclaYe+CM
S3LrKHK14WHhYMmnGBKdE8HcmZPmD/uKhif/FLx3UW6+lDyagdHxgh1Lx8jR
IWDIi3P3ScwAjpX2zNHTcr/bh6L5SWwl+8PgLYm3nlyY52POn1KY/yO/mlgr
nCHyJfgjpXnIi3R8uTTHSG4MuaT4o+QD4r8yVwcnWwAeQwdNzG07dldd++h4
KDmnHaLjrexDHZD0Bjk8/YPvS+wUP5xcGvab4vOTewNvCX+JP0s+P3vq4DHh
AYZU5lzwzQdX5lnujOZFwbfsfYFTZf8Le2LgWvGRtyyd44J971Y6JwabRX7A
pNx2bdO0BonR/JvjspKOj0fzluxVfTCa+wVrPRDN/bJX9f5oLhoMvpX671LY
LsNxkMeA3SdPhHwRbO4d0X4u+ps5uEP8z1ZwRCeTL3h27mvZV4Tfzd6i2dE+
OzqNfUL4/uwVQnfdnuz4gtzvA98BLg28BAfDvlT28oHr4SpuiOYriCuSf0mc
kXx6cr+Iy8O3j6+ML9mPy7Oy7xU/lHwxcqTBetMS3oPzfCC9E/bEEm8AS8OD
E08llnpBYf4KP4UYO7F25i16enZ6LvYaT6i8rxWfhvcK7iVWTEyW+GyL0jlt
cFDE5InT813gQO5P3+LIyvv+TijtN0zPPZ7TSuc1ktN4dOU9XOScHlN57yH7
NuCJn8rNFcPbHFEYC5GfR34kGAPu68jCGIM47xXRuSvoOjhH+EbuTY4s/cBh
P52bx+Z54WLgYchhJbcVXxse6djCPDD8J3l+xHDxz65PPho24qXcPDw25cXc
HC84hHwg8NWtKXYM7mKtkxt0blrvX5WeM+y9Zl6/mjm+TR4xeQJnFeYPwRXP
JxvKONlbw35W+J8P87RHLfM+d/aqsc7fz/0N0SHoM+Iv6LTDo2Mu5JsdER3X
IIftg9zzGv0DJ3lHWheLcq9d/Gj2VrM3Fd8aXTU16St01ZSkrxbmXve8H/b0
YP/htT5NOAm/khwR8lPh64jlgtXR9+SdERvC5wPX/JCwDfkm5J2gS4mrd058
FBze9Gge74rCmI097HAv90VzGOxbfyway7UsnScKf0UePjn8+Ojsv2bvLjEX
9lk/Gt0/e7w7pVgM/yfAnkwwFPjux4Txto7eZwuuJI7zeNJR+OW/J9+cWDSx
FXzQ81X3R2GsRQ5ImxRDYZ8Ce6iJqczXccPovEf2X7JfcUKyj+Tjk9/boXBs
Cr+YXE9wJfmB4wpzhPBm7I9gXwTfmv0c7MkgHsf+I+JwYANiQMR+/o2bE9PC
5rIPl3wc8nMOTBwCcT32MrMnBUwGX/R3vWO1cKdHVfYfwJB/1Zu3hJNpWTmv
FJ1MLhv5Z4yL8bGXhlh0m+h4NHtz2BfFnISfYp82fDF7QNjTAWYmX2ih+s8z
50pX0fms7A9rHp2HRs41+Ja8a/yntaP1BjhrtX+xVvC+KuI7cIfrRPOH5Nmt
FR3TwU86Ka1lcrTB0uRpDy/Mw4En1yscQ2PPcqOUb0b+2YjkW/FcnQvnDWDX
Jqf+wXLEkfCBiSVdFj1OeMhL07PAQ5If1zJaX+Gzr1OZBydGyf8jsL/1+9y2
CjtFjm2W7Cl29p3S/Bj77JsknENu70oJz5Af+s9/QmTmB4qEo7LE24CXJhbm
eImfEp+HM+O7L82NgcA//KcGvg57Vzcq7Ddju8lZ/aHeGJicWHxm7DK5HPjA
2GLw51ul8Qx59b/Ve5zk/uEb16e1NjAYq4DN+I8GMHWrwhwA8wHcS74t+bjg
VfAf2A9fHh8e/32e+lkvWp/D97O/Es5/Slpr7BGGW4BHgEOA52lROZZAbLB1
tF1omb4psaQtCvtMPCN7ZVpF2zX8Wva04tvCMbauzHnBSfA/DvjD5HniO4Gf
yev+s954Hl6xVWXOi1g/uQ9wd10Lc7Q8C7418x/bR+7u5/V+5+TP4rOAd8hF
Z58RnBtYGK6Ad0LuBrE58jeGRnMvvDf2IreLjvcdk/gE+AE49iMqx0HhXOEE
mFfkoeP34etMS3MVznZSdCwP3oOcZXgSMN3Z0fE7OBD4Wvx0ONuR0b4k+oF8
ImJ/5BTh6xAPxd+B4yQeCs8Jh0r8F66PmNFxlWMb4Kn2CVORR0Ocl1wa9qmA
h//Zu1I4DoNvS04icRBiH+S2E5ch53t6mifYl9OjY5dwWeRYEeskHwiOlpgs
PO0b6b0R6ycmdXzluAs5VsRVyd2ZlXQ7eWH4YcRw8cVWrtm2YO/WSrl88Cvs
Z/wsmAdjvwJ6ktwN9r6gr9j/wn4F5iSYiFjD4ZW5mBnR85CYIPEH9jITg/g/
Ql0/RQ==
          "]], Polygon3DBox[CompressedData["
1:eJwtm3ncVdMXxq/OuUrY+yW955auW6FUyJgKv6KSzFKSIUkaNBKZyixTCWXI
kKHJnDFkTEQylcwyRYVGU4j8nm/P+WN/3v3cvc95z7D3Ws961jqN+gzrOrRG
oVCYmRQKqf72LhUKX6g1KBYKP+u3ndS/R+1NDV4ufHxWKAyvFApjYqFwl/Du
GntQbZHGJwj/oPGzhG8S3lF4a/WvUXtAuIvwvuo/pPZh6uMbqH+L2kvCZwv3
4Hid/xqd/27hnTV2r9pbGr9CeLzG79f4NlWFwu26xrLGblV7WeMjNF6t8T4a
r9Lxhwv/LHy+xm/XeHPh5cI9NP6pxhP9to3GruUe1D9W41+WC4WxGj8mFAqH
Ch+qsafVlmj8UeE66l+v9rDwccIf6jx/q52oa/lV+A2N/aN2h/C/wvtobFtd
6yThgvAo/f97dP61+r2ufmsgfLz6PdS6anyd/m6u+Zdp7Dz9j+10rrFqj6jf
TeM16hUK03V8U82ZqTn/Vet/C9fWcbtp/DjNTep57CfhbYWv45mnPv9H6t+l
+T9q/paaM1L//wLhHYXnavxT3f91wjO5PuGvNd5fx1yl47cUPlZ4mMbra/xW
4d14t2oLNX6zcEG/F3Vto3TuecJ/6Pq+0fj+wg2F26r/qNrHmn+PcIV3o/aq
8LnCSX7/mea/K7yDxm5Te0Xj5wh/pf7Xait5Fmq9dT3jdcyNag+zHvX3Y7U1
ml9LuBHvQu014dGsR80/jLWhdrBwJ409yZpPffxS3f9Nur/XNX6x8Gmaf67w
zcKPCH+u8euFD9X6aMP9afwiHX+njt9XuIn696nNF75SuKR7qad2t+4nCu+o
sclq8zR+mXAr1pLa4tTr/ZPM97ef5i8W3kL4VP2/rfX/DxCeJDxFuFrnvEtz
WmjudLX3dfyNGh+m8ckaX826Yw0In8cz1HgzjWf59UzWWC39lmr8ZM3voPn7
aPxX3dcq9bcp2iYcpGOfUPtcc6fwfjT/JM0/SHP2Ft5FY/erLdD4WOGTNX6O
xssanya8q8ZmqH2g8ZuEW7OW1T4Sniz8o+aPZA8L74K9ET5dx9dhT/H/NHYZ
zzT1+zpM/WfUvhJ+TLi5+oM1f4XmH6HfNuj616i/na7/Zd6XzndcxWviN+FD
NP8ptS9Tv8/u6s9WWyo8W/hbzR8gPEZ4K+Gh2A8df5eOf0F4pXD3ip8jz297
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
mjJaDZoNWgyaMdofMTSxMxo0/uKDsu0xGjf+e1HZfBBNGS0QTZDzkYvC/7xX
tj9AM6deFL32gsQ1ftTTUn9blbiGjPpg4ntyXXVSa4loimhjK4PrYZar3Z44
5qT+fU9i3NQ12/j3ffRbp6JrvvEf75Z9v2j4vJ/nys4doOnCLz4su1YcDQ+t
Es0SjKYKP15Ytj9CI4evv1J2rhxNjlwCOQW01Kfy9fNC2bkFchpodWguaC1o
dmhzaJ5HJdboqO/bOXP8syD3l6+XPd4t5wNzy44P0LCw32+U7c/QyFiP8FVy
HTOD1/OLZa8/cijkQsiJoLWSy6Y+Ec0CreL3YO0NDQTtA40SbZAYkNgPjZD9
vCnnIvxwsP2fVza/QTPDHrxU9v2jAZJLIadCPSO5dLRDNGfWLxoi+//lsvcX
GiHfA1E3yLvnGxzq5eFurA1q4Nm7aEDE5OxhuDj10XBnODl5bPIQ5CPIZ/Pt
1Q/5vmW/jgjWpsmFskY21dfofM2jazLJUx4YzfXJV1IXQC6I3D/1AWuqba/h
Amgk1LWja6BvUN9OXhU7gD0gv9ouOPdErQDf8FBnwbdB1CJQb0HNEnkS8iXd
c/tPzWKzaJsHt6AeHC4Bx2gVnI8gduEbGWq1qNlKqmz/N8WL+PRoTXJW9LdL
1ELwDdb90boV+hU1buxh6iCphySfxBqn7otaLzQwvke5OLh2Cc7LnrskuPYb
H833MvOjayN7qC2vtn5EbLO+hmu03oquLTo+dS7rmbLzx+S0Ho7+9oZvKS9O
XUtNDSO6BHrEs9H6ObUdfFPwv+D8H7UffANB3njvaO5N/ngXPYeaVY4FHle7
PfpbK3Lb1Eyxhq8OrvVG7+bbMr6Pg1fAJ+pX+RsY+AI1buwJ6lCpR0UDIa9P
bhEuSX6f71G2y2yf0VippaeGE90FvYW8PPkDuBz5+Xei6yd4Vnzjh82mLpha
MXxKqrFJaAJF6z3Ed/Oia9+pwaZekBrCJlXeo2vKrtnEZ1IDRu04NaPoSOhH
/wbXzVI/i/7E9183BNemk8/he7YxwbXw6O8Lor8t5V3xDdr/Aft7Acw=
          "]], Polygon3DBox[CompressedData["
1:eJwt1nnQjlUcxvHbWpbeV5F1XqIIk32yJVsLSrJOylKasSVkSWVJWWdazJhi
LGVfEpGyh1KRfd+zZlfWCY1Qn988/rhm7ut7rt855zn3Oed+ir/es3mPzEmS
DKRstL5AklyhB7MmyVNpSZKWjhdKkqz0VZYkGYaVyZMklWT2Zshpv48fpbhf
wSRZgS2QqUNj9XGAP4+31P6PbFk6hBVX/5L+1su1xfLzM+hn/jmqpe2oXDms
o+dtWEe5Y1h5rBO2HeuEva3/5fh8vjaNMW53mZPYeO0TaIX8ALlreGN+CU2U
G8CfkZvJX6Xy5vmn3Mf4VH39h3XAJmHr5Q5hPWid2nUylymf50ZyOelpfgkd
kXkv5mbcgWpvYE34pfSF/Cl99cF+0n5bdip+Kn+SDMcm8fdY02teTBu1q+mM
mlH4bLmzcp/ITeMr87flLuvvjtx0c31IbTHaJJMJK6b2edn7ZZvwS+kYNhKb
Er9bf2Nl5/BV+NzmdJB/M9ZBbiFWgYbx2al1rCfN0HbWuINlqxj3OvYV1ZKZ
T/u0vx/vA7sg9y82Xi6fueWlGurmxj6S6Zmees/9+dOy06N/2oBdM79l2LzY
F1Qcu4VNkv2Wf1KuCPYXf4FyGLcOVpsOqsuLNdT+k2xzrLt5LMFn81XpE/nG
weio5xHYZLnzMu+q/U1tJj6LOdeWWUD75QbHHsfPyX0gt00uKz+HavLzaJ/M
W+mp/dqV/5VuYENoJvY4P5N2xTmg9thNfpAxvjTGs1jTWFNsPu3nO1AXufoy
O7Bi2sfFGPJb+cp429gvWGGazW82x5Pq3qHt2ppje2RLaJ9GvbAKWEVq7nkY
NpQe5X9Te0BdN2qo7by1H6V2Ol8+zoj9V0lug9wxvg+1kEtkfsAW8U9TRXPO
ha3GVvEvUF3sUkbq98VvKmyNi9D22FP6bBdnVK6ouVw07mh8Fl+SssmfUFsP
6+m5l0xvysSvxBfLPEOVtLXEtsZdxA+iCdi9cYZoOV+PHsPSYq2wB/TTjkob
/xusBn3Gb6a9WIm4q/S3Qd3L1FptwTjP2K98S2qCzVK3CTvB96Ntah+W+wXb
yL8S9XL5sB+xNXwzaoQVwtZga/lW9CJWMvYQtvnufmmHtYu9h11JS93PcU//
ba3G4V/zFeIex5J4R1i639CCiprLh/xutdniPoy9IZcj3i2t4OtTOWye2mo0
Wm4T7cmaOhu71Gbmx6SlzslJbDE2I+6S2BvYRWwpNpd/gnKqHYLtwbLHfYjt
kGuPbceu8sNpDtYN24Hd5D+lZVhObBW2km8c3xqsRJwXWhv3sj77UZt4R3Qx
7uK4h+Tq8gvp9/iexF2OLVbXKOrVbKMj+ijLz6Stnjdgg2P/ZaTWNdbyQXs0
P+3HLmHZsdIyZahtvF+6pP/+cUdo2yd3Ru6Gs1IqzhWdkelrjM+NsSjuDKoa
+zveSbxbelVtBX6d+h13z37nuOsyUucwzl4e87ifbsm9r79J+msQ+0h/Ofjh
8VuwJrHfsNNyfWI/Y9/z1eP+jDXRZ0vPraiZMTL75meh3nIfqy1ljDLqZtAW
bL3cIHpW7TI6KtM17hi1ZeIbqL/X4vsZwo7z1fDXPHfButKVjFR91BTXfwnq
y++M75m+RtMabRWxP7Fc2nPnSd0Vf/DVC6T6fkNf3agUvxbfcnf94j5dZL4N
aKL2rXTY3E9buxGyk2UeoevW8T9sKvYdXzPunHin/GH9tVf3anpq7qviG0iz
+J2xnvq7o3ZK7C11NShDrlncB/H/gu9NI7Hd/FNqO6sZGt8y9U3j7Md3j+9F
I+Qa8BuNe5zvSx9hLbAt2Dl+II3H/gf7eW1y
          "]]}],
       Lighting->Automatic]}, 
     {RGBColor[1, 0, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHe4FEXTxa/C3VlAcWYFpfvCnUsSJCrmhBkFMYFiTpgwYMTsa84555wj
IgoqKigimAMGFARzzhJF0O/8PP09/tFP1/b29M70dFedOlW9HYcfOeSIZevq
6ubW19U1U/1XrKtbrLIkq6v7QOVzlV6VuroVVH+oMkjy8fr+7lBXd7rkdat1
dW+r/VLJ60l+R/Jlkk9Un3vU5wzJvdU2Q+UEyZurnq3ynOQfVX+mMl2//UNq
f0nydNWfqjyvPkdonAUa5wHJ41XPj+4/O/VhnIPVdr2+O1ryV+k+75I8U/UX
KrdJfij91jTJzdT/b8nXS/6n0LMXvv97VP+ucnHFY09P43+n+r10Lffwe/R3
v+jz+6o7qH6l4j6f697+rHjumLcRVff5ueJ7+SDdzx/6nR76br4+H1r1/PRi
TJVZKhuoz+p5Xd1C9XtWYz6gtib1e1Ltjarbqzyn9sX6/i+VjvpcVt2H9k6q
u6qMr7gv14yteJzG1Oddyb0lX17xOH+qPK/2LmrrpvK02oPqBpUxktfU93+r
TFKfX3XtJ+mdPq45yRrq6t6s93VcP1FyX9Ufq89D6rOL+vwRPVfN0zPyjr5R
/VHm97tuks+reIyuaZzfM49zrdqX1xjfa6wbJD+ots7pGTdV/Q/vqd7z0DHN
1ZLC43RKhf4845/p2ddU3bWxru5Ojfk/9V9HbXPVdonk7fVb56h9L8l7SL5Y
8gGSX+ddZF5v12j8H1Qa9fk1lVLlKLVfrLbvVNro8+669iJdu7/aaxq/ULlP
8mlqa5d5zMv0rv9SOVzy/9S+cub+01S3VdmPNaZ6JZXhkr9Vn79KrQ9dc7Lk
IvN9Hi15C/3edpJX1XMtUp+VanV156rfHyp7qv049RmkPjtLvkpt/6gcJ/lr
tS9Q/9/0+RjmQ/e/vdrP0+e5uccfpfaBunYn7l9tP+X+rVzPtILKvdy/2n5U
2Vbyb+q7tcpQyb+q3kpliOQN1HeR7vkKyZeq72KVwyRnuucj9BsbSW6p+56v
exiv97Wh+v+l/uPqvRZYE+un/cS+WsQe13WLotcP6+jrtJZ4z7xv1vkmkpdK
nqJxVpL8h+Tz1d4iWO/R3kvtC5MeK4J1BevqJH1/rz6fiU5QvURztSj3b7GO
10k65rukK9A/P6V7Qyf8LPmOpDO+T3oDPfZD0nVci04cnHQYuqx12iu/JHme
7mFh9G/NSn3YR6tVPT46h2u/TLr6vXQ/g9Me+jbtI56P51xD9UGq+1T9LujD
vl1PdVXlDJXNeC+qT1fZVPI5eicn6bkHSD5L8gmSt5B8tuQTJW8p+QTJUwtf
e7Lqo9W+juRlNcb/VNblvav9jNxr6TjJLxce/zLVZ+ZenxX1PU1lE/a+6nNV
tqp4vV+W1nwL1WeqbC75Ql37uso+krur7e7MdupWtU1XOU3yjarfUTlV8m2q
L8+9l2+W/G5hPXC+6tdU9q54T9+U9jX7/ua09zupvlXl2Ir1921JH3ZUfYvK
MZJv1xhX5Ja7qO12lVMkX6v283PvZXTApSrD0nOdl3nfra73vCO6gPcreQfJ
K7H2VJ5Fb6l+W23f6bs10AkqE9TeRfU7av9e7WtKXkX15vpcldxB37+qcqTk
YWq/IFi31KltsspakndV+4XB94a+Qe+wf/9fxzEPl+j+T8/d/o/Ki5l/a6au
+zH6va+otgtUdpR8v/pfnxsPnC75FZUdKtYx05KeqbEXM7fP0jg/Rb9TdOiF
mfXGb6pXT+tznj5PTPNwpsZ4tfBvzVeZpPZV0IGq78n8uz1U35t5/16nvhfk
1rE849VJr6Jrr0r6dhv9TiuV3pJ30/3UNVgepLYW2FR0mkpV8q3oQH3/j+55
BfZL1e30OUDXLid5Q8l/ow8l16tMZz+ovkn1V6x1ybdU/B0y4wxQvYzKF/Wu
6f87WE11c5U61oaeI0qeoPb7M9trMMM7aY+jx8A5ddKnPfV5lWTfsa3oDHRH
s8xzy97HXi8oPCZ2n++6V627FmQeo19mTLiq5HvQOayvBvcD04BtVlcdUh90
0dzUjm2dVfH936x6KXPW4GfaPHqu7mTdqv8bmfdsg+rrMtvHbqrfTPu6c2ab
ij3FriIfIvlAjXNd8Fq9Qs/ypsrIiu3124XX//WqL8xtf6+S/JbKERXb7jdU
9k1789rMfbDJ12ReM810v20a/Jsxs/3D9mEDkXdnXen7epUTJY/WvVQkv1pv
m4PteVDtg1Uvn9ZG26rbsUc7qW6X3invM6R3yjtZObXvkGzuNoyj5/1Vv3E3
86rfaauyYtWlTdX30CezfL/kO/V8vWrGnF/oul+i9w52djFzLflezU1r9btG
cnvZ5RZN0qv63EFj76N+e4IN1V5V+15qH6HrPq1YRx0o+RN0AHpPY9+l8lnF
tg/cDB4+SNccrNJe8iH6rRkq3bEF2E32rsoauu7R6M/sJ/YbeyrougPUv5Tc
T98/ovKj5CN07dfoZpVn1GeYSr3kw7GJqiP3p7Y9dW3OWsJPUflC8n5qe0cl
YDuw9dHXHKxr5/B+VHqq7b7o39hXfd9WacezqM9sdFXax+xn9m/Q/GSan50K
6+G7VT5X+z667q3cun25aDuND3FUZj2ODj86s65Hv91Y8ff4F3Ua/9WKdcIm
2EyVzyQ/oXoLlW8lD9O1r7NfJe/CPpK8UPKK+n5z/e6XrB/VL4A7Je+kPu+q
z0+St0XPS/5aclv130l9ltHnsdhzlW/UvnPqM1/y82rbr/D8DFH726p/UPv2
um4S2E7yCNUfqnSr2K49rPKD5CPV/xv2ccU27iHwPXOuvh/k1uFD1ecd1T9q
nN2r9uWmJf2BHkEHbqe+E1X+VJ9GjXFb9Pp7Uvc1ACyu9l3RG2pbJHlHyW9J
/r7eOhVdjF59WXvhWl07tWIsBMZEHz6mMdZRmaE+22T+frbkF9X/cvV/QZ9f
kHyZ5EmS19e9rK3+k9Vni8xtH0qeoD7nq8/jae/XZ96z7OU8sw55DN86Wvee
qzGaVAZKPlVj/qAyGNsUjfPQweeo7XeVPbBB6ruB5Pf1W3My+6lgywFqeyr3
e3lJ41+p6yerfWt9/5LqmbxHtV+i9mdZZ9F+LnMN/p1YMQYeKHkK+lvyFHSa
1vYzGneMfnc9lY/UPkh9XlafTyRPVp8rNM6L+ryV+j2d+z0+zn2qfCy5h74v
GrxnmlS3aLBNGaW+X+T2BR7FH2Gfo8dy10/r2kfwo8ETkp9Rn/PU57GK9WRI
9gvde5raR7Mn6a/rX643bsfnxPeci58XrRvvUp8uKsdLfoh9q3Iua1Xfr9xg
Pbp28h3Q4aegE1XWl7yB2h5VPU3jP60xz43+jJ+CD4DvPyjpsdvRj9IPy2oO
Vy6MNxZXbPvQbdOTfuuLXtT3z2jMwyXPVOmj9s2ibS7+9DVqqwOXs471u9tF
28RL2BMqh6JPsOkqPZlP1b0L26N26nuzykdq31V9p6m0kLyL6qm5cWMlYRbw
yTj93gzVmcpe+v4NlYL3kVnHo//3VtubKrWkY7cIHnN85t9hzAb8mGD98yn8
gPyp78Eyal87WG/MgW9R+3dq313lVZXldO1r4Fu1v6bPN6tk6R09k1m/olfR
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
bpLZf2JO+I+UZk325/8PyoWt7Q==
          "]], Polygon3DBox[CompressedData["
1:eJw1m3fc1MTXxRdkk6UnCwjJw7O79A723sUudhDEgmDDigW7Yi9YEHvv/kQQ
C1UEBFFBpIgo2Cg2LFhQULryni8n7x/z2bkzk0kymbn33HPvtuh/0XEX1szl
cmO2yeVq6bdzksv9WM7ljotyuX/zudyvqvdWWznI5b5W2y5pLtdXcgvJf6rU
i3O559XetZDL7Rzmcvur/1z176q+mpKfV/9zKp1V76LStpjLnSW5ufpP1TUf
a3yDSi43T22PqD+v38c030uqd1Q5UnN10pgVge/5m57nJLVVVF+icV9q/N4q
X+tZ39D4/6nvao3fRfXhGvO56g01/wKNeVZtx6t/R7X9pr72KrepfZbK7eor
qtyh+ocqd6jeSOV9jV2l+9yocrfk43T9Dmr7Vde2U7lW7S00/iXVI/X/J3m4
ypOqt1D5V/X7VJ5QvaKyWfVhKo+rXlb5QnNFer5PWCfJq/V+5+seu2u+XzRu
G9ZFvy+or71KLcmPSn5R9Q4qLTX2G11zmNp+1xrsqvl+UXlHfX/zfapyuW/V
X0/rfoDWe4X6lkveS/P8rPG/qL574m/9keZINX6p2vZT/zdqy2v8MsZIflfz
NdfYCRp3kMoP6r+AeTRmqu73ner1df13Gl9UfZX6d1ffqYnXaq1KJ9VXqP9Y
Xb9Z/V9p3CEq61R/U3P8pfZbeI7Qa/qXxp6na3ZT/We1b+A7qLTiW6ttqK6d
rXKn5MYqB2lse93ze/UlKhX13arSUH0vSl6p+ar0jH21Fi21Jt15No3/Tn3N
2F+S39SY9/hmkveRXFL/EtWLKss0Vx+VJqpPZI017naV+1VvojJSfW1URqh/
N8l36fq+ur6l6peqbT+N3Vf9H6h+uNoGq+8FjVmg+g4qayX/rbKr6j+qLNKz
vKj+T1RfpevGqxyoMkfX91LbwZrvUMnzJR8r+RDJh0n+WPJx7C9dX0fXT9T6
jlDf9dxb5Qb1FVTWq6+uylvqf1XX7Ksx+6j/fdUPU/8+kc/Xe5IP5Rkl78Bz
MFbyZZLLkl+QnJdcne2PvVUWa87p+j1Gpa/6FmjMNNWPVjkp9DO+o/pRKn1C
v8MBmmuMylGh3/EzPf8zmnOo6nXUvqfGRpwBrlV5UGsV6Pwcqvbjdc1GyZtU
Rqnvfd3/U13/hK6/RXLA9Spvsuc0dobadlX9dZWDJE8PvM/fUDk49H7fUfPu
KHki305tO0neWfIkyftLvk33aqT7d2IetU3i2VUWqX6a+t9S/UiVz9B3kp/U
+MYaf7zavlTbEMlFyZ25r+TrJceSO0h+TfIo/bZTGan6Hrq+pvp21pinJTdV
+3Z6t7F6xx56rr/1votVH6G2B9RfH92mscP0+5HKMF3/j8bdofKA6tuy31S/
U+VB1ZuqXKPxL+v6+wPr0Ld13TEqiyX3k7xJfcs1ZoTq49Q2NTsPy1U/R22T
Ve+pslTyWZJvUH2myo2q1w79nQ6PvRf4XhNYe5W5kk+U/KjmH5ha99+otinq
O1Flmepnq21ipi/mSe4t+XO97yu65kHJDdReR2e7rso+Ot97q7youZpozU6O
fcZHSd5W8hmSV0p+VXJTyWfG1unstUFq6xZ6z32kei+V0wOf8Y7qf6Psd/gt
b1uJzfxD9Rl6t1jt+2NDNP6xwLoOnYdufhfdpvrRmq9Kc52v/tqqV9S2JG+d
8I2u7a/SWvW3NeZ05tYcl0a2Cf2YS/IlkXXiDZI3S75L8lmSz5S8SvLlnGPJ
AyR/r/pgzqTkdZL/p3rHyGekoPv/lNp2cuYnq/0IlYWqP64yR/WT0fWqP5np
w0mavxe2SXJOOvSP2LqrU8F7kz16ttr+UP+ekr/S2PNVNkpO1X6xygbVn1XZ
G92j+Xqqv6bkUON/VHk9tM75GVuS+jxxrtDLJ6h8HVg/V6vtGpVaYA3JC9V3
hsoq1Z8KfD4a6vpPAz8va8Wanaj6es6y6uOwRzyTvsHP+r1LpZ/6Z4a2Zdi0
A/VuDfSuv6NLy14X1uNwzT1YbQdz3jR+iOqb1D9U/WdiM3TtOt5B1/bQHH+o
f03Zz83zppJfKVunfZa3LcemL1P9bc0xSPXf0NsqPTT+cslrNeYmyb0kH6P7
36q2CwLvKWw7Nv41dL/m/FN969XWuGj7d6j6/lT5QP11Vc7WPBfGxgqXhB7L
NUfrWbfVNYnGjlfbLI37Ah0suYX6l+r5ZkrupvoY9R+p/jV5Y0Uw4wVgwsBY
Dcx2oeRukk/R9WvUdlzBNhysA+a5BjsW2NZj86+WfEjgd+Wdqf+ptl95frVd
oWc+QG0Hqu9tMKHkguS7JW/BHqtchr1X+4MqF6k+G3ut/vkan1Pby2rrou/z
seQaki/TMz2p/lD1B3T95eq/J5tvaHa+Okh+vWwb+6ved7Xk2WXjEvDIzZI/
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
          "]], Polygon3DBox[CompressedData["
1:eJwt1XmQz3Ucx/FvWPeyu2jtLsvalZs0lRKVEYpQ7hyJClFqZEbnuFKk5Cih
pkKOrilRZKRI2UXlKkl36Sbjqgg93vPzx2vm83p+Xu/P9f18v9+CoXf2GF0q
SZL7KY2ey0mSjPwkqZipnZEk08omyZzcJPm7dpKs4TtRj3JJci1WVu53/gHK
wO5VWwk7wj9MA9VOkzui9g3+crpabjZ2HFvNd6TrsWVqM9Wmm/dFbLbaEXK7
6Bn9M7Hn9Y3jv6TF2NPYMqw9X0btD/xYStNXGjtsjtf4y2i98e4xR0W5w/wU
GoBNwipjJ/jHaSQ2TO1OWmCcJ7DnzLFcLkuuivYSbI7cAqwqVhZbgE3G0tUd
Ne8qvj2VYKOxY7JFcouomXEn8+lqT8rMoFFydflBeKH2SLlRdJDvor6qmil8
Pr0QY8kujrOi6fGMsHrYPH4+PYBVzkuSzfhfHmxnc6RnJUkvvpTcF7FXaiTX
GyuN7Y11UGOsC3YOtpsfRnWxtthpe/uYv5EysTbYKWwbPyjuAdYZS9Tu4m+l
Otg4bD8d4u+Le4BN5H+lf+LsqB9WzppXYC/zp+yjqLxzx37OSfVHrpp9FBh/
ONYSGyN3NxVi87FJWFqcEzXAlmKz4jz4l6g21gNrgH1uvFuilv+I1vLt6Ftn
1lxuBjZcrpk5m1N2PG/rybau4+qaxvPkm+al7k7coQvkzpNbEnvz3I7G/aGF
fP3g2ofoiL6G+al3Lt6zClgZtR35M850h7GGUq6+IuMXUmP90zNSa8pV20E2
R3t7vG/qb+e/iXPlx9Cl+u7gv6Xf+LupNVZTbat4H7SLsZ5qh/F76Cd+NJ2v
rzl/wlo28b3pHGyv+ziWlqrZGXfaPopir3LrZK6lw86vBXYS+5DvQ6XUDsU+
o+/P3rUm2AT+F/qbn0R9sSH8bvru7D2NO1nAb6J3+CvM+7U5ajmTPCpwLj3x
M1g1vpH9nYvVyErdm9HqymF/yDwYa8QGYNvoq7N3vAC7hP/Pmkv4/lQJa6Ku
pjH7eOZ5xsuNeyC3jt6UuchaPjFvenh6BbsQew/rz2+lfWffhXiPKkaGlvHl
jbVabhZfxTyl1M2Nd0RuMLYznh1/F94Qy5fpmZNq74kx8QN8bc9jH9YLq4Fl
x/eLbvBsusU3FtvODwke66V5+hby9agfv5Zuwk4YbyrWSXsF1pIq8ZWp2Bzt
+CvjO8NXp+7aq6mf/Dw+i7ryb1Nf7M/YW3xT47tiLdXxEr4XzdHeRrPk6vOL
Yo3afeP88Zz4/lN/rHv8e7Ad/M30rPansQ59h83RDcvVfkiuHr6RL++8DvDj
6VF9H2AVsIP8BJqOrcXSsP38uLiD2A3Y1lif9lRsrvGK+R40S3srzdSXxs+M
M9BeibWmspGh67BVfJv4Drk/Dak59qTxWnjuR615kFwh9hhWKHcjtiPeYf7O
zNQ3qq/MFpot9wj+FN6Bf5+mYsX8eOqmrpZ9DI7nmJn6j+Rix9znt9RdRT+6
a9XzU+9hvHu5cnnUh6+GZ2vXzEz1XRHfFqwX35uqYZ2wZliR9denvPhXxTsU
73DcW7lWWA2ZyvGumq8h1oi68nnxj4t9Uj25OvzAnFR7BHYbtbWvd2iivX0U
/3xqLFdVboPxss1bMyvlV9Gr5r04I9WXw6+nlXwr2o615reE4v7Qaayj8TfQ
NHOUGH8i/R731DPq4D3PNH5W7BlbTa+ra0ab1VaKOWk535TWYOdaX3WsWLtx
nF/8F/gS2piR+v/Gf7hpZGIf/DV0MFh+at2x1lrmrR1ny//rub0r05WO6Psf
PaE/kA==
          "]]}],
       Lighting->Automatic]}, 
     {RGBColor[0, 1, 1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHXcFcUXxl+x7t1r7l5z576s3UGnlIJ0NygICBao2CB2d2GLtCAqiGJ3
N3Ygdnd3/Z6vz/w+/jGfOe/c2dnZ3ZlznvOcM+9mYw7uP6lBXV1d5zXq6lZV
XavU1S1P6uq+L9fVjZW8lsow/f22/h6luonqd1X2kdxM9bSsru5+lc0kH6/6
AZXNJV+s+vK0rq6p5HdURieWL1L7ZanHOU3yQyq7Sn5DZbj67Kz6FLU9qLKL
5DNUP6zSSPJbKnurT2PVL6kMkryF6nK1ru5p9Zldqqs7U/X5Gn9LtZ8l+QLJ
W3FtXlf3d6iru1p9/tB1k1SOl7xS7X+p/SrJn6nf/mrfXfXnKgdI3kP1r6on
qhynPi+q/x/qf67kdfRunlT7gSqvqt9Q1VurPlv3vTC1/IrKkMRzOEzlkMTX
vqBxftc450h+We2DE8/5IdWnqnyt9m/UZ81aXd1P3EvP+IbG/Uryyep3hPpc
I/kkyYcnfq5N1ec59blZ8n1qO1JlqeSz1OcoyXdKvlH1ZJU5ks9W+9GS75L8
oe61iu51veRtNc7LGme55HPV5xj1uUHyObH/IsnXSj5B8uuSP9K1DWpu76Bn
2l9/Pyn5CPU5VH3Ok/y72irqs5raHlbbmSp/qX2B/j5J8seSv1Wfkvr8LLmT
xjlAfz8lubfkI3Pfq4/koyS/IXmhrj1Z134ieZy+xdoqY/T3MrWfHtvb6Fne
0bNU1PaHrltL468u+X6+U+J7PSD5HMm/SG6g8ddVn0xtS/hWKmtJvo21KPlT
3onGe0Slndo+YJ+ofTfV56vtUZX2kgeo7YWy98I9ajtWJZXcM/Hararcq7bj
Mt9roNpfLHs995f8fNl76m79PkVlfckfq/051WurNEk8J+bTVfJyyeup9Ity
oZLrulO0DteR3Lfid/6s5HX0fJWKn201Pe+7Ks+o/Q71P1SlQdnv4U2VxyV3
Vr+nVa/JO9B436tsKPk7vc+zCq0d/X2Uygep32GvxGt6A5Uz1faDykaS6zTe
GyqPSt5DfZ5SvYbK7pKfLPu73KX7H5F5ndyp+jCVVSV3STzHksoqGmOFymOS
V1W9UuUJvrnu813q+y5mv/Ie2Re8f7X/I3mZ5P1UfpB8vNo+Tz2HE1R/kfoZ
b9fvB2Xed201xoPoAMmtE68b1kybxOuG5z1f9fr6e7HkJZrLRnq/qf6+UGM8
ptKB76Syn9o6qb5Kbdemlj9RmaD2jrxblYzvqnH+1Ls9R+/2S/XbTW0P6bff
1P4X+yD47w/V/ojqv9XeVPLtkj+T3E3fdhWVO/X3JrrX4RrjW7U3V5+71fa9
5N80zosa5x7WtvocoPKj2n9V+wsh9pN8tubwka5vpmvvQC+qT6Ln27jm9dSz
Yn31cNxfL+va+8re7y9Jvldy+8TffBWVH9T+fPBY+2ncV1VWaMwZ2A/1e01y
Y/0+MrdeWl/yWSoT9Hunel0jeSz7Vdf9pFKTfInqP1V2ZG+gN1T2ldxB/UdL
HoMuV2mhPlM15tGS20k+qWRbc7LKCrVNUt/j9Lyn6u/uuvYWzWEntffSsx6v
9h7SJbuqfW6wLj9Y/Y5OvTYG6z1MU5891GdS5v3A2uA78f1+L/ldtEy8rsar
zyGpv9eiuJ/Zy7wX3vUX6Ooo884nsDdTyzeU/b25dlzm9cqY62pex6iML3tv
dEi8dx6N34B9fafqeSrtEn+nVlEHHqIxjkm9xtBv56h8qN+76Xnn6z3US+4q
eV7ud45+mlJYN2HHts5sy1pJrqjsTX/VG6p9FO+btRZsN5roffbTWGerf6Hf
G7Lf1L6z6p3Qd5IbgQtUjkeHgi9UJrLW0eUqG+l9P6657FNve32N2tZhDUve
Vfe5VWU6Y6q+ReUS3pn63hhsP7dXnajshc7UN+ursrfG3EV9CrUPU3sPyffo
Hs0lT1PbCXre88Aiat9Wf49gbUh+Un06l71n2GPollU11lfq+63aLgfzqHyD
3lP/t4L1XWfJbwfrwY6SXwnWL00k3xBs23tKfkDjt0XHaI7rqTSreN+2SLxn
D8ysK/nW6OuOifXnbJUdEu+vWTxzYrt5u+q5Kjup3Mw7Uv2h2udH+QPJcyTv
KPlNycM09q2ZbfTlfA/sQcQDG0X80E2/D9X6uSdiho3RNdgmtQ9JLV+GTUts
0wepfWnm+97CN4sYYIjablH5SPJSte+SWJ6qtvsy2zW+5VS1P6H2m1RPQUdL
3kzv5gUwaMnf/tjEOGR5tIsNWYf6fVFmLNQXrJRZ5/RUvVjlFcnDVU9I/a5u
AyuBzcBYun4rbJvaZ0reLuKfKyRvgX0Cq+jaJSqvopNZX7mf/Tx0ceL301a/
X69yR8kYoXtiDACG7CN547i/uiXGDEdntk/YJuxcp8S28j2Nv6n2Ul/9fVJm
W4udPTGzncZGT8xsU1kPJ2S2kdhHsEaPxDjk8MwYhXsdmRmXMJ+jMttI7OPk
zFgEHHKM6hNT22JsMra5zHpW+40qj+u59lR9U+Zv1A8dkPq7X6p+Rfwu/dU+
OvVa2kdruqyS67fWal+IXou2dVO13St5d7XdgE2N3xTcw3zGVIxn9tTf++r3
g1Pr0uv1W+OIA29Fp0T5IskBm4StQX/oG13K+Oy/4H2zbWJd9S++1Zi9tba2
47uofS/dq7/klWpvpfY/weTYaclJ2fiqX8VY62aNPVH3GKG/h1dct1T7xant
ybZlY/aGVeP2bqq7qwxTv+mJ6/fKti9DKp7D++q/p/psWvZ9bpZeals1bt9O
pbPazk5tizZRnzX0TD1r7r+jftupYj/iLY2/fcW6urfmeKzm+rba31P7Lmrf
p2y/Y12Vnfk+Gqe1xtlOchvVbVV2kLyvrr1ec6hErN2haryd6vf9dc1rrFm1
7a4ySP0nYVsL69x3Eo8xKs6zh67pXzF24znmghPQ2+q/fdzfW1e9x09U/6+D
MdR49EfZOApstUZmfDWLdZrZjztZfb8JxmLjEts3sPppavsu2OfDH0XH45Pi
T3yp+ouyfUF+R8/vpfmcW9hG7ot+Khvj4adekNlXPVXjfRvsU85k72a2U+DV
9Wred9iA8+NeHqE+W+i57i9Zn3XUva8sW6dtXvXfnVR2r9gvG6NvNaHef/8j
uXvN73xJ2d/uXfXpwp6o+Js2xW6o9NLfh+leu0j+smScCF7E3/xJ43SteT3j
azauep1MVf/mkv8o2S/cqeo5gPtYF6N1z6vKXksPqf3CstfILZLf1pin6F3d
nRpzgb1OVPs/6BeeX/LfZfuK+Ikvq//J6n+L+u6eGg+cwl7WvWaqTFW/d9Tn
OrBO2bawOc8pec2K9yYYYDXNcXXenf6uS9z3Ao3ziq69NngeXTX+XSozmI/6
/K1ypNob6vcN9B6OLZsr+F3lcPSz6mmqp6t/yppKrTca4Gtg5yW/pPFP0vyX
6rc9Ve5M7ae/r/YFwf0yzauq0kJzmxNxzhXqM5d3rnKl5Hmqm2bmJfDNrwd/
lO1rL5J8ouR7Es/xEvVZIzFegAf4QH0WBmOn0Voj52s+VzBWavzQAh2i0lT3
30H1a7p2m4rxzOnoPvZdyc9KO8+Ln9GoYl/jLuy15G9KEEbaj+i2suuFulei
e7ynObSqmZP5IHF/cHgn9qZ+v4hvofYtKsZabyS+70jJ+5fdfpr6tFPdvuL9
/pnG3F1jtq5Y3qNmndkDm6YxZ0l+Xdc20e+hbF+gXc1/f6LxG6sexztK/O7x
KfCnacen/ijxM+JfgKXb1/yOOqrupNJS8mroP/12gfp8lbhtP8nfSm5VMY6F
i9q46meHk8lVdtNvAzTPIHmJ2r+J/Y8tmeu4Lxij5diNxLhxU8nPJMaNQ/Qd
z9S7HZzZJ8A3wEeAG3k02NbBjTwW7E9gA1dGOwi2gmcBX2ED4U2wg2CfoRH/
gO/GRowH7/R0MC7bS217Z9Yha+jZu0bdDC67rmxshh/zVvRl4HCeCba3/fDL
g+faFy4h2Hc5mH1Vtr/AvmR/Xlgyvv+9bL/g+tR4fkDZe4Y9xh65hfmrrKKy
o37fLfW+3l5y29T6BP7v18gBwv/9FjnA7dSnTWo9c6j+/rNsLg7fZXb0X/Cx
3o5+Fjh0n4hFv4aLCsak4NZREbuCcfpEnAP3dW8wNgRHg6fpA65Bp6PPO1TM
yyHPiRwFNu5t/DLVL5TsM43THF4sGYe+ErHo/qpfS43J99B9Hgj/4XTqleh8
ta1e85hgUrDps2rfJrGPzbdugf8d/NvKxLobvb0xfpjGf6/k+eMb4Au8m9iu
YFPwGxZLvon1D88X3A+ctSyuq0vV9pvKT+AWrdsztG4HauyBkk/Hj5a8gcpI
3eth9W+tvneG//A1NTgcLNkr4smt1X5N2bi6m/o+GPx+p6v+NVjn1+vdvoD/
JXlR6vsPpESuCxwCRwvO3qZsrI0MZoav/T1ytvDZcADwb1PABcE830j8obLt
+16SV5bNRR+FnQ//8eLU+IyfJ9az6Ni1Ip4Dyw2VfGGUN6kZJzG3TxPrL3RX
yMxx4GsfqLHfD+bIz1Cd1YxJpqvPpZnx5Dlq/x48JPm61HUvlVF65+cV9j8f
T4xnWqlcoT6rZObwB0knXa2/23Bfze059ftO8ojEvAhYCN/r5Oh/wdMzF/j5
Wmb+Be4FHpT3BC/6peSvVLcumwO7MjNGOhL8FRwTIFZwemaOFO4rQU/p+zZR
23X4AJLPVHslsdyevZaai4a7Xjsx59xM7Qsyc9dw3WsllieyluN6Xoq+UvlZ
v1fxmWq2A/D3v6rtF96zym8qZ6n/DI13rcpg/d1RdT+NcxN7XHJfyTeWzFHM
zzxnbO2qiW33RXq+n4NjKL0TxwDwxQ4HqwbHUoiN1GWOiRAP+SfGRC7R778E
r+HJqj8Ojnu0VN9u6nOtxm+eGVuAK7bNjBXACWCC1RNjALDCaonbT5VcBj9J
3iozzmCeLTJjoBmxfcvMunnNqm30lloLl2TGz+BY+JDhWkvlzLzI6cHrfEZu
fwz/+uLE/DY89nlwYKnb71afveu93lZI3i23Pm+u3+9QOaNk/fxU9l+c5NCo
nw9OPC/085u6rl3u+TfVdbernC75XNU/p+apOsBDpLYp7ClsP3b/cl03Pvhb
TNfvf6Xm9y5V/Xfq2BN79rPE/OHs3PoBndAl+mX4YMSkPs68/2fl/r5bxX16
Xe7nvQJ8HqxbVld9lN7bj6ljZB9k9r8vScyTY6fwCcYF+wUH6T0dU9hfAut2
zP3twNIdcq+BrSr+PheXHOvJo01prmub69rHUu+X5zPzNH1z7zHWKjEc9g97
B2wFxgJHDcztb8Nj98dfTy13UX2/ymURx+6ZexxwZtfce3NZ4tgSvHczvrPm
8Kiu6Zd7D9OHGBT7k72J391Yfe5jH1SMZU9jD0Xcvhk4SNc2zr02mqnfEpVj
mLPqWyN/uyjiAfyC5erbNPf+XVPv8liN/0dqnAXeApv9nDiWd4jk3/Vu/pL8
p8oTkn/NHBfEB2mWG1d01PXLVE6OvkPz3OvqB8ZTmaRx1te32zeYV7k88f5m
L08Df/F85WjPo00nJvN16rgM2BMMyvqEp383cvXgZXA2mJnYxSep4xfgU7A4
GPUGta2rOQ8qW1/1r1qPNVSfFzWPocwDvRX3CP779pHzhKfFX8P24y9i3/H3
V4l8Pj4d/C0+PrgEXPBG1KUzVK+eOeY1QL8vza3/0flfJOafr1SfBpl9DexU
r6ptFvb01tx7DYwP1gf/X5nYj8d/J27yaWZ/Hl7iRH3HjTLzBk/p2i5lY4wn
cvv12N+bcu9TfPNluW0TPvhduXXsYYl1IvoQv+226Lvhv8xKHBMtSx4czNsT
hxwUzI2fojGGBPP8p/F9UsfazlH7yHrz6qdKHhrMn/8o+VDN+WPeu+T96+07
E6/BF+Kb/qL2yerzmfqcm5vDhb89W/Lw4FhJo+iz9+CbqN83fG/eJ7x38ByI
Z44M5hAuzc3TwYn1VN97VeaV7MPhy+Hf4WPh4+Fngb+ejhhsoOpH2FeST9Y4
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
3DbiqcR6Fh37fO7cYvIHwKLgUPIrfgGTJMbkv2iMnzPPYWK8F+d62LvsYeLv
S6KOQD/sUDNP/la0e9g/8prgzVfGfY0uoT/xcfLidqx5nEY155DAiTOHX+O9
mAOxht9iLOLXOLff47vinRA7/TJy6V/FZ+xWNlf/XrwXcY1v4zPin30fZXxT
4pv4p+jazrl1I5j0nWBcSr4keYrwDEsKc7bg390KY37yeeGT4BzhlK6JdpO5
DSrsQxH7xec6O3i+V0d7yrPMCLan8DzjCvsIxHUnFM7hAVfWgwWCc3i3k1yC
A4xxFeIrfOt9UvMn7LvvYjv294folyL/HNcN7xZOBb1BnBY+AF4ALhR9RgwM
LqJ94Rx1chCIaX8QHOc+I+o+bBM8BBgny+xHEMeC/+T+38W5kee2ImIhdDzr
gTyK7WvOk6SNWDox9b5l22dkfElyzf6J+4KYPLmGxOWJg61bcSzsz8ycw2ox
D4h8IPzuBan99H5lx3mI9xxVct4Q+UN9ysabYE3yVMFlyGAA+Dn0CTFt5rZa
nM+MiCGY57PRz8evBzuAIbgXsXLOvA0pW28NjH4WPMma8V74NPg25CDDxxJP
wi8gpoRMniHxlrr4jE/He/Fc/M418LfwuA3itffE/vgdy+M8wTnEB68rzP1N
gDepmAN8Kb4T8OQ18Z3wLJwdWSs4dkbcjbgweV9n5o7NkNvWqvC5gGrmsyO0
E6+hL7FkcjPI0UDGnyO/g5gxGJ59zp5FXx2vMXeqOUeOWB5xn3/lmnPSiDFT
uJb8EOJ6H8U5kJ8I5iRHkXgNemdu1KWsGfYUeL55zfkMcIZpxbwhsYOs4vjB
03HNkD9GjHi9iuPEc1P7SmBLOOb1K+aZwb0bVIx9B2vs+3PnhMDnwesRL5iX
+vxFD/SA+gwhx7fitbFhxbkUcLx/ZM7znBmMx7ATSwvnQsONzYuYE86Z82fE
ysklZ21i88CWrLEBkb/dGjxZ8xzRY8TXia3j0+Pbww9xroIYOpwncQPiTMSY
4C8vyc1h4mfjb5ODf0RhTEX+e6fC3Au56nDh4GOwMfpyfNSZcNLH5Y4XcG6D
mC9nN74I5ts/jH2GBWMP8obg3smJgX8izgIHdWnhmAg8MZwQ8R14oaML5z/D
e8EPETuAIwKvEVcgpoCumhj11azC3Be5vXBvxC+JXXKOhJggcR/4LeI+cFy7
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
          "]], Polygon3DBox[CompressedData["
1:eJwtm3X8FUUXxq99d3/6irtXQe/c9WKjqEhLdyrdIY0gCHZjoAKKgYKFqIBY
oCIqdne3YqLYmNit7/Pl2T/mc+fMzM7dnZ055znPOVt37PR+0zYtFAprNisU
Ntfv4VmhcHu1UDi4VCgMrykUhoVCYW65UPixWCjcHxUKUyXfKHl/1d9ReVL1
i9X2o+pXx4VCL133WVooXKL6CF3fXXMt0Jht1f99UigsV18rlXMlb68xfdXW
XvIFkmtJHq3xazR+vv6vg/puUl8LlXPUX1L/YM2/qUpVc09UGaXxb3EPGt9O
47upPl5tjXTNTWo7RPWX1HaO6k3V31ulrfrO03z/03z7a66j1fat+ntovhM1
frKeZ6DqHdXXV9ceVvU936Mx89U3QvI3qZ+5r+rXa8y+qv+jeQ5T/zYqjXT9
2zxjRb/qX6BrT5E8UPWpuqaiuR9W22WSN9H4p9S3mcpI1l7voLPqSzVfH/VP
rnoN7tb44aofpP5WrLf6p6i/o65fKvld9R+v/oVqiyT/rP6pqndS/7WS32M9
VL9Abb+r/qjaxmverXSPs7QW76r+sPru1BwDdX8t1d9VczRV+0zVt+T9auyq
cr43VA7S2KskZ+r/VWOPlDxL8tea/3PJA/R/Z0j+RPIqjRkj+RKemb2jsrnm
vkrjJmuuSSrH6Pp56v9T479V+3iNr6X/vFD//azGHyr5CvUXVX8h8rNuHlzn
md/RfP/Tve+nuc7WNaPUd6HG/KH5HlN/H83ZTmPOV31b9R+n/9tW81+g+kdq
n6Dx20meJ/k5jZko+XJdv5Xqz6sMlnyW5PWa727JR+j60yV/LPljzT1d8qmS
10leJ/lE1fvqmls09iu1nSC5j+SbI88xTeM76/866H530333Ub2/fr/SvSzS
PRyl/nN1zQ8au17z9ZN8g+T9dP2/ko9Svbvmuz7yGo9QfWvNMVfXPqy2Cepv
obZFqr+h/qN1fY36z1X/B/qPkexXyedJfkRjLtX4QvC72VTlcI3fT/IC1Ttr
/BD17yP5Yt6f5hukeqTr5+j6u9Q2RPLZZT/rPZIPUb0pa8j6qW2U5Ga8Q96f
5EMlH6x5e6m8JXmK/m+A2laq/pyeb6DGFjX/bM2/WtdM0d6/TWPOVF8seVf1
T5D8gq4/Q3Jvjb1D8rXq7yr5fs01S2O+Ur0TZ17jlqtvK633z5IfVf956v9O
9YNUrlH/1Sq/qf4764EuU/la9W9UrtDYeZq/qrapku/T9Werbb3qHVVOV98M
yZ+pfqHGLFT9IrXtqvo0tXXTfzdT/UzVt9IztZRcT/LR6A+VnzifGv+E2sar
/2f2r+Qn2ZuSn5Z8qeQRqfcQ7fwP/0f/qeqbpjHvSZ6l9u6av7l+z5JcVP+h
Wr+bNWZ37bGOWoOn1HeRyufsdfXfouc5Ttd/KLmxym+qX6nxizTmJ8m363eg
yg2q76/xRdWXcH5jr8Edkger3Kh6A7XdqvmO1xwfSW7CmrIX0Rmp1z/oPvrr
+lV63210P61Vr6++49X3n8oJGr+SPRR5jlbq31v9x7L/VU5DX1ZyXaS5tlTf
NRpzqP77C/UvYa9qzC5qP1xyU405Wf1/6/968fzoI/UPV/8K9d8teb7kHqn3
7O367/4V6yb04dfqP1/9j6p/uP7jZv12VJmvvgrrl/qccF4ynl/1ruwhyTvH
fq/nq3wa+f0+zNnSfP1T6/BN9HuF7m907Hfwn+qXqRzCeZW8Qv1tVOaqvoPa
7tT9naQ5PpHcWuVgzXW12nbm3em6A/W872M/NbaPnmEr1RerfZLkL9EZuvZM
tT2k0k9tK/V7EDpZfXtIrqfr91J5uej9UmBddP0o9a3VmNvys3u16nuqbZXq
fXgHkveSvEHzLwQDpN4fj+t3jsr72LrYumxKMJZAp12p+mtqO1//9zf3oP9+
VeNP0thO+v8e6MvMuvkE1kzj39f4KzV+89jn7VXOtOS/NGaO7vUMjXuDtVH/
Gejk1Lq8s+TFGv+uxl+h8ZtKvlbyB5IXSd5C8uWSX5Z8ruQ/dM1sXX+6rn8d
faH+cyTPlPym5F6SJ+veVla9x/7SNTPZ65rjGPaS2g5X/SbN1wB7rVJHz/e8
rj9K17bS8+0r+Q3Jp0ruJvkM9oauGa2xtdU+pmybga14SfPvjf5VqaexF3E+
tFe7SR6l+j5q64AtkDxJcnPJa9FD6Leidf509S3XnJfG1hnDytb57OGnNaar
rr9F8rjEe2Co+jvke/4pySfq+m1VGmvuj3X9I2o/TeU11Qewv1WfofKq5P6S
T8BGprY1LSWfKPmI1FikleTXsA1gMLU9EPmcnZV6rThvj6XWa9zrCMnPcO+6
5hfm54yxLuo/Tn3taryW7N/ONV7T4xM/P7axheRTsBWao47kvxJfu5PGt67x
HOy9upLb13gPck5OVnkl8nnpr+tv1vWXo2/U/pzu5TK1jVb99lz/vKf+hVqr
zTTmNP3H8amxTEfJpyfex+znTpIbloxhwC4H6T+P1PUrdP1lsc/MLiXfzyOa
r636j9D1E1Pb3kboA9WHgn0lHyD5eWyv7mes2u7I7dcrmm+urv9T8pHoytRY
pjH7QfKE1La2Yey9Gen/9qjxHp0G3mS+xPvvIMmHSt5BY24rGjuCIeto/CC1
rQZLVozvwHnYZmz0IZL7qL+R5MaZ7SF2sStYSuXUyGeyOXtf8otFY4Yuqj+s
ebqoXK623tgGzdFL8g1FY/dE818UG8P3Un8TbIT6r1d/rP4DJT8veaTmeyW1
P3Azexn/QtcOqljXc88vpsa/V6n/WM6orh2pOWeo/rrau2js2LJ1IxiunfrH
S35d41/Xf7TU/02U/GbRGGx/ycMlnxzbRvRU/QswhOqLNaZ+8BnjbIGxFqne
U3OWwbWRsSg6kD0DJm0VjKHATujsA/BPJJ8S2+a05uxLPi22jm5TtQ7h3b2q
+9s3+Mxz1rFhYOufch0Jxu4suSH6ADtUNP5rKXmQ5LvA9NhKrUFvPXurkufm
P4Yl9m/Ap50lT0yMP1kb1mik5CckN9H/t5b8MvPr/2okt5X8GjYPDKH6/tof
Q1Wvxf6QPEdz/Kdrv8DfQh+prS9niP2o649V28zYGAT82179hyTGq2eq/oba
5hWNNdDPr0u+sGhscST+ktomJH6HYO8vVT82MQZvXba9mBLZJryX+rx8WTQG
fi41nrtA8pGSm/LuVU7Q+Jlqa6n63Zqrscoc7ldrt6XuuZ/Wr3+N/ddPeF+R
dUZ71T9UOVHyRZIHg+c5U7p+ddF7kT3ZTf95v+STJXeRfJj6PwBTla1/wD6c
+cZl27PDJJ9czN9t2WfjIV1zgOQDtN7D1Z9ozovV101tO6Ve89/1+wz2Sv1/
xD5bnDHu5cnEvuXXuY7Hx6ynZ9u8Yl2KTu2k+nqeATylslzXt1ZbfdVrSn63
vOMddf0GXd9Nfb+U7Zv3rLEtwiZ1UX1vjW9bsf2ZCDbTf6xQ/3acCe6/ZP+D
/dUde1K0PWyv0kL936pszflQeUn1z3V9V9Uz9e+m+jK1jSt7P26v6x/X9Y2C
15uzfynnqWJ/f4Lq62PLDVRCZA7gQNXXaY7dVN9d5aaq26jHur8bJDermM9Y
mdh3/Ei/dVL7kG0192S1nR4bU2HfW6q8qr7rsGEV23902XvsN+5d5WnVS5qz
UcX6Hl/l+9i6Gf12WI11dMN8PcAG38ZezwNU9ols09GH6O/aNb7mHP1XWjG/
s0qlruq/as7rVL9XZVfJO1fc91Rs3fBf2VgbHTFT1w/RM69Pjc+Xqq931Riq
duSzzJk+Q9e+ldofGYAPrPru6r8O/1lykFyJ7H8NlTw/tb9yB88neUjJnMwS
/rtqDLhD5LPDGUL3vJAY3w+Ej1F//ci6DR2Hrngx8fPyPGNj+4BFyXupzFb9
bbXtyXqh71V/Q+XoYEwAFgCv18nX55+iMTj7a4uKscStKpWcH1qs+nKVXSre
f/Q9rJJo/LnBvifvdCf17aiyRnIfyWXVZ+j6R9F3KrtLfkHy9lrrZ2Lvj73x
iYvGiPuqfpr616nvY5X2wWvOWi/WnPXz/QV2/BB/U2MvCfbVXolta7G56P6n
tD7DJPfM7J8tlHyW5LXqv6Zo3xP82kv9a+GeUuuXjuwXyQ8m1u8HguEk35VY
HzXMLGNzGmO71X+n5CcS65smma/HpoMfuqv/FvisxLq+Zeb3i85vDn5W/4OS
n8X3ltyvbF3wTOLnaZpZ/4Eh7irbh8enbpvbywPV/1DRNg1dgE54rWgbhW5B
x8BtYMOwbS0y6wpsHPxnx8y6c4bkHTTvEWWf7XcS25rWmefD5mAr22S2PdhM
9NP+eh+fae3HRdbtbdX/ftE6Hn+va2Z+dVZibNYqM14Co1V17Q7wWepfHVuX
o9PBEt/BJ6XmEOEO30qMLcAYnJUfE2MPMAhn7ZfEfF+XzNefnfi8NM+s/8EE
YKtBZT8/GIvz1izz+8NmcdY4c+CrzVKfVc4sfCZc4A563rFqe1b1IyNzpXCm
YEu4gjGS3ykb+4EBp+V4Bqyxq/oHg0cyn/1LE5/XepyX2DYNXYHOgKvBF56b
mqOAm8D37sd+ysxnXpBY96CD0C34vvC93TKvx/mJfSXwE9xwp9RcMZwx3HNL
yQ+qXkv3tZ1KF/zlsjkLuIpmkieq/mX+fP0S6zZ0HLro78S6Cx2G7vsjsa5E
Z+4h+c/E2BsMvkTXb685J4G1MtvW2iVz4d1y/6Nhan7tq3y92M+Tq+aYb5R8
IDo2NWYAK+ym+jj1f5TP3wN8kGN0sHmD1Hzn12VjIzAS7549UEr9zhdXjT+f
AaurbXgwBwn3+FBkvvffsrm8mYn5zt/K5odPlbyFnmEzlSH4PjVeO9ZwL7Cz
2qfAp0j+mfOg+rnq/6Fs7IGvCR/9c9m++EnguKo5d7j2o8ExqTlPuM4jU/Nn
+Od12d/4rpKXSd4R/wzuSPJiyYnkU1L7j1sF38/Fmv8kydeofzvJJ6XWNegc
OGd01DnYn8x4He5kluTPNebWomMhczg/mf0FuBh0EToJvuCC1LoQnZim1oHo
PnQgvtPVRes6dB4xFeaESxyl+dpE5p7QvehgsB069jzV/y4b68ONwDWOzqz7
4BbnSv6xbP4cX3225AGZ/RO4L7iwkZnjQfjqJ0i+Mn+frUuOp0zNjG3bgtfU
d1/O4YG5WVvWuHPJazgumJOHi39G8vWqP6Ex7bAvqblf8ERNZA6Yd8U7gxNg
jYhNnZlzBtzTVYwP9t/u1fhrq+b3t1ffD5KXVs1/byn5K8nXVO2f3Yt+YU0l
b1axf/iI+pdVzZfsovGzeQeS72ZNJc9LHTubE4wViKHdKnl62dwJ3A5rwxq1
KXlPgVcf4p2pnqXmZrsEY084WuIL35Qdfzsusa3EZuILzS463rNF8FznJsbT
EzJj/ymSb6wafy6V3DPx3mSPwmFUI/vj0zLrJjhzuCvwNvwoHBZ4e1JmfxEO
iL3PGYDT4YyAX18s25fBp+FsccaOSX1GwH/4iC1LfmfoQzADWAH9107tH7KP
pJ8HaI8MzMyHjkkcH3g0OL6B77i7xgzJzNdOSmyzsKfwXWDh8YmxFevXKedr
OG+PB/uCg1Kfr8eC+esBkjur/ojKrrFtJvzNd7k+aaa2gyU/Ecxlvo1Pr/qf
6t9c17dXW8/g+eBKOdPwV3/k+qUd+Df4Gbh3zvSzqn+r/p9UbwpmlPyX5C3A
vpKflNwr+L/q5Xw/8SKedZ/Y3DkcOnw7vPufOd9JbGFqbH/+9uBYKTbp35zP
xJYeAV+Vmd8emhgTwTesAtPHji8+ExyvIlZYPzZfcUdwrJYzAb9wZzD3fF/R
/Hlv+FvV91bb0MzxicmJ5+gXPCdzgVme0r0sCI4lXKO2TfS+PgVzoY9jxxqI
OcBPw1PD/9yjslNsDIZ/z/uEa15TdDz6Y+459n5eHjzfcvVtrbazNd/OwbHX
/fW+W6u8rHJ87DHEZ+k/KTIGvyHY34aLiWLbLmzYm6k5FHQBOgFeCD6ItSMe
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
E/6Djw==
          "]], Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/HvmHFfta5qWcpMyV2so9y7zrWuXUs51n3Fpki5Rq5R7isU
MhVq6CDHVChRKmEUohxFjhzLOGKKTI/PfP3xmvm8nt/X+/35fL+/z/fz/T3c
5/lOOXmiKHqZ8lLXpCh6JTGKzheIouMJUdStRBSl8E/iX/LptMq1KdhVOs0P
KBHn0/lkuW+xzrQRe4YfjV8wPoF1l+2MDcWOYoexDKwdXwffxWfRJtcOlY2i
ptgFfgKlFLIOub30CZ+npN5yr/IX6SQ2jE5htdRuojJqumCtzNGiXBQ1p4rq
umHb5ZrKbKMKctlYR7mK/Foqin3AJ9Mj/Boqgr3P1wqc30wPYF3VtsY6WG9D
a5mu98OhjubxdylXZgzddq2TXD1sinE1meqUaW0ZVLVgFL0h19U6+8k1k5sv
l4/PTwP4TDxNTVs65NpU7BqdUTewRPy8Z/C3wm+JjaJrWE91W7BUcxSQW0h9
sO+xDKwYv5ya8Cdoi7qq/Fy1bfiztAOrh63A5vB36BI2HPsH66vfdixNv8LY
XUp1XwPwROt/iNbLLZXJ6/ndUDuJCslPDL3oFJ9Df8pN42+EufkX6RLWXq/a
2Fjj8vpXoAwsG9uD7Zdrg63k85vjNj+dHjTHELlW1pNW2G9oLbVppFwXPEtN
FzoT9ri6K5Tt912idkHYu2Ev026+E62T6yZzkJrJfSEzjJbJtNDvpswsKmfe
FHOeT4zvPQMrbd6N6mpSCzVrqbQeg0IvtZdlptA+tRuw6pQqs4ZKyfXim8id
kxlH38gl63+QNvBV5CYWiPfZYdqENU2I91xd/hfayDemydjf+s2lt9TtogHm
WCXTyhz/JcR7MuzNgXyfxPj9edQ9PEbD+Ab4EZkhdMy1cVg7rIxeRWWqed4N
sF/pM5k69LpcP/5puYPhLKED2HCsIfbbvXf6JFbY2urTUmvojpXSdyvfiNob
f0zlrXlwUrxnwj6pYd6aNF3mfkqSWUSX9HhWblI4w+SysV70oUytsH/1b0/F
9FsZfiPsc74l5cO68zPVXlc7SN1g+kiuNv61TAcqLpcjMwirbA1V6HjYL/zk
xHiP9Q7vHz2XFJ8T4WyoI1eXemPfYfv1uRr2FO3gs/HFxkso3X1UMu8T2DZz
tqVp2G65HKyDPh2pM1ZBrga2WSaVxmOb5HqEe9FrFjXCCslVpnnGmXIl8bFy
/eUK61WkZPxsV2Otsbsyi6ia/AtYI+zovfc3nMXF9BpCR1yfiZXVb6dcL7k3
jXPpR/d4SWY8zQ73Sd2xEfxZ6mw8J+yX8Lz4o9QG28qPpL78MUrDtvGj6CX+
HGVhc8P7jx0P75B5r4bnFJ6Xa7nYhLD3w7qoB3YfP5pOWfPC8P7iG6y5jdq8
xm9jDVz7AUvHioe9g2Vik9Rdpp76LMbmh/OEH07TjLeHs96103wOTeW/CucX
Nl+/FP2uqJsa9p9+bbG/aGc40+idAvE34Q/ayjdJiL8P4cxtq7aIXqsT4vO3
C1YP28v3DGeEXDvnUHo4//yOC7DHwxz8ULkUrFk4o7Hlaltit2RmUxI2BmuM
/X7vLL4YvrXYPlrHJ4dvHNZRv06Uq2ZZ+D8Q9qG6WtgV93k9fGfphPtvjl+T
eS38v3CtNPYe5Q3nj0yl8Pvq/5TcAZn+9LM5aut1AP+U/1fmjnwWX1duD9aD
dsot0OsmDXR9BbY0nBvh+yRX0PhdrLl1pumXr2x87zOwRtbcS66+3E98H9qr
3zB+fWL83NrJtKcRfBaeGb4RJeIz5X+M8VIT
          "]]}],
       Lighting->
        Automatic]}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{2925, 3061, 7791, 2926, 3069, 7797, 2943, 3077, 2952, 7821, 
       3085, 2961, 7822, 3093, 2970, 7827, 3101, 2979, 7833, 3109, 2988, 3117,
        7805, 2997, 3125, 7811, 3006, 3133, 7816, 3015, 7839, 3141, 3024, 
       7840, 3149, 3033, 7842, 3157, 3042, 7847, 3165, 3051}], 
      Line3DBox[{2927, 3171, 3172, 7792, 3337, 3173, 3174, 7798, 3341, 3192, 
       3193, 7802, 3345, 3204, 3205, 3349, 7902, 3216, 3217, 3353, 7903, 3228,
        3229, 3357, 7905, 3240, 3241, 3361, 3252, 3253, 7806, 3365, 3264, 
       3265, 7812, 3369, 3276, 3277, 7817, 3373, 3288, 3289, 7819, 3377, 7914,
        3300, 3301, 3381, 7915, 3312, 3313, 3385, 7917, 3324, 3325, 3052}], 
      Line3DBox[{2928, 3175, 3176, 7793, 3338, 3177, 3178, 7799, 3342, 3194, 
       7857, 3195, 3346, 3206, 7863, 3207, 3350, 3218, 3219, 3354, 7904, 3230,
        3231, 3358, 7906, 3242, 3243, 3362, 3254, 3255, 7807, 3366, 3266, 
       3267, 7813, 3370, 3278, 3279, 3374, 3290, 7880, 3291, 3378, 3302, 7886,
        3303, 3382, 7916, 3314, 3315, 3386, 7918, 3326, 3327, 3431}], 
      Line3DBox[{2929, 3436, 3437, 3435, 3179, 7794, 3339, 3180, 7853, 3181, 
       3343, 3196, 7858, 3197, 3347, 3208, 7864, 3209, 3351, 3220, 7869, 3221,
        3355, 3232, 3233, 3359, 7907, 3244, 3245, 3363, 3256, 3257, 7808, 
       3367, 3268, 3269, 3371, 3280, 7876, 3281, 3375, 3292, 7881, 3293, 3379,
        3304, 7887, 3305, 3383, 3316, 7891, 3317, 3387, 7919, 3328, 3430, 
       3449, 3448, 3432}], 
      Line3DBox[{2930, 3438, 3439, 3389, 7920, 3182, 3340, 3183, 3392, 7921, 
       3184, 3344, 3198, 3395, 7922, 3199, 3348, 3210, 7865, 3398, 3211, 3352,
        3222, 7870, 3401, 3223, 3356, 3234, 7873, 3404, 3235, 3360, 3246, 
       3407, 3247, 3364, 3258, 3410, 3259, 3368, 3270, 3413, 7928, 3271, 3372,
        3282, 3416, 7929, 3283, 3376, 3294, 3419, 7930, 3295, 3380, 3306, 
       7888, 3422, 3307, 3384, 3318, 7892, 3425, 3319, 3388, 3329, 7895, 3428,
        3451, 3450, 3433}], 
      Line3DBox[{8, 504, 5721, 23, 509, 5726, 38, 514, 5732, 53, 5240, 519, 
       68, 5254, 524, 83, 5268, 529, 98, 5282, 534, 113, 539, 5744, 128, 544, 
       5749, 143, 549, 5754, 158, 554, 5760, 173, 5332, 559, 188, 5346, 564, 
       203, 5360, 568, 218}], 
      Line3DBox[{2934, 3189, 3065, 7898, 2935, 3190, 3073, 7900, 2947, 3203, 
       3081, 7901, 2956, 3215, 7868, 3089, 2965, 7824, 3227, 3097, 2974, 7829,
        3239, 3105, 2983, 7836, 3251, 3113, 2992, 3263, 3121, 7910, 3001, 
       3275, 3129, 7912, 3010, 3287, 3137, 7913, 3019, 3299, 3145, 3028, 7841,
        3311, 3153, 3037, 7844, 3323, 3161, 3046, 7850, 3333, 3169, 3056}], 
      Line3DBox[{2936, 3066, 7795, 2937, 3074, 7800, 2948, 3082, 7803, 2957, 
       3090, 7804, 2966, 7825, 3098, 2975, 7830, 3106, 2984, 7837, 3114, 2993,
        3122, 7809, 3002, 3130, 7814, 3011, 3138, 7818, 3020, 3146, 7820, 
       3029, 3154, 3038, 7845, 3162, 3047, 7851, 3170, 3057}], 
      Line3DBox[{2938, 3493, 3494, 7796, 2939, 3500, 3501, 7801, 2949, 3509, 
       7947, 3510, 2958, 3518, 7950, 3519, 2967, 3527, 7952, 3528, 2976, 7831,
        3536, 3537, 2985, 7838, 3545, 3546, 2994, 3554, 3555, 7810, 3003, 
       3563, 3564, 7815, 3012, 3572, 7957, 3573, 3021, 3581, 7959, 3582, 3030,
        3590, 7962, 3591, 3039, 3599, 3600, 3048, 7852, 3610, 3611, 3058}], 
      Line3DBox[CompressedData["
1:eJwV0DlLA1EUgNEbBZdkFGKiCGrEXyIIgiAIiiAIQtBeSxv/j9q4NS5p3Bq3
xiWNW+PWuDVGbfRMcfhm7n08humbnhubzUREmYVcxHwSsdgSscwSzb0R/brK
GitskDVf1wG22GaTxLyiOwyyxz67JfSQA4Y45iTd2x3pGacMc0HeXZd6TpUr
Rvhy/kZvueaeO0Z55IkHXnim4J5xfeOdVz4pmn/oBDW+07vpMP/VHyaJ1ogM
f5477eo91zGV/h/NUvVNTZqQo2zXpl3OFzRPO0Vm7Hq0RDcN3hv5BzuiOhw=

       "]], Line3DBox[CompressedData["
1:eJwV0LErxHEYx/GHo9T5nWLgIkdGo9FotDGaWBV/ARERERGdiM7ISCZGTM54
xjOe0Q2Gk7y+w7vneT7vb09P39GF5ZmltoiYRyMfMdcd0V+IKGKoFDGg1uWz
8ussooKCrIvL1Bo3zV3JL1GUd8o7UOWmuAv523DEufqLFp65Se5M/8qV1Sa+
8chNcDm7Ts0n+EIDd9yP9+P8sfkIn6jjhhuTH+oP8IEaeu2pcIPcvnkP72iX
V9Uy18ft6nfQI39JN6Y9XJ7b1m8h457SjWnmctym/sFNG+p9uhErXAt/8nXz
Gm7TjViUN7Ga3mHEX5XSn+r/AQuhOdk=
       "]], 
      Line3DBox[{3050, 3164, 3606, 7846, 3041, 3156, 7943, 3488, 3032, 3148, 
       7942, 3485, 3023, 3140, 7941, 3482, 3014, 3132, 7940, 3479, 3005, 7967,
        3124, 3476, 2996, 7966, 3116, 3473, 2987, 3108, 3470, 7832, 2978, 
       3100, 3467, 7826, 2969, 3092, 7937, 3464, 2960, 3084, 7936, 3461, 2951,
        3076, 7935, 3458, 2942, 3068, 3455, 2924, 7965, 3060, 3452, 3617}], 
      Line3DBox[{3053, 3166, 3491, 3429, 7933, 3330, 3043, 3158, 3426, 7932, 
       3320, 3034, 3150, 3423, 7931, 3308, 3025, 3142, 7882, 3420, 3296, 3016,
        3134, 7877, 3417, 3284, 3007, 3126, 7875, 3414, 3272, 2998, 3118, 
       3411, 3260, 2989, 3110, 3408, 3248, 2980, 3102, 3405, 7925, 3236, 2971,
        3094, 3402, 7924, 3224, 2962, 3086, 3399, 7923, 3212, 2953, 3078, 
       7859, 3396, 3200, 2944, 3070, 7855, 3393, 3185, 2931, 3062, 7854, 3390,
        3442, 3441, 3440}], 
      Line3DBox[{3054, 3167, 3492, 3434, 3331, 7848, 3044, 3159, 7893, 3321, 
       3035, 3151, 7889, 3309, 3026, 3143, 7883, 3297, 3017, 3135, 7878, 3285,
        3008, 3127, 3273, 2999, 7908, 3119, 3261, 2990, 3111, 3249, 7834, 
       2981, 3103, 3237, 2972, 3095, 7871, 3225, 2963, 3087, 7866, 3213, 2954,
        3079, 7860, 3201, 2945, 3071, 7856, 3186, 2932, 7896, 3063, 3444, 
       3446, 3445, 3443}], 
      Line3DBox[{3055, 3168, 3332, 7849, 3045, 3160, 3322, 7843, 3036, 3152, 
       7890, 3310, 3027, 3144, 7884, 3298, 3018, 3136, 3286, 3009, 7911, 3128,
        3274, 3000, 7909, 3120, 3262, 2991, 3112, 3250, 7835, 2982, 3104, 
       3238, 7828, 2973, 3096, 3226, 7823, 2964, 3088, 7867, 3214, 2955, 3080,
        7861, 3202, 2946, 7899, 3072, 3188, 2933, 7897, 3064, 3187, 3447}], 
      Line3DBox[{3620, 3743, 8016, 3621, 3750, 8018, 3637, 3757, 3645, 7974, 
       3765, 3653, 7979, 3773, 3661, 7985, 3781, 3669, 7990, 3789, 3677, 3796,
        8037, 3685, 3803, 8039, 3693, 3810, 3701, 7998, 3818, 3709, 8003, 
       3826, 3717, 8008, 3834, 3725, 8012, 3842, 3733}], 
      Line3DBox[{3622, 1005, 6241, 1151, 1006, 6249, 1160, 1024, 6257, 1169, 
       1035, 1177, 6265, 1046, 1185, 6273, 1056, 1193, 6281, 1066, 1201, 1077,
        6289, 1209, 1087, 6298, 1218, 1097, 6306, 1227, 1108, 1235, 6314, 
       1118, 1243, 6322, 1128, 1251, 6330, 1139, 3734}], 
      Line3DBox[{3623, 3878, 3879, 8072, 4012, 3880, 3881, 8074, 4015, 3893, 
       3894, 4018, 3904, 8027, 3905, 4021, 3914, 3915, 4024, 8063, 3924, 3925,
        4027, 8064, 3934, 3935, 4030, 3944, 3945, 8079, 4033, 3953, 3954, 
       8081, 4036, 3962, 3963, 4039, 3973, 8048, 3974, 4042, 3983, 3984, 4045,
        8069, 3993, 3994, 4048, 8070, 4003, 4004, 4083}], 
      Line3DBox[{3624, 1367, 4088, 3882, 8073, 4013, 3883, 3884, 4016, 3895, 
       8022, 3896, 4019, 3906, 8028, 3907, 4022, 3916, 8032, 3917, 4025, 3926,
        3927, 4028, 8065, 3936, 3937, 4031, 3946, 3947, 8080, 4034, 3955, 
       3956, 4037, 3964, 8043, 3965, 4040, 3975, 8049, 3976, 4043, 3985, 8053,
        3986, 4046, 3995, 8056, 3996, 4049, 8071, 4005, 4082, 1388, 4084}], 
      Line3DBox[{3625, 4089, 4090, 4051, 3885, 4014, 3886, 4054, 8019, 3887, 
       4017, 3897, 4056, 8023, 3898, 4020, 3908, 4058, 3909, 4023, 3918, 8088,
        4060, 3919, 4026, 3928, 8089, 4062, 3929, 4029, 3938, 4064, 3939, 
       4032, 3948, 4067, 3949, 4035, 3957, 4070, 8040, 3958, 4038, 3966, 4072,
        8044, 3967, 4041, 3977, 4074, 3978, 4044, 3987, 8093, 4076, 3988, 
       4047, 3997, 8094, 4078, 3998, 4050, 4006, 8095, 4080, 4098, 4097, 
       4085}], Line3DBox[{762, 1260, 6339, 777, 1264, 6343, 792, 1267, 6346, 
       807, 1270, 822, 5904, 1273, 837, 5918, 1276, 852, 5931, 1279, 867, 
       1283, 6349, 882, 1287, 6353, 897, 1290, 6356, 912, 1293, 927, 5987, 
       1296, 942, 6000, 1299, 957, 6013, 1302, 972}], 
      Line3DBox[{3629, 1019, 6248, 1158, 1020, 6256, 1167, 1031, 6264, 1176, 
       1042, 1184, 6272, 1053, 1192, 6280, 1063, 1200, 6288, 1073, 1208, 1084,
        6296, 1216, 1094, 6305, 1225, 1104, 6313, 1234, 1115, 1242, 6321, 
       1125, 1250, 6329, 1135, 1258, 6337, 1146, 3738}], 
      Line3DBox[{3630, 3747, 8017, 3631, 3754, 8020, 3641, 3761, 8024, 3649, 
       3769, 8029, 3657, 7982, 3777, 3665, 7987, 3785, 3673, 7991, 3793, 3681,
        3800, 8038, 3689, 3807, 8041, 3697, 3814, 8045, 3705, 3822, 8050, 
       3713, 3830, 3721, 8011, 3838, 3729, 8014, 3845, 3739}], 
      Line3DBox[{3632, 4112, 4113, 8098, 3633, 4117, 4118, 8099, 3642, 3762, 
       8025, 3650, 3770, 8030, 3658, 3778, 8033, 3666, 7988, 3786, 3674, 8097,
        4107, 4108, 3682, 4122, 4123, 8100, 3690, 4129, 4130, 8101, 3698, 
       3815, 8046, 3706, 3823, 8051, 3714, 3831, 8054, 3722, 3839, 3730, 8015,
        3846, 3740}], 
      Line3DBox[{3634, 3892, 4114, 4116, 4115, 8085, 4053, 4120, 4121, 4119, 
       8021, 3902, 3903, 3849, 8026, 3850, 3913, 3852, 8031, 3853, 3923, 3855,
        8034, 3856, 3933, 3858, 8035, 3859, 3943, 8058, 3861, 4109, 4111, 
       4110, 4066, 4125, 4126, 4124, 4128, 4127, 8090, 4069, 4132, 4133, 4131,
        8042, 3971, 3972, 3865, 8047, 3866, 3982, 3868, 8052, 3869, 3992, 
       3871, 8055, 3872, 4002, 3874, 8057, 3875, 4010, 3876, 3877, 4011}], 
      Line3DBox[{3731, 3840, 4101, 4100, 4135, 8102, 4134, 3723, 3832, 8006, 
       3873, 3715, 3824, 8001, 3870, 3707, 3816, 7996, 3867, 3699, 3808, 7993,
        3864, 3691, 3801, 7992, 3863, 3683, 3794, 3862, 3675, 3787, 3860, 
       3667, 3779, 7983, 3857, 3659, 3771, 7977, 3854, 3651, 3763, 7972, 3851,
        3643, 3755, 7969, 3848, 3635, 3748, 7968, 3847, 3618, 3741, 4104, 
       4106, 4105, 4087}], 
      Line3DBox[{3732, 3841, 4099, 8103, 3724, 3833, 8007, 4137, 3716, 3825, 
       8002, 3708, 3817, 7997, 3700, 3809, 7994, 3692, 3802, 3684, 8036, 3795,
        3676, 3788, 7989, 3668, 3780, 7984, 3660, 3772, 7978, 3652, 3764, 
       7973, 3644, 3756, 7970, 3636, 3749, 3619, 8096, 3742, 4103, 4136}], 
      Line3DBox[{3735, 3843, 4102, 4081, 8013, 4007, 3726, 3835, 4079, 8009, 
       3999, 3718, 3827, 4077, 8004, 3989, 3710, 3819, 4075, 3979, 3702, 3811,
        8092, 4073, 3968, 3694, 3804, 8091, 4071, 3959, 3686, 3797, 4068, 
       3950, 3678, 3790, 4065, 3940, 3670, 3782, 4063, 7986, 3930, 3662, 3774,
        4061, 7980, 3920, 3654, 3766, 4059, 3910, 3646, 3758, 8087, 4057, 
       3899, 3638, 3751, 8086, 4055, 3888, 3626, 3744, 4052, 4093, 4092, 
       4091}], Line3DBox[{3736, 1410, 4086, 4008, 8083, 3727, 3836, 8010, 
       4000, 3719, 3828, 8005, 3990, 3711, 3820, 7999, 3980, 3703, 3812, 7995,
        3969, 3695, 3805, 3960, 3687, 8066, 3798, 3951, 3679, 3791, 3941, 
       8077, 3671, 3783, 3931, 3663, 3775, 7981, 3921, 3655, 3767, 7975, 3911,
        3647, 3759, 7971, 3900, 3639, 3752, 3889, 3627, 8059, 3745, 4095, 
       1378, 4094}], 
      Line3DBox[{3737, 3844, 4009, 8084, 3728, 3837, 4001, 8082, 3720, 3829, 
       3991, 3712, 3821, 8000, 3981, 3704, 3813, 3970, 3696, 8068, 3806, 3961,
        3688, 8067, 3799, 3952, 3680, 3792, 3942, 8078, 3672, 3784, 3932, 
       8076, 3664, 3776, 3922, 8075, 3656, 3768, 7976, 3912, 3648, 8062, 3760,
        3901, 3640, 8061, 3753, 3891, 3628, 8060, 3746, 3890, 4096}], 
      Line3DBox[{4140, 4264, 8152, 4141, 4271, 8154, 4157, 4278, 4165, 8110, 
       4285, 4173, 8115, 4293, 4182, 8121, 4301, 4190, 8125, 4308, 4198, 4316,
        8172, 4206, 4324, 8175, 4214, 4332, 4222, 8134, 4339, 4230, 8139, 
       4347, 4238, 8144, 4354, 4246, 8148, 4362, 4254}], 
      Line3DBox[{4142, 1708, 6781, 1851, 1709, 6789, 1860, 1727, 6798, 1869, 
       1738, 1877, 6806, 1747, 1885, 6814, 1756, 1893, 6822, 1765, 1902, 1776,
        6830, 1910, 1787, 6838, 1918, 1798, 6846, 1926, 1809, 1934, 6854, 
       1819, 1942, 6862, 1828, 1951, 6870, 1839, 4255}], 
      Line3DBox[{4143, 4392, 4393, 8209, 4524, 4394, 4395, 8211, 4527, 4407, 
       4408, 4530, 4418, 8163, 4419, 4533, 4427, 4428, 4536, 8199, 4436, 4437,
        4539, 8200, 4445, 4446, 4542, 4456, 4457, 8216, 4545, 4466, 4467, 
       8218, 4548, 4476, 4477, 4551, 4486, 8185, 4487, 4554, 4495, 4496, 4557,
        8206, 4504, 4505, 4560, 8207, 4515, 4516, 4593}], 
      Line3DBox[{4144, 2074, 4598, 4396, 8210, 4525, 4397, 4398, 4528, 4409, 
       8158, 4410, 4531, 4420, 8164, 4421, 4534, 4429, 8168, 4430, 4537, 4438,
        4439, 4540, 8201, 4447, 4448, 4543, 4458, 4459, 8217, 4546, 4468, 
       4469, 4549, 4478, 8180, 4479, 4552, 4488, 8186, 4489, 4555, 4497, 8190,
        4498, 4558, 4506, 8192, 4507, 4561, 8208, 4517, 4592, 2090, 4594}], 
      Line3DBox[{4145, 4599, 4600, 4563, 4399, 4526, 4400, 4566, 8155, 4401, 
       4529, 4411, 4568, 8159, 4412, 4532, 4422, 4570, 4423, 4535, 4431, 8225,
        4572, 4432, 4538, 4440, 8226, 4574, 4441, 4541, 4449, 4576, 4450, 
       4544, 4460, 4578, 4461, 4547, 4470, 4580, 8176, 4471, 4550, 4480, 4582,
        8181, 4481, 4553, 4490, 4584, 4491, 4556, 4499, 8229, 4586, 4500, 
       4559, 4508, 8230, 4588, 4509, 4562, 4518, 8231, 4590, 4608, 4607, 
       4595}], Line3DBox[{1468, 1960, 6879, 1483, 1964, 6883, 1498, 1967, 
       6886, 1513, 1970, 1528, 6452, 1973, 1543, 6466, 1976, 1558, 6480, 1979,
        1573, 1982, 6889, 1588, 1985, 6892, 1603, 1988, 6895, 1618, 1991, 
       1633, 6536, 1994, 1648, 6550, 1997, 1663, 6563, 2000, 1678}], 
      Line3DBox[{4149, 1722, 6788, 1858, 1723, 6796, 1867, 1734, 6805, 1876, 
       1745, 1884, 6813, 1754, 1892, 6821, 1763, 1900, 6829, 1772, 1909, 1783,
        6837, 1917, 1794, 6845, 1925, 1805, 6853, 1933, 1816, 1941, 6861, 
       1826, 1949, 6869, 1835, 1958, 6877, 1846, 4259}], 
      Line3DBox[{4150, 4268, 8153, 4151, 4275, 8156, 4161, 4282, 8160, 4169, 
       4289, 8165, 4177, 8118, 4297, 4186, 8123, 4305, 4194, 8126, 4312, 4202,
        4320, 8173, 4210, 4328, 8177, 4218, 4336, 8182, 4226, 4343, 8187, 
       4234, 4351, 4242, 8147, 4358, 4250, 8150, 4365, 4260}], 
      Line3DBox[{4152, 4631, 4632, 8233, 4153, 4636, 4637, 8234, 4162, 4620, 
       8161, 4621, 4170, 4290, 8166, 4178, 4298, 8169, 4187, 8235, 4644, 4645,
        4195, 8127, 4313, 4203, 4321, 8174, 4211, 4329, 8178, 4219, 4626, 
       8183, 4627, 4227, 4344, 8188, 4235, 4650, 8191, 4651, 4243, 4359, 4251,
        8151, 4366, 4261}], 
      Line3DBox[{4154, 4406, 4633, 4635, 4634, 8222, 4565, 4639, 4640, 4638, 
       8157, 4416, 4417, 4369, 4622, 8162, 4370, 4625, 4623, 8167, 4624, 4179,
        4641, 8170, 4642, 4643, 4647, 8236, 4648, 4646, 4454, 4455, 8194, 
       4375, 4376, 4465, 4378, 4379, 8205, 4475, 4381, 8179, 4382, 4485, 4384,
        4628, 8184, 4630, 4629, 4611, 4609, 8189, 4610, 4649, 4653, 4654, 
       8237, 4652, 4513, 4514, 4388, 8193, 4389, 4522, 4390, 4391, 4523}], 
      Line3DBox[{4252, 4360, 4614, 4613, 4656, 8238, 4655, 4244, 4352, 8142, 
       4387, 4236, 4345, 8137, 4386, 4228, 4337, 8132, 4385, 4220, 4330, 8129,
        4383, 4212, 4322, 8128, 4380, 4204, 4314, 4377, 4196, 4306, 4374, 
       4188, 4299, 8119, 4373, 4180, 4291, 8113, 4372, 4171, 4283, 8108, 4371,
        4163, 4276, 8105, 4368, 4155, 4269, 8104, 4367, 4138, 4262, 4617, 
       4619, 4618, 4597}], 
      Line3DBox[{4253, 4361, 4612, 8239, 4245, 4353, 8143, 4658, 4237, 4346, 
       8138, 4229, 4338, 8133, 4221, 4331, 8130, 4213, 4323, 4205, 8171, 4315,
        4197, 4307, 8124, 4189, 4300, 8120, 4181, 4292, 8114, 4172, 4284, 
       8109, 4164, 4277, 8106, 4156, 4270, 4139, 8232, 4263, 4616, 4657}], 
      Line3DBox[{4256, 4363, 4615, 4591, 8149, 4519, 4247, 4355, 4589, 8145, 
       4510, 4239, 4348, 4587, 8140, 4501, 4231, 4340, 4585, 4492, 4223, 4333,
        8228, 4583, 4482, 4215, 4325, 8227, 4581, 4472, 4207, 4317, 4579, 
       4462, 4199, 4309, 4577, 4451, 4191, 4302, 4575, 8122, 4442, 4183, 4294,
        4573, 8116, 4433, 4174, 4286, 4571, 4424, 4166, 4279, 8224, 4569, 
       4413, 4158, 4272, 8223, 4567, 4402, 4146, 4265, 4564, 4603, 4602, 
       4601}], Line3DBox[{4257, 2107, 4596, 4520, 8220, 4248, 4356, 8146, 
       4511, 4240, 4349, 8141, 4502, 4232, 4341, 8135, 4493, 4224, 4334, 8131,
        4483, 4216, 4326, 4473, 4208, 8202, 4318, 4463, 4200, 4310, 4452, 
       8214, 4192, 4303, 4443, 4184, 4295, 8117, 4434, 4175, 4287, 8111, 4425,
        4167, 4280, 8107, 4414, 4159, 4273, 4403, 4147, 8195, 4266, 4605, 
       2085, 4604}], 
      Line3DBox[{4258, 4364, 4521, 8221, 4249, 4357, 4512, 8219, 4241, 4350, 
       4503, 4233, 4342, 8136, 4494, 4225, 4335, 4484, 4217, 8204, 4327, 4474,
        4209, 8203, 4319, 4464, 4201, 4311, 4453, 8215, 4193, 4304, 4444, 
       8213, 4185, 4296, 4435, 8212, 4176, 4288, 8112, 4426, 4168, 8198, 4281,
        4415, 4160, 8197, 4274, 4405, 4148, 8196, 4267, 4404, 4606}], 
      Line3DBox[{4661, 4784, 8286, 4662, 4792, 8289, 4678, 4799, 4686, 8246, 
       4806, 4694, 8251, 4813, 4702, 8257, 4820, 4710, 8261, 4827, 4718, 4834,
        8304, 4726, 4841, 8306, 4734, 4848, 4742, 8269, 4855, 4750, 8274, 
       4862, 4758, 8279, 4869, 4766, 8283, 4876, 4774}], 
      Line3DBox[{4663, 2410, 7320, 2553, 2411, 7328, 2562, 2430, 7336, 2570, 
       2440, 2579, 7345, 2450, 2588, 7353, 2460, 2597, 7361, 2470, 2606, 2481,
        7369, 2614, 2491, 7377, 2623, 2501, 7385, 2632, 2511, 2641, 7394, 
       2521, 2650, 7402, 2531, 2659, 7410, 2542, 4775}], 
      Line3DBox[{4664, 4895, 4896, 8336, 5024, 4897, 4898, 8338, 5027, 4912, 
       4913, 5030, 4921, 8297, 4922, 5033, 4930, 4931, 5036, 8327, 4939, 4940,
        5039, 8328, 4948, 4949, 5042, 4959, 4960, 8343, 5045, 4968, 4969, 
       8345, 5048, 4977, 4978, 5051, 4986, 8314, 4987, 5054, 4995, 4996, 5057,
        8333, 5004, 5005, 5060, 8334, 5015, 5016, 5102}], 
      Line3DBox[{4665, 2802, 5107, 4899, 8337, 5025, 4900, 4901, 5028, 4914, 
       8292, 4915, 5031, 4923, 8298, 4924, 5034, 4932, 8301, 4933, 5037, 4941,
        4942, 5040, 8329, 4950, 4951, 5043, 4961, 4962, 8344, 5046, 4970, 
       4971, 5049, 4979, 8309, 4980, 5052, 4988, 8315, 4989, 5055, 4997, 8318,
        4998, 5058, 5006, 8320, 5007, 5061, 8335, 5017, 5101, 2819, 5103}], 
      Line3DBox[{4666, 5108, 5109, 5063, 4902, 5026, 4903, 5065, 8290, 4904, 
       5029, 4916, 5068, 8293, 4917, 5032, 4925, 5071, 4926, 5035, 4934, 8351,
        5074, 4935, 5038, 4943, 8352, 5077, 4944, 5041, 4952, 5079, 4953, 
       5044, 4963, 5082, 4964, 5047, 4972, 5085, 8307, 4973, 5050, 4981, 5088,
        8310, 4982, 5053, 4990, 5091, 4991, 5056, 4999, 8356, 5094, 5000, 
       5059, 5008, 8357, 5096, 5009, 5062, 5018, 8358, 5099, 5117, 5116, 
       5104}], Line3DBox[{2174, 2669, 7419, 2189, 2672, 7422, 2204, 2676, 
       7426, 2219, 2680, 2234, 7004, 2684, 2249, 7017, 2688, 2264, 7030, 2691,
        2279, 2695, 7432, 2294, 2699, 7436, 2309, 2703, 7440, 2324, 2707, 
       2339, 7083, 2711, 2354, 7096, 2714, 2369, 7109, 2718, 2384}], 
      Line3DBox[{4670, 2424, 7327, 2560, 2425, 7335, 2569, 2437, 7343, 2577, 
       2447, 2586, 7352, 2457, 2595, 7360, 2467, 2604, 7368, 2477, 2613, 2488,
        7376, 2621, 2498, 7384, 2630, 2508, 7392, 2639, 2518, 2648, 7401, 
       2528, 2657, 7409, 2538, 2666, 7417, 2549, 4779}], 
      Line3DBox[{4671, 4788, 8287, 4672, 4796, 8291, 4682, 4803, 8294, 4690, 
       4810, 8299, 4698, 8254, 4817, 4706, 8259, 4824, 4714, 8262, 4831, 4722,
        4838, 8305, 4730, 4845, 8308, 4738, 4852, 8311, 4746, 4859, 8316, 
       4754, 4866, 4762, 8282, 4873, 4770, 8285, 4879, 4780}], 
      Line3DBox[{4673, 4789, 8288, 4674, 5126, 5127, 8360, 4683, 5141, 8295, 
       5142, 4691, 5148, 8300, 5149, 4699, 5155, 8302, 5156, 4707, 8365, 5162,
        5163, 4715, 8362, 5131, 5132, 4723, 5167, 5168, 8367, 4731, 5174, 
       5175, 8368, 4739, 5181, 8312, 5182, 4747, 5188, 8317, 5189, 4755, 5195,
        8319, 5196, 4763, 5136, 5137, 4771, 8371, 5200, 5201, 4781}], 
      Line3DBox[CompressedData["
1:eJwNyjtLgnEYxuHHrYKKVFALTAM7QBp2gE7QQSgLKrCgKQenppobG/wIOSaN
UQT1NYIgaAkCIWjpU3gNF7/3vZ9/sXXduEpExDm1ZEQ5FVGhXYhY0DEG0hFD
PNoG9d2W1RwZLu0TOs6H26QWyDNFkU/7tM7w7H1J55jly62sL/aKznNha3Jr
y+iwbZQRvv0v6hJVVljmwdsftzXf66yyyat9Q3tu27rDFjf2mu7y67avdfY4
5IA/+7Ge8Ob9kd7ZOuR5siVtaVL82071jAb3/rv0AX/QJis=
       "]], 
      Line3DBox[{4772, 4874, 5120, 5119, 5206, 8372, 5205, 4764, 4867, 8277, 
       4893, 4756, 4860, 8272, 4892, 4748, 4853, 8267, 4891, 4740, 4846, 8264,
        4890, 4732, 4839, 8263, 4889, 4724, 4832, 4888, 4716, 4825, 4886, 
       4708, 4818, 8255, 4885, 4700, 4811, 8249, 4884, 4692, 4804, 8244, 4883,
        4684, 4797, 8241, 4882, 4676, 4790, 8240, 4880, 4659, 4782, 5123, 
       5125, 5124, 5106}], 
      Line3DBox[{4773, 4875, 5118, 8373, 4765, 4868, 8278, 5208, 4757, 4861, 
       8273, 4749, 4854, 8268, 4741, 4847, 8265, 4733, 4840, 4725, 8303, 4833,
        4717, 4826, 8260, 4709, 4819, 8256, 4701, 4812, 8250, 4693, 4805, 
       8245, 4685, 4798, 8242, 4677, 4791, 4660, 8359, 4783, 5122, 5207}], 
      Line3DBox[{4776, 4877, 5121, 5100, 8284, 5019, 4767, 4870, 5097, 8280, 
       5010, 4759, 4863, 5095, 8275, 5001, 4751, 4856, 5092, 4992, 4743, 4849,
        8355, 5089, 4983, 4735, 4842, 8354, 5086, 4974, 4727, 4835, 5083, 
       4965, 4719, 4828, 5080, 4954, 4711, 4821, 5078, 8258, 4945, 4703, 4814,
        5075, 8252, 4936, 4695, 4807, 5072, 4927, 4687, 4800, 8350, 5069, 
       4918, 4679, 4793, 8349, 5066, 4905, 4667, 4785, 5064, 5112, 5111, 
       5110}], Line3DBox[{4777, 2846, 5105, 5020, 8347, 4768, 4871, 8281, 
       5011, 4760, 4864, 8276, 5002, 4752, 4857, 8270, 4993, 4744, 4850, 8266,
        4984, 4736, 4843, 4975, 4728, 8330, 4836, 4966, 4720, 4829, 4955, 
       8341, 4712, 4822, 4946, 4704, 4815, 8253, 4937, 4696, 4808, 8247, 4928,
        4688, 4801, 8243, 4919, 4680, 4794, 4906, 4668, 8322, 4786, 5114, 
       2813, 5113}], 
      Line3DBox[{4778, 4878, 5021, 8348, 4769, 4872, 5012, 8346, 4761, 4865, 
       5003, 4753, 4858, 8271, 4994, 4745, 4851, 4985, 4737, 8332, 4844, 4976,
        4729, 8331, 4837, 4967, 4721, 4830, 4956, 8342, 4713, 4823, 4947, 
       8340, 4705, 4816, 4938, 8339, 4697, 4809, 8248, 4929, 4689, 8326, 4802,
        4920, 4681, 8324, 4795, 4908, 4669, 8323, 4787, 4907, 5115}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{5209, 5439, 5719, 5772, 3059, 5771, 5770, 5836, 7965, 5368, 
       5210, 7791, 5369, 5211, 7541, 7792, 5595, 5370, 5212, 7543, 7793, 5596,
        5371, 5768, 7545, 7794, 5597, 5372, 5720, 7920, 5441, 5598, 5373, 
       5721, 5443, 5599, 7512, 7854, 5722, 5445, 5600, 7896, 5374, 5769, 5447,
        5601, 7897, 5375, 5213, 5449, 5602, 7898, 5376, 5214, 7795, 5377, 
       5215, 7584, 7796, 5378, 5800, 7585, 7945, 5801, 5723, 5379, 5451}], 
      Line3DBox[{5216, 5452, 5724, 5775, 5776, 7934, 5774, 5773, 5837, 3068, 
       5217, 7797, 5380, 5218, 7542, 7798, 5603, 5381, 5219, 7544, 7799, 5604,
        5382, 5220, 7853, 5440, 5605, 5383, 5725, 7921, 5442, 5606, 5384, 
       5726, 5444, 5607, 7513, 7855, 5727, 5446, 5608, 7514, 7856, 5221, 5448,
        5609, 7899, 5385, 5222, 5450, 5610, 7900, 5386, 5223, 7800, 5387, 
       5224, 7586, 7801, 5388, 5802, 7946, 5803, 5460, 5728, 5389, 5611}], 
      Line3DBox[{5225, 5461, 5729, 5779, 7862, 7579, 5778, 5777, 5838, 7515, 
       7935, 5226, 3077, 5227, 7546, 7802, 5612, 5390, 5228, 7857, 5453, 5614,
        5391, 5229, 7858, 5454, 5616, 5392, 5731, 7922, 5455, 5618, 5393, 
       5732, 5456, 5620, 7516, 7859, 5733, 5457, 5622, 7517, 7860, 5230, 5458,
        5624, 7518, 7861, 5231, 5459, 5626, 7901, 5394, 5232, 7803, 5395, 
       5233, 7947, 5804, 5396, 5805, 7587, 7948, 5477, 5734, 5397, 5628}], 
      Line3DBox[{5247, 5493, 5735, 5492, 7872, 7589, 5246, 5807, 5806, 7950, 
       5245, 5398, 7804, 5244, 7868, 5476, 5627, 5475, 5243, 7867, 5474, 5625,
        5473, 5242, 7866, 5472, 5623, 5471, 5241, 7923, 5470, 5621, 5469, 
       5240, 5468, 5619, 5467, 7865, 5239, 5466, 5617, 5465, 7864, 5238, 5464,
        5615, 5463, 7863, 5237, 5462, 5613, 3204, 5236, 7821, 7519, 5235, 
       7936, 5781, 5839, 5780, 5840, 5234, 7588, 7949, 5479, 5730, 5478, 
       5629}], Line3DBox[{5261, 5507, 5737, 5506, 7874, 7591, 5260, 5809, 
       5808, 7952, 5259, 7825, 7521, 5258, 7549, 7824, 5637, 5491, 5257, 7548,
        7823, 5636, 5490, 5256, 7871, 5489, 5635, 5488, 5255, 7924, 5487, 
       5634, 5486, 5254, 5485, 5633, 5484, 7870, 5253, 5483, 5632, 5482, 7869,
        5252, 5481, 5631, 3218, 5251, 5480, 5630, 7902, 7547, 5250, 7822, 
       7520, 5249, 7937, 5783, 5841, 5782, 5842, 5248, 7590, 7951, 5495, 5736,
        5494, 5638}], 
      Line3DBox[{5275, 5517, 5739, 5814, 5813, 7953, 5274, 5812, 7831, 7592, 
       5273, 7830, 7523, 5272, 7553, 7829, 5646, 5505, 5271, 7552, 7828, 5645,
        5504, 5270, 3237, 5644, 5503, 5269, 7925, 5502, 5643, 5501, 5268, 
       5500, 5642, 5499, 7873, 5267, 5498, 5641, 3232, 5266, 5497, 5640, 7904,
        7551, 5265, 5496, 5639, 7903, 7550, 5264, 7827, 7522, 5263, 7580, 
       7826, 5843, 5845, 5844, 5262, 7938, 5810, 5811, 5738, 5508, 5647}], 
      Line3DBox[{106, 532, 2986, 107, 741, 2987, 108, 2988, 109, 3361, 431, 
       110, 3362, 432, 111, 3363, 433, 112, 3364, 434, 113, 435, 2989, 114, 
       436, 2990, 115, 437, 2991, 116, 438, 2992, 117, 2993, 118, 2994, 119, 
       3409, 536, 120}], 
      Line3DBox[{5289, 5523, 5741, 5817, 7926, 7595, 5288, 5816, 7838, 7594, 
       5287, 7837, 7525, 5286, 7559, 7836, 5655, 5516, 5285, 7558, 7835, 5654,
        5515, 5284, 7557, 7834, 5653, 5514, 5283, 3248, 5652, 5513, 5282, 
       5512, 5651, 3246, 5281, 5511, 5650, 7907, 7556, 5280, 5510, 5649, 7906,
        7555, 5279, 5509, 5648, 7905, 7554, 5278, 7833, 7524, 5277, 7581, 
       7832, 5846, 5848, 5847, 5276, 7593, 7954, 5815, 5740, 5518, 5656}], 
      Line3DBox[{5290, 5524, 5742, 5786, 7927, 5399, 5785, 5784, 5849, 7966, 
       5400, 5291, 7805, 5401, 5292, 7560, 7806, 5657, 5402, 5293, 7561, 7807,
        5658, 5403, 5294, 7562, 7808, 5659, 5404, 5743, 3259, 5660, 5405, 
       5744, 5519, 5661, 3118, 5745, 5520, 5662, 7908, 5406, 5295, 5521, 5663,
        7909, 5407, 5296, 5522, 5664, 7910, 5408, 5297, 7809, 5409, 5298, 
       7596, 7810, 5410, 5818, 7597, 7955, 5819, 5746, 5411, 5665}], 
      Line3DBox[{5299, 5530, 5747, 5789, 7526, 7939, 5788, 5787, 5850, 7967, 
       5412, 5300, 7811, 5413, 5301, 7563, 7812, 5666, 5414, 5302, 7564, 7813,
        5667, 5415, 5303, 3269, 5668, 5416, 5748, 7928, 5525, 5669, 5417, 
       5749, 5526, 5670, 7527, 7875, 5750, 5527, 5671, 3127, 5304, 5528, 5672,
        7911, 5418, 5305, 5529, 5673, 7912, 5419, 5306, 7814, 5420, 5307, 
       7598, 7815, 5421, 5820, 7956, 5821, 5822, 5751, 5422, 5674}], 
      Line3DBox[{5308, 5537, 5752, 5792, 7879, 7582, 5791, 5790, 5851, 7528, 
       7940, 5309, 7816, 5423, 5310, 7565, 7817, 5675, 5424, 5311, 3279, 5676,
        5425, 5312, 7876, 5531, 5677, 5426, 5753, 7929, 5532, 5678, 5427, 
       5754, 5533, 5679, 7529, 7877, 5755, 5534, 5680, 7530, 7878, 5313, 5535,
        5681, 3136, 5314, 5536, 5682, 7913, 5428, 5315, 7818, 5429, 5316, 
       7957, 5823, 5430, 5824, 7599, 7958, 5545, 5756, 5431, 5683}], 
      Line3DBox[{5317, 5546, 5757, 5795, 7885, 7583, 5794, 5793, 5852, 7531, 
       7941, 5318, 7532, 7839, 5319, 7566, 7819, 5684, 5432, 5320, 7880, 5538,
        5686, 5433, 5321, 7881, 5539, 5688, 5434, 5759, 7930, 5540, 5690, 
       5435, 5760, 5541, 5692, 7533, 7882, 5761, 5542, 5694, 7534, 7883, 5322,
        5543, 5696, 7535, 7884, 5323, 5544, 5698, 3145, 5324, 7820, 5436, 
       5325, 7959, 5825, 5437, 5826, 7600, 7960, 5561, 5762, 5438, 5700}], 
      Line3DBox[{5339, 5577, 5763, 5576, 7894, 7602, 5338, 5828, 5827, 7962, 
       5337, 3154, 5336, 7568, 7841, 5699, 5560, 5335, 7890, 5559, 5697, 5558,
        5334, 7889, 5557, 5695, 5556, 5333, 7931, 5555, 5693, 5554, 5332, 
       5553, 5691, 5552, 7888, 5331, 5551, 5689, 5550, 7887, 5330, 5549, 5687,
        5548, 7886, 5329, 5547, 5685, 7914, 7567, 5328, 7840, 7536, 5327, 
       7942, 5797, 5853, 5796, 5854, 5326, 7601, 7961, 5563, 5758, 5562, 
       5701}], Line3DBox[{5353, 5591, 5765, 5590, 5831, 7963, 5352, 5830, 
       3599, 5351, 7845, 7538, 5350, 7572, 7844, 5709, 5575, 5349, 7571, 7843,
        5708, 5574, 5348, 7893, 5573, 5707, 5572, 5347, 7932, 5571, 5706, 
       5570, 5346, 5569, 5705, 5568, 7892, 5345, 5567, 5704, 5566, 7891, 5344,
        5565, 5703, 7916, 7570, 5343, 5564, 5702, 7915, 7569, 5342, 7842, 
       7537, 5341, 7943, 5799, 5855, 5798, 5856, 5340, 7944, 5829, 5579, 5764,
        5578, 5710}], 
      Line3DBox[{5367, 5594, 5767, 5835, 3613, 5366, 5834, 7852, 7604, 5365, 
       7851, 7540, 5364, 7578, 7850, 5718, 5589, 5363, 7577, 7849, 5717, 5588,
        5362, 7576, 7848, 5716, 5587, 5361, 7933, 5586, 5715, 5585, 5360, 
       5584, 5714, 5583, 7895, 5359, 5582, 5713, 7919, 7575, 5358, 5581, 5712,
        7918, 7574, 5357, 5580, 5711, 7917, 7573, 5356, 7847, 7539, 5355, 
       7603, 7846, 5857, 5859, 5858, 5354, 7964, 5832, 5833, 5766, 5592, 
       5593}], Line3DBox[{5860, 6366, 6367, 6103, 3741, 6386, 6385, 8096, 
       6021, 5861, 8016, 6022, 5862, 6104, 6241, 6023, 5863, 7639, 8072, 6242,
        6024, 6378, 7641, 8073, 6243, 6025, 6338, 3885, 6244, 6026, 6339, 
       6107, 6245, 3744, 6340, 6109, 6246, 8059, 6027, 6379, 6111, 6247, 8060,
        6028, 5864, 6113, 6248, 6029, 5865, 8017, 6030, 5866, 7660, 8098, 
       6031, 6395, 7661, 8085, 6396, 6341, 6380, 6032, 6115}], 
      Line3DBox[{5868, 1337, 6116, 7605, 7968, 5867, 3749, 5869, 8018, 6033, 
       5870, 6105, 6249, 6034, 5871, 7640, 8074, 6250, 6035, 5872, 3884, 6251,
        6036, 6342, 8019, 6106, 6252, 6037, 6343, 6108, 6253, 7606, 8086, 
       6344, 6110, 6254, 3752, 5873, 6112, 6255, 8061, 6038, 5874, 6114, 6256,
        6039, 5875, 8020, 6040, 5876, 7662, 8099, 6041, 6397, 8021, 6124, 
       6125, 1396, 1452}], 
      Line3DBox[{5878, 6368, 6085, 6126, 7607, 7969, 5877, 7608, 7970, 5879, 
       3757, 5880, 6117, 6257, 6042, 5881, 3894, 6258, 6043, 5882, 8022, 6118,
        6259, 6044, 6345, 8023, 6119, 6260, 6045, 6346, 6120, 6261, 7609, 
       8087, 6347, 6121, 6262, 7610, 7971, 5883, 6122, 6263, 8062, 6046, 5884,
        6123, 6264, 6047, 5885, 8024, 6048, 5886, 8025, 6049, 5887, 8026, 
       6086, 6128, 6381, 6382, 6127}], 
      Line3DBox[{1340, 984, 7972, 5888, 7611, 7973, 5889, 7612, 7974, 5890, 
       1035, 5891, 8027, 1036, 5892, 8028, 1037, 1269, 4058, 1038, 1270, 1039,
        4059, 1271, 1040, 7975, 5893, 1041, 7976, 5894, 1042, 5895, 8029, 
       6050, 5896, 8030, 6051, 5897, 8031, 985, 1321}], 
      Line3DBox[{5911, 6090, 6144, 6089, 8034, 5910, 6052, 8033, 5909, 7982, 
       7615, 5908, 6143, 6272, 6142, 5907, 7642, 8075, 6271, 6141, 5906, 7981,
        6140, 6270, 6139, 5905, 7980, 6138, 6269, 6137, 5904, 6136, 6268, 
       6135, 8088, 5903, 6134, 6267, 6133, 8032, 5902, 6132, 6266, 3914, 5901,
        6131, 6265, 6130, 5900, 7979, 7614, 5899, 7978, 7613, 5898, 7977, 
       6088, 6129, 6087, 6387, 6369}], 
      Line3DBox[{1316, 1304, 6158, 6092, 8035, 5924, 7988, 7619, 5923, 7987, 
       7618, 5922, 6157, 6280, 6156, 5921, 7644, 8076, 6279, 6155, 5920, 3931,
        6278, 6154, 5919, 7986, 6153, 6277, 6152, 5918, 6151, 6276, 6150, 
       8089, 5917, 6149, 6275, 3926, 5916, 6148, 6274, 8063, 7643, 5915, 6147,
        6273, 6146, 5914, 7985, 7617, 5913, 7984, 7616, 5912, 7983, 6091, 
       6145, 1419, 6370}], 
      Line3DBox[{860, 1076, 3675, 861, 3676, 862, 3677, 863, 1201, 864, 4030, 
       1202, 865, 4031, 1203, 866, 4032, 1204, 867, 1205, 3678, 868, 1206, 
       3679, 869, 1207, 3680, 870, 1208, 871, 3681, 872, 3682, 873, 4066, 
       1281, 874}], 
      Line3DBox[{5938, 6358, 6359, 6170, 8058, 7638, 5937, 6390, 8097, 7659, 
       5936, 7991, 7622, 5935, 6169, 6288, 6168, 5934, 7648, 8078, 6287, 6167,
        5933, 7647, 8077, 6286, 6166, 5932, 3940, 6285, 6165, 5931, 6164, 
       6284, 3938, 5930, 6163, 6283, 8065, 7646, 5929, 6162, 6282, 8064, 7645,
        5928, 6161, 6281, 6160, 5927, 7990, 7621, 5926, 7989, 7620, 5925, 
       3860, 6159, 6389, 6388, 6371}], 
      Line3DBox[{5940, 6372, 6373, 6176, 3794, 5939, 8036, 6053, 5941, 8037, 
       6054, 5942, 6171, 6289, 6055, 5943, 7649, 8079, 6290, 6056, 5944, 7650,
        8080, 6291, 6057, 6348, 3949, 6292, 6058, 6349, 6172, 6293, 3797, 
       6350, 6173, 6294, 8066, 6059, 5945, 6174, 6295, 8067, 6060, 5946, 6175,
        6296, 6061, 5947, 8038, 6062, 5948, 7663, 8100, 6063, 6398, 7664, 
       8090, 6399, 6351, 6384, 6064, 6297}], 
      Line3DBox[{5950, 1352, 6183, 7623, 7992, 5949, 3802, 5951, 8039, 6065, 
       5952, 6177, 6298, 6066, 5953, 7651, 8081, 6299, 6067, 5954, 3956, 6300,
        6068, 6352, 8040, 6178, 6301, 6069, 6353, 6179, 6302, 7624, 8091, 
       6354, 6180, 6303, 3805, 5955, 6181, 6304, 8068, 6070, 5956, 6182, 6305,
        6071, 5957, 8041, 6072, 5958, 7665, 8101, 6073, 6400, 8042, 6191, 
       6192, 1399, 1454}], 
      Line3DBox[{5960, 6374, 6093, 6193, 7625, 7993, 5959, 7626, 7994, 5961, 
       3810, 5962, 6184, 6306, 6074, 5963, 3963, 6307, 6075, 5964, 8043, 6185,
        6308, 6076, 6355, 8044, 6186, 6309, 6077, 6356, 6187, 6310, 7627, 
       8092, 6357, 6188, 6311, 7628, 7995, 5965, 6189, 6312, 3813, 5966, 6190,
        6313, 6078, 5967, 8045, 6079, 5968, 8046, 6080, 5969, 8047, 6094, 
       6194, 6081, 5970}], 
      Line3DBox[{1355, 996, 7996, 5971, 7629, 7997, 5972, 7630, 7998, 5973, 
       1108, 5974, 8048, 1109, 5975, 8049, 1110, 1292, 4074, 1111, 1293, 1112,
        4075, 1294, 1113, 7999, 5976, 1114, 8000, 5977, 1115, 5978, 8050, 
       6082, 5979, 8051, 6083, 5980, 8052, 997, 1323}], 
      Line3DBox[{6020, 6362, 6363, 6240, 3876, 6019, 8015, 7637, 6018, 8014, 
       7636, 6017, 6239, 6337, 6238, 6016, 7657, 8084, 6336, 6237, 6015, 7656,
        8083, 6335, 6236, 6014, 8013, 6235, 6334, 6234, 6013, 6233, 6333, 
       6232, 8095, 6012, 6231, 6332, 8071, 7655, 6011, 6230, 6331, 8070, 7654,
        6010, 6229, 6330, 6228, 6009, 8012, 7635, 6008, 7658, 8103, 6406, 
       6408, 6407, 6007, 8102, 6402, 6403, 6227, 6394, 6393, 6377}], 
      Line3DBox[{6364, 6360, 6383, 6098, 6210, 6097, 8055, 5993, 6084, 8054, 
       5992, 3830, 5991, 6209, 6321, 6208, 5990, 3991, 6320, 6207, 5989, 8005,
        6206, 6319, 6205, 5988, 8004, 6204, 6318, 6203, 5987, 6202, 6317, 
       6201, 8093, 5986, 6200, 6316, 6199, 8053, 5985, 6198, 6315, 3983, 5984,
        6197, 6314, 6196, 5983, 8003, 7632, 5982, 8002, 7631, 5981, 8001, 
       6096, 6195, 6095, 6391, 6375}], 
      Line3DBox[{6365, 6361, 6401, 6102, 6226, 6101, 8057, 6006, 3839, 6005, 
       8011, 7634, 6004, 6225, 6329, 6224, 6003, 7653, 8082, 6328, 6223, 6002,
        8010, 6222, 6327, 6221, 6001, 8009, 6220, 6326, 6219, 6000, 6218, 
       6325, 6217, 8094, 5999, 6216, 6324, 6215, 8056, 5998, 6214, 6323, 8069,
        7652, 5997, 6213, 6322, 6212, 5996, 8008, 7633, 5995, 8007, 6405, 
       6404, 5994, 8006, 6100, 6211, 6099, 6392, 6376}], 
      Line3DBox[{6409, 6906, 6907, 6647, 4262, 6923, 6922, 8232, 6571, 6410, 
       8152, 6572, 6411, 6648, 6781, 6573, 6412, 7701, 8209, 6782, 6574, 6918,
        7703, 8210, 6783, 6575, 6878, 4399, 6784, 6576, 6879, 6651, 6785, 
       4265, 6880, 6653, 6786, 8195, 6577, 6919, 6655, 6787, 8196, 6578, 6413,
        6657, 6788, 6579, 6414, 8153, 6580, 6415, 7722, 8233, 6581, 6936, 
       7723, 8222, 6937, 6881, 6897, 6582, 6901}], 
      Line3DBox[{6417, 2046, 6659, 7666, 8104, 6416, 4270, 6418, 8154, 6583, 
       6419, 6649, 6789, 6584, 6420, 7702, 8211, 6790, 6585, 6421, 4398, 6791,
        6586, 6882, 8155, 6650, 6792, 6587, 6883, 6652, 6793, 7667, 8223, 
       6884, 6654, 6794, 4273, 6422, 6656, 6795, 8197, 6588, 6423, 6658, 6796,
        6589, 6424, 8156, 6590, 6425, 7724, 8234, 6591, 6938, 8157, 6667, 
       6668, 2003, 6797}], 
      Line3DBox[{6427, 6908, 6633, 6669, 7668, 8105, 6426, 7669, 8106, 6428, 
       4278, 6429, 6660, 6798, 6592, 6430, 4408, 6799, 6593, 6431, 8158, 6661,
        6800, 6594, 6885, 8159, 6662, 6801, 6595, 6886, 6663, 6802, 7670, 
       8224, 6887, 6664, 6803, 7671, 8107, 6432, 6665, 6804, 8198, 6596, 6433,
        6666, 6805, 6597, 6434, 8160, 6598, 6435, 8161, 6924, 6599, 6925, 
       8162, 6634, 6926, 6954, 6955, 6953}], 
      Line3DBox[{2049, 1690, 8108, 6436, 7672, 8109, 6437, 7673, 8110, 6438, 
       1738, 6439, 8163, 1739, 6440, 8164, 1740, 1969, 4570, 1741, 1970, 1742,
        4571, 1971, 1743, 8111, 6441, 1744, 8112, 6442, 1745, 6443, 8165, 
       6600, 6444, 8166, 6601, 6445, 8167, 2116, 2162}], 
      Line3DBox[{6459, 6940, 6939, 8170, 6458, 6602, 8169, 6457, 8118, 7676, 
       6456, 6684, 6813, 6683, 6455, 7704, 8212, 6812, 6682, 6454, 8117, 6681,
        6811, 6680, 6453, 8116, 6679, 6810, 6678, 6452, 6677, 6809, 6676, 
       8225, 6451, 6675, 6808, 6674, 8168, 6450, 6673, 6807, 4427, 6449, 6672,
        6806, 6671, 6448, 8115, 7675, 6447, 8114, 7674, 6446, 8113, 6636, 
       6670, 6635, 6927, 6909}], 
      Line3DBox[{6473, 2151, 6941, 2143, 8236, 6472, 6942, 8235, 7725, 6471, 
       8123, 7679, 6470, 6697, 6821, 6696, 6469, 7706, 8213, 6820, 6695, 6468,
        4443, 6819, 6694, 6467, 8122, 6693, 6818, 6692, 6466, 6691, 6817, 
       6690, 8226, 6465, 6689, 6816, 4438, 6464, 6688, 6815, 8199, 7705, 6463,
        6687, 6814, 6686, 6462, 8121, 7678, 6461, 8120, 7677, 6460, 8119, 
       6637, 6685, 2120, 6910}], 
      Line3DBox[{1566, 1775, 4196, 1567, 4197, 1568, 4198, 1569, 1902, 1570, 
       4542, 1903, 1571, 4543, 1904, 1572, 4544, 1905, 1573, 1906, 4199, 1574,
        1907, 4200, 1575, 1908, 4201, 1576, 1909, 1577, 4202, 1578, 4203, 
       1579, 4465, 1785, 1580}], 
      Line3DBox[{6487, 6898, 6899, 6709, 8194, 7699, 6486, 8127, 7683, 6485, 
       8126, 7682, 6484, 6708, 6829, 6707, 6483, 7710, 8215, 6828, 6706, 6482,
        7709, 8214, 6827, 6705, 6481, 4451, 6826, 6704, 6480, 6703, 6825, 
       4449, 6479, 6702, 6824, 8201, 7708, 6478, 6701, 6823, 8200, 7707, 6477,
        6700, 6822, 6699, 6476, 8125, 7681, 6475, 8124, 7680, 6474, 4374, 
       6698, 6929, 6928, 6911}], 
      Line3DBox[{6489, 6912, 6913, 6715, 4314, 6488, 8171, 6603, 6490, 8172, 
       6604, 6491, 6710, 6830, 6605, 6492, 7711, 8216, 6831, 6606, 6493, 7712,
        8217, 6832, 6607, 6888, 4461, 6833, 6608, 6889, 6711, 6834, 4317, 
       6890, 6712, 6835, 8202, 6609, 6494, 6713, 6836, 8203, 6610, 6495, 6714,
        6837, 6611, 6496, 8173, 6612, 6497, 8174, 6613, 6498, 7700, 8205, 
       6722, 6920, 6614, 6943}], 
      Line3DBox[{6500, 2060, 6723, 7684, 8128, 6499, 4323, 6501, 8175, 6615, 
       6502, 6716, 6838, 6616, 6503, 7713, 8218, 6839, 6617, 6504, 4469, 6840,
        6618, 6891, 8176, 6717, 6841, 6619, 6892, 6718, 6842, 7685, 8227, 
       6893, 6719, 6843, 4326, 6505, 6720, 6844, 8204, 6620, 6506, 6721, 6845,
        6621, 6507, 8177, 6622, 6508, 8178, 6623, 6509, 8179, 6638, 6731, 
       2006, 2019}], 
      Line3DBox[{6511, 6914, 6639, 6732, 7686, 8129, 6510, 7687, 8130, 6512, 
       4332, 6513, 6724, 6846, 6624, 6514, 4477, 6847, 6625, 6515, 8180, 6725,
        6848, 6626, 6894, 8181, 6726, 6849, 6627, 6895, 6727, 6850, 7688, 
       8228, 6896, 6728, 6851, 7689, 8131, 6516, 6729, 6852, 4335, 6517, 6730,
        6853, 6628, 6518, 8182, 6629, 6519, 8183, 6930, 6630, 6931, 7721, 
       8184, 6640, 6921, 6944, 6945, 6733}], 
      Line3DBox[{2063, 1701, 8132, 6520, 7690, 8133, 6521, 7691, 8134, 6522, 
       1809, 6523, 8185, 1810, 6524, 8186, 1811, 1990, 4584, 1812, 1991, 1813,
        4585, 1992, 1814, 8135, 6525, 1815, 8136, 6526, 1816, 6527, 8187, 
       6631, 6528, 8188, 6632, 6529, 8189, 2098, 2156}], 
      Line3DBox[{6543, 6949, 6950, 6765, 6946, 6764, 8237, 7726, 6542, 6948, 
       6947, 8191, 6541, 4351, 6540, 6748, 6861, 6747, 6539, 4503, 6860, 6746,
        6538, 8141, 6745, 6859, 6744, 6537, 8140, 6743, 6858, 6742, 6536, 
       6741, 6857, 6740, 8229, 6535, 6739, 6856, 6738, 8190, 6534, 6737, 6855,
        4495, 6533, 6736, 6854, 6735, 6532, 8139, 7693, 6531, 8138, 7692, 
       6530, 8137, 6642, 6734, 6641, 6932, 6915}], 
      Line3DBox[{6570, 6904, 6905, 6780, 4390, 6569, 8151, 7698, 6568, 8150, 
       7697, 6567, 6779, 6877, 6778, 6566, 7719, 8221, 6876, 6777, 6565, 7718,
        8220, 6875, 6776, 6564, 8149, 6775, 6874, 6774, 6563, 6773, 6873, 
       6772, 8231, 6562, 6771, 6872, 8208, 7717, 6561, 6770, 6871, 8207, 7716,
        6560, 6769, 6870, 6768, 6559, 8148, 7696, 6558, 7720, 8239, 6958, 
       6960, 6959, 6557, 8238, 6951, 6952, 6767, 6935, 6934, 6917}], 
      Line3DBox[{6903, 6900, 6902, 6646, 6766, 6645, 8193, 6556, 4359, 6555, 
       8147, 7695, 6554, 6763, 6869, 6762, 6553, 7715, 8219, 6868, 6761, 6552,
        8146, 6760, 6867, 6759, 6551, 8145, 6758, 6866, 6757, 6550, 6756, 
       6865, 6755, 8230, 6549, 6754, 6864, 6753, 8192, 6548, 6752, 6863, 8206,
        7714, 6547, 6751, 6862, 6750, 6546, 8144, 7694, 6545, 8143, 6957, 
       6956, 6544, 8142, 6644, 6749, 6643, 6933, 6916}], 
      Line3DBox[{6961, 7463, 7464, 7187, 4782, 7480, 7479, 8359, 7117, 6962, 
       8286, 7118, 6963, 7188, 7320, 7119, 6964, 7759, 8336, 7321, 7120, 7475,
        7761, 8337, 7322, 7121, 7418, 4902, 7323, 7122, 7419, 7191, 7324, 
       4785, 7420, 7193, 7325, 8322, 7123, 7476, 7195, 7326, 8323, 7124, 6965,
        7197, 7327, 7125, 6966, 8287, 7126, 6967, 8288, 7127, 6968, 7762, 
       8325, 7199, 7445, 7128, 7453}], 
      Line3DBox[{6970, 2774, 7200, 7727, 8240, 6969, 4791, 6971, 8289, 7129, 
       6972, 7189, 7328, 7130, 6973, 7760, 8338, 7329, 7131, 6974, 4901, 7330,
        7132, 7421, 8290, 7190, 7331, 7133, 7422, 7192, 7332, 7728, 8349, 
       7423, 7194, 7333, 4794, 6975, 7196, 7334, 8324, 7134, 6976, 7198, 7335,
        7135, 6977, 8291, 7136, 6978, 7780, 8360, 7137, 7481, 8361, 2854, 
       7424, 2721, 2732}], 
      Line3DBox[{6980, 7465, 7176, 7208, 7729, 8241, 6979, 7730, 8242, 6981, 
       4799, 6982, 7201, 7336, 7138, 6983, 4913, 7337, 7139, 6984, 8292, 7202,
        7338, 7140, 7425, 8293, 7203, 7339, 7141, 7426, 7204, 7340, 7731, 
       8350, 7427, 7205, 7341, 7732, 8243, 6985, 7206, 7342, 8326, 7142, 6986,
        7207, 7343, 7143, 6987, 8294, 7144, 6988, 8295, 7491, 7145, 7492, 
       7782, 8296, 7209, 7428, 7446, 7456, 7447, 7344}], 
      Line3DBox[{2777, 2396, 8244, 6989, 7733, 8245, 6990, 7734, 8246, 6991, 
       2440, 6992, 8297, 2441, 6993, 8298, 2442, 2679, 5071, 2443, 2680, 2444,
        5072, 2681, 2445, 8247, 6994, 2446, 8248, 6995, 2447, 6996, 8299, 
       7146, 6997, 8300, 2878, 2879, 5150, 2458, 2587}], 
      Line3DBox[{2752, 2735, 7430, 2888, 8366, 7023, 7495, 8365, 7784, 7022, 
       8259, 7740, 7021, 7237, 7360, 7236, 7020, 7765, 8340, 7359, 7235, 7019,
        4946, 7358, 7234, 7018, 8258, 7233, 7357, 7232, 7017, 7231, 7356, 
       7230, 8352, 7016, 7229, 7355, 4941, 7015, 7228, 7354, 8327, 7764, 7014,
        7227, 7353, 7226, 7013, 8257, 7739, 7012, 8256, 7738, 7011, 8255, 
       7179, 7225, 2858, 7467}], 
      Line3DBox[{2272, 2480, 4716, 2273, 4717, 2274, 4718, 2275, 2606, 2276, 
       5042, 2607, 2277, 5043, 2608, 2278, 5044, 2609, 2279, 2610, 4719, 2280,
        2611, 4720, 2281, 2612, 4721, 2282, 2613, 2283, 4722, 2284, 4723, 
       2285, 5081, 2693, 2286}], 
      Line3DBox[{7037, 7451, 7452, 7251, 8321, 7758, 7036, 7485, 8362, 7781, 
       7035, 8262, 7743, 7034, 7250, 7368, 7249, 7033, 7769, 8342, 7367, 7248,
        7032, 7768, 8341, 7366, 7247, 7031, 4954, 7365, 7246, 7030, 7245, 
       7364, 4952, 7029, 7244, 7363, 8329, 7767, 7028, 7243, 7362, 8328, 7766,
        7027, 7242, 7361, 7241, 7026, 8261, 7742, 7025, 8260, 7741, 7024, 
       4886, 7240, 7484, 7483, 7468}], 
      Line3DBox[{7039, 7469, 7470, 7257, 4832, 7038, 8303, 7147, 7040, 8304, 
       7148, 7041, 7252, 7369, 7149, 7042, 7770, 8343, 7370, 7150, 7043, 7771,
        8344, 7371, 7151, 7431, 4964, 7372, 7152, 7432, 7253, 7373, 4835, 
       7433, 7254, 7374, 8330, 7153, 7044, 7255, 7375, 8331, 7154, 7045, 7256,
        7376, 7155, 7046, 8305, 7156, 7047, 7785, 8367, 7157, 7496, 7786, 
       8353, 7497, 7434, 7448, 7158, 7457}], 
      Line3DBox[{7049, 2788, 7264, 7744, 8263, 7048, 4840, 7050, 8306, 7159, 
       7051, 7258, 7377, 7160, 7052, 7772, 8345, 7378, 7161, 7053, 4971, 7379,
        7162, 7435, 8307, 7259, 7380, 7163, 7436, 7260, 7381, 7745, 8354, 
       7437, 7261, 7382, 4843, 7054, 7262, 7383, 8332, 7164, 7055, 7263, 7384,
        7165, 7056, 8308, 7166, 7057, 7787, 8368, 7167, 7498, 8369, 2897, 
       7438, 2827, 2914}], 
      Line3DBox[{7059, 7471, 7180, 7272, 7746, 8264, 7058, 7747, 8265, 7060, 
       4848, 7061, 7265, 7385, 7168, 7062, 4978, 7386, 7169, 7063, 8309, 7266,
        7387, 7170, 7439, 8310, 7267, 7388, 7171, 7440, 7268, 7389, 7748, 
       8355, 7441, 7269, 7390, 7749, 8266, 7064, 7270, 7391, 4851, 7065, 7271,
        7392, 7172, 7066, 8311, 7173, 7067, 8312, 7499, 7174, 7500, 7788, 
       8313, 7273, 7442, 7449, 7450, 7393}], 
      Line3DBox[{2791, 2404, 8267, 7068, 7750, 8268, 7069, 7751, 8269, 7070, 
       2511, 7071, 8314, 2512, 7072, 8315, 2513, 2706, 5091, 2514, 2707, 2515,
        5092, 2708, 2516, 8270, 7073, 2517, 8271, 7074, 2518, 7075, 8316, 
       7175, 7076, 8317, 2902, 2903, 5190, 2529, 2649}], 
      Line3DBox[{7116, 7461, 7462, 7444, 7504, 5203, 7115, 7503, 8371, 7790, 
       7114, 8285, 7757, 7113, 7319, 7417, 7318, 7112, 7778, 8348, 7416, 7317,
        7111, 7777, 8347, 7415, 7316, 7110, 8284, 7315, 7414, 7314, 7109, 
       7313, 7413, 7312, 8358, 7108, 7311, 7412, 8335, 7776, 7107, 7310, 7411,
        8334, 7775, 7106, 7309, 7410, 7308, 7105, 8283, 7756, 7104, 7779, 
       8373, 7509, 7511, 7510, 7103, 8372, 7505, 7506, 7307, 7490, 7489, 
       7474}], Line3DBox[{7458, 7454, 7239, 7429, 7238, 8364, 7783, 7010, 
       7494, 7493, 8302, 7009, 8254, 7737, 7008, 7224, 7352, 7223, 7007, 7763,
        8339, 7351, 7222, 7006, 8253, 7221, 7350, 7220, 7005, 8252, 7219, 
       7349, 7218, 7004, 7217, 7348, 7216, 8351, 7003, 7215, 7347, 7214, 8301,
        7002, 7213, 7346, 4930, 7001, 7212, 7345, 7211, 7000, 8251, 7736, 
       6999, 8250, 7735, 6998, 8249, 7178, 7210, 7177, 7482, 7466}], 
      Line3DBox[{7459, 7455, 7305, 7443, 7304, 8370, 7789, 7089, 7502, 7501, 
       8319, 7088, 4866, 7087, 7288, 7401, 7287, 7086, 5003, 7400, 7286, 7085,
        8276, 7285, 7399, 7284, 7084, 8275, 7283, 7398, 7282, 7083, 7281, 
       7397, 7280, 8356, 7082, 7279, 7396, 7278, 8318, 7081, 7277, 7395, 4995,
        7080, 7276, 7394, 7275, 7079, 8274, 7753, 7078, 8273, 7752, 7077, 
       8272, 7182, 7274, 7181, 7486, 7472}], 
      Line3DBox[{7473, 7487, 7183, 7289, 7184, 8277, 7090, 7507, 7508, 8278, 
       7091, 7754, 8279, 7092, 7290, 7402, 7291, 7093, 7773, 8333, 7403, 7292,
        7094, 8320, 7293, 7404, 7294, 7095, 8357, 7295, 7405, 7296, 7096, 
       7297, 7406, 7298, 8280, 7097, 7299, 7407, 7300, 8281, 7098, 7301, 7408,
        8346, 7774, 7099, 7302, 7409, 7303, 7100, 7755, 8282, 7101, 5136, 
       7488, 7102, 8363, 7185, 7306, 7186, 7477, 7460, 7478}]}}},
   VertexNormals->CompressedData["
1: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
PIL4MeH1DcjzoJhwG3kejIgfG5dxNhP61dWOboB+z0SHIX7T9qbxVuTVaZdG
ngd16UH024Var4rAzhN+sCJhfLvIuta8I2kL468/2G4B+jiaz4x3IFw+QE/b
RMXtsyziV2efZ3hsRCNvOMaLm6n0M/sUbUr2Ke7/x9eXx/X0Pf+3SbakEsna
vi9atN9Cu0gSlZIWbUJFRIuyhVZaSSkqWrQoouWmaC/ai/ZVaVNEi/zunHv7
fj+f3+Px+73/8TDOe87MnDkzc+6Z83wtPSbyjqWqJZmncEkqT93nKRQStLFS
NSTzFE5H5amXZdsR3YLMU7gWlaeWvCJeAp9OMk/hzlSeGst/kAb0fWSewr9T
eerw1cQLICc3mafwC1Sekjl30xD89c/kwRfgv/6spL5RQSeHIS8HJb82BX2d
Ikh9h5Q3IjwHTsYv5O97SxugvCdf2ILwHNI2aSE8B24qTw3+5mEDHIYUtnqE
5zBPra9x+Hw61Bv7D29HeA6/qTy1e804wnlYf4kR4TnEUusbfo4d4Tk4f4xG
eA6XqDrk4NGr4zBvvqZhDcy7japDOpntfEFO2pW1CM/hK91l5M+sLPNXoG4P
/HsF8hSuepXU99CXuHKIa22+4xOw/st1F+3UPw6E3xW7OA3vGn9R9fP3uSGE
89C5VIBwHjyHo9H6Jr75iHAedlgKGcC+Y6fylMvdSITzwGVIIw37dLvqxgXw
Z5FCc4Tz4M7KiPAfjlN5qn3FRYTz4BpyA+E8GD3diPTdzR6AcB4+2o5Ewbxs
4vXIn2UED5M4D7n5COdBOSgGrW/5iTqUhzbKBDxE8Yny5+PPS+NB37SzzUWg
r9oUSd97IrEP8pnpPY+r4BeeVP4a6x3+APWwv665JMTD2xaV6L1/Rx99HNTV
mWJy2fCeMp2K244+eZC/MHXTBITzcKDxaSnY4QCfBsJ5UGg75wXvNV9Qcdt2
tgvhPEg1C3oCffpuKcIVWnwzgM4d61p5eoDPzCQbyl+xWsMI56Fx0CID5h2m
4nZ8XFAByJm8skgQ5PSONEF2GBvVvjVpl4sl39jjZ8o4jGsIqW9JJ+K7lVSy
IMLNU9LeAvvbNYu0QwDpHxinxIesrdpyqiqUn6zz6Sbrs3NsUAdhxyj/j3QS
Q/WZdeKlLvBHLXw18ofZ3M9zUFcZfGefhDq6hqrTYpqbEJ6D8/ULCLfhHFWH
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
Lnjp0fAP4DNcXNusDj5DXvo46lfLJ2nwxDgLGy5NB//hu/9O0vcd3x9EekuJ
UUqnwZd4c9CKdIJ+m9jgfXFSDV9vxr5kfMdjOgeg3JfXAXg8hb4ZYh/T6PE5
auejyuF24DF4urwW+57/4bl1eq4v/HNR5usn7M+KtFlTO3vvrjCCfxw+Lu/A
fm6GlwLpFk8d2N8H/kCXyPlo7P/Gcf3Tmmdfj312Fb6Yy9indua+r4LfHsJ4
X8cb52pjXzvGJY7e1/MsuUt4XwlP15C+9vMbF9Jd1juXmiJ+dkmVge/E+dO0
h9rRP7ArCvFzedd68KM4HLdEasd2zNBc7Kfnt0puRjud3PgJPTd4EfEsx+NV
i361LOShfsVpL3VEPIdZ8LxCv961/iY+nt8pfSHsa8s1nT2BfiVw+3U4tmbU
95HxVXVXjO6PmMQdX9Jqxzwwvhpb/wrDzyeeHyb/LNG4Bb0/u6s8PBJ+/hTL
+xXtfDH0NEVcLp75vBnxrpq77wvsHbfnUbz+iYlqgj2k244P+7ZTLxUWIA+c
PNLijHryvzww40/sWcRlhvedYYw/eSup72jn62YBsjeeVCW7Ub0l8XXO/xC8
h/jrz1wM3hB7QYQ96b7Vj3Znwv4m9A/lg0WVm2gf/5KzykhcauedYOKOXc+N
t36bu2qwf2L4O+zZXN7O3Uli5ejnq6bUDrTjxI2r9rXzy2BPMLmNuGNv5fJk
CoW3RsK/y70f/gDO//wsZvLsAuyJ9z0GYP+Pl/XLZLkl3uu5Wyqp8M9khwoa
11meR8xgX7DzUQrs17rekp56MPgJ8iRHbVx5MnhKKwsZv8XX2hvj+b3qnyaN
xAtHlNvO1p/pG2H/0+MsBHsct53cXq3HqOdt/s0/gTycJ8qsT1eGJQYBZ9Cz
xYLIE0lc/CHVwoGwD47p4of9P17NWdWLcfDD/hQWeAccPU0N0imfTj4VA3v8
7xm9sB/k8rheiS29JSK8i3WUO+5ruP73KWxIhb2dy5+ayfW/377xbXiPa7ws
3qGd2dz3qzDU0wq7vIlCC+zzuO+3ptErBnEStNi6C+N4E+sZ8U79Wn9dgX3/
4OIvsLdy8fuaX7dCfLaq6x3DeBXi+m2ld68F7D69L31gv8r1W2HyBIxzdq5Q
6e/AkXFvdtflGsaFJJcfO6ehYpWlnS3rGZcfq83lx76sExIHP8GZy4/14fJj
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
er9cu712G/t2muyjFV9bWKvn7EnwhmqMedaBNzT/mdsH8IaGh4M+IG9k0uKT
NshXEpv6gfJqjOIUiN/yKd6R3mf5Jz2D8nCeWLrFQA56tRm0nmX8I3JwDHrA
Qi7Kl7zPY92k9EbKb89vDYM8IxQPXMb6Oo6ur12mnCLur8dxJX/BOzUnuXPo
/lr9tFAS/r+Mxzsd7W1MH1mXyNH7xwn/7/7Rb5XrZuQ5pN3rPIp74acZUXQv
vLVvZTbGd3Hc7wCMV+HcyHi6+povQt++eJfi3RxWO3dkPNdbCuaC/5JVvtcV
PKldWVW84L9Yv/g7A3JZ3j4vGHKqVO6gvJoHSX4rwGOaO3DXGfXnnH1N9SVa
BBUa07PYKV/s6DufW76F0v2vaoyNCu6vPf56+CIfw7X7Mo3zgn2pL/LD4j6M
lUde05LKNmrfOzYF/CM269aDozgHXRQ+cv6p9DNrGfKieov6GfwmaYzkR33O
28yL8VhPDXUHf6dSK4fGM9A4aQzatXvgehb9vNw7kn/Lt8NcCfPNKTJwRP17
tiP1GzKuayDv4uW36Wm4vy69cpbG76A/RQX6s1pybzlnvdju3JF8A8d5RuK4
52h/t1UK43wQOTLO7SXXfoLvoyT19QP4PvkDm4jvs39owAD1fS/to3l9XttE
fJ/d/GWeWMfoiOIHWMcjS3mJpyNsspLe2YnSn0Y8ndTf74inI9BiuxM8ncSO
x0Hg6eR2iBBPJy9x+irwdESPTiWezvnQMOLpsMMG0eDpPN1fUAaezv4Nss/A
0zFIGp6IcyeT1XWCbYNVzAXxuqtls16xzaK7cX/ECFRWqeH+aJLb24OzLuWx
vbyuBjgPdHUVcr3/tpnxUGsYj/PArX7dTpBn4/S9t6APudXlf7zbO5kIAZ0b
ONeNddmQhHu9CZK3S0OGstkT3GJncX4b9NW8Cfd3X94LW9369p5NXLd5XpD3
W8aK2Scq7PuFseIqKjB418jmZsTnIX+g4WT7ZuS9rNZ5G5a85Ruz81WR0OuC
Ijaj+IWa3Z9apiBn6sbejG+M2oErPG0WhezxNt6cXIdPzLUoi8CL+e3s0VN1
F5BfIeUgOTOx9C2zd9msHQ/FOpglUao9yA/5KfBfEfKdqhm/1rPK7WzRoW0X
kX9yzVR6luiKPKb7tV+3jW8HY6j/QPT8uUZWUTzME3li2YELE83iv7I9ekdj
bLSz2J9XVOrx+8OqRW39mS4mOW/lJbrXq9dZj3PXK4e7t+PctfP71VLo7WYF
jePV4J3Z5r2B3BSa1N1wH7H4P3V8R5Etl7mbjvNwe5EqQ9xfOOoHZdK78BtT
d+LcOyX65m3VFEvV6WmpbdsXvWP/ZRy6pi73nZmlYdmN7+v+nZ+TjLyLJ7U6
2pCbWUpk9olQU9VIn1OnjnP8id5f7YKP72Syq6wddye0G6ja2a/L5vw/GxhR
tADtdTyTm+Z/TFP1Z/3SbSZzvrHBF7lVbMY3slO93g1y5M8cTEzs58ifbapz
5IP89wQlbixY856p8hFx4ciZPX571RySs8/V9cgrk3iluRV5OBnJ02TPceQc
kTl+t5/AR2a3sRY/R86sRWthDuQckvQvFfl423vcVZC/xNXYNgw5i2jPcpw7
+TOjKlt/aJNQGTNvn+RinOs+HMy2mLqxnnFfI/yevqssnnYM5/M7NlUYql5t
Y65mcMUjj26foe+6aRqfme6FDu+Rb6Z30aMb+WYLjLh7XkU0MdNVC/YgH+/R
L3u+NqX3HL83UvCjSg0j0Jk605mrgon5bGg5qNDMtH6tjZmh0cZoT3T7gfum
h5W941B+63P8AMqtX24fz9FnVrMkuwb5YI47wlciH8zgz+OvqC/XJDCIe+fp
NyxxX8O6u9R24n6tK0RCHePPm/+nBOOfs+zzPeQR/VSyfoZxnm6J0y7COMWP
JqD8S8LTNJTzFdwwRn5Rb2puHeUX8cxdg3bcru2twnl7qq/zfI7cWJ1fWT24
fxR4KuYAufltezeHIx9Wb3+6LeRjU9V8DfKZmjFNHnlc52SuvUNeYtn+j82Q
g5dYvDTKk4w3F6H8q3UJD/K7XMs+zkA7/CXO5minVndWAvK75kUsmYZ+a7Of
1aDfrz/fHsH5863FJ2eiPPD3SXHOOrKdYopOGI/5oUfT0c4DxWMhyBNbnLny
CsYzMLV7GY3HoISbsy6sa8ZSGk+BZ/Y7zFc2usMS9wvrqhpJbmdtBa5BPr98
f+Uj/yp48ngdyC14TGs55D+U2cKP+8Hk/HO0Xgsl44Rmrl6hul9Fdh/iBVml
EvwyMdvUVmPdFxpF7kF94w/5tO599t9XoPyLddoulKeKX0/klLMp34yPQg83
idiwGE/xPy7SQ9W8n83Qt5O/1JswnkWagT+gb055Op9Q/kXJuQ7l3Pc6Bjnl
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
uFD8UvemSx760+vWEgd790z5LcUvzj0ZNN9Po/mWgaP5lryj+ZaXh1vhl7I3
X14Rh5yVw/1IzryJWa6IX54cnVSM+OXZH5kcxC/a7YN1sL8GteN2we/yyiyn
+MXC5qwi9HyichqdqwseaQyAns85PB9+HZvaY5INv27punjyPyfeag9EnMIo
eakgTuFVc6Q4pTij2RB+grG64GH4hw6r8ihOqVJpozjFU+M2C38yeM8h8j9T
Fpw5CD+k+W5LDcf/ZF5tSiD/89ZxlROYV5GqtRz8beP5gTSvG4H+sHfsdNM5
dbB3oXZ7SP79/02whF8kmvSvEfbxnvA60p+Us9M9IM8OhWcUv/TWZJE8Z2Rf
LdhopKKqLd4P/WHVXgyQ/uRcn96M+KVbwh76w1pF3iD9uZuikYP4pXHmTugP
Z34apD8R+Uu+DntZqKZf+Ezn8yc0N5H+XBaccOt6iJlq8CoVil+EHTUpfvmq
lukD/Z9WaoX4nVUN2E3jn+gkWgS/VP7AgkL4J+YPA0h/ojO85RG/uMXVUvwi
nT5I94DvNX9T/LIl+RnFL5GpMaQ/VmuNKX4RPbGT4pdDJ1Z4YL4/3n+7gP2o
p9MhAnmeeuRL8gwffS/PYPS9vPDR9/K0C298hX9e136a4pd9JjykJ9uFB+jc
z2nDcopfbn70Jjx80neO4pei10rr4G8Unr7XgvjlhvYjb8QFvXEPKH6pfb6F
9CfbJMMYccThnuV74E9m58eTnuxWdqfvxWk99nsHPMwfDLFF/BIeX07xi9Xp
6xS/WDtrkv6IlMkfRvxy5OeOIsQvjVUj+iOa1pqE+kMX7jRD3yz9h8mPnXfn
AsUvrxIlTkE/H4mlUvyiZeLugXGOtTevhp5vd99pDj/2QOk+Ou91OaV6Cfsi
8JX4buD2a++fRZBPldcHNeyjtteHyY/9sKlXC/FL8SqtXsQvvLL8DfBjnWOy
L2Bd/PrtPLCvdetWm8GvE9v/2xXr6CWfSfHLvkBeshch84cofjGNM74M3BhU
rKV8gCpbwTScU6mKKszHudz12mxznFNd5d/x2fLOA0ZUkqv2AF8Bk6LsZiTC
6XdWa/muuOENWTcT9zwEjnnlyJMf69fIk5yWuTlri+FRil/6/a/4wI+daaOj
i/hFp+c0/FiGd244+bEDdf+9R/wyud54NXD1dUwJ+bH/ni51vXtUOGvpyaeu
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
7D2K0thJ6BGPrwegR3QPrYMe+Q9e0A4A
    "]],
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{368.6618584956638, 428.50756260460196`},
  Method->{},
  PlotRange->{{-4.5, 3.}, {-2.499999999999937, 3.3}, {-2.499999999999937, 
   2.499999999999937}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.6637766287413238`, -2.606165950886654, 1.3746804596317015`},
  ViewVertical->{0.2472044345238043, -0.46886949786417736`, 
   1.3478455396376452`}]], "Output",
 CellChangeTimes->{{3.700569798541648*^9, 3.700569857361394*^9}, {
   3.7005699049925003`*^9, 3.700569933482189*^9}, {3.7005735484420547`*^9, 
   3.700573557147956*^9}, {3.7009297062365384`*^9, 3.7009297519376497`*^9}, {
   3.7009303851389465`*^9, 3.700930408092044*^9}, {3.7009310178074017`*^9, 
   3.7009310688168273`*^9}, {3.700931101457737*^9, 3.7009311204394474`*^9}, 
   3.700932134119753*^9, {3.700932177404729*^9, 3.7009322424497805`*^9}, 
   3.700932276479677*^9, {3.7009323451500263`*^9, 3.7009324858189554`*^9}, 
   3.700986684376702*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4XdlZ77+vJM9Myk4juXAIXEI7QIBwL1M8M+69yb2M5d7GslzUrd6r
bcm2rGrJtmy5997LeGYSCGmkQQoppJAeSEJC6M/6fb/vWmvvdbaOZA/w3y96
nrV1yj5l7/N+vm9ZZc9eW7jp5W1rC7PWr33ftPy1uZuy1he8b2pOPh5K/V+e
97+60T7/Po+3lefZjfz1cGPu/OL2L27/4vYvbv/i9i9u///09n/wX4r6+Mc/
/nbV29srt5r1Uz/XT8mjGzduTFHx+HPeCBWLjUIbrZ5++mn8H6t8f4qXgu1U
70lsp6FNN20m2iy02WhzZJ+53hPYzkdbgNdOxTuOQRutMjJyzGfg42v0x/9E
/v0SH+F34NPY91m87nm0F7DHeLSJaJPRpqHNROPnTZXv5nnz0RagLURbhPYS
voPnLcUxeN4ytOVoK9BWoq2S59akYrOOt9bim8ZiM/GJPMKF8p/f1n7JCv0l
/z44R/imGRmZeM1z8g19fxSeHoc2AW0S2lS06eZbzg7OUCw2Ee87Sr4xzwQ/
Ixab7qXylmz5uePYcC8Wm5WCTbrcnI02h//l1K7w3ortcnmML/C8LLQNPB48
vhiPz5A342nk6cQxlOhj+H54DE+aX3UkHub3HxMcg++P8/jRo+Wjx+OtXuC+
eAxbmsZoMY2p5g2my+f5/iL5bou5WcpNBt9jNjdzuJkr7zYPbT7eYqLHN5qY
Km/MQ+epmcAd5F1W4et53ia0l/l2PBlypDwiHI23XR/Od+XfW+Qg4/FnnCPi
0YwV26ENx+PPm7P+ghzZeO/d2E4wdpuOfZfQWtAyxFZoszyBsBLah5xYfYJf
RttovhpP+ma0LWhbaUjZXhq2OWi5aHlo+TSyAj5XiOd8fwPedjLaJHz8Ip6B
yd6bzTebJCcBh853k3fmT8yTkpGRz4PO18f8Lfn3pBxza2ufscLnSKxlRv9S
3m/KcRtuxRI9b65hhZwsJifmuC0f/PTVYkTasNxjzjTHHRwz2jYetnvAPF4e
LloRWrHHM1DCTamcgSwDbBlbSvAwaVqCz5xibWwSbMz318rb+/4aORE021x9
Fr4p/9JEMWpqDmAXHulIfeBvxt4jRbjYfH+SQZE/9By0eUYsFqWIUrzJ/O72
+FeZ313/5vH4eLzFMtGMLO+dSY4/4Qc3x77dHj+PnkdpDrkcrULMpFLOTBW+
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
kq+a8ny1eSV0bpVOVLasRsDD5SLmzmTEPG9mXM2bJY33ZsXT1Lx0bmbz/rZN
MZWtG05AdlYMm83cbMEmZysXs9iNBLx1Jxr+727xU9S5M2T9HOLvs2zneOrO
nudjrXt8NX9BXJ29KI9dpJc/ewn7XIYmoL3/jzTrdlk0XbmTMXh6yVGG8sMl
6i7swxXuGKe71Xo99tb3txjYB3fPc1p7LMYSM+fy2KUo0gX2WIzva4t2dljO
cEU7d/FCd4i9BT7aN//fGZITTdSTzYQT2s2I2BGWeNOJ5hToGTy8KnEK5+Wv
MxHCOrT1Hp97PXDrGntW8H8uY/CFd3NvMPM6JSDuto8/ijxTkG8H02/1Omw2
hf9rcyLYaV9ocderVTwNt9WaUMi36zox/N9s+uij5NP7F1ny0UoRAZQhAigf
q8mvAvnVIL8G5NdODslvNOQ3z9H07wL5LSC/FeTvBvl7IuTvA/ntIL/Dkg/v
3w3ye0D+fpDfi5C/j+TD+x+UCe0Hixk812X6qj7LV5teiqmspWgZMTVnalzN
mRb3TFA5d3ocsk7kiTu/zNY1MbWz2Fc7S3y1qxStDK2cUxFaKmRb6auWKrRq
lv5banhV+ZZa3K8D2qY5KpCzOZaqckIVyN0WU/PnxXWbH0/Vy9LIrZxcLl9D
7ve0+er8ZR7IucvcXOHR/CGgD68Oryt04aw5Uv9rj0F98plziaE9XbzNzsNZ
c76/VajnVHdzXXgN+LOKl4SPxdYpLvU0eNztUIPtHz0WLzroFsm5LHr4iF55
9XizYaNV+uj4O86febOKuni61cSh8j/UyNuq2o+Um63/xPBO9FONEKwPhOBD
fMHPif8/S+z/5xZ/NlEAEQmJEiS3saUAl307XP+75nv+nRkqvEOFpTse/0dt
6j9Woz/ZoM/M347Xc9ZSFKc/Af+3DYE+HX8x8C9F8F8G9MuBfgXQr4TjrwL+
1cC/ZqJGvw6tYRrQR9bfDPR3cOHwGb6aMSquWoH+bgf9vUC/bSWwB/rtQL8D
6HcC/S6g3w30e4D+fqDfC/Rr1uJ7L4ipzIUxNXtSgPWcKXGcLsv8ZrSmbHj4
HF8dg7c/hmj/OKL940jzTyDaP4Fof2eRLy7+FKL9U4j0TyPSP41I/zTnxZ3p
YpR9Bun9mR54YUT5ZzmG/qzMgTuLQP8cAv1zCPTPIcg/hyD/PGvy56Umfx7Z
/Xlk9heOk+cLJ/jYhZO4j/j+4hk+dvEs63QXkcVfPB+2vXuoL3v3IlDIzaNy
LFigpzSZ/1CKhXGEaLkFMUcWEq5kpdyLdziLLophzpclqtxgwC3cuePybeTP
gMBm/XY5qrIg8temPc1IA1ft5T7RK+lI5Z4ff8BjocJeJvXRE+aHKtzbsXqJ
0vDfmmbnSINbtE8a+SfEApQGHZfoWED3tqUZVANdCDL5f5SpfHTtPwsa8/9Y
rFN0wGQPG6gUMrvgn7n5F3nHf8ZeXdJwW1REkgSJF2RpHNsX6CpGYsFAK5oe
5sfls/R6lJ8zp4an654UChLk4gMy+zYqFezdo1SselYXB3OjNQK0EkoFooQy
yEU55KJiTBKpQKRQP0VLRROlYpaWil3z8B4ztVxQKvZAKvZCKtogFfsgFe2Q
ig5IRSekogtS0Q2p6IFUvDwnpl6eC2mYaBaSeY/aBKXYtCim6jf66nAp0gCk
BkeQGgwgNRhAajBQ7amjSA2OITU4Vg+RaESDYJyAYJzYifwegnESgnFqN4KW
YhENKsQ+UQgIxtlOtC7IAMsC53pYZj8HwTjXi9YHKYBanIdanIdanIdanIda
XGA7gjaABrm4ALm4yELgxRPsIrgItbh0Cg2KcekMGrKFy1CLS2xQiksXqCmX
LvIbXEKWcOmyaVc4zCI/5r1DXbqKu9dwvjp8tbdTi8aChUy37So6gy/BFQrH
HJrWXO+9KjGcsJphq4Xuihs2iWBIoSsGvs8J+otksJ9OR3W1UAMzaBK+wLNP
FnB3V9tItnpOskG+VjiSLR+ZOLY/Hn/JCMcb7e171Ci/oXv8o/GEmULvDdVn
8GNB/ifK9u6bcuBPg+BAwoSfi05Ai4x2yH8239eX7fsXholdqVZInABDYouo
WiSLL+wwga+Z37BR2Uk/rL5s3LjRiIWe2/v+hNjCFQsWEvgO2XYYQCSliIpF
JcSiCrFFNQSjBoJRC8Goo1ggrmicGorFztkQi7lIJXitg3RfzRwdV3shFm0Q
i30Qi3aIRQfEohNisWFWTG1Ij6n08UYcfkPNnhBXG+fFVO0aXx1EVnEIGcWh
QohEMVoJxAFiMVCuxeIoxOJYDRrE4jjE4jjE4gTE4gTE4iTE4iTE4hTE4hTE
4jTE4swerpiHxB5RxlkIxbkONIjFOYjF+W4GAuf3S8AApTgPpbhwQAKGg4z9
L0AtLkItLkIpLkIpLkIpLkIpLklv36XjlIlLJ3AfUnEZUnEZUnEZUnHZSMUV
tvPc94oUDK9cxP1LpjHFuEKtuHIVm/wCZiFXruOFbDf4Im7fqy7f9FTiEIFE
weD1+vRgwWTTfd0oIzpI0CYgLBHI8s6mdDBFFCOcEaRnBWjFaFL/tfW2hpru
m2xssLtkRzjtTyvGEZWYgfx3pgNExwYMqxZ6EHDQWagHBOj0I02FYQZJ/knQ
c6BrjCmBVAQi8C+Sd3w40Aobc0g1gsf2L7JTKBrBe/xMChH/aD7ux2qoYoQ+
hK+zP8V8ZTuU+MNSiEhQjN8NwgurFux7ZAGC/Y6cHJCbpABh1aIcrQKKUTl6
sFrUI7xosGoxHWGFUYsWqsV8ZB/IQtZOjqm1U2JqH9Ri3bSYWj89pmaNtQvx
vU+lj4url6EYL8+OqV5kIX3IQg4gCzmYA5kwctFPuShCTGHk4ihii6OQi2NG
Lo5DLk5ALk4gETkJuTgFqTiFROQU5OI05OJ0K6QCcnEWcnEWicjuUkjGrLg6
z0TkfJekD0hCLiCmuChjAy5KFnIRccVFxBUXoRSXoBSXoBSXmIVcGqCAXIZY
XEZYcRkicfk4GoTiCoTiivQwXDlDUbgKsbgKobiKmOLqBTx89SI/7So04upl
aXyMQnHtGjOWqwgorkIjoBgqvzCmropWXL3JzS1+pyu3kgqGnkH4NkcvkhUr
3OjC1Yu1dGLpnl3Ci+vxzjeLb9rhhYkXL2NS4vusZzzORZHcRXKjQwujg4nd
gkU0K7Fy8ZojF8MNJP4vVygfJRfKjh9y5EIlBhd2jAFZ1h0L0cgilAtKzL/K
6j8fRvuLIM5gjMG9/kXyFO71c5EjW7yU4EKrlK8GZyHfNofxVaWvO7rcnI4P
S18vL1M4xpWJ9+krEZreieWQBk4psPOIKBM2+9g+nEQgqKiGTNRCJurGG4mY
pCWimRIxE8FEeigRexZqiUBQoRXhA1QHtX4G4oiZMdWN5KNng6f2b/RUL5KP
PijEASrEtlAhDkMhDkMhjkAhBqAQR6kQCCiOQyGOQyGOQyFOQCFOQiFOQiFO
USEQUJyGQpyBOpxBMHEGCnEWCnEOCnEOCnF+H1f50ypxAcHEhW7IACTiIiTi
EoKJSwgmLkEeLkEeLkMeLnMIwuXDZPsyYokriCWuSIfklWPs87kCebh60jRI
xFXEElcRS1yDPFyDPFyDPFy7gIYY4jrbJb72+mVKyPUruH/VtGt8+DrV5/oN
3EX0UACVYLsOYbh+G29xiy+9dptice0OxSJx8lFwNe4nhxALCSzEYpfI43bx
v+Uwm+kmRGUmw9KHO3DBVjdtn0a4rECoFkNdDPhRy/Qmm2+YrAMzsT/DDkJO
VIv/SmkzOs8wOugwqVIkjDa00wSMUphRRzLS0CiFqMXwQsHNv/L9/g2/XjzO
y2N1y39HMVRiaCF1i38youFmI8kCi++ocHril5VetL9WTlcsVuIqhp6dPDFY
cSSqGExBqBjrnvOD/sxkilEFxahGq3EVY4JWjKYpWjF2WsWY46k1E2NqzST9
eeum6P/rEVR0IgXpQgrSjRSkZx3kApLRC8nos5KxBXIByTgEyeiHZPTnQy4g
GQNWMkoRSBjJOFGNBsk4Cck4hfzjFCTjNCTjNIKKM5QMBBVnIRlnIRnnIBnn
OYDpggw8vID0Y2+Frxakx9UlKMYlKMZlqMVlqMVlqMVlmUd85RA9/RUEFFcQ
UFyBXFyFXFwVubh6jGxfhVxcQ1RxDXJxDXJxDXJxHXJxXUYoXT/H11+HZNyA
ZNyAXNxAOHFDQokbDCVuXKVu3EAoceO6aTf48E15GDpRuD0m7cZtPnyHScKN
u3h705JIhnLnKmqv514dyh3swEkIU2Q5Eq0VjE+YkNiyZ3Q5kujF3KgZdbY3
RA034EFrhp28MNR0pWR9oEMlI1YzXjeawfdLloy8kZpndKDy40cXZlUBk4iQ
+6DeafXiEZGFCAbv/hs3/24WEsDdoEFBvMHJyT97QWn0nyQlcdXD1jHceOO7
5mC+ruzwKH1xyUoZT8aKZ4JyzJfJzK5quKMgqBzrR/rDqkYNG2KNWihHHZSj
HsrRaFRjxzSoxgyu6O+r1eO1SswcFZc4Y99LnurI8NSsMXFVscBX3VCNnjVQ
jIhqHMiCYkA1DkE1+qEah3PR8kLVOFoMxYBqHIdqnIBqnESgcQqqccqoxmmo
xhmoxhmoxlmoxlmoxjmoxjmoxnmoxoW9aAg0LrZDJiAblxBk5G2IiXRcRpBx
BbJxBbJxFbJxFUHGVQQZVyEZVyEZ1yAZ1wbEzR8VN48k5Dok4zok4zok4zok
4/ppon2GT99AkHEDQcYNKMZNKMZNKMbNS3j65mUKyS3EF7cQW9y6Ztp1vvMt
KsYt5h23bsleCC0WLYqr7h5f3YJG3LzLWOfmPS42fPO+qxmJBYxEzRg8ttku
XxSPjxbNSBwkZcc4Ry+pHHaVuEuahJoRXdZguCVNXM2IZiTDdqGSjldkCSA9
v4HT9mOxCjX0WsKPHiU5fLUz0kWi44snonph8PxR8irn0GLBW//KW/+WJmJh
qyH/zofkE//N+1XuExQ3EsOOf1bhOCs3RXGjDVcvvmWO6m+V7VPVl//opV4Y
udDzoX9Jap4y8yESZNj+Uz4XyMWLyYOMWshF3Vgad/04esJGpCbNk7VcrBpr
1hT/Y7VmQkyVzPRV2yJPtS+BWiz1VOcyT6VDMSoX+oFa9EIt+qAWBzKhFFCL
Q1CLfqpFNpQCinEEMcYA1OLodigF1OI41OIE1aIiVIvTSElOQy3OQC3OIiU5
C7U4B7U4h7TkPNTiPNTiAlKSi1CLi1CLS0YtLneiQTHyX46p/I0cGHG1TwIH
qMU1KMU1KMU1KMV1NqjFdVGL60c5oPIGlOIGlOLGSdOgFjcRYNxEgHETUnET
UnELUnHrgujARaEfAcbty2jQitvQijvX+NxtXq/p9g2ey9vIRG7fChoeviMP
QykWLY6rnl5f3b4Hi7rNeTG3Hug1UR6tGL4/XdmSZyw2yUQUkyXCSLyIyHDD
Kq1i6GGVoWLUy7gLXjxk6OmRySZFP6qG8eieVTOsUsaYVHi/qx49LfJ/tNyp
3PlPsVibDKRK7FH9iR4MKZlE0JvqDR9jWNnw/Y9KVsJ7fPbf5VnvVwZpB7ta
OT4rUTeiWYobZ9iahp1G9TnF61yaBVMSNGOmhBi2b8TVDOrFeiQmkxFmFLvh
BUsYUb1Aq0eI0YAQowl6sXJUTE03C5avHodkBOHFnrmI+ud7qm1homB0r4Bo
jI2r6sW+6oVg9EEwDrwMsXAFYyvEwgjGAATjaAHEwhWMMogFBOMUBOM0BOMM
woszEIyzEIxzEIxzEIzzEIzzEIwLEIwLEIyLRjAuUTD2QSggGFcgGFeQkVzt
0aJRsDGmrkEsrnNNo+v9ZPwGtOIGtOLGgG43pR/k5nEuXngTenETWnELWnEL
WnELWnELWnELWnGbDXpxG6HFbYQWt6EVd6AVd6AVd67yPe6wanGXAcVdBhR3
b1Ea7iKguHvHtLt8+B4jisVQi/19vrr7QF75gJtX+BXuPHx0kBGPvyiSwUVU
9NqIvBrBZDHCl2SGhpUMt1/VnUk5eFZ14sKo9VLI0H4xWSHjUesjWsmI9qna
IEMCDH7du95vqMSqpx6XyQBDX5DDzUmGCzCSLZM2XE7ijsGwK6WIWuiuVEpW
23DJSDC+UsZbe6FaBKVMrRaBMvxHgmT8h7z+34Ok5V+9d4tO2FhjcIxhcxJb
zbA6EVYy9An4lLwHVCFBJ0YHcYXtQ+XYrBxT6twwUutEMo2ocTSiARqx/PmY
WvGiTjdWjY6pVWNiqmWmp3ane4FG7KNGLIZGIA3pQhrSvRzpxyqtEzVLfHVg
fagRh6AR/ZuhDdCII9CIAaQgR/NCjTgOjThRAn2ARpyCRpymRlRrjTgLjTjX
qDXiPDTiAtKPC9CIi5w5eXE3R1BcgkRchjxcQUxxBRJxFfHEVUjENUjENWQf
lIiCzJi6gezjBmKKm9CHm+z9uCljsG4h6biFUOKWzLG4fZLjqW9DHm5DHm6f
MQ0ScQfycAfycAfycAfycJeZx93LnCd9FwpxF9HEPWQd966j3fDUfQQS99gY
RNy7zU+6B4W4d1caH7tH9biHlOPeA08tXhJXvQd8PMz1d+499Lyn1b1X8bav
WrUY3KfqLrlExdCeaKJKHMIdvWzuUEO53Yt4ussoh+svJFeLodZbShi6JfSc
lTWa7NAtdxh39Prz0WVUP/QIuZDgQj7jszLQ9b+cj6ihggtSyQCDo7YT+1H/
MZlYBIOukopFmshDmql8Umb/gy0t0AvvPXyBMh2sgWxw/NfQJYzvJ5ELHvyn
8foqyQmMXujJ2eOD8RebInGFHZi16LmYWoxm9SKag9SP0VrBr7YSesGYYucU
T+1CHtJq9WIO4ol50IsF0AskIp2OXuxfieRjtadmj4ur2pd8dRB6cQh60b8J
WgG9OEK9QCIykKP14hj04jj04gT04iT04pSjF2egF2ehF+egF+cRU5yHXlyA
XlyEXlxqEb1Ql3ejIaa4DMG4wguXXJWFE68ipLjWpfXiBvTihiybVpjJsVE3
+7Ve3Dqi2+2jaBCM2xCM24glIBfqDhsE4w4E4w7E4g7E4i7E4u55CsQFVi7u
QS/uIZy4h3DiHsTiHsTiPoOJ+9cpAg+gEw+QcDy4LS1VPbiD5x7co7Y8gEA8
eOC0V7RY9B301f2HfItXuXnNQ8Z3/3WKRfIBGHqVpvHG/XANdndedrIrj0YX
acgaQixsvdOKhZ7gFYrFHpV8OVaKhZ6aeUSGmw43XGuo2kVib+pgsRjuQkgS
V/DjPydrtP33uke+L5FEqBVMRDjPQ9cuRiinE9W0n3nhiItHKAXv/6eoBcIL
uedohR6owTFa/2zmiMgQctz+oArrFjau+L5K7B2xU0ADkUjQiOdkxAWXaLEj
LagRrFUUmBoFY4ol0Ihk+rDMaMMK/G8e76kdk6AN0IeW6dCHGdCHWYglZof6
0EF9QN7RhbyjB3nH/hVaH/rWao2oW+qr/o2J+jAAfTgKfTgGfTgOfThBfSgK
9eE09OFMJbQB+nAO+nBe6wNih2YG4yIPCCcuI924Anm4Anm4Anm4injiKuKJ
ax1aG64jnrhh9OFmH5qMv9q+KYaI4TAxvY1E4w7E4c5x0yAOdyEMdyEMd1nC
vHuGdY170IZ70IZ7CCTuIZCgMNyHMNyXTo/7Vxh8PIA4PEAk8QCRxANEElSH
V6AOr0AdHiKEeAXtIRONV+5xc58f/wqU4ZVXTEOC8fBVXUp6+Bruv8bdXudv
+gAC8eCDuiUTCt+fEizjxtwjFAq7hJt7FTU3/0i2TrvbmepeYEl3jNhxnSxb
+D6FxO0YsSWL4YqcFIo3VLIgKq9KR2IynYj2oz5qOKfkHwLxV2RV5WQjLoYM
KOzwb6MThlIz8nuEShz5zZji52FfqC5whiKRYgXhP02pk0mIvmeVQhc9eSkK
G1WERc5YrMP86DzxbhLyAxV2iLhi8Rk5Y6FY6OlifxoEFHZNpy1OQGEnhEx5
Nq6yXvATxMIKBYOJvFG+ah4HsZjgqZ2TIRZTIRYQjD0ztVjsg1i0IwHpQALS
iQSk2xULJCAH1iDpWOepORCM+gxfHYZYHIFYDEAsjkIsjkEsjluxKIRQQCxO
QSxOQyzOlEMoKjk0u4aLI5+vQwyBWOIiYolLiCUuQSwuO2JxFWJxtQ0CAbG4
DqG4jkDiBsWiS4vFzf0IGg6gIfG4TU9XlMWrrt9BHHEHcnEXcnEXscQ9STzu
yeTue5CLe4gj7ksH6f1z7Iy9D624f0G3B9CLB9CLBwgkHiCQoFa8IjXMV65z
31egFw+hFw+hFw+NXrx6V/RCPbyHdp/7vspqxKtMNF59yE99FWrx6mueGWb8
8HU89PCDHE7z8EN4yZ956v/+v2dUdBU4d7lH1iq0w4+O0BpOK9xO1HCd98QO
kUStMJcxV8MP0Xoj5c3hB134fr+M//b9I9K5uBTE0k/GYtVoNWwsI9TKwyzf
1ZvWwL1XCN+8UlWz+b/DXGZNLtLi+7dloNsdWZ0hvDBiYtLB+F6LxGtqUNJh
B1H9kxWJoLfT6QRJDTRihKiCvXTTf9omQUaw17+JQCZKhJ588kETW6xLIhF6
GGcoEXpOWTy+xEvQiIUJSQc1gkWK3JFhQMFkgxqxGRqRTB8ax3qqyejDronQ
BwQUrUg49iCg2IuEow0JRzs0ogMBRZfRh/3UByQcfStDfejfAI0YH1eNy301
QH3YkqgPJ/KhDdCHU9QHJBynS6EPZf8fa28ZZteVpWmeR3I6K6vqdNdkFp2a
6aef6a663TPd1dNFyWRmJsmWJVumNDMzpmzJlmVLFlnMzApBKJiZmRkUICZX
7nnX3vvEOffGjZDsqh87JMWNuAG6693ft/Zaa2s+qE0Yjs3vAAcAsVUA8aEB
xHYAsQNA7AAQOy0gdgGI3QII1MSeLw0g9qIm9gKIBNREAmpi32INCLUftwEj
1EuPeZoOB4UOqzUhVCJiIhE6JAodcBmHNCEObRL/kAQZkrbaJWmJpO3iOpIA
RDKASEZMJCMmkg0ciHqduEyBDynwIRU2pIqUSE2Ud6ciJVKT7BKDkSoqNjVV
njE1zciKVPSDXvAhJUOeMdNxfqJSsqJR4Q+LFFkRXAlxUwgV8RIVYe/hn53G
uxLCT2uGz059/zEjDirmqtGDIn1UjDUcbqs/F0qfcLygRzW8qOdBsRzboBuJ
3DUuHP44BIcP7PqQJ5WhU3I/+w5d/uzTQT+Luc3F3oGuB7CNDLq5X4+Cm66z
EQbYMjViHIehKXHSxvOpsdjg6wfH+QNPmM+XeFh/oqHDiM6ILyKCU1IREUaC
JKvRpx1Nlg4VPh0EB78MA+LqkRpvERGP/0twMqrbxKTr4+fmNShwmGzvdRJA
SOZS4KDFw28tHBAQsxAQnyEgZuM25iAgvrgJOCAg5uE2vsJtzAcQC+82cPga
t7FE4PAADuMh83UEECsBxCrgsFrg8AxwABDrLBzWA4cNwGEj4mETbmOzDwfc
xlbcxjbgsB047Jhh4LATOOwCDruAw24Lhz0WDnuBQwJwSAAO+4DDPuCwHzjs
R0EcAA4HZGT7y4957BuJsCERNiTChkOwIQkuHGIlwYYkXEYSLiMJ5ZAMG5Lh
QjKqIUW6OVK0yUiBCylwIWW3XbAhFeGQinBIBQypBgwTVJqQIU0EQ1qSICAN
d5GWYlY6miEdJKSlycPpjt1a0qBCWqZevDtL3p2WzdOx/vc/ajrIC/3Xzv9S
0ZlM0xlizj6uVedPTFzIMamfnDBnHv7UKek/jUSuUaMTE76GiD7zcF0Bipk+
4w+d0pe838a7nlf+vDjXXaDLhOLlJKRm03VXCifU+Su8z3c6euHV3XrglEx1
n+gTQ8+cGRk/84B+4EudW2SZYw7jNZTf4DEhDi90TkLjQj/BAgGG/peGhuDo
G53F1EUXcZARfUgq6sZg45AKCr/lJ2u2P7n8RnIEtdGC4gf6ZFRYIRnMJy0r
XrBm4zVTOWF+WvyvcMI/CdVC4teGFR8LKy5z1KeIic8QE7MRE3MQE18gJr5E
TMzDbHyFmJh/F6yYDCswG4sxG0sQE0unG1aseMSOiEJIrIYVa55iwYq1CIl1
mI31L8IJWLERVmx6LWDFlrfhBKzYBiu2Cys+MqzYCSt2zYQPsGI3rNgzmwUr
9sKKvbAiwbJin2XF/oWGFQdgxUFYcXAZcMBmgAv1yuOeOiRNo0lr5YbrJHRE
8ga7YEUyrEiGFSmwIgVWpBhWqFQERCqgSAMUaUAilZUGKNL2yq80TfdxpAGL
NGCRjopIx2GkJ7IEFxlJYi0ywEVGil7yvlRJVmSAjAzUQ0aGWcuXu+quSRGV
gXxIz+KT0qUlMT3Hcf4nwPgXO8lG5tSF05kjHesjJ6TBEAufGLGuI/bcY6zC
iuhzD79008iW0WVY/vgaf16V879lYNUIMDzv6dC4qvMPsogdVTU+NeJVen+b
TvW4GQp9QKob0Ad1dsJo/hHzIVMrxA9ofoyQRLeim0aPMzbozwZnoFpCaDHx
By1gHtYqQ/4lD/xBU2OCipYaP4zhRuxh6bD95u5XMl4vaFmXn7HB/i7knsm7
LDJMN9k1UR7Elxg6RxE6HJ2EtLgSHxIunhjxHoKMSywykBifITFmIzHmIDG+
QGLMRWLMw398hcRYgMRYiMRYhP/4GomxBImx9H6QgcRYDjZWWmysfgJUgIx1
ggzkxXrkxQZBBhJj4ysGGZtBxhb8x1YfGfiP7fiPHSBjJ8jY9XGAjD0WGXtB
RgLISAAZ+0DGPpCxH2TsXwAqkBcHQMZBvEciyEhcjoYAGYd0CTfQcL6vktAX
ycKL9YYXKfAiBV6k6I7R1C1yApsKM1JhRhrMSIMZaZYZ6fAiHV5kICwyEBbp
suBFBrzIEHGRoc9AM0BGBq4jE8eRKY4jUxxHZqo8lgkrMtPtkt0pM1NPy13h
qkkgIzNbvovMHHmuHLkUICOXX+sq12Yn/OlXPjfCt9LFciN8QYWvMuLdThUe
URs+Lw3fPunPtwy44boyxlZPwbG70f/DC/MGzQ3PkyyIn9kMj6cd6wgkfF46
qhgrBI5VIXB8pxYRHZzNunL6252VxiGHM15y046x0BSxPHlIl1NIZlafjppT
kO/FAcjEOADRSYyxdEd4/IVJZBiGfDoWP5wogPxAV2TJ7Op4muPRn/q32oEP
PmNMeFxq4YHm+BzNMeda4IHmmIvmmIfm+ArNsQDNsRDNsQh/8jWaY6nAA82x
HHisEHg8jNZ41FE3XRJRH09z1Tr8yXqBB3pjI/DYhN7YBDw2A48twGPrWwYe
2/An24HHDoEHmmPn7w08dgOPPfiTvcBjL/BIsPDYZ+Gx38LjAFrjIPA4CDwS
gcch4HEIeCQBj6SVrFX8+K8+4Tl/olJgRwrsSIEdqbAjDXakojXS0BppcCPN
ciN9h0Ry+k4RCOmwIwN2ZITYkQk3MuFGpnAj86Ac3GbCjSy4kZVkV7KgIUtn
KrLgRla6XWiMbPxIlviRrCzNj5WGH1k5+lNyJbyz8nh21htve+q66/+Hij4c
CcotfHyISTGSILZ1PWxSwvjwq7/H7xgRfLjuczqDISbFSHYZoiVDMqRIWeTJ
hVxwE6993dcdscnO0fgQvW1+vvE6zL5tt8i3xscEzY6LVExuw6Q2JqpQasMx
R6EXK1OemaPpIfUVtrMsgIo+HgnYod8q+8P+QRPK8ER/WaHPObvOjlihU/pK
zNhST1OLITP/DPT3qSAtKr+h4lFq5BKd8PjdPwdHq8/ZTOgjBiTq8Z+76knW
VaiRKJD8JgDJrDBIMC9fokTmokTmoUTmo0QWoEQWokQWY14WA5MlKJFlwGQ5
5mXFgwFI1mBebgYmn9znapBswLxsRIlsQoVsBiRbAMlWQLINkGwDJNsByQ5A
shOQ7EKF7AIku1Eiez4JQJIASPYBkn2AZD8g2T/XgOQgCuSgAQn/c4vec4n8
Re+76pVHMSyYlldlYVzuvMmUqd55c+Sv5S8XqUl3RvhPmnRXRL35mmfW655a
uVyGYq3i7fdVTrajcrAT+s8cR61aZeI9J1e+VnaevMmXNwWO85/VAw//11C0
RxdXhYdVBNF+vnxlvGPQ6F4PGW/jeXdbMfBrm6+cpsyMTHme8Y42/PE28S6y
i3cM6ke73xsWXVw1drR/l96w2NzEWNEejMaTdNAcHbdRY2yiQ31UFjPISuhQ
PGdD9Rsd3yYj4TeUGq3gugU6zuVPk61QciXGH7Qz0dJBJzf9jEWsegjHul/S
HT1hPzrW80fF+i91skKXZoZEw8M/CeJcSjF1rP84MpKgkITmx7+1cX6ZjXMc
xxc4ji8RDXMRDfMQDfNvIc4RDQuJ9cWIhq8lzhENy6YS5ziOFYiGlYiG1b8j
zh/DZeA4br40ombe70bHOaJhy6vE+evEOG5jO7G+gzjf+T7xLXGOYNht43wv
cb6XOE8gzvd9zvfwqqvmv+aqlx7w1MsPehPUHTIGV7P3zhsjEySm+X+WqH7t
CU8t+dhVrz3pqbtujqj0jbL9b5LGjnTkQcZWu5AHGciDTGxFJrYiC2mQhTTI
ZGXpNERWgkiGbORBNvIg+wDrIEGPNshBG+SgC3KT5UabJTKMc9VSV61a5qq3
4IUsGMJjkyfZnv2LNCQmTTbA4U8+b407QeUU8IVyCiWhkFPkqPj9pNGDbYJr
rsPJiNih+Q/FYYVJRnjeHUruvTAv4CuFFbrLI3aeriiD87NirJKJeMbiuyiD
cS+xVxc+AiteYdXFaozz0PGUgUljXqRCacwAFxPDuHBGwv8PfCl79DHCDeMj
F8rD6uJxYHFmHFj4NkN+ANOdbg53poZgURiChfnjJzpNIXM2H48RBpcjBO76
iTdSZ/W0BYbOZlpYfBKCxWxgMQdh8CXCYC7C4CuEwVcIg4UIg0U+LBAGS++x
sMBhrEQYrEQYrH4EWCAM1iEM1j9pgDFruqs24TA24zC2AIutAguEwbY3QrBA
FOwCGLuBxZ7fy+V5rnphqqdenOap26+N+PnnO64j8gAFv/mXH/LUordddQhf
kfQ1C1+RLNMoUpbL5InUVfiG1aw1+IW1LHzF67Dj9ac8lYGvyAAamXiKTKCR
BTQydUVV1g5tBkLgyMZTZOMpsqUuG2o4f6xyYEYOzMi13MiFG7mGGyo3xVF5
qSw54sjTRxz52Im8TLuy5N3Z8kXykBn5uSwsxJrVrlrNeutt7yI1eXLEMRdC
TL47otck1lvvekpuzo6f1Aw4Yls/VKA5xkpqBuUUMvXG8261L17hiLiToL80
GJAVTLwx8Xwh5RSxDsPnyFiaIx5HgnF6Y3Pku47Si+swJGL7tbIfhRHHcGRi
mCP6fcc1P3R+wi47FSs6xWnyDRMtT3RFhbEVGhp6hFbBCE9YkuoouNjyxnxC
lMVQllOndVnqWE0ifoOIuaAzGOpbqX+ToWpv88fNesSFNKmHpYdUb971Y093
goj0kFzFM79w1dXQxJcdn1xiSXJ5DEmQHvOgyXxIsgDpsQjpsRiL8fUkSIL0
WIbFWI7FWIn0WC0kwWKsRXqse8yQZMPTjroFmnz6gGtIgvTYisXYBkm2Q5Id
kGTn23INp6uev8dTz0+BHFebnfn2ayKaJC/d56kFr7hqAbLjAPbiIPYicR4L
e3FoPgzBXiTBk+TFLHiSspS1DIisYK0EIkAlDaikA5QMgJKxHvsPUN542lOZ
m4CIhUrWVmGJLqrIRohkw5NseJJteZIjRRU5+jgkBx2Siw7JPWB4kgdL8qTS
Ki9ZMg154CQfnOSnCZ3y0yWNUQBH8u0qwLMU6JxmQY5+DKAU5NmVzyrQlyS9
IzN/Cwr5HFlFek1Qa9bLDPK3AYtAJhL5qX5pXquhEZ268Gs6Xfd63bA+tpkJ
4OJ5N9pX8aUaLvELMIJaLZP9NDWd0XDxh134cInXVxaevnchhiZ8S2c8uHyX
zvXzVX+PmJkALiPTsy4ALhPDcHFMTkGAc1oFcuJsPLiMHJgonK75EQNTExie
Av1sRrDob86nzIixcUYnMmIR4zeVtOnfgfliBjFB/5n54+91VvReCONrFekf
kdpwKfV8+5dBf9mzljCxdIkyNhDmK4zNAozNwpuhC1pl8R0YGrTKUrTKMozN
CrTKSrTKaozNGozNWrTKOrTKeozNhqcwM89AmMsi6rMHXbUVumyzdHn2Lk89
N8lTt13pT+/7M/UChHkBwsx7zlUJH2NmZjpqP8ZmP8bmAMbm4ByoAl0OQZdD
IbokQ5cU6T1NWSL1lwKY1OVABbikA5d0gcuaAC6Zeqg3eHE8lQVYslEr2aiV
bCxODmTJgSw5kCUHsuRAllxZqJXcBBZoyQMteaAlT9CSaPCSLwu5ko9cybd8
KUhjpWuOZAiWCmFLIWwpzLYLsVKYy+uqME8wUwhaCgtY4AS5otauk1RKYZHI
nYJi3l9iVkGJPGOpoOHhR+WyoNjM6OiLg8xLJt6BrByGyPyt661OETTFzsYI
4yW6FDTc6e5nR88/fys2XzJeKWj0KOB4eJHDFdddMw5expu9FdYu8eo4xs6M
Snia3+vwt9UuoaTJRSpwQRosmis6FaqTpCNJEpMetULGihgxShMCvPxFPLyo
+KM0whXm0e0oomCkPM511wpMohXMn2q++Orl9n8xvWkyG8NXL9KPJkmTe3/m
qak/8yZIxsT5ayNcLFpEvMy9xgoXbNBCxMsixMtibNCSOy1asEEr7rVowQat
QbysfdiiBRu0EfGyCfGy+VlH3XoZ/uXWy2364HsaK89P9tSXiJbdWKA9H+je
848c529VAjZoXwgtB0BLomAF4ZI416AlCawk+1hZrNGiUhEuqYiWNLiSvsJw
JQOuZMCVTIRLJlzJ2sDCBb2JcHnzGU9zJQeu5Fiu5MKVXLiSu9swJU8US16C
tKTkgZV8sJIPVvLBSn6iQUpBksZHssiWArBSAFYKtWwpTPeRUpRlF0gpAilF
uTxcJNnVIsmuFhWIvSoCKkVolLsRJevWu6oIoBQBk6LS0J9l8rxl0WAZfWIb
7kWJHp9htIvnXcOL069Nl8+NV2M+FljCp7bGFEXfW3IhYAmbojBYxp4xbsAS
faNwJDI5BiwXemJ7vvEZ5z9y+beART92VgVmxpSJaZ/zB4HIyPK8hYKRi2PI
Yv7jFvzboNKvwqUgckmjzAwVqITmd5k//kHfTCCC5TaAInboVTtsx0+ufGBP
WyxU1EwEy6e+HYIqX1g7NA87NN8KlkUIlq+xQ0sQLEuxQ8uxQysQLCuxQ6ux
Q2sQLGsRLOuwQxuwQxsRLE/f7KmnbzXlrFBFoKKevcNTOxAsO7FDu7BDu7FD
u9+FKu87au8Hjkr4CJrM0PMlPnGcv1IHoMrB2dDkc0OVQwiWJMiSDFVSFrAg
S+piQ5Q0WVAl3VIlY6WhSqalSpalSjZUydbXj8EV54cqF6rkQpVcqJIHVfKg
Sh5UyYMq+SiVfJRKvkVKgSywUgBWCsBKAVgpRKkUSpFHYYrQpxCqFCFWitJZ
GSyoUgxRirUJKs4RBVKMCSrOs0u4Ulwgn1oMV4qL7Co2fFm/wVXFJfpTpR+8
WLBSXC4YKaqA8st+OAZablKxs7wMWuQagmD+n+Alftlp/DOe2J7Y8EByKQiJ
RK5TFzZqY6xWtwtBi69Zsi8ALSPnOxKBNc5f/juSJTlcC6JLQc7bw3LeRIst
HvM1i/U9+l+GLH+jQvXsPl2+A1b80T3hbrg6+3zvSKLWUuWX1gpJ6lbOeu7/
sasus2M3XouRKv7ZjlBl2s899emlhiyfX2GTLFcbqvg2aBFaZTFaZQlaZRk2
aDlaZQVaZRU2aDVaZc10Q5X12KCnbvTUUzcZmkiS5RnIsu0FpNPtWB+oslOo
8jpUedNQZc87Wqe8LyVUCR9CFbTKfrTKgU8cQxXRKpDlEHolyafKV4YqqUIV
9Era14Yq6XigDKiSYamSaamSBVWy8UHZUCUHquRsgiJ4oLfQK28966k8qJIH
VfKhSj5UKRCisAqgSgFUKdhniFKox2cUHtQiBKoUQpUiqFKE/ylCqBSJ6YYp
PFwMVYqhSjFUKYEqJeiUEikWK8kV21MCUEry7cL+lBbKM5dKLqW0WMhTWmKw
sgGslApLSvSbcnlT4SBJi4Uqy8NUiS5Njbn93Ga9Pe8q/TGxN6D75WVCFKkR
8cXKWCVmsVcczLGbd7yZ5WGixJsQ+F2IErgg6Xn5dvUh36ku1TGFqRep6PKy
EE7GTq1MVKHUijP+QZAPFD+5MgIUUy7yVyNjfmxPfhyaxCNJeFJHuL69VjcH
yRcLjSY2KPnvGiUiUmSY6EM/cUcEylshgeLnan2UfAZGZiNQ5lwZwgiWZ8EN
IYwgUJYiUJYjUFYgUFZheVYjUNYgUJ64zlNP3mDwISh5GpRsxvJsxfJse95R
2190NEaeuxOXtesNx/lvajck2fsOC9eTgD7ZB0X2C0VmGIochCKJn1qKoE+S
0CfJUCQF15My31AkbbGhSDoUyRCKoE8yoUgmFMmCItlQJNtSJMdSJFcoshly
4HiEIm+z8qFIARQpEIroKaCFe3WaA4oUQpFCKFKELik6KI8V6ba3IihSDEWK
oUix1J8W61r1EghSkmEXFCmFIqVQpBS3UypupzRPPrsMgpQV2FXIu8uKhD9l
yJKyErtKTaFvmSCkrJxXV2mFfH6lvKkKpoHFOwoK0inhMaPj17eHQTJWsVls
rWoAEpEmUmw2+ijIB4lfq/ptQBI9mjj2SNlvnospPZGILNdS5NtOABu3A19Z
aaKLT77rUfJIsfo3ATwmqNEZFA2PUDr2L2IIkqPiHx/Hjg8Mk6NJ/yZcd2N8
ctyiT3wugRqSK/G7YXxq+LkSOS/+BHIINe5jCTW+sOJDEiU+NRYiQBZja5bc
CjUQIMsRICsQIKuwNU9c7ambf2NOZp68HuEBOTZhazY97qjNTzpqiyXHdgTI
jpcc9TzkeP4uT+3G1uzB1uxFgCS8a7GBrdmPrTkANg4iQA7ONNg4hABJAhvJ
go0vDTZSESBpCJA0xEc62Miw2Mi02MgSbKwCF6sNNnLARi7YyLXYyAMb+QiQ
fCzNO2Djnec8jY1CsFGIpSnUd5YUJUiJexHYKAIbxWCjGDtTjPAotsgokQU2
ShAfJfiZEvxMKdwolXr10kwBgWCjDGyUgY0y7EwZyqNcrEx5geCjHCtTXmRX
sby7RHhVDjLKy8ySX255uXxD5YKN8krJy5RV8lRVeglUqh3nZyq6ZDWaIq57
XdToUTOoODwZLFzA5lMkXhHb+BXvPkX8ktVvd+NSPIpETQfTO3Wyvn91tMEx
FHknTBH58DLHU/+GOYLno0jMec/3QiQZKXQ3vXVjqpEYloQrU6MwYkrghYf+
0bFxM1Ltav5zv1KjNUhsgiQ8XLBZ+ZPC+PxfhyFylYaIHkpse2PGkh4zWS/9
ylXX/iSiPheIID3mApGvbF5Eyw7JiyA9liI9liM9HrvCU49faa9WvgbJca2n
1j/oqA0PO2rj7xwNkc1PAI+nWM8AEKTHDqTHzpcB1COuuu2KiNrzpgUI2mMf
2mO/AATtceD3BiCJaI/EWRYgsw1EUgQgcwOApKM9MtAemQAk0wIka7kBSDYA
yQEgOQAkVwCyHnAAkXydEwEfiIQCAFKAexGAyCoCIEUApAjnUix1JsX7dMIC
fpTAjxL4UQI/Sg4ZdpQma9uRImUupfCjFH6UwY8yNEcZmqPMwqNcFgApByDl
AKQC0VGhD4QrCoUiFdCjotguOampKBWKVECPinJ+k5tMnWFFhf4U0R0VVUKR
imqezywhS43j/Fz9y49/rOJpEemZMS8yKV0xvXZGJcdSJFaLxJvyIRTxM7Bj
UeRzXtivK7km/t825SNMEf/kOFkiLdX5WxVfikRBRI1f2fbvokWiK9vCyddR
08K+JUFMOXqBBpMhSKiQzbdBZ+1TyS0K/8EONI7lR+z9bW32Z67m4zeM4sdf
6kMbyYC8FJMBeS9GgMy6xFEvW37Msfz4CgEyHwGyEAGyGH4sEXYgQB693PM7
eh+/ylNrpzpq7X2OWj8ddDwEOh4BHY/yggcfW9Ef29Af258DHeiPneiPXa+A
pt+ZYEh4K4QO9McB0HEQ/XFwhkHHIfRH0qcGHcmCDvRHKuhIQ3+kzbfoQH9k
oj+yQEcW6MgGHdnojxyLjtw1Bh15PjrQH/lojwK0RwG2pRB0FO20+HjeU8Wg
o3iPRocqQXeUWG6UyoIdpbCjFHaUSl1JWbKcO5eBjbI0s8pBRznoKAcd5VkG
GxU5OuZzNSZARyXoqMSrVIpXqdTnvJVQo7LELkmeVpYJPaogRyVry2ZXTbkn
oqq01KiskjfV8gZc/LOqqOFr1JoVDx3S1G9Gk47kQjQ6zG0JV6nRNsYXIOcb
JhYvwxqgQ4pODJ7GsjFx0SFhsUMnD/1ZxrE1J7EF9L7+yL0AdIwaJCZfrkE3
2Z23JnZMcthjG2e0k9HaQzfKjNnWHxcc3xvJm5oUiD7A0U3BtslfhdSHyafI
j2BsjD+yVK6rDhruwoVr4alBptnOAsSJIshtmiAyvvgV25kbT30IPT5lvfJr
Q5Avr3DUPGzMVyiQhaI+IMjXEOR3lxq18djlKA/Ux+q7HbXmXvAxzVHr7gcf
D7AeNAgRfGxBfWxDfWxHfexAfexEfexCfex5FdXxulHl+1Af+9+1+PjA4CMR
fBz6OMBHMuojGYSkzAEfXxp8pKM+MhZYfKA+slAf2RYfORYfuRYfeWsNPvLB
RwH4KAAfheCjEHwUoT6KdoALEPIu+Hj3BU+VoDxKwEcp+CgFH2Wgo0xnO8oS
ZbRZGfgoQ3pAD1WObSmHH+WWHRWy4EcF/KiAHxXwoxLZUYnsqLTsqJIFP6ow
LtWSL60qFvVSBTuqSs2qRnZUAw4BSHUFq1LurgciUyKqGs9SjeKo0oqjqkbe
1MqbOkmqVtY56vEn/VPgYGypTCSMnjCmS2LFwF/p/HMchoRPaS6EIcGAkOhb
V7606ZCHzsOQcNvueU0ML/fFrCU872vKv3JFphFKPjUSmfxnOha+r+vE7SAg
u+7TDSf86ciP/hkhKWMz5NIUWSEYqAsdFnYeEkS32/6x8pvkRpWuGqQ4f6b8
TIY/kFQmjIyuXRWq+f22ZsaHXJwSidwZRYAf6R9H5oO9Oo5+kOj/7FJHfX6p
icq5V5jon3+tIcAj5v4kvsNHL/Ocf1Qr73TU6smOJsBaCLAOAqyHABuJ/k34
j80IiC2PE/0IiO0IiB3PEv0IiF0IiD0IiL2vIRzeMF9rPwLiAALioEQ/AiLx
9yb6kxAQybNM9KcQ/alEf5pE/1wb/QiITARElkQ/AiIbAZFD9OcS/bl4jzyi
P4/ozyf684n+Ahv9hZtM9BdJWWrxdumZKSH4S3YZALwHAMoI/jKCv8wGfzm6
oRzdUK6vIyjXo3wqCP4Kgr+C4K9IM4FfKTmLSp2zqCT2K4n9KmK/itivytNx
P0FVF8jD1Sb0VQ26oZq4r5EluqGmTDxRDWFfU2EXoV9TJZfRm/CvEeFQUyOq
owbBUC2rTq+Jqrpe9MTjT5nwl3vmg2ujR52n+AiwL/hvE//hM5V48R99U5sk
MUz8L1IXaj9kcpjnSR/v8yKpbx+Z4HUnARIb9NKrL8pBjmcv4CBF4qyO//ZY
z+G6e1h7WQm6+zQ0XdDAQkL5/pEW++l6QqGE5xd6vp/rZmibEa+v9ryMMBbD
MOIHaiTVebGKPm4dOSQJik/NCDH/Gwmynf4coODEVX4NwojgMnnDiFtHchSx
CuGjUH7iMxgxGz7MuczE7Tw8xnwY8fCvPfXwbzzNCFEIy29z1Io7HLVqkuHD
mnvgw1TLBxTCJkzGZhTCFhTCNhTCdhTCDhTCTkzGLhTCHhTCXhRCAgph35uO
uuPKiFrwpKsOohAS4cMhFMKhGZYPKIQUFEKq8AGDkYbBSIcPGfNCfEAhZMOH
HBRCzjLDhzzhAwoh3/KhYJ3hQ6HlQxEKoQhGFKMOSjAYAohSAFGKuRBAvPei
pwFRDiDKAUQFgKiQS40qDomhEDZUyoIPlfChEj5UwocqhEEVwqAqS+/cuvOl
GkBUA4hqAFGNMKhBGNSIsagpkvSCAKK2VC/eV1sm76uFDrUVesn7KsVp1EKI
WkTBRx96etXW6MdqBRO14KG2nqc1i6ducJz/qmoaHbVy7Q+VP2gwuhEv9kJH
U4QqOU9jOeINGRzvIth4k4FGUKGDZA4h6bpv2GxF7JDBFXaO2BN6NFAkcout
Pv4L/n6rjwo+Ru4SkhRevONX/9QkOH513dUx1NBFqI45Nvkr9e94/Kp8w2Gr
OfQhR6qeb/iF8ueOm9Mp+fuDytyLJJNIssdFyASLkMBwWISY8rFwF36oPebP
VLxxYv5sxNEyo0X//K67iY/5p1EI+e1IoUa4Xj02RTHbSowvLEK+AiEP/cqY
CsHHEkzG0lscjZCVdxiJsVbwgcTYcJ/FBxJjMxJjy+9QxEiM7UiMHUiMnUiM
XZiMPUiMvUiMBCTGPiTG/rcNQl6+x1OJHxh8JCExkj+2+EBipCIx0sBHOhIj
/UuDj0wkRtYCi4/FBh+54CMPiZEPPvItPgrAR6Fc0VG4QUK/CHoUQ49ivEWJ
pUfpDkOPsj3QQrfdvv+iTAcqhyAVEKTCEqQSX1GJr6hK1nhIkditAh9V4KPK
4AP9kCmKpRp5UY28EHrUQI8a6FEDPWqhRy3aohZtUQs66nQ5V12pPFUdnqKu
3C45Bqmr1O+GHHXVdomZ+Ogjb6Kqq5MPQE78L1XXwHM1hlYTmJnh6cliQTFY
LDeiXIbmRiTyq38DN8IzCP0C9uiZ52YLldGhjwTTxH5qp4kZbLiu4Ga8wUDj
VW0EGU4ZCmRU04W0xvz7lJiOe4HKxcpMGc7QpkHyBvZ2tfCtruak1JaCjTp3
BR0haoRbXsLZzXjoCGq95PvzvNlq9ODSqLNWi45f6D9cXaRxma0efTN0xKrV
x2+M+hCH4qPjy8v9oYT/oNXHousc9fWNoONmRy27FfVxO+i4C+UBPtZNQXmg
PjaCj03gYzPqYyvqYxvqYzvqYwfqYyfqYxfqYzfqYy/qIwH1sQ/1sR/1cQB3
8vLdnnoFfBz6MEBHCuojZaZFx2yDjgzUR8Zciw7URzbqI0fQgfrIXWrRgfoo
AB0FuJOCNRodcky6QRIARaiPYvhRAjtKYUepZUcZ6qMM5VFu+KE2z3fVPbdH
VKWu5arUtVxVsKPKsENVIzuq4Ua1tN1W6za5GpRHDcqjBm7UwI0andKszRVk
1cKOWsuOOthRBzvqDDuEHKpeS496qduqr5BPqMeRNECNhmqz6mXV8HesyL04
lJ3bpZWuXpRGvQzBqm90nP+u6sFGnaxmfvO7XfXjn8ZmOmPvhY2eFWLC+1YV
TAaKxcd4FzGFe3d92fEZr9X7dZk6ksO8oP5Z+fMIo9v/L3SuWPyr543yCFSH
vQBAXXjb7nh3MI01wjQ0jPAiPaPLjBXW9BirQH20eQEchiHfs+LE3Lpk6rbs
XDE7+djmORw9FyR2pNhEFb93zp+AHD1SzPxnH1TB/bD1yr8bFu3xmzBAfqoB
IuXnckTil57704x97SHpjTmsLwHIg78wmuPty1y16FrgcQPwQHssu9nAY9Wd
wGOS0R7r0R4bpwGP6QQe2mML2mMr2mM7ANmB9tiJ9tgt8EB77EV7JKA99qE9
9qM9DryFZXnX0fB4ZYqnktEeyTMMPFKBRxrWJV3g8bmBRybwyJoXggfaI1f6
4/KWSt4xH34UID0KYUch7CjCtRSvZ+FcimFHCewotewogx1llh3laI8K2FEB
OyoTDD+m3BFBYhyUk1VBRzXoqLboqAEdNUiOWt0CVyuio1bP/aoFHLUIjlo9
B6guT9KNdYCjDnDUA456wFEPOOpLNDRUgyxERwOCowG/0iCnpg1y+AE1YFaD
ZYasRjzKvffCjh0uDzeIMGlEazT4q0k+q1n40NDCs9v15DN/OwZDRksQYYhY
F3MX/VhXKcQyxG918Q9ZhSEfKrlfWmYOhaeLiXWRLIfniQSPzXLEzhAZ736m
C5shEg2RCz5plchr1M3xF8KQaBliZ5Pr6B3SEiGYampJYttc5DG/hnRk5pB/
ZoIO8aeJ+UiRq5kmKHNBk7kB8g9qpFtXeKITJdFDkc83oDAo/ZIBp+ZX5TsZ
kzD1S79+E7Yy/6hHhLxpb5Z/3x90HNIhs0MW5sFfetrCiA5ZfJ1BicbIrdbC
oEPWokPWo0M2oEM2oUM2o0O2WB2y/VEwgg7ZiQ7Z9YxByd4XwAg6ZL9gBB1y
AB2SiI059J5ByZ1XR1QKOiQVHZImGMHCpKNDMsBIJjok80uNkQkqe760zuVA
kjxkSB4OJh8ZMoIRZEiRYGRtgJESHyNbQAcoKQMl5WCkHIxUWIxUWoxUYV22
LNAoUdWJsAOO1MCRGjhSYzlSazgiFFF16I86GflRly00qYMk9ViX+jwtL/LF
1tRbkjRAkgZI0lASUKRRFiRpgiSNlfI5jVWCiSbUR2ONXXIO0lQnT99U76ip
AGXXThEjsISPF4g0NkvgNwKPBn+1QvsNfhl6eCBRrBiJvpPFvKLCZeh+ujR2
OnK0GDHDy+6xpzICEoGRHJmEpyPPt88fbxjRahWokY3jgGT8i94MSMy5q2ls
WfstQBJWI+HBZRdMEh3bg1F3yB7xaeKEXU1Mw5wanQuxbS22KtR6AzNY3b/N
SazNeUckh29jCN/7Fgwqk9lD/l31rrvZJ0gUQCYbgPwi6NmP1SGv/trUT7zx
W1fNv9KkUB9hfX290SHLbwEetxkdIgBZdzfwsDpk8/1EHTpkKzpkOzpkBzpk
Jzpkl+iQZ4EHOiQBI7PvFQOQA+iQRHTIIXRI0vsA6hlXAyQVHZKGDkkXeKBD
MgBIpgAEHZKFDsnGxOSgQ3KFHuiQvK8NPQqWQY4Vlh4IkWLoUYIQKYEepdCj
FHqUbTb0KBd6IEQqLD0qMTGVliBVliBbFxqC1Fh61EKPWuhRBz3qoEcd9Kiz
9KjHvdQjQuq1e2nQbSgNuJcGREgD6GgAHY1FGg3FwoBG8NFYqtEhXCgXtSP4
aMbANFXZBT6aQEdTrXxMs6Q9muuFK80NhvDNyI9mwUeT4KOpWd60yJtW+Tpt
Ykca2x0V3Ro3Hj3MfbKBFIm9/S18G4ORIeFxZj49TCu/WBk/ExJ9G4ORIo+M
QY/YAxf/BmqhR/jANd5w9dFVG9H0+C5DTi+8bENOacXMhNr5JZijr4mMKfyK
Gn94Og5AjLgIHE5Ylnz/QskRO+LQv4k6KPgyRDe3PElX7cKFC38bJsfl+vKm
t0ItbmHZ8YpPjd+46qvLHbXAJ8dvPLU0JDtW4WDW+LIDB7PRyo4tyI6tyI7t
yI4dyI6dj0MNZMduZMdeZEcCsmMfDmb/q1AD2ZGI7DiE7EiCHMkfIDc+MgGR
huxIR3ZkQI1MS40sqJGN7MiZZ6mxwFAjH92Rv8RSA91RhO4oghzFaww1StEd
pZCjzFKjfIuhRoVQY4dkN3Y5zo9UlQVG9T4W0Kg54Khtiww4aoFGHdCoC0Gj
HmjUA416oNEANBqARiN6o1E7l52rXV4Ru9a6aidL/ty1DtfRpJnRBDOaYUaz
ZkZzubyv2TKjRZdvNVcLd5phRkutXZiXlnp5rKVBjE1Lo/lNtTQ5ZjXz+QKO
5hZ5tlZxrs1tMEdWu1lPP/d3Kn42NXxgG6gP4Yd5PcW7k9rwY/wxZuFJQ7NU
7J3UgZU53yiQePWiUbdH6iBM0oWiYzXBxbbVXugokPFOYeIxpF9Xe1h+nF+A
fE/FESA2CxqnvdYUhP5Ahe6xF3iM/Dva7fimJoSVH8VgJd69DeHpH8EZr5lh
Jv+dNRotyclHnSi2XDnCltjSLykcle/sNbgyF658dYWjFl7lqHcvd9UNP4uo
ZTfCFatIVmNp1k6yigRLswlFsgVFshVFsg1FsgNFshNFsgtLsxtFshdFkoAi
2Yci2Y+lOYAiSUSRHEKRJL3DwtKkhNgiXMkUrsyGKXAlGzuTA1eyUSS5cCUP
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
/t+///fvf+z3zv/x/wG9bIci\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "u", "]"}], ",", 
      RowBox[{"Cos", "[", "u", "]"}], ",", "u"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.700568839129651*^9, 3.7005688530998893`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
    Line3DBox[CompressedData["
1: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
tSC5dg==
     "]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{134.89181349771206`, 429.66045604352695`},
  Method->{},
  PlotRange->{{-0.999999941761652, 0.9999995837354044}, {-0.9999983022923676, 
   0.9999999999999167}, {0., 19.999999591836733`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.057795123272319, -1.7815630101151552`, 2.010351330396279},
  ViewVertical->{0.5836976927742551, 0.6864043132694508, 
   0.9959324628235539}]], "Output",
 CellChangeTimes->{{3.7005688404322934`*^9, 3.700568853516762*^9}, 
   3.700986684450553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}], "+", 
    RowBox[{"z", "^", "2"}], "-", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    RowBox[{"x", "^", "3"}], "+", 
    RowBox[{"y", "^", "2"}], "-", 
    RowBox[{"z", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "\[Equal]", "0"}], ",", 
     RowBox[{"g", "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z", ",", "f"}], "}"}], ",", 
       RowBox[{"h", "-", "g"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Blue"}], "}"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}]}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", "30"}], "]"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7005648918114634`*^9, 3.700564899690321*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"49\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\"+\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\
\[Alpha]\\\", \\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Beta]\\\", \
\\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Gamma]\\\", \\\"2\\\"], \
\\\",\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \
\\\"[\\\", \\\"\[Alpha]\\\", \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Beta]\\\", \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\
\[Gamma]\\\", \\\"]\\\"}], \\\"2\\\"]}], \\\")\\\"}], \\\"2\\\"]}], \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\"+\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", FractionBox[\\\"1\\\", \
\\\"100\\\"], \\\",\\\", FractionBox[\\\"1\\\", \\\"10000\\\"], \\\",\\\", \
FractionBox[\\\"1\\\", \\\"1000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \\\
\"100000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \\\"10000000000\\\"], \
\\\",\\\", FractionBox[\\\"1\\\", \\\"1000000000000\\\"], \\\",\\\", \
FractionBox[\\\"1\\\", \\\"100000000000000\\\"], \\\",\\\", FractionBox[\\\"1\
\\\", \\\"10000000000000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"1000000000000000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"100000000000000000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"10000000000000000000000\\\"], \\\",\\\", FractionBox[\\\"1\\\", \
\\\"1000000000000000000000000\\\"]}], \\\"}\\\"}], \\\"-\\\", \\\"2\\\"}]\\)\
\[NoBreak] cannot be combined. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866846302695`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"27\\\", \\\",\\\", \
\\\"343\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", SuperscriptBox[\\\"\[Alpha]\\\", \\\"2\\\"], \\\",\\\", \
SuperscriptBox[\\\"\[Beta]\\\", \\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\
\[Gamma]\\\", \\\"2\\\"], \\\",\\\", RowBox[{FractionBox[\\\"1\\\", \
\\\"4\\\"], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Alpha]\\\", \
\\\"]\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\
\\\", \\\"\[Beta]\\\", \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Gamma]\\\", \\\"]\\\"}], \
\\\"2\\\"]}], \\\")\\\"}], \\\"2\\\"]}], \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\"+\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"100\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"10000\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"1000000\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"100000000\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"10000000000\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"1000000000000\\\"]}], \\\",\\\", \
RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"100000000000000\\\"]}], \\\",\\\
\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"10000000000000000\\\"]}], \
\\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
\\\"1000000000000000000\\\"]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"100000000000000000000\\\"]}], \\\",\\\", \
RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"10000000000000000000000\\\"]}], \
\\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
\\\"1000000000000000000000000\\\"]}]}], \\\"}\\\"}]}]\\)\[NoBreak] cannot be \
combined. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700986684650774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"2.`\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"0.01`\\\", \\\",\\\", \
\\\"0.0001`\\\", \\\",\\\", \\\"1.`*^-6\\\", \\\",\\\", \\\"1.`*^-8\\\", \
\\\",\\\", \\\"1.`*^-10\\\", \\\",\\\", \\\"1.`*^-12\\\", \\\",\\\", \
\\\"1.`*^-14\\\", \\\",\\\", \\\"1.`*^-16\\\", \\\",\\\", \\\"1.`*^-18\\\", \
\\\",\\\", \\\"1.`*^-20\\\", \\\",\\\", \\\"1.`*^-22\\\", \\\",\\\", \
\\\"1.0000000000000001`*^-24\\\"}], \\\"}\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\
\"4.`\\\", \\\",\\\", \\\"9.`\\\", \\\",\\\", \\\"49.`\\\", \\\",\\\", \
\\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \
\\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", SuperscriptBox[\
\\\"\[Alpha]\\\", \\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Beta]\\\", \
\\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Gamma]\\\", \\\"2\\\"], \
\\\",\\\", RowBox[{\\\"0.25`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \
\\\"[\\\", \\\"\[Alpha]\\\", \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Beta]\\\", \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\
\[Gamma]\\\", \\\"]\\\"}], \\\"2\\\"]}], \\\")\\\"}], \\\"2\\\"]}], \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}]}]\\)\[NoBreak] cannot be combined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866847147865`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"2.`\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"0.01`\\\", \\\",\\\", \
\\\"0.0001`\\\", \\\",\\\", \\\"1.`*^-6\\\", \\\",\\\", \\\"1.`*^-8\\\", \
\\\",\\\", \\\"1.`*^-10\\\", \\\",\\\", \\\"1.`*^-12\\\", \\\",\\\", \
\\\"1.`*^-14\\\", \\\",\\\", \\\"1.`*^-16\\\", \\\",\\\", \\\"1.`*^-18\\\", \
\\\",\\\", \\\"1.`*^-20\\\", \\\",\\\", \\\"1.`*^-22\\\", \\\",\\\", \
\\\"1.0000000000000001`*^-24\\\"}], \\\"}\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\
\"4.`\\\", \\\",\\\", \\\"9.`\\\", \\\",\\\", \\\"49.`\\\", \\\",\\\", \
\\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \
\\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", SuperscriptBox[\
\\\"\[Alpha]\\\", \\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Beta]\\\", \
\\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Gamma]\\\", \\\"2\\\"], \
\\\",\\\", RowBox[{\\\"0.25`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \
\\\"[\\\", \\\"\[Alpha]\\\", \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Beta]\\\", \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\
\[Gamma]\\\", \\\"]\\\"}], \\\"2\\\"]}], \\\")\\\"}], \\\"2\\\"]}], \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}]}]\\)\[NoBreak] cannot be combined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866847460403`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"2.`\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"0.01`\\\", \\\",\\\", \
\\\"0.0001`\\\", \\\",\\\", \\\"1.`*^-6\\\", \\\",\\\", \\\"1.`*^-8\\\", \
\\\",\\\", \\\"1.`*^-10\\\", \\\",\\\", \\\"1.`*^-12\\\", \\\",\\\", \
\\\"1.`*^-14\\\", \\\",\\\", \\\"1.`*^-16\\\", \\\",\\\", \\\"1.`*^-18\\\", \
\\\",\\\", \\\"1.`*^-20\\\", \\\",\\\", \\\"1.`*^-22\\\", \\\",\\\", \
\\\"1.0000000000000001`*^-24\\\"}], \\\"}\\\"}], \\\"+\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\
\"4.`\\\", \\\",\\\", \\\"9.`\\\", \\\",\\\", \\\"49.`\\\", \\\",\\\", \
\\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \
\\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", SuperscriptBox[\
\\\"\[Alpha]\\\", \\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Beta]\\\", \
\\\"2\\\"], \\\",\\\", SuperscriptBox[\\\"\[Gamma]\\\", \\\"2\\\"], \
\\\",\\\", RowBox[{\\\"0.25`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \
\\\"[\\\", \\\"\[Alpha]\\\", \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\[Beta]\\\", \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \\\"\
\[Gamma]\\\", \\\"]\\\"}], \\\"2\\\"]}], \\\")\\\"}], \\\"2\\\"]}], \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}]}]\\)\[NoBreak] cannot be combined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700986684782362*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Thread\\\", \\\"::\\\", \
\\\"tdlen\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7009866848674555`*^9}],

Cell[BoxData[
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "\[Equal]", "0"}], ",", 
     RowBox[{"g", "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z", ",", "f"}], "}"}], ",", 
       RowBox[{"h", "-", "g"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Blue"}], "}"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}]}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", 
      RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", "30"}], "]"}]}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7005648930017786`*^9, 3.700564900591648*^9}, 
   3.7009866858312516`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{798, 818},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "er" -> 
  SubscriptBox["e", "r"], "es" -> SubscriptBox["e", "s"], "e0" -> 
  SubscriptBox["e", "0"], "e1" -> SubscriptBox["e", "1"], "e2" -> 
  SubscriptBox["e", "2"], "e3" -> SubscriptBox["e", "3"], "einf" -> 
  SubscriptBox["e", "\[Infinity]"]},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 117, "Title"],
Cell[CellGroupData[{
Cell[837, 30, 458, 6, 88, "Chapter"],
Cell[CellGroupData[{
Cell[1320, 40, 671, 12, 86, "Subchapter"],
Cell[CellGroupData[{
Cell[2016, 56, 149, 2, 70, "Section"],
Cell[2168, 60, 31286, 770, 2872, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33491, 835, 176, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[33692, 841, 344, 6, 52, "Input"],
Cell[34039, 849, 418, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34494, 863, 1756, 38, 112, "Input"],
Cell[CellGroupData[{
Cell[36275, 905, 2305, 72, 171, "Print"],
Cell[38583, 979, 1821, 62, 171, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40453, 1047, 1737, 42, 112, "Input"],
Cell[42193, 1091, 1611, 50, 81, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43841, 1146, 1799, 46, 132, "Input"],
Cell[45643, 1194, 1615, 50, 81, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47295, 1249, 1273, 31, 112, "Input"],
Cell[CellGroupData[{
Cell[48593, 1284, 421, 10, 23, "Print"],
Cell[49017, 1296, 417, 10, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49507, 1314, 557, 10, 105, "Subchapter"],
Cell[CellGroupData[{
Cell[50089, 1328, 98, 1, 70, "Section"],
Cell[50190, 1331, 61732, 1346, 3812, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111959, 2682, 97, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[112081, 2687, 237, 5, 52, "Input"],
Cell[112321, 2694, 569, 12, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112927, 2711, 1395, 38, 72, "Input"],
Cell[114325, 2751, 191, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114553, 2761, 719, 21, 52, "Input"],
Cell[115275, 2784, 191, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115503, 2794, 693, 20, 52, "Input"],
Cell[116199, 2816, 409, 11, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116645, 2832, 370, 9, 52, "Input"],
Cell[117018, 2843, 1431, 37, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118486, 2885, 680, 16, 72, "Input"],
Cell[119169, 2903, 2422, 74, 171, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121628, 2982, 1117, 27, 92, "Input"],
Cell[122748, 3011, 190, 3, 31, "Output"],
Cell[122941, 3016, 2504, 76, 171, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[125506, 3099, 258, 6, 68, "Subchapter"],
Cell[CellGroupData[{
Cell[125789, 3109, 98, 1, 70, "Section"],
Cell[125890, 3112, 11453, 272, 1112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137380, 3389, 95, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[137500, 3394, 796, 18, 72, "Input"],
Cell[138299, 3414, 2019, 41, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140355, 3460, 467, 12, 72, "Input"],
Cell[140825, 3474, 1264, 27, 376, "Output"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142162, 3509, 339, 5, 88, "Chapter"],
Cell[CellGroupData[{
Cell[142526, 3518, 479, 10, 86, "Subchapter"],
Cell[CellGroupData[{
Cell[143030, 3532, 149, 2, 70, "Section"],
Cell[143182, 3536, 16015, 398, 1622, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159234, 3939, 93, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[159352, 3944, 1952, 49, 165, "Input"],
Cell[161307, 3995, 1666, 43, 91, "Output"],
Cell[162976, 4040, 3299, 81, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166312, 4126, 1835, 43, 108, "Input"],
Cell[CellGroupData[{
Cell[168172, 4173, 423, 6, 23, "Print"],
Cell[168598, 4181, 226, 5, 21, "Print"],
Cell[168827, 4188, 228, 5, 21, "Print"],
Cell[169058, 4195, 286, 7, 21, "Print"],
Cell[169347, 4204, 227, 5, 21, "Print"]
}, Open  ]],
Cell[169589, 4212, 222, 5, 30, "Output"],
Cell[CellGroupData[{
Cell[169836, 4221, 423, 6, 23, "Print"],
Cell[170262, 4229, 224, 5, 21, "Print"],
Cell[170489, 4236, 226, 5, 21, "Print"],
Cell[170718, 4243, 360, 8, 21, "Print"],
Cell[171081, 4253, 265, 6, 21, "Print"]
}, Open  ]],
Cell[171361, 4262, 413, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171811, 4275, 1149, 31, 88, "Input"],
Cell[172963, 4308, 88, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[173112, 4316, 433, 8, 70, "Subchapter"],
Cell[CellGroupData[{
Cell[173570, 4328, 193, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[173788, 4334, 99, 1, 46, "Subsection"],
Cell[173890, 4337, 9226, 214, 511, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183153, 4556, 151, 2, 48, "Subsection"],
Cell[CellGroupData[{
Cell[183329, 4562, 181, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[183535, 4568, 3544, 81, 139, "Input"],
Cell[CellGroupData[{
Cell[187104, 4653, 1534, 49, 74, "Print"],
Cell[188641, 4704, 3378, 93, 152, "Print"],
Cell[192022, 4799, 2098, 50, 73, "Print"]
}, Open  ]],
Cell[194135, 4852, 1553, 49, 125, "Output"],
Cell[CellGroupData[{
Cell[195713, 4905, 423, 6, 22, "Print"],
Cell[196139, 4913, 224, 5, 22, "Print"],
Cell[196366, 4920, 224, 5, 22, "Print"],
Cell[196593, 4927, 327, 7, 24, "Print"],
Cell[196923, 4936, 271, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197255, 4949, 291, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[197571, 4956, 2808, 64, 230, "Input"],
Cell[CellGroupData[{
Cell[200404, 5024, 1699, 52, 74, "Print"],
Cell[202106, 5078, 3552, 98, 152, "Print"],
Cell[205661, 5178, 870, 25, 73, "Print"],
Cell[206534, 5205, 423, 6, 22, "Print"],
Cell[206960, 5213, 226, 5, 22, "Print"],
Cell[207189, 5220, 226, 5, 22, "Print"],
Cell[207418, 5227, 318, 7, 22, "Print"],
Cell[207739, 5236, 229, 5, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208029, 5248, 156, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[208210, 5254, 1609, 47, 121, "Input"],
Cell[CellGroupData[{
Cell[209844, 5305, 2226, 71, 156, "Print"],
Cell[212073, 5378, 6768, 185, 250, "Print"],
Cell[218844, 5565, 2047, 49, 73, "Print"]
}, Open  ]],
Cell[220906, 5617, 1533, 48, 125, "Output"],
Cell[CellGroupData[{
Cell[222464, 5669, 425, 6, 22, "Print"],
Cell[222892, 5677, 226, 5, 22, "Print"],
Cell[223121, 5684, 228, 5, 22, "Print"],
Cell[223352, 5691, 329, 7, 24, "Print"],
Cell[223684, 5700, 273, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224018, 5713, 289, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[224332, 5720, 1541, 39, 212, "Input"],
Cell[CellGroupData[{
Cell[225898, 5763, 2501, 76, 156, "Print"],
Cell[228402, 5841, 7018, 194, 250, "Print"],
Cell[235423, 6037, 870, 25, 73, "Print"],
Cell[236296, 6064, 425, 6, 22, "Print"],
Cell[236724, 6072, 226, 5, 22, "Print"],
Cell[236953, 6079, 228, 5, 22, "Print"],
Cell[237184, 6086, 316, 7, 22, "Print"],
Cell[237503, 6095, 227, 5, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237815, 6109, 113, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[237953, 6114, 229, 3, 48, "Subsection"],
Cell[238185, 6119, 173, 3, 29, "Input"],
Cell[238361, 6124, 4563, 120, 339, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242961, 6249, 95, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[243081, 6254, 1907, 56, 121, "Input"],
Cell[CellGroupData[{
Cell[245013, 6314, 423, 6, 22, "Print"],
Cell[245439, 6322, 226, 5, 22, "Print"],
Cell[245668, 6329, 226, 5, 22, "Print"],
Cell[245897, 6336, 377, 10, 24, "Print"],
Cell[246277, 6348, 269, 6, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246595, 6360, 1896, 52, 230, "Input"],
Cell[CellGroupData[{
Cell[248516, 6416, 1701, 52, 74, "Print"],
Cell[250220, 6470, 425, 6, 22, "Print"],
Cell[250648, 6478, 226, 5, 22, "Print"],
Cell[250877, 6485, 226, 5, 22, "Print"],
Cell[251106, 6492, 373, 9, 24, "Print"],
Cell[251482, 6503, 271, 6, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[251780, 6513, 3886, 85, 285, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255715, 6604, 429, 5, 71, "Section"],
Cell[CellGroupData[{
Cell[256169, 6613, 101, 1, 48, "Subsection"],
Cell[256273, 6616, 4795, 123, 321, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261105, 6744, 98, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[261228, 6749, 255, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[261508, 6757, 1521, 39, 212, "Input"],
Cell[CellGroupData[{
Cell[263054, 6800, 2499, 76, 156, "Print"],
Cell[265556, 6878, 423, 6, 22, "Print"],
Cell[265982, 6886, 224, 5, 22, "Print"],
Cell[266209, 6893, 226, 5, 22, "Print"],
Cell[266438, 6900, 327, 7, 24, "Print"],
Cell[266768, 6909, 273, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267102, 6922, 232, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[267359, 6929, 730, 22, 85, "Input"],
Cell[CellGroupData[{
Cell[268114, 6955, 425, 6, 22, "Print"],
Cell[268542, 6963, 230, 5, 22, "Print"],
Cell[268775, 6970, 232, 5, 22, "Print"],
Cell[269010, 6977, 326, 7, 24, "Print"],
Cell[269339, 6986, 276, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[269724, 7003, 463, 7, 77, "Chapter"],
Cell[CellGroupData[{
Cell[270212, 7014, 337, 7, 86, "Subchapter"],
Cell[CellGroupData[{
Cell[270574, 7025, 99, 1, 49, "Subsection"],
Cell[270676, 7028, 8251, 202, 896, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[278964, 7235, 230, 4, 41, "Subsection"],
Cell[CellGroupData[{
Cell[279219, 7243, 187, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[279431, 7249, 1698, 37, 69, "Input"],
Cell[281132, 7288, 2400, 58, 205, "Output"],
Cell[CellGroupData[{
Cell[283557, 7350, 442, 13, 21, "Print"],
Cell[284002, 7365, 290, 7, 21, "Print"],
Cell[284295, 7374, 196, 5, 21, "Print"],
Cell[284494, 7381, 293, 7, 21, "Print"],
Cell[284790, 7390, 274, 7, 21, "Print"],
Cell[285067, 7399, 442, 13, 21, "Print"],
Cell[285512, 7414, 275, 7, 21, "Print"],
Cell[285790, 7423, 194, 5, 21, "Print"],
Cell[285987, 7430, 291, 7, 21, "Print"],
Cell[286281, 7439, 272, 7, 21, "Print"],
Cell[286556, 7448, 440, 13, 21, "Print"],
Cell[286999, 7463, 262, 7, 21, "Print"],
Cell[287264, 7472, 194, 5, 21, "Print"],
Cell[287461, 7479, 293, 7, 21, "Print"],
Cell[287757, 7488, 274, 7, 21, "Print"],
Cell[288034, 7497, 442, 13, 21, "Print"],
Cell[288479, 7512, 236, 6, 21, "Print"],
Cell[288718, 7520, 196, 5, 21, "Print"],
Cell[288917, 7527, 293, 7, 21, "Print"],
Cell[289213, 7536, 274, 7, 21, "Print"],
Cell[289490, 7545, 442, 13, 21, "Print"],
Cell[289935, 7560, 236, 6, 21, "Print"],
Cell[290174, 7568, 194, 5, 21, "Print"],
Cell[290371, 7575, 291, 7, 21, "Print"],
Cell[290665, 7584, 272, 7, 21, "Print"]
}, Open  ]],
Cell[290952, 7594, 145, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[291146, 7603, 138, 1, 33, "Subsubsection"],
Cell[CellGroupData[{
Cell[291309, 7608, 2619, 54, 108, "Input"],
Cell[293931, 7664, 18594, 308, 205, "Output"],
Cell[CellGroupData[{
Cell[312550, 7976, 610, 15, 21, "Print"],
Cell[313163, 7993, 419, 9, 21, "Print"],
Cell[313585, 8004, 325, 7, 21, "Print"],
Cell[313913, 8013, 472, 11, 21, "Print"],
Cell[314388, 8026, 416, 9, 21, "Print"],
Cell[314807, 8037, 610, 15, 21, "Print"],
Cell[315420, 8054, 406, 9, 21, "Print"],
Cell[315829, 8065, 325, 7, 21, "Print"],
Cell[316157, 8074, 472, 11, 21, "Print"],
Cell[316632, 8087, 429, 9, 21, "Print"],
Cell[317064, 8098, 610, 15, 21, "Print"],
Cell[317677, 8115, 393, 9, 21, "Print"],
Cell[318073, 8126, 325, 7, 21, "Print"],
Cell[318401, 8135, 472, 11, 21, "Print"],
Cell[318876, 8148, 416, 9, 21, "Print"],
Cell[319295, 8159, 608, 15, 21, "Print"],
Cell[319906, 8176, 363, 8, 21, "Print"],
Cell[320272, 8186, 323, 7, 21, "Print"],
Cell[320598, 8195, 470, 11, 21, "Print"],
Cell[321071, 8208, 447, 10, 21, "Print"],
Cell[321521, 8220, 610, 15, 21, "Print"],
Cell[322134, 8237, 365, 8, 21, "Print"],
Cell[322502, 8247, 325, 7, 21, "Print"],
Cell[322830, 8256, 472, 11, 21, "Print"],
Cell[323305, 8269, 429, 9, 21, "Print"],
Cell[323737, 8280, 610, 15, 21, "Print"],
Cell[324350, 8297, 365, 8, 21, "Print"],
Cell[324718, 8307, 325, 7, 21, "Print"],
Cell[325046, 8316, 472, 11, 21, "Print"],
Cell[325521, 8329, 429, 9, 21, "Print"],
Cell[325953, 8340, 610, 15, 21, "Print"],
Cell[326566, 8357, 365, 8, 21, "Print"],
Cell[326934, 8367, 323, 7, 21, "Print"],
Cell[327260, 8376, 470, 11, 21, "Print"],
Cell[327733, 8389, 414, 9, 21, "Print"],
Cell[328150, 8400, 608, 15, 21, "Print"],
Cell[328761, 8417, 363, 8, 21, "Print"],
Cell[329127, 8427, 323, 7, 21, "Print"],
Cell[329453, 8436, 472, 11, 21, "Print"],
Cell[329928, 8449, 403, 9, 21, "Print"]
}, Open  ]],
Cell[330346, 8461, 314, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330697, 8473, 6113, 116, 122, "Input"],
Cell[336813, 8591, 3745, 81, 205, "Output"]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[340631, 8680, 342, 7, 70, "Subchapter"],
Cell[340976, 8689, 15980, 404, 1016, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[356993, 9098, 364, 7, 70, "Subchapter"],
Cell[CellGroupData[{
Cell[357382, 9109, 103, 1, 49, "Subsection"],
Cell[357488, 9112, 22725, 420, 932, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380250, 9537, 97, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[380372, 9542, 216, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[380613, 9549, 2228, 60, 146, "Input"],
Cell[CellGroupData[{
Cell[382866, 9613, 1935, 61, 123, "Print"],
Cell[384804, 9676, 1580, 52, 123, "Print"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[386445, 9735, 291, 4, 33, "Subsubsection"],
Cell[CellGroupData[{
Cell[386761, 9743, 2894, 74, 152, "Input"],
Cell[CellGroupData[{
Cell[389680, 9821, 1598, 49, 99, "Print"],
Cell[391281, 9872, 522, 8, 23, "Print"],
Cell[391806, 9882, 323, 7, 23, "Print"],
Cell[392132, 9891, 325, 7, 23, "Print"],
Cell[392460, 9900, 425, 9, 26, "Print"],
Cell[392888, 9911, 372, 8, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393321, 9926, 113, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[393459, 9931, 3822, 91, 172, "Input"],
Cell[397284, 10024, 196, 4, 31, "Output"],
Cell[CellGroupData[{
Cell[397505, 10032, 471, 7, 23, "Print"],
Cell[397979, 10041, 272, 6, 23, "Print"],
Cell[398254, 10049, 274, 6, 23, "Print"],
Cell[398531, 10057, 372, 8, 26, "Print"],
Cell[398906, 10067, 319, 7, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[399310, 10083, 202, 3, 51, "Subchapter"],
Cell[CellGroupData[{
Cell[399537, 10090, 98, 1, 70, "Section"],
Cell[399638, 10093, 35638, 660, 1583, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[435313, 10758, 165, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[435503, 10764, 155, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[435683, 10770, 2769, 77, 272, "Input"],
Cell[438455, 10849, 320, 6, 31, "Output"],
Cell[CellGroupData[{
Cell[438800, 10859, 297, 3, 23, "Print"],
Cell[439100, 10864, 320, 6, 23, "Print"]
}, Open  ]],
Cell[439435, 10873, 4297, 113, 252, "Output"],
Cell[443735, 10988, 701, 17, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444473, 11010, 173, 3, 31, "Input"],
Cell[444649, 11015, 3694, 80, 367, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448392, 11101, 117, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[448534, 11106, 2228, 48, 112, "Input"],
Cell[CellGroupData[{
Cell[450787, 11158, 320, 4, 23, "Print"],
Cell[451110, 11164, 347, 7, 23, "Print"],
Cell[451460, 11173, 344, 7, 23, "Print"],
Cell[451807, 11182, 550, 8, 23, "Print"],
Cell[452360, 11192, 353, 7, 23, "Print"],
Cell[452716, 11201, 355, 7, 23, "Print"],
Cell[453074, 11210, 454, 9, 26, "Print"],
Cell[453531, 11221, 398, 8, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453990, 11236, 175, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[454190, 11242, 1651, 40, 132, "Input"],
Cell[455844, 11284, 754, 17, 52, "Output"],
Cell[CellGroupData[{
Cell[456623, 11305, 197, 2, 23, "Print"],
Cell[456823, 11309, 222, 5, 23, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[457106, 11321, 289, 6, 79, "Subsection"],
Cell[CellGroupData[{
Cell[457420, 11331, 6382, 162, 612, "Input"],
Cell[463805, 11495, 10293, 177, 391, "Output"],
Cell[474101, 11674, 2356, 48, 51, "Output"],
Cell[476460, 11724, 2872, 66, 193, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479405, 11798, 199, 3, 68, "Subchapter"],
Cell[CellGroupData[{
Cell[479629, 11805, 98, 1, 71, "Section"],
Cell[479730, 11808, 20588, 447, 1248, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500355, 12260, 165, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[500545, 12266, 107, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[500677, 12271, 1060, 27, 121, "Input"],
Cell[CellGroupData[{
Cell[501762, 12302, 2474, 75, 156, "Print"],
Cell[504239, 12379, 1992, 60, 101, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506292, 12446, 127, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[506444, 12451, 4401, 68, 48, "Input"],
Cell[CellGroupData[{
Cell[510870, 12523, 252, 3, 22, "Print"],
Cell[511125, 12528, 276, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511462, 12541, 130, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[511617, 12546, 4275, 102, 448, "Input"],
Cell[CellGroupData[{
Cell[515917, 12652, 277349, 4558, 359, 166815, 2744, "CachedBoxData", \
"BoxData", "Print"],
Cell[793269, 17212, 218, 5, 22, "Print"],
Cell[793490, 17219, 298760, 4910, 397, 167009, 2748, "CachedBoxData", \
"BoxData", "Print"],
Cell[1092253, 22131, 244, 5, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092546, 22142, 1129, 32, 66, "Input"],
Cell[1093678, 22176, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093787, 22182, 745, 19, 48, "Input"],
Cell[1094535, 22203, 35964, 859, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130536, 23067, 1787, 45, 66, "Input"],
Cell[1132326, 23114, 21831, 521, 216, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154242, 23644, 452, 7, 88, "Chapter"],
Cell[CellGroupData[{
Cell[1154719, 23655, 272, 3, 68, "Subchapter"],
Cell[CellGroupData[{
Cell[1155016, 23662, 93, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[1155134, 23667, 23803, 528, 1394, "Input"],
Cell[1178940, 24197, 452, 8, 30, "Output"],
Cell[1179395, 24207, 8007, 151, 479, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187463, 24365, 254, 3, 68, "Subchapter"],
Cell[CellGroupData[{
Cell[1187742, 24372, 95, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[1187862, 24377, 28493, 572, 1903, "Input"],
Cell[1216358, 24951, 9416, 185, 679, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225847, 25144, 555, 8, 88, "Chapter"],
Cell[1226405, 25154, 121, 2, 29, "Input"],
Cell[CellGroupData[{
Cell[1226551, 25160, 181, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[1226757, 25166, 92, 1, 129, "Subsection"],
Cell[1226852, 25169, 650, 19, 194, "Input"],
Cell[1227505, 25190, 3902, 81, 1130, "Input"],
Cell[CellGroupData[{
Cell[1231432, 25275, 128, 2, 81, "Input"],
Cell[1231563, 25279, 488, 9, 63, "Output"]
}, Open  ]],
Cell[1232066, 25291, 19792, 512, 2181, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1251895, 25808, 196, 3, 102, "Subsection"],
Cell[CellGroupData[{
Cell[1252116, 25815, 230, 3, 107, "Subsubsection"],
Cell[1252349, 25820, 82282, 2255, 8411, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334668, 28080, 126, 2, 202, "Subsubsection"],
Cell[1334797, 28084, 51852, 1474, 9592, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1386686, 29563, 130, 2, 202, "Subsubsection"],
Cell[1386819, 29567, 219366, 5618, 37154, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1606234, 35191, 150, 2, 250, "Subsection"],
Cell[1606387, 35195, 1527, 39, 264, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1607951, 35239, 146, 2, 250, "Subsection"],
Cell[CellGroupData[{
Cell[1608122, 35245, 703, 17, 476, "Input"],
Cell[1608828, 35264, 536, 9, 63, "Output"],
Cell[1609367, 35275, 870, 18, 63, "Output"],
Cell[1610240, 35295, 1033, 24, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611310, 35324, 126, 2, 157, "Input"],
Cell[1611439, 35328, 339, 6, 63, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611851, 35342, 210, 3, 88, "Chapter"],
Cell[CellGroupData[{
Cell[1612086, 35349, 94, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[1612205, 35354, 1542, 38, 139, "Input"],
Cell[CellGroupData[{
Cell[1613772, 35396, 263, 7, 22, "Print"],
Cell[1614038, 35405, 263, 7, 22, "Print"],
Cell[1614304, 35414, 882, 22, 22, "Print"],
Cell[1615189, 35438, 892, 22, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1616142, 35467, 152, 2, 48, "Subsection"],
Cell[CellGroupData[{
Cell[1616319, 35473, 168, 2, 39, "Subsubsection"],
Cell[1616490, 35477, 4112, 107, 339, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1620639, 35589, 104, 1, 39, "Subsubsection"],
Cell[1620746, 35592, 4100, 116, 375, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1624907, 35715, 391, 6, 88, "Chapter"],
Cell[CellGroupData[{
Cell[1625323, 35725, 98, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[1625446, 35730, 98, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1625569, 35735, 6752, 198, 539, "Input"],
Cell[CellGroupData[{
Cell[1632346, 35937, 4878, 89, 65, "Print"],
Cell[1637227, 36028, 1261, 33, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1638549, 36068, 168, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1638742, 36074, 5226, 132, 394, "Input"],
Cell[CellGroupData[{
Cell[1643993, 36210, 4649, 86, 56, "Print"],
Cell[1648645, 36298, 1180, 31, 22, "Print"]
}, Open  ]],
Cell[1649840, 36332, 4173, 63, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1654050, 36400, 2039, 56, 139, "Input"],
Cell[1656092, 36458, 4173, 63, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1660302, 36526, 611, 17, 66, "Input"],
Cell[1660916, 36545, 580, 12, 21, "Message"],
Cell[1661499, 36559, 227, 5, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661763, 36569, 636, 18, 66, "Input"],
Cell[1662402, 36589, 580, 12, 21, "Message"],
Cell[1662985, 36603, 227, 5, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1663249, 36613, 563, 10, 29, "Input"],
Cell[1663815, 36625, 596, 12, 21, "Message"],
Cell[1664414, 36639, 260, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664711, 36650, 3075, 77, 175, "Input"],
Cell[1667789, 36729, 2965, 45, 57, "Message"],
Cell[1670757, 36776, 3050, 77, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1673844, 36858, 334, 7, 29, "Input"],
Cell[1674181, 36867, 598, 12, 21, "Message"],
Cell[1674782, 36881, 260, 6, 30, "Output"]
}, Open  ]],
Cell[1675057, 36890, 246, 3, 29, "Input"],
Cell[CellGroupData[{
Cell[1675328, 36897, 3366, 86, 194, "Input"],
Cell[1678697, 36985, 87, 2, 30, "Output"],
Cell[1678787, 36989, 436, 9, 21, "Message"],
Cell[1679226, 37000, 186, 5, 45, "Output"],
Cell[1679415, 37007, 150, 5, 45, "Output"],
Cell[1679568, 37014, 396, 7, 405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1680001, 37026, 324, 7, 29, "Input"],
Cell[1680328, 37035, 87, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1680452, 37042, 445, 12, 29, "Input"],
Cell[1680900, 37056, 87, 2, 30, "Output"]
}, Open  ]],
Cell[1681002, 37061, 322, 4, 29, "Input"],
Cell[CellGroupData[{
Cell[1681349, 37069, 1885, 49, 85, "Input"],
Cell[1683237, 37120, 1254, 23, 405, "Output"],
Cell[1684494, 37145, 11194, 198, 402, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1695773, 37352, 88, 1, 100, "Title"],
Cell[CellGroupData[{
Cell[1695886, 37357, 164, 3, 29, "Input"],
Cell[1696053, 37362, 97, 1, 30, "Output"]
}, Open  ]],
Cell[1696165, 37366, 935, 26, 121, "Input"],
Cell[CellGroupData[{
Cell[1697125, 37396, 164, 3, 29, "Input"],
Cell[1697292, 37401, 250, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1697579, 37412, 3825, 107, 412, "Input"],
Cell[1701407, 37521, 559092, 9071, 443, 455310, 7370, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2260536, 46597, 375, 10, 29, "Input"],
Cell[2260914, 46609, 26622, 445, 445, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2287573, 47059, 1600, 48, 85, "Input"],
Cell[2289176, 47109, 3331, 48, 92, "Message"],
Cell[2292510, 47159, 3592, 53, 92, "Message"],
Cell[2296105, 47214, 3102, 46, 64, "Message"],
Cell[2299210, 47262, 3102, 46, 64, "Message"],
Cell[2302315, 47310, 3100, 46, 64, "Message"],
Cell[2305418, 47358, 564, 12, 21, "Message"],
Cell[2305985, 47372, 1281, 37, 51, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

