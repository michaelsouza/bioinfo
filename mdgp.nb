(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1544515,      29214]
NotebookOptionsPosition[   1528117,      28732]
NotebookOutlinePosition[   1532137,      28818]
CellTagsIndexPosition[   1532094,      28815]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DG Package", "Title",
 CellChangeTimes->{{3.6793495261201363`*^9, 3.6793495384395885`*^9}, 
   3.679349644788345*^9, 3.67934974754046*^9, {3.698080393349868*^9, 
   3.698080394373047*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell["1) Instance Creation and Plot Routines", "Chapter",
 CellChangeTimes->{{3.6793500520209*^9, 3.679350065056984*^9}, {
   3.6950585832964363`*^9, 3.6950585871556697`*^9}, {3.695721180314636*^9, 
   3.695721206866439*^9}, 3.698079604394558*^9, {3.6980801756029487`*^9, 
   3.698080180840421*^9}, {3.6980803985611115`*^9, 3.698080400318778*^9}, 
   3.698157038028053*^9, {3.7002280176828976`*^9, 3.7002280179629517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: DG \n",
 StyleBox["DGProblem", "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",", "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" DGSaveProblem", "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", \nDGAllEdges, DGEdgeWeight, DGEdgeDistanceBounds, DGGraphGetIJD",
   "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 "\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
nvyLqXl3VcsVH3dWOr2iR1zqH6zH/phUWJyaWY6Y3CHa+l4P2qnWV/pw60pg
8KCKp55jvslezZxeRHLq1Zy9QZeD12l28eway7z/fGD4U6v1c++MQkd4uLDM
LTODnBs+eXakPA99iHI9qFnGd33w8uB1n7hakJm/n79PU8gUDMlpia2NQnLV
P3Q8KWmMbFhrKoN5X0TxZJkT0pA7j2SiiK5H3PBjLMT2T358kdwJ0ec/2jpZ
30TVeHGEdy87KQ1Ienn3N7HK7/Q1qlqsozx7W5ldj8QrUNc4OHDvSWroc+SJ
7+pxuri8YzK9IG7eXI94FXWCr2wcNd7umpqO6jv3sN/IZ354Ka4HW49gC0WK
bPLB2U4ZMiNthKdHBrV7KcO13fptBqXHOPV8VdXerL+YuGVqOTLg/TW5b9kN
qXiHktE5d+9B61hCHhjp10xfbRZGzkGPlGqk0XmP+UjScitbHCdu+6V/IdPp
AMavyXBxtkxhciKy6KznjE7b+ZutQUUvnvcmLVSKbxNZbM44j6R3E6cQeLQN
Hf1VtV8/MDyZ4sbSuYCa+NY9pMNt6KecuNl4MfZBo6qysf/rlJEs9RE45Hdl
9sEvQ6p8NSwXW0Vs7XFEHzuPNdTsUadqbHpxyZziApAzN4+fYcxXct5r2idQ
NzY3IpMO3V5Cc8I+8bKAZrIY14OpAt9RHWv8tdDIxUaV8IiSAONwsfNt9mN6
4mDHczyvPrnku9S3tTlYZohxPbZGfmXT4D+zN8TW9/kGuTKfipAk40kKLvg2
HhhPvctvvetRJpsZa+RkS29VJPHkmBMSkTmPpBKZ9tisHOe0NYm5Cuu05t9x
n1zxTEsIMn3ud1yhfvQ7Y3PcHq7Rnst+pejzidvvt2toTaOq1V380188o//l
Hx/13Pz0opZNY7KnfeA/J14IuIbcW6auNf314Y+3+ltqGoyffhX45UVkkzmJ
OHZr4AjtNaj26ax3gsnT1sa050pKC6ibjfTTX3H4U9bQ1hb8X5ia2V2G6uae
K47bXp9/3Od1O//0nra2gqhKTJ68sez/szW5LVKvvOx30N+wGJu3HItmo4X+
m8O/zN+esWtY/+xfZqf9J/esRzmfiLafbwem58PRyPKvj8ZuXWqvbu4f+flf
js5YtfOallPmD6y//3T0Sc77u7EH5Eh8iq1OZ3s+tSW5wjQcqqahgAKboQnQ
Ga0ppgKu/kbmySuMrscpichmg4HR/7za11pFe6MXbgayvvzMrFrRafsxlsOT
jCxSQ8uqb+36g2cqPWSMPYbDLhFsRma/GzKcTrMcpF4z6xnwrW/KOuhBeSW3
uzW7GJ25EZ74vKvj40Dy+8KGf7Q7fxH4Qob7Zr84Y2LVxI4sbUZCY/buY/3u
4BJdQZXV5JEZ58kDSXOT+DaRzer07TMN6sPWsadMN5HR5Uduy2FN7fFB7y88
0SXRaVd3p/n2o4TydpuRxYduS0ej4bpgFWwJxDb0W3537YOu7ptBWgby1ezo
h1rNXgEPWuIjMN/JoSvFDH7pUuWpYbm8dpzLRkZm7l02vTvy02OXUUPsH/Cx
i+KUbMER28Bl4embXLjbQ01hPKWEFYAMP7BT3oeqXv+xN71urNL3mn3gp6bf
WwNtGqLZ6uGCgkYdxhqitsc+Mub3/xhcjFtfZGTikxZVjd7upb81/pWNkpOo
bjE7RqdzCKRlainGZkWFduvZeYcNgyFfBm++25uyTri9IaPh57HZ7dE923F2
rVWjs90LznB/XwwnNeRWHWRxtRi2vs8XrKvMpyIkyZz1evWfg02V3OwWffbD
0Nn37qXGZ8qFdT2yrcwXTTyp5oQMZMwj6TDNqKpp7tQKcKS5pkLiW8/sHfBc
k75U1iuRkdAD703bQJ+evTV9HZ2+75LN6X0Qymib0q5HQrRMdCnovW7t0zZU
Mb5MTbPW+O7H1z3+mZV0AZgNBVVVw+FEcZmKGALLBdGVGb/nuu0SJWVbA/Vy
axratPo+q919f2o50TNiwwIrapqPCF6Z8ZhSW4utxsGdWOFtT6ZxksY/fWTb
bb9iNmqZj+iHrmroMFqufcMq/8jMqP3Cia0yH4okfmcfkHp8wQEk3JJkdGH8
urmjRqVpNAwp9FLESTwZlAGqa46bBumxJfqVWVsIDFuNR9vaqUc+rte/leXn
1Ozm/n13O/Vtnd78+fezvDk6JV1zM+y3tTe09Xv+ne2l3AyP/75Rvd90N/2b
zEd8AfOsPKGxPxpbWtq0OsPAMJ+zvxa695GB+sIJQ8+l9C9kuK+Yi1NmzyO3
tae9rUN7wmDst3MDmPqh79p5bTuFbsAzkxRyKb5NcoHqpr8OmY61tR1lUqaf
HXKNJb/vyUTnA3fslr5eo16n1epO6Lt7+j9y3gvKL2KeBLu3zpykiM757Baj
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
zd2UjC4HvfwfZWAzEvrnHfsAXTxJ29nedtRovRNM+VX0yb3BU+2UGB0Dw0E2
sQMZXfA7L/UZTlB3atWa0w9eUcI8HnMNmfTMddvadaYP3RPPlQkvJ1dD/uEh
07G2tqNabbfZPhaKshN05rhcEU8qXxhtQ5VKVdNhvvkwzDNVPR811xNCCE7x
otuwEONEeoeSr2Z9/2PQZNAy6HquuIM5ZwWR1/Wi+kg0JdfaYk5MyBn8ZOSJ
/84n5hMdbe2dWu2xHutwIDUdllzNJlLsnDqO3S/Iv+shaZwrrC7WX0zcztj+
4oXceOE9pxG4ZerLJbVfyJUpz5ChUUNUtZoSvxx97NTpHdO8YosYsTlNyumP
I3VCKcAcJ2Xk50Pfitcb5Mr06A2r8SitK3RvW92PaIHJlxOOs/1fJW475qIx
4veSqRZEKLSkr8vqXymaNi9dBsqJlcDgsW7XdPTNq0nbIULd7ZqLhCedvdoz
Dt+/w/Q7QkZnburUqureu/OpQ4eMBL/o7r42QQ0/8hdn+y51lyu1yO7KPXO1
iiD0rlDiuBa+6f0nESa9NHdT08gSuRGeuN7dbkr9iEeeBKJzY7buWnVTj+N+
KMLM/+TLh1e1uw2uma0XP7rgOd8x5A+TjKlAp7bejIb+fumM3RdiklxHF8cH
29T7r068jv2EfDXjHdLV1rZb/xZcZs94rs3f+12T+rf9I7/mqJnJ8E93LIer
NMevssUI6DShJzs+vPaHzHG5op5UrjCqev3HX0/OhkJT952mo2/d9o/RuSjP
3A1tnW8lI8tPQwx+WwsdZNLrejzH/uHpcoRHAgltmP9xIqNDyWdjlzvrtB+O
zrLHCjYjM3f7W43OqVUJ7ZtySVldL76PxFF6rZ31xIScwU9ZCMP9Lbs12iHv
9ArzJfp8etP+ocBWFS3Zmk2U2Dl3HJPhKt+x+lLGudLqYiMc+Lij6/NM7S9J
SO6uM35bO31Po+sxe8vQ83DCOJHeL5EZlzHBqWnsH11gLrex5DXX069J2i9E
jdhcJuW0TpE6oRRgjpM08vOgb8XrDTL80NnTpG68cDu4RD97dH7M2vWWe/KR
Q68h2uzBSPyLOWkM2Y1DI0ahJd5GVv9K0rT56DJQXpDzbsNvhgK0ac1OZ5XN
5/sNrZaRRJ+deZUIlSH1lVmftB865Zxh3j7yZ0drJaE65V5I9ILJNb91T1om
Q56bvjfQc5D3pvo/f3ftmEh54p+HHzgM9SpV2qv0atRcmaAuyGnn0T73fDQm
Rk3f3+5dP/unQHxRN/R1f2MlQbTaJplXhisZsFdnf5C8FrHsszQwE0QOCWci
kw7dXkLdefVhwuIAl4JecPtA7JPKE4ZoMHlm45clV8YGmutq6DgS3pbn9vGz
BJlIacN8jxNZHboecvdqqk2e+cRrbix5+mosYzIVq6yul9VHmSjB1s58YkLW
4F8LeX/XUqXW6Bizdovno+aWrTxLcjWbGLGV6LhXgcEDRH6PmUsZ54qri8gD
2xEzd2v+9pcuJA2b2amy1fEzj4qS/BSs/V/dYr424vvB5/nU2FBJVL/jnotE
Q3dNTb2umdQRKHLE5jQppzyOVK1SgDlO2jhRXt+K1xvUN+2UwBpjYleSS56e
6qoqyofYY/XHs1vnpjFoZKoFcQptSwo5/StR0+ZhigTlRnTe3dvAbbyy0xk1
yNuGAsvJI3bWpa1Km+k2V0bf+01sLNHaUp0+20aC9jbqkpXm0YRDfbw3bbWO
L/HdlPqo3TaRMsPyyhODDHnPNBDErhbbg1TVv+az7IofMCTXJ6/+lkuxyGZc
VO3SdAwF4guVq5O2VkaATsfUWmyBi3ehiZ1Gc8hVSC5SKkZFaDocweQ3n50r
BeJyxT6pPGHUdQNjK0k3jQnDX/lXTOS2pDbM8ziR16GrP1jrKnYnqVAyErxh
qK0gtK6Q4IMLI7Pr5fVRBkqwtTOemJAz+Kmeuq7TqBj7MMGKi/7qHThMiV5l
9UdZeWRqNjFiK9JxzzzGPRmWTxVA/DhXXl3QQ7He+gPX/jPODpWAHyf1ZWRt
Qt4FfzlP8dJvbW0c+P5FfEs8/G+fy9Z/6mCNqsZA71mk3ELkiM1lUk55HIla
pRBznMRxory+Fa03uG/WdLtTip+wb19ifuYcNYbsl0ikQtuSQU7/StW0incZ
KEOol6iNiwrg1LK6Lqbzt6CryVLaP8W9pX57yOJbZv6f0pbM6T2DO2lIkzMu
nSatCi3fTVPfuPhN+QY8vzxvOEk8pmrqVa0+701d1SFX/Zfrqt8d5RQC5Vl0
xpYF2NhsoqLHk2BpUe/LcL/hNBPbSa4/vt5BPyH/sgBz6lN2haaNF6MXa6mf
0xFfKb/PkIBd/JPKEobnsmG/lVJBqj3WcZ4oUi51TIZsolLbMK/jRF6HsitX
KTH2rIu666DjJ+nNLa/r5fZRJkqwtTOcmJAz+MmV+9Ym6rmqu1wzifeJFcuu
6nCy5phszZZVbIU6jg3oymNJQfHjPA/qgi72cWQwwFrUXM3B1PaXJmQMepGW
IHjqoch6CvJXz7t/8C4kG3f0qvJbrRe+XUiVVvyIzWVSTn4caVqlIHOctHGi
uL4V3wsbS97z1bxtyBWj0ei21EiOGkPmSyRaoXFfl9W/UjWt4l0GypGNoLPv
cy4gkE39wZdincvFl+LFJ/6WnHZ2VNEBS97FpF+yaduJo0mn7STdVG10z6ev
HvHJw0J73PTbtW/wx+QrboSn3ObG+q3FKHru03GCcbHZDTHtkQY56+6uoQTd
zb9jGMsZkrbKIIr1SXvrLj6ZMyZgF/+kcoThe1JuHkzrZfbDrAkbpbZhXseJ
zA5l4x+ICsPwk8QQ8Uho8sEvyzJO1sjrerl9lIkSbO0MJybkDP7VoP0IJSDR
dHVyPTWc+2b/qR7r3Sn2qIFszZZVbKU6bsGtV+W1FLXocZ4PdUG1v+mLSfZ4
3eZPjoO7BGoOSn4ZuTrm6VpaqX6h/Q59HW/0u/gRm8uknPQ4ErVKIeY4qS2s
tL4V3wucwHwLCNy7n+D05agxZDaOaIXG/VVW/0rWtEp3GShzYinWefb1ssfw
C+yJZwtuFHPTDudM6k0zyBN7fYhmbtEsGl4MTU98f9t+UVerOdQ//GgrvpFc
nv5xmt3D5qakygujAuXINqccB+mXXMg34fZSib2DAcm70eSq79LuRJkTPxOc
oKU8qRxh+J6Uy0vJY3aKSdiYQxsqPk5kC8PF0lBXrWo2Wu2ubwKzYfnqVF7X
y+4jsVKVSGsLn5iQM/jJpRETfcYzZSUwCzI0m7DYSnUc20F5LUUtcpznUV2w
11+fvNpEr7jybuBKfRljgXB694IyT5EiLON3pIbcs8hT1/ImZXlapTBznNQW
Vlbfiu+FuMDpm0qxdz/xoEfix5I1hszGkarQZPWvjHGrbJeBsofdEePd18ua
KJLbE08IfWTJGNyY5aYZIoEXvX01Ah8xR6Voz72hjc3ppu+zWIfsTrfX//Ni
RGivj/LTDcxSrkcg5UfsrRT0Tbjgz7RJTQwxmXlUWYYJWt6TihaG50kz1//K
mrAxlzZUfJzIF4Z88V1/LaNZOSgFe84ZkJd2Mreul9xHIimR1s5wYkLG4Oei
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
b1u6Lnj+de9SLesvk0u+gSPd7sT6V/JCysXIQy9GNVZ02n6MJXMjI4vBsVtW
fWvXHzxTKcWZRRyi51idvn2mQX3YOvaUuSwZXX7kthzW1B4f9P4SyfGVikw6
dDXVPe45+t1k9cbR/pFf12hdwS6wRGacJw8M/jP59Zf0pHKFCY3Zu4/1u4NL
dCFUIWE2w773ub5m5Tectk+8TBNARhvmb5xIFCY67eruNN9+lFAUaTOy+NBt
6Wg0XM90wjQz8rpeTh+JoWRamyu8yz7L6mOH4WDqioeMwR8OOvQadcJP3kTD
M/47V01t7e+5JvhyP0rWbNnEzq3jmEz+6mrTyBLvy8KVt2aQV/ftjfRxnjd1
wdg8rKeQNqhkvIzc2vKBwQBf0IfEpyDn7/bu09u5fKEbL8Y+aEzM5qM5waf9
pE1MOU3KMieUAs5xWcdJnvSt+F5IEnh9Ofg3a1f3pYtdlcIHPZirybCFZKsF
qQpNXv+KbrF8dRkoVzbD479vVO833f0332S1Fhr7o7GlpU2rMwwMT7xY5/kK
PRhnvncM6OmvdemN/UPuhy+o4Ue+DLp/393efrSty3T9x+WksZ3hpsxHfBGD
ouVZWwgMW41H29o7tdrjev1bpkGn90GI7+XaDPtt7Q1t/R7eZ0+/7F+HTMfa
2o4yCa7PDrnGppb5G0QqZPiR29rT3tahPWEw9tu/mWbf6LWQ79p5bXt7+xGD
9e8zPGlexD+pgsK06wY8qcLE+rpTq9ObP/9+Vkg1S23DfI8TKcJE5wN37Ja+
XqNep9XqTui7e/o/ct4L5lihVV7Xy+mj7JRSaye2wOB3IZ5Glj74ydWQf3hL
Bq2hz/qZ2/c4Qw9K12xZxM6h45jixYJbHhQvxq0tKjpEo2bvwRwKu0gc53lT
F2uhex8ZqJY/Yei5lDaopL6M2XJqSXmKZZ9Fe8abuK1EiTqkq61Q1Rw0WocD
gifspExMuU3KOUwoxZrj0sZJfvSt+F5gBH6rpblNqz3WQ3frChuzJ1z/i/mV
ZI0hq3G4n0lVaPL6V/S4zVeXAQAAAKDQ0Cvt1RWCpzy4L0WWnz4Pz7hOIY9l
MvSOkMCeHQDiYIvuKZ3QPlfYyCveOukAAAAAALKg4zT2E7UXR19kNS9ezzj7
rX7+w6c7lfVZZ5fMcngAsKyNW/eoMhz0KBKZq6sDAAAAAEhlY2X8SpO6eWBs
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
UQqWGC8FFIx84jbsJojdBvcTYWW0uTI6cLD/7kwkeSiRT++92z0wVg5BozuC
zUf2/RUEUWceLWKXsWObEC0GZRKcs/he5keYtYXAl3bLyZaaCiI7lQfsj5R+
H2FP5pVysicxVPJKOQ0VIdamHUfL56AHKE24gOrSO8VQOpSEJcZHIQVb8fZR
t1Idc868zvu9QFEhQy6dqtjnKLmxTQ25U+6FdDFeTd+fWEzygV8FBrsHA6+U
lmMjHHQPsMleqhq1dFmxG67MDP89sKD4Pj7sybyitD1JPhsbunBp+JG4WhrU
GPvrQO/QqDLV6jBU8spOcD3K6aAHKFFK9hRD6VASlhgfBRSMfDV6gYn9dExD
GZU5myvesxXF7mtubBMC+XLXxq3a/7+9s/tp49oavv+AufFlLpCQkCUuIkUR
4oIIVXBBlAgJokaWxYcsE4FslFSGEwWnVUyqBnLUOmprqy30wzqNlZ7jvCcW
54nzNm5P3KfQRyYq7htHwcrjNpBjGpwAAYIcZIJheOdjjz0e7xl7xjaf63eX
4JnZs2bN7LX2Xh83Moe3NvPTD6F4UT9i5Kuw+0IdoSLqer/5YXJhJyP0wJ4s
KUV3PZ6PXj5JqI4aXOFcTRHI9Sl3h4Yg6gdHwfXYAxwA12MfJXoAuxVI9MjJ
rrDEcGznwFaCtgaIyis9ZHL5ScDjsBgNer2+XaszWD7zTr7EzHDrT32DXVpt
c6Ou/0bwBfsDMv7kp+t/vWDqMui1jY0Gy9CPU/FcPim5GguOOCxntNo2vb7b
6gzEkuyzlo7i20zEfrvjHDQzw9Rp28y2O5Gc15IBp9sqVZl1LGsng3wT+kxX
6iBD1D6srN7qzS3GkgP2ZBbJZ6OO87SqN521eVP7Cxvx6H2P45LZ2Kln3wLH
ncml9ZznKr49SWe9nSSIk/33/hQ/I5mM/dhfX0bUX7lXtIxXUJUsdrmqSFHi
L21yMTL6D1tPO/X9NxjP9tl/oL51eyDRg3w9M/5PuwV1njX0fOKNiBeqQnOc
vq6CIKparDcf5bcXmfdcXATkX0uWBPJlIx65c81ytkvb1GT6fDTji0SuR+9e
bjpa3X1ral3kOvLknE+iR95ioV5w+zs6yhxqGRxBciCT80H31T5TF/VuN+ut
2SUF5LxZJZG24BK70xKTNbD1pcnbIvojOKe0PF+OWWtF49mxWy35616xLGe6
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
     "], {{0, 277}, {1065, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{579.7714285714296, Automatic},
   ImageSizeRaw->{1065, 277},
   PlotRange->{{0, 1065}, {0, 277}}]], "Input",ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
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
/Mq9l7dBwoxLIdoYAZwEmTo=\
\>"]]
}], "Subchapter",
 CellChangeTimes->{{3.698064786393987*^9, 3.6980648085765533`*^9}, {
   3.6980677551920414`*^9, 3.698067772324468*^9}, 3.6980678077804627`*^9, {
   3.6980730442932186`*^9, 3.698073084912524*^9}, {3.6980731592026176`*^9, 
   3.698073183521519*^9}, {3.698135205349147*^9, 3.698135224691476*^9}, {
   3.698135487529049*^9, 3.6981354882540293`*^9}, {3.6981356287527127`*^9, 
   3.6981356329327507`*^9}, {3.6982407844204545`*^9, 3.698240789311618*^9}, 
   3.6982595805552015`*^9, {3.7094577652569113`*^9, 3.7094577950823245`*^9}, {
   3.7094585970903807`*^9, 3.709458604987862*^9}, {3.70945923452619*^9, 
   3.709459237160941*^9}, {3.709459452202067*^9, 3.7094594635680685`*^9}, {
   3.709459601569294*^9, 3.7094596077594037`*^9}, {3.709459826982396*^9, 
   3.7094598363919325`*^9}, {3.7094598932261105`*^9, 3.70945990300428*^9}, {
   3.7094599350934324`*^9, 3.709459956349964*^9}, {3.709460032234243*^9, 
   3.709460100496899*^9}, {3.7094601368686814`*^9, 3.709460367457959*^9}, {
   3.7094604068737235`*^9, 3.7094604736255846`*^9}, {3.7094605272097664`*^9, 
   3.709460549665037*^9}, 3.709460580061155*^9, 3.7094625031059456`*^9, 
   3.7094672702962694`*^9, {3.7094673140215015`*^9, 3.709467320279315*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.698067812774536*^9, 3.698067816768963*^9}, {
  3.6981354925538797`*^9, 3.6981354928866024`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
    RowBox[{
    "DGAllEdges", ",", "\[IndentingNewLine]", "DGEdgeWeight", ",", 
     "\[IndentingNewLine]", "DGEdgeDistanceBounds", ",", 
     "\[IndentingNewLine]", "DGProblem", ",", "\[IndentingNewLine]", 
     "DGPrintGraph", ",", "\[IndentingNewLine]", "DGPrintX", ",", 
     "\[IndentingNewLine]", "DGSaveProblem", ",", "\[IndentingNewLine]", 
     "DGGraphGetIJD"}], "\n", "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGAllEdges", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "j", ",", " ", 
        RowBox[{"k", " ", "=", " ", "0"}], ",", " ", "pij"}], "}"}], ",", 
      "\n", "   ", 
      RowBox[{
       RowBox[{"pij", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ")"}], "/", 
             "2"}]}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", " ", "<=", " ", "n"}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{"i", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
            RowBox[{"j", " ", "<=", " ", "n"}], ",", " ", 
            RowBox[{"j", "++"}], ",", "\n", "      ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", "\n", "      ", 
             RowBox[{
              RowBox[{"pij", "[", 
               RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"i", " ", "<->", " ", "j"}]}], ";"}]}], "\n", "      ", 
           "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "pij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeWeight", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Gets", " ", "edge", " ", 
       RowBox[{"weight", ".", " ", "'"}], 
       RowBox[{"E", "'"}], " ", "can", " ", "be", " ", "a", " ", "single", 
       " ", "edge", " ", "or", " ", "a", " ", "list", " ", "of", " ", 
       "edges"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "eij", ",", "wij", ",", " ", 
        RowBox[{"D", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"FailureQ", "[", 
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", " ", 
               RowBox[{"E", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
             "EdgeWeight"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "E", " ", "is", " ", "a", " ", "list", " ", "of", " ", "edges"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], ",", " ", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eij", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
               RowBox[{"eij", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
              RowBox[{"eij", " ", "=", " ", 
               RowBox[{
                RowBox[{"eij", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
                RowBox[{"eij", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FailureQ", "[", 
               RowBox[{"wij", "=", 
                RowBox[{"PropertyValue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
                  "EdgeWeight"}], "]"}]}], "]"}], ",", 
              RowBox[{"Throw", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"D", ",", " ", "wij"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"E", " ", "is", " ", "a", " ", "single", " ", "edge"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", "E"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
            RowBox[{"eij", " ", "=", " ", 
             RowBox[{
              RowBox[{"eij", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
              RowBox[{"eij", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FailureQ", "[", 
             RowBox[{"D", " ", "=", " ", 
              RowBox[{"PropertyValue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"G", ",", " ", "E"}], "}"}], ",", " ", 
                "EdgeWeight"}], "]"}]}], "]"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<InvalidEdge:\>\"", ",", "eij"}], "}"}], "]"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "D", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgeDistanceBounds", "[", 
     RowBox[{"G_", ",", " ", "E_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eij", " ", "=", " ", "E"}], ",", " ", "Lij", ",", " ", "Uij",
         ",", " ", "Vij"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eij", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
          RowBox[{"eij", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"eij", " ", "=", " ", 
          RowBox[{
           RowBox[{"eij", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "<->", " ", 
           RowBox[{"eij", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"Vij", " ", "=", " ", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"G", ",", " ", "eij"}], "}"}], ",", " ", 
          "\"\<DistanceBounds\>\""}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"Return", "[", "Vij", "]"}]}]}], "\n", "   ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGProblem", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"eij_:", " ", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"dijEps_:", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Creates", " ", "a", " ", "problem", " ", "P", " ", "such", " ", "that",
        " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "is", " ", "the", " ", 
       "problem", " ", "graph", " ", "and", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}], " ", "is", " ", "a", " ", 
       "problem", " ", "solution"}], ";"}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "d", ",", "dij", ",", "k", ",", "numberOfAtoms", 
        ",", "G", ",", "E", ",", "DijEps"}], "}"}], ",", "\n", "   ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "default", " ", "values"}], " ", "*)"}], "\n", 
      "   ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "eij", "]"}], ">", "0"}], ",", 
         RowBox[{"E", "=", "eij"}], ",", 
         RowBox[{"E", "=", 
          RowBox[{"DGAllEdges", "[", 
           RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], "]"}], ";", "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dijEps", "]"}], ">", "0"}], ",", 
         RowBox[{"DijEps", "=", "dijEps"}], ",", 
         RowBox[{"DijEps", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "unpacks", " ", "the", " ", "edges", " ", "and", " ", "calculate", 
         " ", "distances"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"i", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"j", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"j", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"numberOfAtoms", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"i", ",", " ", "j"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
       "\n", "   ", 
       RowBox[{"G", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"Infinity", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "numberOfAtoms"}], "}"}]}], 
         "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"G", "[", 
             RowBox[{"[", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}]}], "\n", "    ", "]"}], ";", 
       "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"creates", " ", "the", " ", "graph"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"WeightedAdjacencyGraph", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"adds", " ", "distance", " ", "bounds"}], " ", "*)"}], "\n", 
       "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "DijEps", "]"}], "!=", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidInput: eij and dijEps must have the same size\>\"", 
          "]"}]}], "]"}], ";", " ", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "i", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
              RowBox[{"j", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"G", ",", 
               RowBox[{
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", 
             "\"\<DistanceBounds\>\""}], "]"}], "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"DijEps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], "}"}], "*", 
            "dij"}]}]}]}], "\n", "    ", "]"}], ";", "\n", "   ", 
       RowBox[{"Return", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<X\>\"", "\[Rule]", "x"}], ",", 
          RowBox[{"\"\<G\>\"", "\[Rule]", "G"}]}], "|>"}], "]"}]}]}], "\n", 
     "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintGraph", "[", "G_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", "table", ",", "eij", ",", "i", ",", "j", ",", "k", ",", 
        "Lij", ",", "Uij", ",", "Dij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"table", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eij", "=", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "Dij", ",", "Lij", ",", "Uij"}], 
            "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", 
         RowBox[{"table", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\"", ",", 
               "\"\<lij\>\"", ",", "\"\<uij\>\""}], "}"}]}], "}"}]}]}], "]"}],
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintX", "[", "X_", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"X", ",", " ", 
       RowBox[{"TableHeadings", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}], "}"}]}]}], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPrintDistanceMatrix", "[", 
    RowBox[{"X_", ",", "edges_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"E", "=", "edges"}], ",", "table", ",", "i", ",", "j", ",", 
       "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"table", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"j", "=", 
            RowBox[{
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"table", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<i\>\"", ",", "\"\<j\>\"", ",", "\"\<dij\>\""}], 
             "}"}]}], "}"}]}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPrintDistanceMatrix", "[", "X_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "edges", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "=", 
        RowBox[{"DGAllEdges", "[", 
         RowBox[{"Length", "[", "X", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DGPrintDistanceMatrix", "[", 
        RowBox[{"X", ",", "edges"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSaveProblem", "[", 
     RowBox[{"P_", ",", " ", "fname_"}], "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Create", " ", "the", " ", "files", " ", 
       RowBox[{"fname", ".", "csv"}], " ", "and", " ", 
       RowBox[{"fname_xsol", ".", "csv"}], " ", "with"}], ",", " ", 
      "respectively", ",", " ", 
      RowBox[{
      "the", " ", "DG", " ", "constraints", " ", "given", " ", "by", " ", 
       RowBox[{"P", "[", "\"\<G\>\"", "]"}], " ", "and", " ", "one", " ", 
       "associated", " ", "solution", " ", 
       RowBox[{"P", "[", "\"\<X\>\"", "]"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "edges", ",", " ", "fid", ",", " ", "table", ",", " ", "eij", ",", " ",
         "i", ",", " ", "j", ",", " ", "k", ",", " ", "X", ",", " ", "G", ",",
         " ", "Dij", ",", " ", "Lij", ",", " ", "Uij"}], "}"}], ",", "\n", 
      "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "and", " ", "saves", " ", "solution", " ", "table"}], 
       " ", "*)"}], "\n", "   ", 
      RowBox[{
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "\"\<X\>\"", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"P", "[", "\"\<X\>\"", "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "3"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<_xsol.csv\>\""}], "]"}]}], ";", "\n",
        "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving solution file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
           "}"}]}]}], "]"}], ";", "\n", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "creates", " ", "and", " ", "saves", " ", "constraints", " ", 
         "table"}], " ", "*)"}], "\n", "   ", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";", "\n", "   ", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\n", "   ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "5"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"k", " ", "<=", " ", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
         RowBox[{"k", "++"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"eij", " ", "=", " ", 
           RowBox[{"edges", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j"}], "}"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eij", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"eij", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", " ", "Uij"}], "}"}], " ", "=", " ", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"Dij", " ", "=", " ", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", " ", "eij"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{"table", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j", ",", " ", 
             RowBox[{"N", "[", "Dij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Lij", "]"}], ",", " ", 
             RowBox[{"N", "[", "Uij", "]"}]}], "}"}]}]}]}], "\n", "    ", 
        "]"}], ";", "\n", "   ", 
       RowBox[{"fid", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"fname", ",", " ", "\"\<.csv\>\""}], "]"}]}], ";", "\n", 
       "   ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Saving constraints file \>\"", ",", " ", "fid"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"Export", "[", 
        RowBox[{"fid", ",", " ", "table", ",", " ", 
         RowBox[{"TableHeadings", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<I\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<D\>\"", ",", 
            " ", "\"\<L\>\"", ",", " ", "\"\<U\>\""}], "}"}]}]}], "]"}], 
       ";"}]}], "\n", "   ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGraphGetIJD", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "d", ",", "E"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"E", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6980648378091593`*^9, 3.698064854788249*^9}, {
   3.698064906159929*^9, 3.698064909325801*^9}, {3.698064955176897*^9, 
   3.698064986006858*^9}, {3.698065109038253*^9, 3.698065150671424*^9}, {
   3.69806518659297*^9, 3.698065193368532*^9}, {3.6980654001540194`*^9, 
   3.6980654244181046`*^9}, {3.6980655393665404`*^9, 3.698065555128313*^9}, {
   3.6980659794963894`*^9, 3.6980660041682944`*^9}, {3.698066341867444*^9, 
   3.6980663567706394`*^9}, {3.6980665592012296`*^9, 
   3.6980666992461824`*^9}, {3.69806673177922*^9, 3.698066780054468*^9}, {
   3.6980668153666925`*^9, 3.69806686656289*^9}, {3.69806701658186*^9, 
   3.698067018994828*^9}, {3.698067996394244*^9, 3.698068042764223*^9}, {
   3.698068155902776*^9, 3.6980682384338694`*^9}, {3.6980684167789364`*^9, 
   3.6980684192427177`*^9}, 3.6980700592523394`*^9, {3.6980704236155825`*^9, 
   3.6980707185421805`*^9}, {3.6980707610011263`*^9, 3.698070854882349*^9}, {
   3.6980708951572204`*^9, 3.69807095084225*^9}, {3.698070990102256*^9, 
   3.6980710197514257`*^9}, {3.69807108328992*^9, 3.6980710851061954`*^9}, {
   3.698071134927409*^9, 3.6980711366806107`*^9}, {3.6980714781002245`*^9, 
   3.698071690621649*^9}, 3.6980717752567205`*^9, {3.698071824174859*^9, 
   3.698071835213976*^9}, {3.698071886342635*^9, 3.6980718929859667`*^9}, {
   3.698072224182354*^9, 3.6980722489870024`*^9}, {3.698072475433307*^9, 
   3.698072476001685*^9}, {3.698072507681114*^9, 3.6980725095555162`*^9}, {
   3.698072661011775*^9, 3.698072730186365*^9}, {3.698072802711589*^9, 
   3.698072810574417*^9}, {3.6980747631397576`*^9, 3.6980747665630274`*^9}, {
   3.698078742239861*^9, 3.6980787427962303`*^9}, {3.6980788044556255`*^9, 
   3.698078886289402*^9}, 3.698079529602953*^9, {3.698079562825487*^9, 
   3.6980795628394966`*^9}, {3.6980841826292048`*^9, 
   3.6980841893896885`*^9}, {3.6981352488359904`*^9, 3.698135531631914*^9}, {
   3.698135642417054*^9, 3.6981356548828564`*^9}, {3.698135687148699*^9, 
   3.69813569447806*^9}, {3.6982216004241915`*^9, 3.698221739589205*^9}, {
   3.6982218524675703`*^9, 3.698221872903125*^9}, {3.6982219257613215`*^9, 
   3.6982220862061243`*^9}, {3.698222983461506*^9, 3.6982231253506966`*^9}, {
   3.698223285203043*^9, 3.698223303981498*^9}, {3.698232826843835*^9, 
   3.6982329751758366`*^9}, {3.6982330643710318`*^9, 
   3.6982331580395837`*^9}, {3.6982332202168217`*^9, 
   3.6982332369894466`*^9}, {3.6982333007459803`*^9, 
   3.6982333251156435`*^9}, {3.6982334452210298`*^9, 3.69823386830234*^9}, {
   3.698233971233729*^9, 3.6982341107259865`*^9}, {3.698234157087762*^9, 
   3.698234166227824*^9}, {3.6982342008682995`*^9, 3.6982342078039*^9}, {
   3.698240819715974*^9, 3.6982408474903955`*^9}, {3.6983191649781866`*^9, 
   3.698319169648599*^9}, {3.7003057978269615`*^9, 3.7003059781893115`*^9}, {
   3.700306014054883*^9, 3.700306041788701*^9}, {3.7003060781106386`*^9, 
   3.70030613384301*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples:", "Section",
 CellChangeTimes->{{3.6980677784161177`*^9, 3.6980677937658424`*^9}, {
   3.6980678280050044`*^9, 3.6980678367016196`*^9}, 3.7002279528025875`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "complete", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "edges"}], ")"}], " ", "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"N", "[", 
     RowBox[{"DistanceMatrix", "[", "x", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6980678514006224`*^9, {3.6980679034188004`*^9, 3.698067938519929*^9}, {
   3.698070087795181*^9, 3.6980701309785995`*^9}, {3.6980701806363125`*^9, 
   3.6980701917162457`*^9}, {3.6980707240828867`*^9, 3.698070728339967*^9}, {
   3.698071156019414*^9, 3.698071173038784*^9}, {3.698071267726063*^9, 
   3.698071268937364*^9}, {3.698071306434246*^9, 3.6980713142584715`*^9}, {
   3.69807140802295*^9, 3.698071409104385*^9}, {3.698072476108756*^9, 
   3.698072476123766*^9}, 3.6980795296284704`*^9, {3.6980796656206665`*^9, 
   3.698079665626671*^9}, 3.6982328268823624`*^9, 3.698233064406555*^9, {
   3.6982338813554974`*^9, 3.6982339037413445`*^9}, {3.6982342329371486`*^9, 
   3.698234244522332*^9}, {3.7094585337684536`*^9, 3.70945853597015*^9}, {
   3.709458627412224*^9, 3.7094586515435295`*^9}, {3.709458713897605*^9, 
   3.709458716630452*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["5",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["6",
       HoldForm], "2", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["7",
       HoldForm], "2", "5", "1.7320508075688772`", "1.7320508075688772`", 
      "1.7320508075688772`"},
     {
      TagBox["8",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["9",
       HoldForm], "3", "5", "1.`", "1.`", "1.`"},
     {
      TagBox["10",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.70945829250951*^9, {3.7094586390050616`*^9, 3.7094586519164867`*^9}, 
   3.7094587214830985`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "1.`", "1.`", "1.7320508075688772`", "1.4142135623730951`"},
     {"1.`", "0.`", "1.4142135623730951`", "1.4142135623730951`", 
      "1.7320508075688772`"},
     {"1.`", "1.4142135623730951`", "0.`", "1.4142135623730951`", "1.`"},
     {"1.7320508075688772`", "1.4142135623730951`", "1.4142135623730951`", 
      "0.`", "1.`"},
     {"1.4142135623730951`", "1.7320508075688772`", "1.`", "1.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.709458639769741*^9, 3.7094586519299507`*^9}, 
   3.709458721500111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", " ", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", " ", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", " ", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij"}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698070175421965*^9, 3.698070175861757*^9}, {
   3.698070213177312*^9, 3.698070315300525*^9}, {3.6980713539418945`*^9, 
   3.6980713662326765`*^9}, {3.6980714206781745`*^9, 
   3.6980714208693013`*^9}, {3.698072476186808*^9, 3.698072476201317*^9}, 
   3.698079529705022*^9, {3.698079678277562*^9, 3.6980796782830653`*^9}, 
   3.698232826904878*^9, 3.69823306442557*^9, {3.6982342604183755`*^9, 
   3.6982342641588564`*^9}, {3.709304383847331*^9, 3.7093044062435465`*^9}, {
   3.709458699435253*^9, 3.7094587088909597`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.709458292572715*^9, 3.7094587260475035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges", " ", "and", " ", "inexact", " ", "distances"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", " ", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", " ", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", " ", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dijEps", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0.1", ",", " ", "0", ",", " ", "0.2"}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij", ",", " ", "dijEps"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980720809289303`*^9, 3.6980721673125477`*^9}, {
   3.698072476261857*^9, 3.698072476270364*^9}, {3.698074794128626*^9, 
   3.698074795245368*^9}, 3.6980795297355413`*^9, {3.6980796883057127`*^9, 
   3.698079688311717*^9}, 3.698232826928891*^9, 3.698233064442582*^9, 
   3.6982342864456387`*^9, {3.7027178221035633`*^9, 3.702717834985159*^9}, {
   3.7094585529093294`*^9, 3.7094585610341253`*^9}, {3.709458682357025*^9, 
   3.7094586952947807`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "2", "3", "1.4142135623730951`", "1.2727922061357857`", 
      "1.5556349186104048`"},
     {
      TagBox["3",
       HoldForm], "3", "4", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "4", "5", "1.`", "0.8`", "1.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7094582926409197`*^9, 3.7094587296717377`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Saving", " ", "a", " ", "DGProblem"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\n", 
   RowBox[{"DGSaveProblem", "[", 
    RowBox[{
    "P", ",", " ", 
     "\"\<c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_\
problem_small\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980724323259354`*^9, 3.6980724456790857`*^9}, 
   3.6980724763684278`*^9, {3.6980725466797047`*^9, 3.6980726421410055`*^9}, {
   3.6980727654041586`*^9, 3.6980727682410746`*^9}, 3.698078867840667*^9, 
   3.6980795298060875`*^9, {3.6980797088881145`*^9, 3.6980797089077563`*^9}, {
   3.709460730269199*^9, 3.7094607303853207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving solution file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small_xsol.csv\"\>"}],
  SequenceForm[
  "Saving solution file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small_xsol.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.709458292656562*^9, 3.7094587328765116`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saving constraints file \"\>", 
   "\[InvisibleSpace]", \
"\<\"c:\\\\Users\\\\Michael\\\\gitrepos\\\\github\\\\bioinfo\\\\dg_problem_\
small.csv\"\>"}],
  SequenceForm[
  "Saving constraints file ", 
   "c:\\Users\\Michael\\gitrepos\\github\\bioinfo\\dg_problem_small.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.709458292656562*^9, 3.709458732913809*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7094616031728334`*^9, 3.709461603826394*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Instance Creation: MDGP\n",
 StyleBox["DGSetXByHomogeneousCoords, DGRandom3DBackbone, DGRandomMDGP", 
  "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",\nDGSetXByCartesianSystem, DGCalculateProteinAngles, \
DGCalculateProteinAnglesForAtomAtPosition, DGCalculateTorsionAngles", "Text",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "Subchapter",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
   3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
   3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
   3.6980731201361957`*^9, 3.6980731887764435`*^9}, {3.7094577282029247`*^9, 
   3.709457742179528*^9}, {3.7094577821234193`*^9, 3.7094577997823915`*^9}, {
   3.7094588551747*^9, 3.7094588561106615`*^9}, {3.709458991242319*^9, 
   3.709459009930315*^9}, {3.709459044226798*^9, 3.7094590465551*^9}, {
   3.709459092081094*^9, 3.7094591161047726`*^9}, {3.7094592728489027`*^9, 
   3.709459318300932*^9}, {3.709459380565092*^9, 3.7094594002184925`*^9}, {
   3.709459472808541*^9, 3.709459484693895*^9}, {3.7094608059907064`*^9, 
   3.7094608163747168`*^9}, 3.709461595244866*^9, {3.709461724303547*^9, 
   3.709461725003809*^9}, {3.709467326482188*^9, 3.7094673329850245`*^9}}],

Cell[CellGroupData[{

Cell["Main concepts ", "Section",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
  3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
  3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
  3.6980731201361957`*^9, 3.6980731887764435`*^9}, {3.7094577282029247`*^9, 
  3.709457742179528*^9}, {3.7094577821234193`*^9, 3.7094577997823915`*^9}, {
  3.7094588551747*^9, 3.7094588561106615`*^9}, {3.709458991242319*^9, 
  3.709459009930315*^9}, {3.709459044226798*^9, 3.7094590465551*^9}, {
  3.709459092081094*^9, 3.7094591161047726`*^9}, {3.7094592728489027`*^9, 
  3.709459318300932*^9}, {3.709459380565092*^9, 3.7094594002184925`*^9}, {
  3.709459472808541*^9, 3.709459484693895*^9}, {3.709460843120756*^9, 
  3.7094608488423786`*^9}, {3.7094613123021*^9, 3.709461344745573*^9}, {
  3.7094616176655083`*^9, 3.709461755780712*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "- ",
 StyleBox["Protein structure",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
   3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
   3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
   3.6980731201361957`*^9, 3.6980731887764435`*^9}, {3.7094577282029247`*^9, 
   3.709457742179528*^9}, {3.7094577821234193`*^9, 3.7094577997823915`*^9}, {
   3.7094588551747*^9, 3.7094588561106615`*^9}, {3.709458991242319*^9, 
   3.709459009930315*^9}, {3.709459044226798*^9, 3.7094590465551*^9}, {
   3.709459092081094*^9, 3.7094591161047726`*^9}, {3.7094592728489027`*^9, 
   3.709459318300932*^9}, {3.709459380565092*^9, 3.7094594002184925`*^9}, {
   3.709459472808541*^9, 3.709459484693895*^9}, {3.709460843120756*^9, 
   3.7094608488423786`*^9}, {3.7094613123021*^9, 3.709461344745573*^9}, {
   3.7094616176655083`*^9, 3.7094616826222973`*^9}, {3.7094617508923426`*^9, 
   3.709461811737402*^9}, {3.709461851631161*^9, 3.7094618541108217`*^9}, 
   3.7094618940975432`*^9}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQlclWX6/+935j9Tio0zZaKWY2W5fX9TTWjq1DcrU9FGKyu1mUwzA1NT
cwF3RDiCbId9X2TfBATZ9x0RDjuCrCKbCAhCgqJ1/6/nPJzj8QCHsx94uN4v
X76U7TzXw32f5/rcn+u+r1d3Htik9YdJkyYdfhb+2vS97keHDn1//Mu/wn++
3n/4J+39P+5at//Ij9o/Hlq+84/wwdb/mTRp0f83aRL1b4IgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgE4lJCIIgCIIgyDhB1ZkjgsgK
DmMEQRAEQZAxDiZsCDPAkYwgCIIgCDLGwYQNYQY4khEEQRAEQcY4mLAhzABH
MoIgCIIgyBgHEzaEGeBIRhAEQRAEGeNgwoYwAxzJCIIgCIIgYxxM2BBmgCMZ
QRAEQRBkjIMJG8IMcCQjCIIgCIKMcTBhQ5gBjmQEQRAEQZAxDiZsCDPAkYwg
CIIgCDLGwYQNYQY4khEEQRAEQcY4mLAhzABHMoIgCIIgyBgHEzaEGeBIRhAE
QRAEGeNgwoYwAxzJCIIgCIIgYxxM2BBmgCMZQRAEQRBkjIMJG8IMcCQjCIIg
CIKMcTBhQ5gBjmQEQRAEQZAxDiZsCDPAkYwgCIIgCDLGwYQNYQY4khEEQRAE
QcY4mLAhzABHMoIgCIIgyBgHEzaEGeBIRhAEQRAEGeNgwoYwAxzJCIIgCIIg
YxxM2BBmgCMZQRAEQRBkjIMJG8IMcCQjCIIgCIKMcTBhQ5gBjmQEQRAEQZAx
DiZsCDPAkYwgCIIgCDLGwYQNYQY4khEEQRAEQcY4mLAhzABHMoIgCIIgyBgH
EzaEGeBIRhAEQRAEGeNgwoYwAxzJCIIgCIIgYxxM2BBmgCMZQRAEQRBkjIMJ
G8IMcCQjCIIgCDLG6e/vr6ioSErKcnf3c3UNcHOj//jDf0NDr6SkpNTX16v6
GhULJmwIM8CRjCAIMhaAxAkyqxQB4L+Mz6YQZFQKCspcXYP09PScnEKvXClI
S6spKmorLr5dWnq7vPz29eutaWnFly7FWVjYGBkZhYWFMXXWYMKGMAMcyQiC
IKqiq6srK6vAzs4T0iobG29n55DoaE5MTH5sbF5cXJ6ra4CdnQd8yt7eJTv7
Gnyxqq8XQZRKcnLm+fMWVlb+CQm11dUDjY2kpYXcvk3u3CEdHeTuXdLdTXp6
yK+/kr4+8uABfLw3KSkLBIiHhwfzBAgmbAgzwJGMIAiifCAvcnUNYrEsfXxS
MzMb6+oGWltJWxtpbyednSBJyL17pLeX3L8PydVAaWl9SEg0aBBGJlQIMhQY
52Zmzvb24RkZd2pqSF0duXmT3LpFmppGVB/9/eThQ/LoEfntN5KTkwMCxN/f
vx8+yhQwYUOYAY5kBEEQZdLV1eXqGsBiWYWEFFVUDICSaGggjY2kuZnQ6mPY
5dyBAfj3w+TkdHpFFx0QhMEkJl6FCRIWVlFRQW7cINXVpLaWDJ0pQ3W6oPoA
0QHSA+YLY9Q6JmwIM8CRjCAIojSysjgslqWv77WSkoGqKiLmci6tPvgJVUxM
DCRUhYWFqo4GQeQMDO/g4Dg2OyA9vbu0lJSXk6HqY9SZAjr98WPy++/UD4Rp
wpjJggkbwgxwJCMIgigHyKkMDa2Tku6UlZHr10llpZTLuYRbjkLvqFV1TAgi
T+zsPC0sAnNzB4qKSEkJ4c8UcXT6sDMFaG1tZYb6wIQNYQY4khEEQZQA6A7I
qa5dGyguJiMt5/LVhzjLuf39/Q4ODqg+EMYQHBxvbh6UnT2Qn08KCog4M0Uc
nU6Yoj4wYUOYAY5kBEEQRQM5FeiOnJwBSKikWM7lqw+hhArVB8IYsrIKjI0v
pqcP5OaSvDzC4RAQCiOpD3EKFAV1OuEZhaBBVBqlTGDChjADHMkIgiAK5cqV
NHPzoMzMgWvXCL2cy1cfsi/n0uojJSVFlREiiGyAItDT04uJuZedTa5eJUNn
ipg6XcRMAWCawGRRXZSyggkbwgxwJCMIgiiO+vp6Q0Ob2Nh7OTlEnOVcWn1I
tJxLF5Mw5hgfZALi7Bxy8WJpejrJzCSC6mPUmSKRTgfGtU7HhA1hBjiSEQRB
FER/f7+pqZuPz42MDCLjcu6wzQv45OTksNls1QWKINJTWFhobOyZkDCQlkZg
pmRlESGdfjP8yCuQrEz6UDOyl1YfQ2dKb1cSi/tFzxjmtfeNUnY1Tpt9YMKG
MAMcyQiCIAoiISHX0jIyNZUMXc4F9VFX1xN9fCGVLb1iatU04nJud8reedy8
6/P0XhHLuR4eHuN3OReZyFhb+/n63kxOJiPNlHqe9Fgb1TuSTr93N9mQJz3u
3BdlfIzfmYIJG8IMcCQjCIIogv7+fkND65CQdkhzhl3Ora3tjeJJD/atEZsX
dCfvpfOuz9N6R91FO06Xc5EJS2trq4GBbXw8SUwkw6oPmCn1l3nS40rvSGVX
9zp50sMg7/avw5RdCc6UcWoRYsKGMAMcyQiCIIogM7OAzY5KSCBJSQTUx9Dl
3JqanqhjT6THSMu5d5P20XnXZ2m9IpoXEO5y7ng/PhSZaISHZzo4cOLiCH+m
DNXptWFH6Smw5kovf9OH0Ezp7kgx4H7Rnw3zWntH2R4F0oNqlD7ewIQNYQY4
khEEQRSBtbWft/dNEcu5VVU9kTzpYdEw4i7aJ9IjtVf0LlrQHeP6AB9kAmJi
4hYcfC8mhoiYKU+kR3jvSNujutp50sMgr6VnlP3mMVxUGrc0YMKGMAMcyQiC
IHKnq6uLe1goEbGcS0kP3UHpYX5zxOYFdxN50iOld9Qmg/Ci8NKqjh5BxIKe
JpGRJDqaxMYOrz5gptSGPpEeI512dbc99RxPejTfG+a0K8GZUlFRMR5FOiZs
CDPAkYwgCCJ3CgsL2ezkqCgiqD6ElnNv3OiJ4EkPs/oRT7vqSNhP510bk3tH
bV6ANVfIOKK+vt7cPPrKFSI0U4R0enWIDj0FVl/u5Z+1KzRT7t7hSY9zeU3d
o5xKTYt0VUcvMZiwIcwARzKCIIjcCQ3NcnQsE72cW1HRE6EzKD1M60ZsXtAe
/0R6jNq8ICUlZTxWkiATExiutrac8HBCq4+RZkr1JZ70COsd6VTqjrZUfZ70
aOwavc2HkZGRqqOXGEzYEGaAIxlBEETuODiE+fi0i17OvX69ly89TGqHaZ1G
L+e2Jxyg864NSb2jNhmsqKjw8PBQdfQIIhaRkRwHh7LLl0lEBBGh06sv6XKn
gFj8WT+voXP4JoOCM2U8ThNM2BBmgCMZQRBE7piYuHt7d/CXc2n1IZRQlZf3
hB/9X7FTqg83JPbSTQZFLOfW19ePx5wKmZiA9LC3Lw8LI0IzRUin3wjWnSOJ
9LjZMXw7TkGdPh6nCSZsCDPAkYwgCCJ39PT0QkOJ6OXcsrLey0ckkB7/Tuyl
mwyKKCbp63s4HovYkYkJSA87u7KQEEKrj5FmSuWg9PhwVWgv3WRwaNnVnZa0
s69wpcfZvPoOMupMcXf3VnX0EoMJG8IMcCQjCILIHcj/+QnVSMu5paU9YbT0
eMXUqIpqnVZYKFx2VVNDbscefIWWHgm9dJNB0cu5KD2Q8UJkZAFIj0uXiGid
XhnIkx4hvXQ7zqEzpa35ifSovUOdSj1UfQjOFJQeCKIqcCQjCILIHcj/g4PJ
UPUhmFCVlPSEHeJKjzmmRjfISMu5rbGHaOnxaUIvv8X5SMu5vb3oeiDjhsTE
HFvbsmFniqBOrwg8RkuPjy/10k0G+eqDP1PamtL0eNKjpo3wZ8pIOt3CwkbV
0UsMJmwIM8CRjCAIInfY7AAPjw7Ry7nFxb2hPOlx/gYZaTm3JZonPeJ76SaD
IopJqqubx+NyLjIxqaiouHAhJjCQ8NXHsDPlegBPegT30k0Gh+r01sb0Qemh
l1fVSkadKeNRoWPChjADHMkIgiByx8Hhsrt7h+jl3KKintBfBqUHq5IILefy
mxe0RPGkR1wv3WRQxHJuSUk9Sg9kvNDa2mpgYBcQQIKCiAidXiYgPeh2nENn
Suut9DM86XGjlTqVelj1Qc+UyspWe3sXVUcvMZiwIcwARzKCIIjcCQvLsrEp
E1zOHdq8oLCwN4QnPQwryEjLuU086bE+tpduMkirj2GXcxMScpOT01UdPYKI
i6GhjYfHvWFnCl+nl/kPSo+PAnvpJoN89cGfKS186XEmr7KFCM6UoTo9Pv5a
aOgVVYcuMZiwIcwARzKCIIjcKSwsvHAhVvRyLofTe4knPQyuk5GWc5siedIj
ppduMiiimMTNLaCiokLV0SOIuAQEJFpaFvj7E1p9DDtTSn2fSA+6yeBQnd58
M/00T3pcbyKiZ4qdned4nCaYsCHMAEcygiCI3Onq6tLT0/PxGRCxnJuf3xvM
kx7nyonQci5fffBdj3WxvXSTwZGWc9vbB+BF+/v7VR09gogLSAAWy9vPj4jQ
6SW+x2np8WFgL92Oc+hMaeJLj9N55Y2ktnZE9VFd3XX+vJmq45YGTNgQZoAj
GUEQRBFYWvo7ODTwl3OHNi/Iy+sJ+uUftPTQLycjLefeusKTHlG9NTWErz6G
LudmZ1f5+oaqOm4EkYwLFzyGnSl8nV7sw5Me/r10k0FB9UHPlMb6DL70KGsk
gjNFSKcHBiZFRyeqOmhpwIQNYQY4khEEQRRBXl6FkVGoiOXc3NzeoIOD0uNs
qXBCxV/ObbhyhJYemtG91dWilnPNzR0L4XsQZFwBM+XwYWtfX0Krj6Ezpcjn
BC09Vgb00k0Gh+r0W7Xpp2jpcSqvpIE6lXrYmVJbe19PT68LhPo4BBM2hBng
SEYQBFEQhobWLi4dIy3n5ub2BPKkh14JGbqcS6uPm+E86RHVCwnVSMu5xcVt
Fhb2qo23ra2tQQDVXgwyXggLC/vzn186cCBadNmVYDvOkXS64KnUw+p0J6eQ
5ORMVUcsJZiwIcwARzKCIIiCyMgoNDIK5S/nim5eMNJy7tAmg3z1Ibic+847
7/v7X1JmdCAustKzwoPDvVy9jLlYW1gHeQXBn0CvQP4Hne2dA3wC4Curqqq6
u7uVeYXI2EdXV3fy5Mlvvvnm1Kmv2NuPqNOFmgwKqg9xZgqt0+Piys3NHcbv
ZihM2BBmgCMZQRBEcbDZAVZW5aKXc/nqQ+rl3PXrd6ip/UVNTS0YkjZF8uDB
g5KSkvCgcNAULjYuMYEx1+Kv1XBqOus7e1t6f739669tv96/c7+vo6+vs6+/
q/9B94OW2paq4qrs5OxA70D4Lg83j8TERNQgSFdX17Jly2bPnn348GEbG5uX
Xnr7ww+1vb0fgfoYdaaIqdMFZ0pRUdf58xb18J9xCyZsCDPAkYwgCKI4Wltb
9fT03N3vSbGcO7R5wbDLuW5uaX/6058OHTqkpaU1ZcqUPXv2KCKQtra22PBY
0A5eDl65MblNJU1ddV3dN7u7G7rvNd7raerpae7pbaXUB0iP++2U+ui/20+p
j3sPHvY8fNj7cOD+wKO+R9Xl1TERMWw2293dHVSMIi4VGfsUFhaqq6traGiw
WCxbW9vz58///e9/nznzH+bmOSJ0+qgzZSSdfuPGAItlmZ2dr+q4ZQITNoQZ
4EhGEARRKBkZhefO2dPLuSKaF0hRdlVfDynW/eee+9vs2S9fuHAB8nl9ff05
c+asWLFCjhtpGxoaAj0DbcxtEoMSbxXc6rjR0Vndebfm7t3au131XZT0uHWP
Uh8gPUYwPij1AdLjV0p6POp/9PjB4/7e/vKickd7R3t7exQgEw1nZ2fIPTZs
2AAjFnTH4cOHQTJ/8803/f39lpb+oD4k1emiZ8q1a91WVn4hITGqjltWMGFD
mAGOZARBEEUTEJBoZBTq4/No1LIriZZzKyoGIKcyM3OYP3/+K6+8cvbsWQsL
C1NTU5Aes2bNkv20q+7u7suBl0F0pIWkNRc1t19vb69op6RHFU96SGV8gPR4
/PDxbwO//f7498abje7u7iBAqiBHRJgOKOLNmzdPnjz54MGDoDvs7Ozgv2pq
ai4uLvQX0OrjwoVYX98B2cuuYKZcvdrNYlleuhSr2sDlAiZsCDPAkYwgCKIE
aPXh4XFPurKrocu5ubndpqZu9FoundE9//zz+/fvB/VhY2Pz9ddfw9s7P6OT
Ak4uB0RHlHdUY35jW0nbnbI7d8rvgProqOwQNj5u8oyPJsr4oNRHG099dFLq
Y9D46KGMD0p99PPUxyNKfZDfIa4SSERDQkIePHggv1uOjC3q6+tBI8+bN09f
X9/S0tLMzOztt9+ePXu2kEYG9eHpGcViebu7dwipDzELFPk6PSioWE9Pj8Mp
U1XI8gUTNoQZ4EhGEARRDhERGefO2bu4tAzbvECi5dyoqDoWy0romFBTU1N4
SwfRYW5uDurj5MmTdB2LpNcJ+X+gZ6CLpUtZYllrQevtotu3i2+3lfLURwWl
PjqrOmn10VXXJXXZ1W8Dv1Hq4zdKfcCLgvQAATL27Q8QeilcwsLCILP18PCg
/8uApiopPCAu+F3IMS64VzAa//Wvf8EoBd1x4sSJv//975qamiNVBmZmFhoa
2rDZOb6+98XR6UIzJTGxnc0OsLHxbm1tlf3ixwiYsCHMAEcygiCI0qioqICE
yswsxde3T7rmBTk5952c4s+ft4AfNfTnQ5aopqb2zjvvGBoaWltbW1hYQIK3
aNEi8Q/2aWtrs7GwibwY2ZDT0JLfAtKjtZBSH20lbZT64Bofci+7otQHF9r+
yIDIxxhwY21tbSFVnjFjBjw3NXkcPnxYS0trHRf6U8uWLTty5Ahk2qq+ZLGA
gQFxbdmyZeHChXDxK1asGBrXggUL6Lh+/PFH0FlSbCOiT9D99ttvQXdYWVlp
a2uDDDl+/Ljo7+rv7w8MTAIRZGmZ7eXVIY5Oz8wcCA2tt7GJYLEss7I40t6V
MQombAgzwJGMIAiiTPgJFZud7e/fJ37zgvT0+66uGfCNly7FiehNAJnh0qVL
Z8+efeLECVAfDg4On3zyydSpU1PgJ45GeVG5sbFxRnBG09Wm5mvNzXnNLRye
+ii+rcCyK67xQQPax93dPRJSzDEAZOYsFgvScnV19Z07d9rZ2cXGxt64caO6
urq2thY+29DQ0NjY2Nzc3NraCld+8+bNhIQEHR0dSNSnT5++a9cucW678oFB
4u3tvXz5cojr66+/vnDhgui42tvbIS7QsxAX7ayJqa3oE3RnzZr1888/m5mZ
ge74+OOPQR2LL83gJ0REpJuYuBsZeVlbZ3t43PT3b79y5RF/psTE9F2+3O7p
WWpnlwizw8bGh8MpH7/NO0SACRvCDHAkIwiCKB9IqPz9kyFTMjOLdnauCgi4
N9JybkxMt7//DXPzIPji4OA4Mdecd+/ePXny5B07dkCyZ29v//3330+ZMuXU
qVMivgV0h42ZDSeC05jd2JjT2JRLqY+W/BZafYhfdiWj8UG4FV/uXFS49QPS
b21tbXhEfvXVV66urkVFRSUlJWVlZdevX6+srKyqqqqpqamrqwOtcevWraam
ppaWltu3b9+5c6ejo+Pu3bvd3d2QyYNsAQGioaExdkwQGD9wVaA41q5dC2ND
urhsbW3feOONefPmeXl5iXgt+gTdt99+mzvOzUDgLFiwAHScdM01QAQlJuZ4
ekZZWgboCcBiWTk6hoGch5eT48FuYxBM2BBmgCMZQRBEVfT390O+5OERY2ho
zfVBoszNo62skqytky0soqysIunMCtIt+DJJF3KDgoLU1NRWr15Nq48zZ85A
Grx+/fph07OywjLQHWUxZbcyb93KukVJj6tNlPpQmvHx+InxQQTUh4x3WAro
5Bwejtu3b4+JicnLy+NwOHD/i4uLS0tLy8vLKyoqRBsEnZ2d8EPu3bvX29t7
//59b29vyNJXrVql8s0gIBlAC6xZswYkg7zimjt37rDOjpOTE9zDdevWGRkZ
mZub6+rqwvDbunUrs9WBQsGEDWEGOJIRBEHGApCS1XPJycmBhJD+t4x5Gvyc
BQsWvPbaa5D+2dnZgQZ55513Fi5cKJQDV1VVGRsbl0WXNaQ3NGQ0UNJDNuND
lv3mfGj1oeTKK8iiFy1aBMl5YGBgdnb21atXr127lp+fX1BQIIVB0NPT8+uv
v/b19UHeTssZ0JLKDIcP/MaXL1++ePFiDw8POcYFvyMYV9OmTTtw4AB/rNLn
rT377LN79uyBcQW649tvv4XYzczMVBI7Y8CEDWEGOJIRBEEYDP/c3aNHj0KW
6Ozs/Pnnn0+dOtXV1ZX+AmpfublNdlD2zdSbN9NugvoYxvhQ+n5zGlp9JCYm
Kude2drawjPxzJkzaWlpGRkZWVlZIANzc3NlNwj6+/sfPnwI366hofHWW28p
eeXfx8dHXV199+7dCooLvnLVqlVz586lJfP8+fNfffXVkydPgu4AwbVs2TIY
byp3fBgAJmwIM8CRjCAIwnjoc3e/+eYbyK5Bfejq6qqpqe3ZswdyexcblySv
pLqkuvqU+kH1kUGpj0HjQ8n7zZ8uuyJcZaScE3e1tbUXLVrk5eWVnJycmpqa
np6emZkpX4NgYGAAPrhr165p06YpLRWH5H/mzJmWlpYKjevx48cGBgYwqJ55
5hnQGoaGhhcuXDh16tTLL78MdxWLrOQCJmwIM8CRjCAIMhGAXHfq1KlLly4F
GeLk5AR/z507d9Ebi9xN3WsTausS6+qT62n1ofqyq6eBTBjUB6S7irs5oDuW
L18eHh6ekJCQlJSUkpKiIIPg0aNHv/32G4SjHPUBcc2aNevixYvKicvOzg6S
ijfffBN0x969e6dMmQIXoOgYJw6YsCHMAEcygiDIBAEyxnffffell17S19cH
9bF//354BGS4Z9TG11LqI4lSH4oqu5LB+AAiIyN9fX0VdFu0tLRAd4SGhsbG
xsbHxycmJiraIPj99989PDwUrT4grkWLFik5Ll1dXRhUCxYsUFNTc3FxUVx0
ExBM2BBmgCMZQRBkQrF79+4pU6bs3Llz1ouz9n6+tya2piauBtRHXWKdmGVX
St5vTribPhRUdgX5+bJlyy5duhQVFRUTExMXF6ccgwBemvY+FFSM5OPjM2vW
LEj+lR/Xp59++oc//CEgIEARcU1kMGFDmAGOZARBkIlGUFDQlGenvPiXF4uC
iqpjqmnpoXDjQ4b95oTb6Nze3l6+nT7o/NzT0zMiIiIyMjI6OlqZBgFcwPbt
29966y05RkQD+gIe7o6OjqqK6/z583PnzsUtHvIFEzaEGeBIRiYy/ONMaVR9
OQiiJCBpPH7ouM9Zn6qoquroaimMD+XvNwd8fX0zMjLkdRMKCwtnzpzJZrPD
wsLCw8OvXLmifIMAAOkh3xN34eXU1dWPHj2q2rg+4yLHuBBM2BBmgCMZmVDQ
HdwuXYq1s/OEx/358xaurkHcPwF2dh7wESMjIz+/IHgc43odwmBSY1PDHcJv
RNyoiqyi1EcMT32Mtf3mT6sPSIBBKcjrJmhqau7Zs+fSpUuhoaGXL19WlUEA
70jwIJbjpg9tbe0NGzaoPC54C502bdrYaePOADBhQ5gBjmRkggDPQVAcoDWs
rf3Cwwvy89tu3yZ37pCODnL3LunuJj095NdfSX19Z15epa9vKGgQDw8PPIse
YR6QItqY2XACOSA9blyh1Ed1dPV4Kbtyd3eH3Fj2m+Dt7b148WIvL6/g4OCQ
kBDVGgR6enorV66UPSjCLbWit3iMhbjg1RW3mWUCggkbwgxwJCOMBx58wcFx
LJall1daScn9mzfJrVukqYm0tBBB9XHvHuntJffvk/5+8vAh/PthQUEZmwvW
YiFMgnOV42/tXxFWURleOag+VFF2JZ3xAboD1IeMdwDeExYtWnTu3LmAgICg
oCCVGwTA3LlzPTw8ZIyLcK2c3bt3j524QFKpqoE788CEDWEGOJIRZsPhlIPo
uHgxvaDgfnU1qa0lICMaGkhjI2luJq2tpK2NtLeTzk7IRoTVx6NH5LffqHII
IyMjf3//fvgogox/vB290zzSKkIrKi9X0upDPmVXyjI+2Gx2G8xbWe6At/fH
H3/s6+sL8zowMFB8g+BapO3ZkwcPrps+6Qnva542PW0fk19dLYtBALoD1Ics
QRGu5TF79myQZpLGpTjjA14FjQ95gQkbwgxwJCMMJjg4ztDQOjn5Tnk5qagg
N24QUB91dWQk44NfdtXXRx48IAMD5PFj8vvv1A4ReJRDwgMPXFXHhCAy0d3d
bWtqe/3S9esh1ynj43LlsGVXY3m/eWRkZGJioiw3YfHixXp6ej4+Pn5+fmIa
BNnx7tbaSwQlhzDLtQ9eyrlRWyuL8SHjzghNTU0tLS2J4lKO8SHHHToTGUzY
EGaAIxlhJCAWbG09LSwC8/IelZSQsjJy/TqprCRVVaSmZnj1IcL4oElJSTEy
MkL1gYxrODmcy3aXy4PLKekhm/HRlnNuMz/x/sAqrqFj6H7z7rYcn6+mUl/w
imHwnV657DeHTNje3l7qOwDpPUgPT09Pb29vMY2PjDC9795W48b5+pLd5064
xebyDILy3AAn1k8/akymPjn3xMWam7Ls+JDlSCh4UbgEZ2dn8eMaanxwOFkJ
7ueMDL/5XF1QVe3eb2xuGV8m9Y4P2Q0dhGDChjAFHMkII7G19TY3D7p6daCw
kBQXk9JSImh8SFR2RRsfNHTxFaoPZPwS6BaY6pZKSY/RjI9R95s/JT0mvbne
t2po2RVID+8vedKjrVdeZVdsNru7u1u6O6Ctrb1t27aLFy96eXmJYxCkJF9k
rX+RCmH6+v+4RGfm5Aw1CCrL4y4dXjJZ/bhHdZ3UBgGtHaSuTbKzs/vyyy/F
j2uI8ZGREah/QFOEsaM+5we2d26dFMaHovu2TxAwYUOYAY5khHkEB8eD7sjK
GsjLIxwOGao+RjI+RJdd0eTk5ID6wH0fyDjF2NiY48MpDyqn1UdFaIXU+83b
ss99LZiZrjAMqLgjVHbVfZsvPQyC23rkVXYVEhIi9TlXM2fONDEx8fDwEMf4
iI+PDD37f9x0/L0trgkidkZcv16QbuMQeqNWxh4fUm82X7FixcmTJ8WMS8j4
yMxMirH+bAn9e5y+8RsDtlN8AS+u0uJISyu9dcu5n/zLqajaW7ckjWv79u24
2Vx2MGFDmAGOZIRh5OdfNzS0SUsbuHqVXLsG/yUFBaSoiIhTdiV6vzkfeIjL
5SwaBFEykAy7WriW+peWBZYNqg8Zyq7asvSfkh6TFi2zL2ipuiNYdtV1O9uL
Lz1u94ho8yGR8QESQLrtHqAUFi9e7Orq6u7uLo5BkBRh/NNbVKmV2n9srqSn
K3pnBJvNhixdirgg84eLtLOzEzMu4Z0sl498xtVXap8es4nOHTaumiyH0xtf
+MvJqJqGBknjgvdMeZ0ePJHBhA1hBjiSESYBz18Wyyo8vD0zk2Rnk9xcMpLx
IVHZlZDx0d/fDxlCTk6OSmNFEImBTDLYKrjUr7QsoIxSH7KVXd3mSY+pWidO
LJ3MNz74ZVcgPe62Pi095LTfHDSUr6+vFHcAkvNNmza5uLi4ubmJYxAk2H41
m7r6hWssIpVwJBS8hHTbIuAbly5dKn5cgsZHeqqXMX1ml8Yh29RrIuKqq0l0
tEmsvnlT0rhoZSRFXIggeA8RZoAjGWESgYFJDg5ZaWkkI4NkZREQB8OqD9H7
zcUpu4KkAsuukHFHdkJ2jH1MiW8JZXwElElRdiVofLRm8qTHsUiOzQfcfcnq
r17IETQ+7rY8kR5Brffk1d+8u7vb2NhYijugpaW1Z88eZ2dncYyP6OgQz1/+
wQ3xs0Mhqco5Ekq6hzKLxfrPf/4jZlxPGx/xCU7faNDyyiZBcXGBpAJ9JEVo
CB9M2BBmgCMZYQxdXV2Ghjbx8QOpqSQ9ndDGh2DZ1a3a9FOvUI/YP5/KK2kY
Rn20tpJ79+6ln51HfdE8U89eUWVX/v7++CRFxhfhfuHJTsklPiWlfqWDZVcy
GB8C0iO+udT7LG18zNhpkNvCNz7utmQ9JT3k1+ZDOumxdu3aM2fOODk5iWMQ
REUF2f84l7r42T+ZJaUqpxfGW2+9JcUbC0iqn376Scy4BI2PxMTLrru5MU7f
YZCYrbi4Vq5ciXWqMoIJG8IMcCQjjCEgINHJiZOYSJKTCV99CBofDbUZfOlR
fHP4squurp40nvTwuPek7Gqo8QEPXDQ+kPFFkFtQlmsWSA9ZjA/+fvMn0kM3
/mZ5Y633p7TxMed4XFX9oPHR2SwgPVq65djmw97eXorGgvQec0dHR3EMgqgo
p7Mf/3VQeiSmKKcXBqToUkgPkFSnT58WMy5B4yMpwf7YEu65weuMg7KyFBeX
HhdJ40IEwYQNYQY4khFmABIAnmsREX0JCSQpicCje2jZ1c3qjJO09DiZV1Q/
fNkVJT30uNLjFUp6iC678vDwwBMjkXFEoHNgpktmsXfxU8aHtPvNWzIEpUdL
W00k+z2e8XGVa3yU3elsyvTcxJMezd13a6j+5nIpu/L19W1oaJD0DtB7sR0c
HMQxCCIjnfQGpcdu04Rk5TQB3759uxQN+NasWXPq1Ckx4xI0PpLjTfdwd7P8
da9HkiLjQukhO5iwIcwARzLCDOD5aGISHBtL4uOJkPHBL7uqF5AeBbXDn3Z1
925PKk96uHePctoVvCg801UaN4JIwKD08CoeND5k228O0uMr+sDVY3H1pc0t
pY31oTve435k8k9h12+2g/oQkB7nApu6BvubS1J2NZLxsXHjxn/84x8aXCZJ
gq2trb29vTgGQUSEn80P3LeM2dqm8UnKaQK+atUqicLhs2/fPjHjEjQ+kgMO
ruV++1/3uCcqMi4DAwOUHjKCCRvCDHAkI8wgICDZza0qOpoIqQ9B46O+KuME
T3pwaoY/7aqjoyflzKD0cOt+ctrVsMZHV1cXPkyRcUSgU2Cmc2aRZxFtfMhY
dtWSzpMeunH1JVR/89vVKR6bnud+bOPB5Oa2kraOxqekR2d1p7yMjzfeeGPd
unUHuVhYWDg4ODhycXJycubiwgWScDcu7lzgQmxsbMQ0Pi5fDnTbT28z33Aw
IF5EE3A5GgQgPSA0Oy4gJRy4jBoaXKKOjo74hg7f+Ej050sPtwRFxmVoaIjv
ljKCCRvCDHAkI8zAxMTNz689KorExJC4ODJs2VXtjcxB6XEiL79m+DYfgtLD
tWv0067YbDY8f1UcPIKIB0iPDKeMootFxV7FspddtaQ+JT2acpueMj62XMyp
bxeWHlWdUhgfw+43n/favG3btpmbm4PuYHOx5GJlZWXNxYaLra0tncbDV4JI
gQuBT4lvfESyv+SWI83/5ELoCE3A5WwQfPLJJ/PmzTPnMmxoZ8+e3b9//wEu
B3lMnTpVS0tL/Lj4xkd8zIXddMHVT67xiowLpYfsYMKGMAMcyQgz4G70IJGR
ZKjxwS+7AulxnCc9rlUN32Twzp2eZJ70cOkavcmgv78/NvhAxguU9HDMKPQo
pIyPEcquxDc+mlPP8qRHbH1xU9NVrvFRkx/64wzuh1dvC69tv8WXHvqBjXc7
bnTQxofs+81fe/U1SUuS/vnPf8LfkMCLb3xEBhrs+n/cloJbzIPj4pRgfLz2
2ihxPffcc8ueZvny5TNnzty7d6/4cfGNj9ho66Ma3G3ma1l+qamKi4vFYqH0
kBFM2BBmgCMZYQDcw6Y8L18mw6oPvvFRU8mTHsfycm8M32Swra0n6fSg9HDu
fKrJ4LDGRwoXVd8ABBGLQDee9JCH8dEkID3qipsacxqbcrnqI+Hghzzj42p9
xkWe9Ai4dbejsqOzqlMuZVdsNru7u1vSO7B48WJIgMU3PsLCAn2Ovc/tt7f8
K9twEcZHXl5mnLmlX2GJjAbB6tWrpXhL0dTUPH78uESGDm18REUFOdAHCE//
9mxkiuIMnaNHj6L0kBFM2BBmgCMZYQD19fWWlpFhYSQ8nFy5QkYqu6quyDw2
R+wV0ldMnTpGbzKI0gMZR8QGx8bZxhW6F4o2PsTcb/5EeujE1hU2UtLjKlV2
1VpdHH9kPvczb67ziReUHu0V7ZTxIY+yK6n7ehw7dkwi4yMi3O706he5yfma
LVZBMfHxQ42Pa1dDvX9eoqb+i0NhiYwGwbx586Q4N+/w4cPfffedRHHxjI/w
COstb1PhzV9jFqE4Q2fNmjX4VikjmLAhzABHMsIA4NnHZkeGhpKRjA+67Krq
usTSo7X1KeNjaNlVcnI6Pk+R8UJ2UnaUdVSBWwGoj6KLRTLuN29K4UuPmNpC
qr85rT6arzW3Zp77L1119YHWvg086dHQ2X69vaOyQ5ayK9r4aGtsc7R3lOIO
QIq+bds2S0tLyXZ8eOpu5ZZdTZr0msbO40esg+KTkmiDIDve3eL0ru/e4X72
5UMOnGK+QVBeXlIUaWl1cKk6/Zay4qdD4fn1jY2tzckem5+nOr+zr7Z1dgoa
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
xUzRY2MvOWnN5W7x+O5cTLoSeny89dZb0p3bz2Kx/vvf/0I2JbaqemJ8pKXF
XzH8gGt3vL7kZ/eI/IKhcVVVlVwN+vGLyUu+jbghRVyQHbHZbCniQiSClh72
9vYoPYZCNzr/7rvvYJoYGhrCcBc8e0177dq9c+eSs2fJuXMwnYiREWV80GVX
VlZU2ZWk+81BfUi33xzSEfH2m/OB+QVvHcq4iU+D0gNhBtKNZFNTt6CgFsFZ
Lmh81NX1RB+nWpFOesXUsnHEsqvu5L2vUF/04edpvXyrc9iyK1nqsRFEhdid
t0uyTOI4cwpcCyj14VEo9X7zm9eqCyxo6bF03Y9frKCNDx3K+BAsu+rM50mP
0yA95NbmA9JpUAFS3IGZM2caGRmJmaLHx9roaKhRV6/J8ktNVUKPjwMHDkjX
AVxTU/PYsWMuLi5SGB+ZoUe4dVbT5+67mJCbKyKuumw3m/hKKeIC3SFLLRki
Jig9RMNXHzBNtLS0+I3OLU6e/OSvf+07coScOUP09YmBAWV8GBsPGh/i7DcH
9aGi/eaEuygK0kP5O6pQeiDMQIqRnJ9fYWp6iW9v0sWVguqjpqYn6tig9GDf
GrHsqktAeogou+rv74fUZSwcqY0gkqKrq5vvmJ/vlE8ZHzKWXeVW8aTHim2B
CW5fPM/998YD8bcE23x05vGlR0rrrU7x23yINj4SuEgaPl3R5OTkJGaKHh91
Yfds6uL/+pNrXJIympvDJUl3FC1cpJmZmbOzs6TGR3JyqNtu7tvj9B2spKsK
OuoKbp1KVmUnGrT0sLOzW7NmDUqPYYG5P2XKlFOnTsFc09bWBvUBH4Hhf+v7
7wncsdOnCWj/c+eosisjI6rsatj95qA+xtJ+c8I7Ik/Jvc5ReiDMQIqRbG3t
5+19k7+va2jZVXV1TyRPelg0DFN2RRsfd5P20dLjs7Re0WVXMLtxxwcy7qC3
SOTZ54H64DhzZCy7qr9axTHnS4/KmqAdXONj0uSv3DNp44OrPjqEpIec+puX
lZWBgpD0DkBi9tFHHzk6OoqZosf7HlgziZYezrFKaW4udYoOF+ng4CC+quIb
H6lJZnu58krtW/uorCxaVSnC0MEsRQkISo/jx4+r+nLGKLT6OH36NEz/Tz75
5C9//GPURx8RXV0Cd+zUKcr4OHuWMj5YrMH95qA+5LjfHJIS6fabg/oYeb85
4WYmMh7QLSk4qRFmIOlIpjdfREY+4tub/FnONz6qqp5ID/ObI552dTeRJz1S
egWtzqHGR2trK9YtI+OO2tpaF5bLNbtreQ55lPEhS9kVSI+cGwLSo6rpeu6l
H2Zw//vJttAqvvHRcY0nPU6ltDTIrb85xCKF9IBH88qVK8VP0eN89q+mpcdu
55ghp9EqwviA1F2Kpzlc1bvvvmtvby++quIbHymeu96lQpy9xPCyQnt8SL2D
HhEfQelx8OBBVV/O2OXUqVOgPqhOH9Onv/nss+TwYXL0KDl2jJw4MWh86OvL
Z7855CXK2m8OfMZFabcRpQfCDCQdyfBktLRMoRcY+PamUNnVjRs9EbpPpMdI
+807EvfT0mNjSu+op11hjw9k3EFJDwOXa7bXaONDqOxKUuOjLvsGx+yJ9GjI
aGiO2b9yiPHR/kR6JLfUy62/eV1N3eHDh1MkZPv27Zs2bRI/RY++YqRNF1xp
O0UP14ZPEcYHvftVTPS40JtMIeGUwvhIsv+aG+I/v3ZOElRVco8LrlBwVy+i
CGjpYWtri9JjVLZs2TJt2jQY+o3//S/55Rdy5AjR0aGMD7rsSrr95qA+VLrf
nO7gqbSJhtIDYQaSjmR//yRX1yq6slLQ+BAsu6qsfCI9TOuGOe2KXmnoSOBJ
j+TeUU+7gkc5PJ0VcgsQRDFQTsEZJ5Ae8jE+siv50uNbkB7pDU3lBTGH5nM/
8uY6z+t0f/P23HObedKjua5drP7mYpRd1dfUw8/8fwL8gwf8G7KvhUNYtGjR
lClTPvjgA/FT9MgI9qF/creZrznnxd1dogTjQzCuxYsXLxiCYFBr16794osv
3nzzzVmzZkHCKanxERNzJeTMe5No6eGUoNDm5itXrkTpoWhQekjE/BdeOPf6
6+Tnnwncq0OHKONDV5cyPuiyq1H3m4P6kON+c1AfMu83B/T09JS2rwqlB8IM
JB3J9vaXfX076AUGIXuTb3xUVPRE6PCkR+2ITQbbEw7Q0mNDUq/gHq9hjQ94
h8ftHsj4gpIep51ybXJHMj4k2m9em1WZz5ceAVVUk8GMhqZU/f/QVVcfsKOr
b4P6aL/Kkx4nk5trqf7mHZVyKLsq5hTDz7S2traxsbHlAoLCnosDF8jAnbg4
cwGVAdk4ZGXLly8XP0UPD/ez2cl9V5j+n9PhCUPb8CnC+ODHJX5oW7duBekB
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
NSsrS4SjffnyZXJYcqJf4qXIS9LxmzeWNcJvTIpKgl8t5lRLR5MmTYLYOzY2
VtHucrDk1NXVt23bFhISsnfv3hEjRojDC/v37//888+DgoLi4+MnT56sp6cn
1E8D8AEgCtq//6flyxdMmrRo4kTNfv2owfXXQ4bYTp48e+rUvVu2wPXSk6mQ
FvS4cePXlNVfElixtvxvEj3uHNpv6pax5fiz2w/wlx6/3L+euF4fPvWvrSV1
vysceqz9+uumr77CEx9Tp0rEb870bPEhEh9K/aftqE/Lwc9oZ79525H1jFm9
WGdqcdqJSx39zeF0EokPuvzmcCL//lvRblNIiiy02pHkQ2Ku5JKSCuCO0tI3
RMKcSh98Eh98yq4IkfRB7KA7evRoCOSAO3x8fMaOHQv/K2YFy8Wii56enrmM
3CtxVyTnN39Y8bAwtRB+0aXSS7yqyHqgIE5WTPQAVVdXDxkyhNiu2cHBYdSo
UeLE8/b29oMHDwZYTkxMnDJlSrf0AbiRnJy81tp6SN++8GeFoWHwsmXHnZxu
JSbeOnToNwjYKIUoDwoLrx8/fj0nJ8LJyWnJEsAQOF96Q4f+uHIlMEuPwhBa
0KO0FGvIIxIfmp/uqi5s5On1+O1+zlYNJaVpiVmvFA493ObNyxo8GJs0CU98
0OU3B/qg+s2jDz7fP5qgDyUDu/AN+xvST7ITH1m7zu00XklkoTRsQtOKO/U3
z8tjl12J5jcnzyXFb95UXa2trS3rWUdCkpIU8KGMJJcSZyXX1tYDd5w794aI
AYiEOVmuy6fsilfig9InCqePBQsWwOHNnj3b29sbgoRdu3b179/f2tqalrAK
fkhOag7Th3k65HRNQg29fvMHFx6UpJcw/ZgZSRk9KggURIAeu3fvjomJUcy7
XGZmJtAHAGN4eDjQx0yI3MTQxIkTR4wYAZMZEREBMRLXVoOwQmIYjFn6+Lv6
HZMm5WzZ8hDCcY5CFDIeoxaikPv/tF9RtQUFIXv3Thg7Fn6Ura1tD9lfiy70
qL/1c8QC1ic09jhda+OPHoqZ9WAyme6ffYaZmeH0IZrfHOijW795qHdL8Ewn
/Q+7VrqxNX5lWvIZdpsPsr951zMqtt88JzbWDngKCUkxpJgPZST5k8gr+cWL
F8AdeXm/kSFS18SHsGVX1MQH6Kuvvvr888/d3d0hQli2bJkk2rQ9fPgQAATi
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
AJgR6zOmoGICSbYOSnngav5f3w+Ybyf/d7v/LJiFXQ/9kKHHr//3f6QvXuzl
RW18lD7fnIw+1PPNt/Wmi+t2X/hq+3b6fnPGfPOD2/KXNpJ/t92SPy4UHzpU
nJBARR8nTpiSb05GH+z55tWrV08nvwwAAMAcWJ8xBRUTSLJ1UPo081nFIdMW
iOR7H982uByjG3ocez1x5paOob1tqK/4zFxQlFxhQ4/ExMSw6tWLW7emNj6+
/55zvjkZfejPN18/6XJwdXkg2DNh617F/ebM+eZ/TlvbVH6loHvEnQuXiw8c
oDY+jhyhjl0ZzDcnow8u+ebWN44AAPAegUkYWAeQZOuAlwpX0fmeP8gX0AU+
w/sXadzrcSy/V297tZNZFT70CLazK/bwKP7uO2rjowzyzYuWtJAfo7Jz6fvr
azLE+O03Ot+cjD5U+eb712X/LJYPS/3Bvx2n7zc/eJDe+OA13/xJWpr1jSMA
ALxHYBIG1gEk2TrgJfSYWTx0fsx/5aGFuM7xdVqhR/cW3dtunTI2e94M7/9X
wUOPly9fUo1q1Yra+GjTpkzyzddPuhwk3/gQ1Ok8YsXrbdu0883jV//1W+s+
8gsgq3da+PjPs/T95gcOUMeuFBsffOWbFxZePHasDdlSAAAAZsL6jCmomECS
rQNeQo9RxaPW5Hv7y5fRK/WfMKooVjfX40zRNIQeJPWrVs1zcaE3PrTyzcno
w7R8czL6UM833zTmhP9HAsXeR8DIreOWv46LozY+Nq96vSJkR79PFdtQ1X1n
pBz+U/1+c2rjQ3Hsir9883WLFvUloycAAABmwiqNKaiAQJKtA75CjznFI6Po
jQ9X50sbEXqwMdDZ+Vq9esUtW1LRR9nlm6+fem/sV56sFclqNuk5987+k/Q1
H6r7zffv5z3ffExwcAQZEwEAADATVmlMQQUEkmwd8BV6jCse93t2Ky/FxseE
OdOKNyH0YGTl+PG/16pV7O5OH7sqo3xzxf3mvw872ttrYZsqJTGHnc/0ceGH
V+7TuN88Lo6+33zfPt7zzVt88w0q6wIAgBmxSmMKKiCQZOuAx9Djt+Kh0yfI
y1gJWrrfj0PowciePXv6ikTFzZvTGx/G5JuT0Ydp95svXFgcFVW8eHHx0qXM
+eZa95vrzzcnow+O+eZvsrKschABAOA9AvMwsA4gydYBj6HHpOJJm++7fStQ
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
uHdmG0T2Vut/LC9IXqbE/D63w7D28gLFVMgWFrz6RGIeu1jK4hbWFao3R17c
WK7gpn1EPzbjzuEp8/q7OnUa4h8aGjbY1ys0egWVbkPIslb/0se+rtBNPG5d
LJer5EuWtaVvss/9PDfEvX1b544tazt4Dfb/ZffOLK0AUrFS7agSSIVy6T15
lZd9dsHycS29xWJHz8Zisa/7uOXzz2Yxul+KNypM/z1mnLtfzZq1+wz1nbj7
pPYSSsljf5vk1aOhQ23fzi4uP3jN2rRW/SipZmfS76lYqNHXz9RSjHqFwE4d
HVyEdUukrgyGwKjmGEQ+gWi9OXUWWWfrVpK1a/cvAX08HcUubVzELk5BU0Zs
U/kkKuRLUmqTYbt2X1KTidbTykjO5Rq3YaZ3J6cAz1GTQkf4h3iNGXHwATV9
Sa+fimzaumblah0nh/6p1ct00/o3Ifuwo3P7zm1Gr45OyZWpX4okUO8Q0vwl
nlgdPMS3kUu/CQMGdBveo63/L0eTKHkreHKs/2B3W6HLjz5Lz3K5q6hkvU4q
uXEhts/AAFc/1watHRo69pnG1M8akG7G+a2jZg1s3NDBpcF3fi4/DAlefTJJ
Tf7l2qqjfWXbIo0Xa17DWewb5N5D+8XUvmqUvutpiGkfKTr/0pwv6GNLskc3
dw8dFeDq6+TkJRbXC2HsfG2LryaH2h8p5F/uRcjnQLWC2KRh8mv0gdo6v4mj
YFwnl0o1DGk9B8i3vbBtxLQQsUNDH6cWvq4hk8fuv5Mlk6rltDL4tAYlnNMr
yPJOJkR3ljfKy6lFN/ceYfKukGm+A7XoXTbyxq85yE2ObOp35DE1b2zqFejh
4kvP46FsXcSlM0kBiNs2r4Pa3Lh2XYnbyWK+yXBy/9jwIGexuJmT0/fN/X70
+/UY9XwNP1An+740kxj1ZPtqnl1VpqEH5Spr7TlSwrwrKnBU9y9q1GnrHNi7
TdfZ4UdS1bbu9Oi1AtOUyFwU5pwIkN+H/q3TggN772amaPLo0ZVbZ2IPx3Tr
21ixPcElEx8AM1GqMoAAvAe8yDq/e29yGjlLUwXGy/a3SlMdC4D3naLCx8fi
Em9cffQoJS2XU944v++w8+K9W/fvm+8d3hNMq+lUmHJx58Wk9IyUlIysUkSv
wCjouxQNVlslo91Z8rMoOhX8ALA8EHoAwB8IPUDpKEWFTwC4AWGzfFShR7tV
Cfp3q5VVpHitYg1AmYDQAwD+QOgBSse/SfvGdZkUYm9j4+UycT3no5sAGA9C
j/cAyV97WsnTt791Wnia5awsIXtxZFeYvMKJbj1SACwPhB4A8AdCD8ALBdk7
mtsLBMLOG7nU1gaACwg93guIp2l7eytSOYRuIb7z1kbtS4yTc/Dg1oTtU5dP
c++guN/cJ3x80lOsVgBLR1XKyW7w+NTXOBULQGlQ1Wap1HfrWZyCBiYiK8xJ
ODijjkhgbzf+KNNFDwCUHlWVtvrO6++yF34BFgEhSb1zPHLpNL+Q7+V1LWhE
VMGWTkMCZq9ffiqVvdwoABaCoVJOAADjMao2CwBs5KftGRgYGDh0aJeRXV3c
h0wOnrdu8dH78CVAGWCwShsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAgIIiyZ2FQ7bdfWXu9wAAAAAAqED8m7R3TPcJfV2dnJy6+tSw6b0r
xdxvVC5IC26MH/pNZZsOkdHZ/5j7ZTQgCvavD3aoPSY+SVqqh2wc8ImwbreA
hMeFRv1FftqegeGjPDs5ObVr96W7zeCIJzLTf/49IO3E+GoC+wmLc9//ZvKp
wparF6Zi1hYR2bdimrsJ69WOOHZLSpT3r5fx3P5v6uJJIzsNbu/s6tqgY6Pq
TnGPeX08kEOJkHvNVlMiH7w196sYCy8mTIfyslDW6xFBYcsHomDfss5rDhX8
a743MKvdMRIi696hHX/uHz2hdWUBSZ8/rEbR9HI3IVREtVdg98nyFD4nyFJC
3DkV/hn1Zo5TovNMFl1p3oHWdvLmCTxWJhj1mH9e3N17+uiv60d/Ku+XoVYe
ejyLHEZ1kLNrfLalaqbR8KnClqoXpmPWFuUuHkPrYcDAm+XuOpbx3E7kJZ04
uunIKi8vqoPF8GTKgMKcEwHy7nX3PJJj7pcxDn5MmC7lZaGs1yOCwpYDZNwR
86NdtcYNqvf6/bC5og/z2h1uSDI3N7IyRdNL3r1VX8tnsJZeR3Msxvl8kRbr
5igQCN1Gjb38dymWaAnpndAAqnmiqhOOZ3D6y8zwntYfevzzbI+7QjUr9fvj
psUMf+ngRYUtUy9Kg1lbJD0S80MV6sfrT4vONdciWBnP7cSFbd2rwJMhcmLH
7krjNbYlpKnh/b8SCkQerjFXM2XvhTryZcJYKS8LZb0eERS2zCDjjjVdP3Ve
df0lkX1rhYvdj+vNE31YhN0xkn/+2uFinYrGhizz/qGVKy9kv7KUGV2afz6o
rVBoG7x6x7PSz9mSF/e2Rm+8mCIp4vZ3TyL6WH3oQSRt9f3Mp60t1VDRgPCM
d+Z+IV7gSYUtTi9KjTlbRMjyziZE/7Ev6435urOs5/aru3rbwJORXQisNv8y
j842kb9lkWdlgeOgQeefGndo1uzwa8JYKCcLZcUeERS2TCDjjlXe9f0OPFIa
moInCf5fBKwzR/RhCXbHSKxY0d4LCGlW5KiqdR3nnDTz2bwKEHoQGeFff73p
+mFve6qldepsuG8VTYUKA0YQepQDhU92uNouuMKbwy27vG/Ex7bdl8S8NylX
5WXCEHqUFihsWZB3d0WPIdqrBJK8y2EdVt+WmOmd3gesWNHeC/6+tbRt55J4
2XxYf+iRf2/FN1SKR37M9HpCqq0+6xI5bg1ZJFBhwAhCj7KHuLwrpKrNAr52
PYh3N0Y3m3ToCtc9a3NSXiYMoUdpgcICy8GKFQ1wwepDj6Ljqz8bHvmMbF1W
UkQNecJHx+Brr839WqUHKgwYQehR1rx7cbJTU4GAv9ADsIPQo7RAYYHlYMmK
RsjyH6akpGTeTti5715WWS+qyJ4/SUnJSE+6uPNkUp6Vut96sPLQg3h3NaTG
8MPplBQVvT3b2Vle++jjJclvzP1mpcaSVVgfhCQrjda4qymFxqq34q8eP0hM
jOPwVxqYU9Nlkr/v0XPaxaz8sv0taws9zCYwjMiepB3u1fMrav+07EOP8jWF
lom1hh5Efm5ayoMHN+4mxSc8LtOqRAg9zEqF9TBlGXcOT5k/qIlY3MzJqY2L
Rx//6KOJeW/1Khohfbp39y8BfZuJxV7eXmJxvZDpY/ffySpNzQ3Zo5t/hE7o
4ta+rbNPuzoODQO9Zu+IY0iKeX45UrE0LUe8KI4cK+m9K7F9Bga4/uDxdfMa
zo79IyMuKY/YkY/d0U/5UROn4YtmXXqmnaP3Ii56aJcxPb7RrW4tuxAoLvkx
z8ALr4uLJS9vr1gV2rZX128CvOxreAzyjz6WxJ43REhuXNg2IrzHN04KWgT7
/7J7J2uyjyQveclvYR6+3o09PL5u6NCiyaCFs85l6d2zJmR5iSdWB4/o8rVY
3Ma5ffsm3w0JXn0iMU9VW+XRxWVBU4e4tzBQllzyMiVmw0zvLmKxo6enc/vO
bUavjk7Jlemf2Im87LMLlo9r2YJu3vfu45bPP8v4wtLX99f9PvUH37DpYSGB
gWPDwnpMCNufdHGLj3hRsvnyup8nL3DyPPI3/V9vty9qXolqrvO82Le8GnK5
ls0b4OIidmnwnd93Tfy8Zm2KScnT8UwIWW7Cvl8Cunu4+Do5dWzoUDswLGTz
hVv6D1qYosKU1lzdNmJK7wak2Hh+5yhu1lf+V2oledj1olRvqw+lfachpU6q
EO/+HVy7+4odHLxcBswLT9CaanT/SlZccPbokvbd233ZuNp37otPpyhOm5el
phsaYunLpInjwnyDWuheQ6Aw/Uqo8ZLKlbFt5++aBLSs7dA6iEVaTBsFvpwo
5czjX0/s4uXUwtc1ZDJpBfJkV9g9mfdNYEqQSbJ2kSYvSDnTOQdNGbHtouab
v3ue0Nmv0QcCZhRCpcXrnEsLl49zbyZ2cWlWn7Sm7uPWkLOu2kDrERsmUyjL
uLt/7Lj+Hr2+a9CuZs3a/WaOPfDgOfNMZoKtMRqDc4spmGChyms6NdZ7MRq6
UfTQUqokf6u5Ic3bt3du7dBQ3H20ppXXxXgnTU/owbEDC86dWB3S2XfsmDE9
AwNHjhzZK/jXQ5fOTR0p/nWvCanVxNO0hCkz/Lp0/2lsSGBI7yG9e4StiE5K
2N7PLeSqztIgB5GjJq5jK/uPD/nawaG1c/uOzYdFr0jNl/fLk8uzGpfoqb4r
XUrcqk4dHb62XRDHGDQYeiuz2h21DinvUSZk2asWdhEJvSaHq+Yc4lXO5WnD
nPvPGeXAomgFTxK6dbBp4LTweFKBog8leVcmjm5uW31grInJ+9LT29q26rHz
qrL+EtkVB3eO+VQobO93hOkKPNmTB9tb15fPtzvyzqxp1aPP8bQchU5Jzu4O
tROIOgaceU5Ijm1g+0j9aYUplw9uPRnbwd9OwKSAhQWpEWOpLABSMP5K29HN
a/YhpfC8zjnRTV7BI/akRFejpQU3wkPr2znOPnBSJWykadjTo2tVz5abbulU
9nyRtsXXbebuvaopS/bo1ta2XsJPa045ypKp9zonKXRwQ5vqA2M2PXqlEDai
8P6tQyH+X8xYnq3ouRdZF3adSwif3sGGdeaUXj81p/5XQl+vDSpjKit8Fr99
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
UW4z1a7NJaRZiya6fUCakhFX/lYKp/R16sKpHsv+fLiE2kQjlfF2+t1d/h7b
M4pKHm6CChOy3Pgtw2sJv+odGH9T2bTCgodbY/s39dv7KF/9m8x6YdrbGo2y
6mmbBTNbu0atTVepz/Vza1q3EdarPemPk9pWVSZ5NG2Y/PiB08rkLBnb0JaF
phs5xMXUFHSmpxfzFKTa9Ri7KKo1qSlX6V+RSbI2byAHq24Xv223ta6+NmUU
9E4FxkLOPFvbegmbOC08rtRosveOH5je1G3FzpggqkZ99Z/2nstXPf/9FRjy
Ne9ejG7mWsnHa8PFW8pBKczasXXMp5VcR469/LfO5oHSWyanzT0PybmRkCRu
bjUsMlvrEo2HyevbtBE2cpy9PyFHkehNyPIvX1jv1yhs/xWNnS89YqPHFMok
qROonTJBY9ctqWoOkEm2xliMn1u4PJSzhSqv6dQU78V4lLse45cucesSciJD
ZWefnB5L+mA2HSJm3dbxbOWdY7STxs8MT8jiFtYV2gb86BSwuKTr5GqyZfQX
tSYf4VjHUt5wxwAnpyC1Eafdp1q1ZmhOqlxEjp64Pq0ZFneYFn5qgo3p1bLz
vvWz2RYiVOsPcnWme/j6jJFNlyTdnkq59KLA4DNPNN0JTkbWXHbHnKNMjuaF
bSOmhYgdGvo4tfB1DZk8dv+dLJlUWVlCwBgJkn91fuuoWQMbN3RwafCdn8sP
Q4JXn0zSntuNRpZx5/CUef1dnToN8Q8NDRvs6xUavSKVHElClrX6lz72dYVu
4nHrYqnOlMuk2FPs7U3XiWv3ZZu6QjIklJn00T+0xXes4dPF4Eeurg26NLel
I1wqitSojtjDs5pId3dA3r3hQc5icTNvF7HYe4D/L7t3ZjEeJ5W8TInZMNO7
k1OA56hJoSP8Q7zGjDj4gIqNpddPRTZtXbNytY6TQ//UCnFJxdm1KypwVPcv
atRp6xzYu03X2eFHUksiarm02Lh3ZmiCxovmZZ9dED2+WRNyQF29XDz6+Ecf
TSQ9EzpYptGptEb91fJxLb3FYkfPxmKxr/u45fPPal0eXSy72l88gQyFXmef
i5jZ3a19W2f5uwR4zdq0VicziCjYv3HAJ8K63QISHvOZfE7tFX6iNcrsiWMl
g17SaabetFWspi/NaziLfYPcezDqCzkFJZ5YHTzEt5FLvwkDBnQb3qOt/y9H
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
    "], {{0, 487}, {1065, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{593.0714285714305, Automatic},
  ImageSizeRaw->{1065, 487},
  PlotRange->{{0, 1065}, {0, 
   487}}]],ImageCache->GraphicsData["CompressedBitmap", "\<\
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
CjISkEzEOy41m8oYEetl04zibKJe0jORkZmFguo6NJHfRqJeGFMVdSX4mZ6B
9Azym12AqvoG1DdU0yGNnf4wo+T8WiEB+hGZEg5HJaQit0ZEQH4NqpuEjoG2
ViKfeVnIISriV0kJapkWf4JGVBT+pMcLfxWhpoHPaSuqZE1OIiEqeV1KLgW+
uas1QpbgH0Suv3/Bj2BRGde6AvxMjUFcYipVFYHdxHqi5+OI5MUlpFFzY7RW
a2MZEWqiaPPyUFIivkphL6mqAnI8kFMpPj4ZOXVcs5ra4hx6FzPJLuWUVKCx
th71tS3/cuJyOer14sk4u0RqgF8cge+xSfTVwlD2o+0yR6azVOQjxlwZ6kFx
CDOgenR1w3Y92jXEm8w8jsvJ4Mn+QdP0FY2J5wUsEI2l2hzH3ItP6Qvg3szn
Un3xI5vGQbTjSrhLzUiN+orwcq6LEbU6sYD2/qKPikekT/sz/25gn9qGVj6f
/ZfwvwK0CvmJN+t/2eIGmN5mQ4/nsE9pYd0/w0Qfba0MxotjG3BU7TOlKpnl
tvDb/vDUZDzmgmdniLikrvgbnty+hAOLpAiIXAuLvBbeFIYK6QYYKTo+pdhZ
CBiPL9sSkzLNRUcYj4mmBb+Vne0Q0Rhdj+IfFMz8cPE3CqLQGSd0lJFUy6i6
LvR7C2ONsO/YHjzzzKZvd8ayS2tFpvsLbN9yDAYxZf3E9pGK+/sHMePe7/6d
mG1JdPmBdsQU6tdkH30Y+UazYK+5LBjaTg5ILBOwa21l3bG8gf8bfY2vjwZv
Lk3f2aLhuiwnnNu+Hgdef6FoOVy08IYsW+yZI4Pp57URWtpMSxjXoa0Zcc73
sX7jLrz2y+FiBhJxf6YMhrcnNeWpcbozjQ6OH3HMgK4GxJC6LU2HjtPZRUjN
9tNqK4L9qz1Yv+s2XH81TBENt1VF4MW5Ddh4RQ9JXCZXQ95X3Ni5EfsVP6Cg
DQzNPaiwunFb2tPc8SwbVcLSvDEOWt9cyckh1rGIqmfy+Tomj5uMA/peKOS3
iWguLH4fpLcbQ8fNwQ3HSFQL2kTwUbjBH67Ph6RUe8K/20aU0/z2hEcC5JZI
YcBpQ4rwG+nhbnSvCVPlc1D8GojszB94qHQfuoE/6btkZsHlCZY4tmEjzhv4
UWr9XwjfTTTnul+R+KJ/CWvH8cCbdwYh9eAx1C/0vgVpqtPumgdUoM4I0XBp
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
xEqY/RSIHcICBKqsIkfZNChHVzISXROjjgVdZXDUKYObd3MM5Bb3hcxeHa4d
EoUVS6BOVt5z0X3EsrKRBsUlMhi6W50FdOFByngdSQXq8xFpsBvdpWZDLaWV
cZLVZUXA41MSK12R5lsJmyyDZWYzq3ti3u0Eb+RimKc1soq/0Os6pLtMgQJT
MKQtG/Jbu4A37gJC28BtTQMsrk0Eb/h5hJDj+pe/NfwKKxgH6c9Pl9G/2yjc
8q9gKy/xSxPg7hBFByMwrhdy9mDNHAlMe+DK+QzICaq5TwZd1z6kSoaIbW0T
HK9OR/cZx/CDydboBD/ttejYeyscCgQcwzWEYO+yHhh11aZdRn9TBA7+3QPD
xEuGSdCNNA6vlMTQ8xZswTEU29IFToeesKAnzLFPBG5M7I3RJ8zJIyrxLdYb
OZWpeLy5F10RqBwc3qRKUGnsGASJDfeQyiQBZFlgSQ8eRsi5dGK2sjEEh+fx
METOEdQNpp9ZAJUqwXDZ95dzwJu+EZ6V4pWUGmB/k5hsA9bBMlekK6s8cWBG
D4w//Z6OGxF+VliN3yvMFRFFIvTXEIRzc8jn7jqy6jOXkEuKfGOvQzozq+Zk
HYwdzsNu+xRyyqbBwzKG2kr2XrklCQ/X90PX+bKI5XM9A8kGRse5I41Asvzv
NzCYKE/ZwComR6s5TgljJWVwwjaJxaL1ibqYO6wP9tilMHxJFVeeP6w3drHN
1juhKd0Yi4b3wrZ38WJFLaphcokc6EtOU5qLYxSyO5enQWL6cbJrLKPkul7D
KN50KASVs0/N/3YDY3hT8cCvlCVbXbwWFnYdiMP2zPnQhihdIj28AZALrGA+
VvzjFt3/8G5wKQR5sQh0zUVupDyGduxHvprOOKL5paH4lp6Htnpv7CY6UGqj
KpcpKCw3+GLRAMhsUiEqpgF+Ce5IKIiG/ApJyJwyFqse1ZnmJ/Xtw9BrI13n
jauZ3YwAnU2Q7LMa5r/Yeq9J1rvJyTwD2nHMjVMDPj+fj84yW+BUwmrUkhwP
2Mdksywr1FaqmDy4H4585HBKXdRrTCC27+q3IewYRbo5Q6l6aCnsWEOyvpB2
NlyJq8ZUIyHtrBJYjJNPQGdHIrD7zBgadxX1F+2LQ6YpaCPmh4ffd0ozMvAm
5ettHDOhI3vYr1T43cPUpecRKKAKEB+BtORUPA+vY3e/PAjWoVStBAHCjDag
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
+rdLEEqQ3Z16PoXPyjrDdVvJ+U8tkt1LPIYosO3Ly5Jdye2lHkM0c2WbYyYn
f6aS9MTOSout289lu+ZNigO4xtbtpznsCVvlia1LZi+MrRcVCd1HuX6TLFP7
X9c6nzt37hxF+xgf+eLgJ/Mv51/lVyZG8ztiVmWSCX5XUMAvR4/me1Af9EJ+
q21R403ME7ONsJs05EfK95Sbb8ap++4ztw+t7eC/csTd3VSWdAzQyn2T6tNR
CqAuvdepE1aHhCy+dD2wSh8fpgUbN24VNf+0gTPWmglrgoTZs0fhJqNP4XKs
JqnYaNuvjCHZyIgOR6cb1fvwW/hTB7LTTcyxJdxxjdP5nn6KelqHqowj0k/z
z7yNI9LexhFp78qo4l0FN3rfiKreVVHTuybqe9dHA+8GuNv7brT0bok23m3Q
3rs9Hpj0ABoPaowWg1rg6SlP4zXv1/BP73/iXe938aH3h/jE+xN09+6OXt69
8J33d+jv3R8DvQdiiPcQ/On9J0Z6jzTArvNjnbFq5SqHVSU1k7anFz2Ygjff
FI53764qtu7O8Nu9M/sZfjvhsO9LuKbu29My7Pu/7rwza1/CnXdWjN+TiZsD
JVewClk24ApkcmSzOLIAMvUAwmsARxhAEQvg6wOMYI4yRry8AmhxAjjqAGpw
AEUvgKMPIGUKoAgGEM0CeCcB1OoAImYA7yiAqBlAaQmgeAbw7gK4wgFE0ABK
TgDvNIBaH0BvisY0QH83nwgaYapVY6RQOlS5YRnVykgrVfqa66EKOx+yn96U
abFTQfvKuIaRXamgEMq+MkJ+oT5RaRPN0Wscyyp//0UVp15RUXE07clFWxZW
3qPczGBtS82biDrXXI67u67EGqpXlM01iif3zIjbgKfrXosqHQcgkKKQs6dY
taxIUW7uad7EGrmflnqprIPXOC94jfCiGE8doWIOI1TMYYSKOYyYVAkTR0z0
wIQRE+jbv/HCG3iw9YNoUKcBenfvXQljR6iow4gxHhg9QkUdRoyqhJEjRvKl
niM8jVYsij7R/zIPODXFOELZQsGj1sM1+8V1d8fVe7Qf13R3SMmeVmhlv9i9
RyuQZs9+KXl3p8hyyH18nbQiISHBGaJqwD/dQfGJMESntEMBEp2Sjiq6JnXI
uNmzWKXUAkjXzUaRshPOsvPp6Zl8r2CzTsDd2EYQ+OzBBxGuQiTKwLYfZrES
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
nJXUUPvuUsnyqkTIulBsiliNSYM/xfPPvIpvhs9H1Da6sEnBGN23K97t0h/z
1sdj6sw5eP21V41uI+YYGhq7GIqNypXWZ2sM8lUv1Uwq81OUVBsrMtFaHzFv
vU6J0/qdKrFJJ2WexQrEksWe2/9FxbTHXNcq+LN0Lpp5OFCvx3Js2lxhijma
SDlZjYelkK4VDt1xVXfJMOedRVFDi6FY8EZ1ynwjTBtJ6Z8zw6VxCT3KoGAc
nf0+GlV2oN07w1EYHWfWDXdXIMxdMoz78s2WYmrlpIQ6JF0BitnMqZi5+3Px
7mvvYkHfBUiakoToCdFFcRntOSRMT0DCrASDmibNSyqOyywujstoz2FnwE7D
PKatTkNacFpxXMZlz0Fxmey4bOQk5BhxmbwtpKbbzjePUsgjGUdwdO9RFOwt
wLL5y8TbnLHi242AjfwnbR7IRo2l5Ekpym8rQxAZtQFLh3dBjascqFKjIe5t
cx9eHzwFIfN+RPM6zdFjwjxM8/JGaFIWPD2HG5+rwI51YlfBIsW6FJjRQwpa
kXZTXFZJasJlcVc5+1Jw+ZdWEpD+V74EbWyH8uqmMyA7mcZjkzPqkbTpCDw/
fNJocfsPz23G2bEK4bGtsYj64q12mdLLv9p1+LxzMtTNyRORP/otPHCDA3d0
+gzZSwOpjypoqyQ1FQUlPw+diEGdCUNVmmOmj/Qx8vwjTBdrNHNhTf+iev6C
WqtpRIUpZjOk7kzFkpFLEDc+DlHjo863lOXlrLSUu9bswq61u4qVMsIWLI02
lVKcNTcpF7lbci9UynRTKfOz8g3FPH3oNLZEb4H/Cn8pxPVO3ZSs63y+/Dnp
g3Tzr+lDGOJjVmPA801wxbWPYkL4dqRFL0H/nq/guUdbokaj5+Advwf7s2nw
uVLa8teOhU76WDUkZOQ0Fm0Yahwaj4xoRRvPraRZ8jfVcEYZ2apC07NnT1St
WtVIZNVmJf3SjuXQzTUBu/FhkyvhuLY22jz+Pp547H08/dT7ePyh+3E9CXq9
l4djVsRZxEZVUKynNaKJPnPvuQfn5F+6I7Ll6QBUdLac9zV/HDZ+1Ro1HJeh
2SMfYtXomShc7IszvvOQMe07/Ni5Bi6rXBuf9p+NkyKvl94BqEg3JXmeOjPB
n3pZysb/jvN1x0/ptIz59QTnw7lx72hSUay3uXEUx2+hH4KGBiFmfExR3Oc/
semRm2yL+5DtHkw9aLDdI7uP4Eim07juK8Dx/cdx4sAJLPdZbuTHmLkPdxqG
RsETOQMyalKev2Zk6ZCGRiI5yg9fPtIANzf+BP6bt3E107A7bik+bn8dHLUf
x7SoNORkZxhOojxCKdrbpGzFY2pQlFYnL1FjkfH9dxtchQqVtJ5LFZKSK5Wv
QYMGeo+Hy6HQAb65+P6lV3F3o/tRr3YT1K7TBHX4qP9gN3T5ORw+2lah0G9w
c3D5Lyn0vdjH3/enq31EO59S5vK0Ei+psKRxJM+bxnUy4vo9h0cb3oL6t12H
a6tci+urXIVbq92KO+q3Rt/Bs3FWB6zC1pe/lbj7o/L9af+FyvrpS+Prjcjm
n4QRlWcQwScSf8YTp4Y99xxG8TGSTvlIujIjyDWGk/9PJpfwotD4EN23EFNO
nz3bqOJUPWtvFhZ6LsTG0RvPU/OycujtNNe7VmchJ3QfMmmqDcfWUnMlFkTu
xcFEmt8t+TicmEvHlqpeBg4tc12QXYCC3AIcyzuGM0fPIC4yDpFhkUWqLjso
R7diVCoCCcmh8PxXW1Sv8zJmb9qC7bSRqem7EDHzC9xRrz3+XLsT+3OzjJ0o
2e0TRG7tXPIzi8YkWyuHU52MNCbZ77LZbsIPpWR10BqEhkUY8WDlYcVEbUTU
RjM+XJrtlhOsxCc53vq8N99809GpjHpuVajxWVycv+16AC8irMLKkph63srI
Vuz+6qvYrkPpcnLddVstT4Os8yrC836W+QDzRmJDv674le895L0PMPWnUcgM
4D1tijS7wrhLJip7g6yiegBKflWsISsrq6g51j6+NoBi15t4NYhY5tmwIcY2
aYLwtm2RQnzbTyU/QCf/wOuv4wAx7iCdiUzOQzKfW/jkkxh0//34k+7RDxz7
ZN7rZin/uXN3VpTyt8DGTRvhM8TH2E6NmRiDmCkxxRGtGRdGtLS3oxMg23xp
B1fQtq9OQfzcAMwfvhih5O7pVHpFtIy9HSr+vugdWD97CZZMWYq1K7chOykP
uS57O9pSlY0/vOswDu85jPzM/CIbL8U/fuA4Th05hf2Z+7FsyTI50WZmjxlk
0l6IdNDiyWUy9eLJtkyiddR/8eSwsHDEJCbAb/i/cGvNlhjkF489KbzllHRk
Ji3CS62qo22vudhz8AByiJvaB9JWbAw9Me0HnTx5sqgGujKcFADTuMqDTX7+
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
uVlZ2cjbdvighnOrXD2JhdWLlONshEPef+6559h3Qp5FCMQ2Va2fpMJnYhT3
oosusncxG0hQJibYA3+9e5JQ3SWYuTZc8DO2z7qdwY5L4BcTWWVf9Gjwjz6a
IdD8iEiovwjF7bnJJPgO+asPBY2rHnqIqZfvvy8aVS+XpqvRi85mRn+jF12N
5u0rPVSbGdbRvHwiMz1U8zorleih4k9u4/XxsjO75SmS5Cl2qZVby5rpXEnP
EYXFZwEmjBiKi98IQrqAUrFFcamooXsiEfdPHIGRt3yGRMY9djoCltlIUJ4+
R02LWKQZPSwWAV8HIGNBhkNGReZvlibLGwxHpmqy7JmPQi+jJamq4g0SRk/K
tzP6zLWl2J0RhucuGSl7dD1+DanGIWHiuO9NRp8ThO7qXcLk/QRMmy3NJHaa
jRi7jJppfjG97MknnsRbb7+lWHyISiYYqpiG2RbGe/zvUNUogIL/4YcflveE
RWSNriMk9FkEwHPBh7hgmA0Tnp6JENn8qAj3du7XHR25JjKzrPwYopWxXkPg
M7WL/bHpHCVTHzYS7B+IuLAteOv+c4XELsbMdeFIS4yzA9ORThrgF1sYWRib
20oyprNOMEEzNiHhWln5uxMnkrE//JBjAfpKxbROO3Tlc7QOyLCa39aRt78/
FVPzNBGPIe6eNp5u4Gmjr2lISLg8EOflCRbZzrAbIVQ8sraJ0uFr8PQlbwYh
U9Cn1KJ8VDHdsjRBePp44enPkSxye/8uR342q/aUgZWfn2+w9GWIi4yD77e+
asKDNf/hsPq7veasAi3JwtIvk6UvwHfyWfycx9XI+6vfXovqYmHP0hYkzH7J
YOm5weiu6xJ2Hpj+rouBdY9prYIw8/zAwQPDVYNplaOnOI47S7WXXOuaCzwR
EByAdV+9hNNlOVNf+wZRsXGiqrt3GhDVdXIFRTIzuymuaXYfVP5rrvlC9R45
iJzGehO2biD3HjYBMyAIcbGBmPXstbLlZ+KNpQHISk10i1jWiENkYTtGzcLs
J0VVw2RhQ5Wfpoj5Bdnyux94AOeeeSaiWeNK1nU1kN3qArTnKFhcgFYV3JUL
0KqCaxegdrpbkx6tVfeWpEfNw9r7IeRg071x3ZD0WFhYKtpGQq/6VAJPjsjf
XN+fMGaIKLN/80e2gEy5pcVojfDz7vJY3DHGhiHXfYLkTuHXbmvQw1gAsZZU
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
99KaZuTInqVZxHWJ7FWWuX/XzolHk9y71sXZ8d5xcRmq77a7948OIA4EcmW/
UN3IFBZd95+H5MpT8LbXPlTJuVaU9aQStwm0VIX9gtPM/auW/Wp2kV5Mk6Gi
ok7OJdi+f7m5RUJ/hXbac7AH5N5pQmvLPjT3b20ztlE6WKYxl8v9czzM/Zsb
jxa5d72Ls2MkLTt7O7tJuH3/EhKi5Bm2qbU7q2pURbNkzes/fxxHCTTd9uYC
fDdnLb79Zq2Y0mvx/fdr8eNP8u+//xkn2I7HzV/FoFb2q9Vy9pTHdMsz2bCh
oZlOHvv+JScXY9Gicge+5f2Vxi73Jtwt//BxdXZv+hyAkKtdNPDs2rvl7AJ+
wUTu37x47NjpOjWc+1dYWK6ww737N0KgmIPHtqm9c7YFaXHkiLjY+OWzGCqX
Hsbry9/YbCfgjm/jUC97s8OpLxBxjkGsiopKxkQte1Uiel65a5U6yugEt3LG
M3Lt4zHu0ttw4w134frr78IN8v3GG+/CzbfIvy+7AMPlYW75KR4du1ih1Puc
+FUioLJtm7v3arxcs1TOu8ClZUaTYJvIho1fEOvOwQuL85GY1oT42CbRWZtk
n5uQs01+XvsfnGwbjptFVWiU/erY0asEQH3Rl5OQkGDfv5SUAjG9yuzakIPN
Lvcmtq36+Bmh8+Nw5tTrcc01N+Pqq+R19c3q39ddfzOumnYOhskD3vpzPDpl
r1pdnB2/mBOSlZXp9v2jk3TZskR5hkO9zCnq9jQRPf77oFz5fLwlpkul4HC5
ZZR1K1WB4NkiK4z9a2YftY6es9dFw/xiLJ5OVL1/JSXFqiafNN7LqpZ7E9t+
++djcu8L8Lb/PoWhVjWka7+sIfhnxat/+DEeXbJXO3qXb6gvevTi4uLcvn8H
DuxTyftbtnTa8U3bRdTgt4sttEnt33l4w6MRpbL+4sKeUqlGwZUi/29wiuzf
LbJ/rbJfXZ2OrTXIuwyPMTjBYLvev7a2JsHZADvfOjhe5d75ghOrP3pM3fu1
Tc2oKHEsLGiUs9u+dZaSFdcL/3bLXnW0O56drixkj8ycnBy37Z+2LqKj07Bi
Rb46c6s3hao8y8o2f2ns3VubGpVsKy3usXyaBWeKAs29+zYaO9g3qqt3TwYW
ftKPePDgQb11+/fvFfUyVsRsh+ElsbrZ5NbbBTZWzzC3bnOzMgmLLFVDTbJN
hV7fGVsnrMumIbt29u6Iwuem+7e5udnNW3e6wGyzQF+QsM1+tW6rd6dU1usx
k51GTsMrG+pRSQuopIdt22T9xf6f4mhZ/1Wfh4HdjPZ229nVHkOh31PnemnL
LDExTY0j5X45OMBSjM4xqz+iajQJr25pVsZeiaWOpUVIq2jr1ziT4vXHODCj
ZLeLNhr0aPj7+7vNMjM8ZmOFPZKwfHmmcllYPS95+fIMQZH49tut8EnpRjmL
x8t74KZZYLm+KBcrF66Fd1oDdu019spaOM4YMoPacvNF5la1tDSLhA0WybDH
4YhowRQLJ66f+SxGjLgM73m3oEa2p8xSQNkm21LiPxcXjhTJvigJjI/ucUJU
GnskL/o13btVZzLsqHrHennVKu1cWzjU0rcXGwhcU24erdXCEQ1gx07zNgd6
1ygzjMpASV1dnVmiNFb2JlWkUJL9WJJNY5j3ykxrl89bkJV3UKGmtWiPa2iq
o4+3EVVN+9BlFpjyfvpYGDlmWE+4311bdKXJgbW1DbLsAOHARhW8oPFJJVyP
VnNVveWsHFmPk14jczqt2ajsTPl8tyCVjyi0Vb2OgcKZ91C1t64qxQTgu2U7
5BLqXtZjYGYDj4H9I9zlkDMCQafJOqoFIXxFqFepvaDQ6avm0rmJJY9Pr5Gh
AIbhOGh+ubnnTU0tWLx4qyBTda891w5HVzXIujGbvofe8w6ReLyHcK/b/PNG
pPQYOYs6YSEvuX6GKG97uC5BVnl628g+a061wrJv336ltDCKLEqTUWlwtOpO
sXy5rzx+KUtZjSjDSf1Ws+qnJsb2NLmoUN52Zmq5K26kcwtYSxEREYfffvMT
xsuWJ29Ta+IpWJ9U42eLCIV0zkXb4imY76co0pjRe4r8u012LwBr1ybIbnSp
kyWV91W1q/vU8Gv37m4VWuUOMp9jmpue8w/qgxMUB8XHp4iZGY0NGwLkSJh0
WKBqRpKTt4tekSSfBcoeBKmIQ3l5uW2tuUd79+4RQZAh1OErAJsqXM02+nsV
51o5giixc+c+ec52eioFBbaotFZm6rgrfGvkmh2nIglNTY2qV0ZmZrasKUPO
JVPIrEA4qVblOW80n33nzg6kpuaqnBUvr0hRr9JE/cwW+Uq9IFvWmKIculu3
eqvcNaqtl7hpvSrjSlS+9vYdgrKlQsPbZY1FakxBUVGJcHwDBeNlbrqd+nIX
Qv7fxf7vYv93sf+72P9dzGg7wVQekTsuLsYiDmbDDfBiTPtljz/OYTYG3vM/
U5QyYYzDYwomWzkN4GLM3mNd/wsvvCAX4xr5nyn8j3zKhGreihHffi7W888E
yy/1vJus3g01/vSo/w+BUFUe\
\>"]]], "Subsubsection",
 CellChangeTimes->{3.7094618699879355`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "- ",
 StyleBox["Planar structure",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.6957166751540866`*^9, 3.695716678572562*^9}, {
   3.69571845100841*^9, 3.695718453293476*^9}, {3.695718950695672*^9, 
   3.695718956236369*^9}, {3.698065008555179*^9, 3.6980650333441176`*^9}, {
   3.6980731201361957`*^9, 3.6980731887764435`*^9}, {3.7094577282029247`*^9, 
   3.709457742179528*^9}, {3.7094577821234193`*^9, 3.7094577997823915`*^9}, {
   3.7094588551747*^9, 3.7094588561106615`*^9}, {3.709458991242319*^9, 
   3.709459009930315*^9}, {3.709459044226798*^9, 3.7094590465551*^9}, {
   3.709459092081094*^9, 3.7094591161047726`*^9}, {3.7094592728489027`*^9, 
   3.709459318300932*^9}, {3.709459380565092*^9, 3.7094594002184925`*^9}, {
   3.709459472808541*^9, 3.709459484693895*^9}, {3.709460843120756*^9, 
   3.7094608488423786`*^9}, {3.7094613123021*^9, 3.709461344745573*^9}, {
   3.7094616176655083`*^9, 3.7094616826222973`*^9}, {3.7094617508923426`*^9, 
   3.709461811737402*^9}, {3.709461851631161*^9, 3.7094618541108217`*^9}, 
   3.7094618940975432`*^9, {3.709462100889535*^9, 3.7094621036772103`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HGfP3njwwWA/ecChJvQBACAhml03UB1b//rftAlFhx7fFpZ97eJXPZ8bfvGP
GylNtc8jatzfdcQ7z9TrdLB89744d0eLGrIGjbbm2PKRf343uc+qI2n5di/j
Z1ztNjIy0n96pO6Vnp5u6fmR8b8L6YZwUA4fPpyWlhYe3rxlyw8dyzh++qmo
adPoESPel+bbeQJCHwAAkqHZdYdLB96voe3C1/hHQnqZRf6uTevxr8WKEnVJ
5qBo/eCZKl3WHjKXKCiPxYbIajwwP8P+xcBtkpSUFB4eTrVbiRl2e3x8vPWf
FNKN0NDQXbt2pWnt37//X/96sk2bqfZmHOfOFT3/fLvGjV+U5gt6CEIfAACS
odl1hz+vpTSroZtRMXrONUNdqEsnJtevl3RB83dxMT6ZLKDlR/NzLMyruCKP
062dobyxecaafItrd9glLy/PuNqt8GcGUEnAuMiwYZqGlT1vkm4Yko769Zs0
adJ/3rwCGzOO48d/a9asY3R0jOXPun3l0JtxmvVjwkKnHsxwzlnmfoQ+AAAk
Q7PrHjfnDAsW+5WB1bvNnZ/+a0H+6W/XvdSi6lvybN0jC1VRxolNpzKKLPfw
7qyZXFcmi1l9pOSXrW+uS7N3bkY5VLt1C+Pdbkz4R0tZgNl0Q3T48OHGjf/z
4IP14+O/tJ5xnDxZ9OGHq2vVqvfee+OtbqC+mLPGQPkVe5e591CEPgAAJEOz
6ybXz8yrH2jax6z76Lzvfrf9PcQquzW6xSbExmzJrkzCYbyWnNDRZbKGlIS9
bXwSVPhcyUq6IVi+fHn9+vWXLl3atm3f2rWf6t17+SefnNu0qciQcezfX7Rk
ycnevaf9858h0dGv2VDZmGccAACgUmh23aZo96ru9xn1NAOrx31+2L4pGdlH
5DUd+kUdk2q3YqlVR94IlSMeAlueK9mSbhiSCOEPo0ZNbdu2j0lm265djylT
PvHzY03oAwBAMjS77lR8Lm1N3IB2YaHP94hZfvxCsb2PKVTFv25fNX3PkYK/
7P1kqt16FIVCYUv/3650A9YR+gAAkAzNrr8ROrfGkzVSUlLcvUW+T8jmhJxO
yOyEPe/wm4wYMYJ0w4kIfQAASIZm138Yyq6KkzX8fFCNNISdLOxq4wpUjj1L
Gjp0aIMGDUg3nIjQBwCAZGh2fZ5Y7VacKUC1W8kYT8Y3EFIPB2bluyndUBZm
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
iIRPjIyMTElJId2AYwh9AABIhma38sT7/CKh++17a/mZJfT5g7TcOF2FdAMO
I/QBACAZml2nqFOnTq9evXyvApUVkZGRwsnjxq9MuoHKIPQBACAZml3bJSUl
+fxAKRuJj3Xkcrm7NoB0A5VE6AMAQDI0uxUSsgyhay2uBBEfH+/uzXE/cTyV
G+fFk26g8gh9AABIhmbXCoVCYVKByr3TFjyEkH+5cTwV6QacgtAHAIBkaHbN
ErrThmU1jKvdCp1tP884xAcckZGRbvl00g04C6EPAADJ0OyaJdZ9NRALsbp7
ozyCGx9wkG7AiQh9AABIhmbXkjp16gQFBfXq1YvZ4sbc9YCDdAPORegDAEAy
ft7s5uXlWUoohH/38wFU5aWkpBhW+pYS6Qaczs9DHwAAUvLbZldIKHr16iU+
xXD3tniNmJgYYY9J/KGkG3AFvw19AABIzw+b3ZSUFHH1OgPGTdlI2FfOStCE
fZ6YuHLgwPFt2/bR/9erS5eB8+cvM04fSDfgIn4Y+gAAcBf/aXbz8vISEhLM
VqCiy2oLcUhV5WfQKxQKIb8Q3qpTJ/no0TsTE88tWnRu6dLMpKTMOXO+7t17
+j//GdK0aXRSUhLpBlzHf0IfAABu5yHNrtCPHTVqRrt2Pdu27Sve7m7btsuU
KZ84sSZSVlaWSa4RExPjrkUlvJFYpaoyc1uE3+3S5Z3atZ8aODB55cqiTZvU
27apd+1S79kjpCHqQ4fUx4+rT51Sf/+9OjFxX/36z9WrV2/+/PmkG3AFDwl9
AAD4A/c2u0IXdNSoaQ89FNq0afd33tkwa9apBQvOLV16bsWKzNmzvx4yZGHD
hi0aNGg6efJMp0ziFgdTBQUFCZ1nRlLZS9h74eHhDv+6kB00bBjZrt3EhQuL
1qxRr1+vtpJxZGaqT58u6tAhtkGDBrt27SLdgNORcQAAIBk3NruJiauEXCM2
9pNPPsneuFGdkqLesUO9e7d6/371N9+ojx5Vp6UJ3U71xo0/tG3b54knnq38
8wihjyp9nSWfUZlZ9sKeDw5+8o03khYvVq9YobYl47h4UX3pkvrdd6cJp6jx
wCrSDTgFGQcAAJJxV7M7cOD40ND2H310ftUq9bp1aisZx9mz6gsX1B9/vKVW
rXqffrrI+tsKWYnQK3bXitg+LC8vTzhV5HK5Y7/7/POvxsTMnT9fbW/GceWK
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
YJ8xl2yfM/3n1Q2NSo9h4JBp1w15herOoZi65l+S0vUz8+prnlrYPkg+d/7o
xwPIOPyCOzOOiiKef6GnYSfVyU097/WpMHV3Z+Jz8gSjobkWFF35vHGVOrPI
OCrijdeUN24z7OWeS9hqxlFy55evkpNPZdwxhJ+L+0bcL4tervC0x4Be4O6N
lKaBVjr/vyeOCja83KyNItfmdy6brbwwb9tdw/Eqm4y4aYaaKlveW5NrBf79
oyM2f6vsI/KaPtWUwxIyDk9BT8Mud2/t79jELx/FqnIXfxhRRRZCxlEhb7ym
vHGbYR93XcJWMw6xv2rcE9DOC6g7Zc0d5z7nvZOf80PGxZv5Pj0kS5Uz5e3H
xLJU5adyaMbUzSo9EnZe7KqcM6tfalenSrXosWUHtl068L7huUrdOu4ZclPw
04qG2lTLpOaAdZpHQvdWariC5qT68cfTmUe3bDp3y39TZOWNKxkZl7KOHN+4
/0iu84KL8urPR7ckK5xReNnbMw5V/s2LGT//nPbdV1tSf7EyA8vzT0jJexra
XafZJ0e2Wt11lacs+u3c+fNnfkrfnnw8O98J73fl4pdvdNHGc2sZh63nhhe5
U3Bh7kyxjIwzuysqZf5PGRkZl8+mbtx+Ltt3egIuuKacGHvN88+Mw/Pjs7O4
6BK2idWMQ5xcadwTEMPC1Ru6U/3ub6mvi6t0tG7978h6ARa2vygvY+nKCa26
dXg4QrzLHxIV8vrQHov3Ka7lZO4YPKZDkPafg4P6JR/WDrr564cxsfr1P7SL
VpQ9+f/av/a1MPHVjuJ7xm3OKPdqRETDV5pW130p1c3Le0bIewaHyAKrNeve
cuauwyZzbJWXfvhihH6NDFH9mtFxUWMSp+0976RLu7jw/PLFY3r0XbDvSPkZ
vo4/47DEeEJ6YPUe5moZlc7B+eC9tN9ccpWpjqyPrabdht5jLttR06Uka8Gg
nZfKnU3KouxNWz6O6fa87vQI6/b+oPXHz5jMbCqTvoldAlXxtZTPJ0THtgrv
0ObRmnX/98K45K3XxJ6CSnlz15bSl15tOWmj/qVKURWdPrZ+0JjOT+u29fke
nT7esjG7whELFSrKTU/4dHjzNq3Cmzd/4smHn3+m38yJh7PLV/A3d3UX5Z1d
sGjwS2+8+nRMy+Cazft1SvzKzNmo+wK5OYcmfTyo6XPa5So025+4R3HzWuaG
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
2/3iM0cX9esyYX2ZcdGqHw7INUO/AhrHjzZJe0sH+AXel/Cd7SVrbWYYvSaT
Vbjokt3vXfqMxvxq5hLM43DKqCrV6e39/15u9UnjHxCXSQ2L2Jpj9AP6M7PM
rQ+bX3LwKhPvGcpkXT4/ZX5biy6vfUpmJdG27o+dK7s+UL2dye0sq1163bVQ
4x8J6eXGzlroNekuvfLvZnUwkhMzDgePuO0sfBEHP1cfzWJWH7G2Nc4+Ie07
GXSL/lhOpc3tE5cfiIr67beXjX+kbJrg6CWmb+y6D7/olOJSdmYcls4N3Uw3
o8UojYn9T7HTqPvJZ0NnfLn7msm9g6tnVhy/6MgBKPnj9LAej9xn+oyjUt0V
R2OgLhSY3MW18aXKBRCX7Fu1IxmHA7FXgjhg9zEVM9bA6t3mzk+/Vnb+g7Lg
9OfbrtsxqVNU8uPwlwPNrh2gKs6aJ+/QtM2SU7qaA87vMJg75209Z3TJu4UI
IE6XDm+245r2S4rrRBuHO73iE7vHtYgYvGrbLeP80TcyDpE2aXXOM47yh97o
GYelM99ZGYdNu0tZdP3SjfJTeIymFLmgCqJhJW4h2Xm7r30TGG37APEuhy7p
6NL3e3P3EV3K0ZnjauWVH3L0KcrNOfE1LHWnRbpmvey5ZOV6cewlW2SmDg60
frboLjrzzyNsd6fg8tdHUxOXyuUTP0s9fnrK+LrWMw7zI4jM95rc/ozDwSNu
Owv7xMHP1f2juSfsxlx3QtpwMmjvyFkdLmhun7j8QFTYb9ddUEbrQDl4ien+
sfITymzd8jI/ZvHcuD5toObbWKoWIh4UcYajdmyGLp5rC5sMnTF81Y7k7685
p8yj8np2+ra9G6fL5fPmbDuasSW6roPdFUdjoJUAYu9Ldp+3Ltq3UjzjMOKy
OGD/MdWNgNL2PKo1e6XRm2P6zv4s8evMiw7WmtAWSpXZtpCx8zsMZs95G88Z
3WB+CxFA/FDdDW39CH/djGYb+FLGISatlcg41LcurnhKrJZUpVfySeP+vPiY
SXMyWpjzpXZaxmFzpnCn4OKu3Z9/8PHYTv3bhb0aXdNkvJmzMw5DuvFIreHJ
X960O+W3iS586Th4X71SHKuOq1ZdHhM28YS4w/XPEysOIGXDkTsyDl08tyEy
2xFVTH7/knGFt/ujujYbMGrc2GYdLMZY+zMO3ZVruoSKbiyxpTlNzss4HD3i
tjO/Txz9XBs7ny44IW0/GXT72UrRSzP7xPUHosJdp39/Q+Pi6CVmWyPrxC23
6cf0myocu1dDLXl+9LQscQ7rzctf9uwVblIpKzjojblLcxxunTRleXbPjX5V
LNUSGPFwx/5thr87qf/DNRzrrjgcA52XcThy3rpk3zowj8Oh2OviOODQMVUW
ZSUmdP2HSWWkgMZ9e1S0or05upTHlnbZBR0GC+e8LeeM/q51QKP2mrJj5rVu
tSXrr9J1om2vFS9xxmEy+deIbXHVasahqWwZG7s4+Zb1hsRKxiG8x5HNfe/X
vvZIzbfmT9upqVV1YPuwD9pqZ3CHvBaTar4ahoZkGYe2aKH+aq1fK04+aN1X
W9Mv/nCzSOWqZxz6dCPktU5bzhtnXEJPu4tdnXNVzpmV/3vjuXurNYtru+r7
ckWQylaGNB5gJhWHVgAsub0/puHan8Vvoz9LbQggZc5Ad2Qc+hPGhsjsyFR9
VcGudW9rp+eExETN2136MLfiUVV2ZRzClXtofY97NYPxdvysLcShr5cSOX72
JQuXrPMyDkePuO3M7xNHP9c9GYd9J4NDPQ3XHwibMw5D38DRS8yzMw47ooGq
KOvHk0lbEgdNGhrZTVMBXsPR8nqa6kPxL96juREdPWrQzjOGW9COd1ccjoHO
yzgcPm+dum/VDmUcdsdeCeKA48dUlX/z3E7xRu6wV2rph6hbvs9skb4nY0O7
7IIOg7VzvoJzxoZdZ7oBfppx2MhaxqHKmTKgemyfvV9vmh07+PUQbRmlwGrN
Xg7rNqLPwt3lBr+VJU3GUZz+1eh/6Z+M9ev3TdkS1i7JOLTpRvO/VWs/abpp
heeS24p2j8hi+n5v43JRZRccNzPMtWzGIfU6a6Kr6bPravZw6fSoCmUfebfZ
oExddNVmYYLmnQ5aqvAk1vORBby5yWhpRXdkHLoBopZmwqpLK0gEviXPsfPB
lurCN+/X0p6o5Qr7ODvjUOVMbPrOtjOHPpre75mQkOei/lM/pM3g2Pmp1tZH
cF7G4egRt535feLo57oj47D3ZNDdpbQwX0DDzD5x/YGoaNep0jb30DTipeMf
HL3EpMg4lMnyRhsyKvwxY7pRVTbcZVJdOLoovdzqeEV5Z+cmaMpgOlJeT7f0
sLkFm+zsrtw48W4b3SXscAx0XsZh93nrgn2r5UjGYV/slSQO2H9M71w/uCbV
9Ga15mnaV9Of0lRKN1NbzDrd8bLlF13QYTA7j8PGc0Y3qqpsnSvzG67bh7JY
Q+enIk7MOIwuYRve3DEuzjju3khpGmjvAH4D6xmH9eq4tmYcxvWaGuhLWhm/
7vSMo7jg9NAe1R95dPwXpqsQqpV3co/slQcbV+4VqW6mrBrx+LNVIkLeW7st
19wpYWlH6QOFTvis5D+NH6i4fua4+DkFG+dqitLXKFcdzvyPK7M+aBy9pTQU
6KZTVTgRrG7dleeN9o5b5nHoR5FVNMMu4OVVh+3c46oc+ZuB1k9U3SVckr1l
UYYh2DqQcdy9viUyzN41Z630CnQLXNo8j8PBI247C/vEwc91Q8Zh/8mQfURu
fbKJuX3i8gNR0a7TnTnGX9PBS8xDMw7dTDcrfVpV8a9p6UJjoUyece9w85O/
xFHKdoesO1c2RFi6F1R2d93O2b1GUWDl8Ydxd8XRGOjEeRz2nrfO37ciBzIO
+2KvRHHA7mN64+TkerrZ0KZbLJacsvfmpzJ/TytNJLA8TqO0YrDzOwzmznlb
zxn9zHEruVLxT8fOa28+68Kd5fsPqvycHOMb9Va2Wb/H/CjjEGsFP1Lr/R2H
8+1POnQ3f8xnHPqxOpXMOHSXicWvr62i5ryMQ5NuvPlY6XoZ5pnuRk3ZZ/1r
ZdeNUpf8cejlsNLfbBt7rGxSX2Ypc5MS35JUx9UxTFqJaJSUYf15qqpg+4LG
b5YtuK0rGaerEln+V8STwaSEpnsyDn20sfRAR3VyU897ZbIXWu6xexlAa8V2
ynbplcd6NNpwWf+aI/M4MubVMykIXzHdfL3yTYlhgUvbq+M6dsRtZ2mfOPa5
bsg47D8ZVMUXRrwhbHzY1DVmK9neTZnbrEq5feLqA2G9Oq64NkG5OpYOXWLO
zjjEIjNlD/rtZQNb7Cg7g77Cc+Purf0dmwg/0XpRqtlChapze7q9OPzHPzU9
nGp1LNQE05zPNtxENWGljpZJd6VMb0RXT77MnrykaNentPflWAx0YsZh73nr
/H1b+rv2zuOwK/ZKFQfsPaaaU8vCvFHtF3dggLdYntdsbqVRlLP+v//VddSd
3mGwkHHYds7onySWr3yu1m/t/xquEHMf3YAQK1v+TP+vjE5F/dQPM9usK0pm
NuJVfAlreF3GUbZPa9qvjgpp1bHZW7PGbD+VYbZ8Qcne5a3EKTmmTwBVRYrP
+zxQp45+TrSZvNuBZxx1H52dVnZ9tOxvZz3+r1q6JymWnyfayLZ0o/zXMXrO
YmYnF3+9voe4smRMy9Vl53Gocs7MbWhIy8oNRpVkBUCjrSnOWfGJ5mnjs6Ez
FafMF6xQFmWvSmgc3fPYb6bHU7csTlTLHZdNHzcWn/ry3Zrmhoa6KeMwLPfz
3pdm1lfaEd1EyMEnHLThWU8516a9pTmc5cfO5V9a9WJE2D3658iqPw++0TTl
iv5VBzIOTRyr8u8+poMMrdNdsOWeCBcfWtur4asvVLVvBUBHjrjtLO8TRz7X
HaOqHDkZbl1c07h++UCnNo4V5Z+TuvRA6KNQjR79Tpuca6riLPlbQsA0szig
I5eYszMOfdtR2l1XFX//1jOJP5R9e1vOjUsnptYJlNWvPy+93G2I29f3dX7q
/W8030XbEAS8NGdDfrnk7o/Pp9d43P6bGPqSp+XLgRYfWtf3oQjhtbpT1twR
XrpyqG/70ifv+UvHawq/GPVyi3cmPLPE6BauQzHQmRmHneet8/etyIGMw87Y
K1kcsO+Yak/7QHML8Ak94Sn/unfkXvtL2+l7UE3GzSlX11Po1Q9/eknpGhZO
7jCYzzhsPmeK8492ax0oq9J56S7TkS2aBc3HPjXF0DdTFWxf1l3oJpnbctWF
rwe2GJRZJm3RlbcyfYAiBM9x/VvU+4+liFfxJVzBDrHH7SsHZ8q11k8MLb0F
rl9zXDTpUIUPvTTvM3v2uCXx+vcIjotduUY+73CGYbOLdy/9n9GoHgsCGg8Z
btqmqMsUH6v/ZucN+zZs3bpnz+pdK/sMe65W2KJvvppq6DDXr/lqfKdRXxwR
DlpJxuF58uXLB45srisgULXnzHGzZ8vl8xIzzA3qU2UentKgvu59wut/sHp+
qmLnznV7NgyfElvrobG7fzn9dltxGwIjHu48pNPgsWPS8uzf55r1Om1KN8w8
7rTyjEP7DQp2rR9aJ0TcCWM/HjNvnnD4Fi8cNqv/o/pMpcHDw1YnXzNp8aR8
xqFXfO7Umthe4VUDGvd5fcnO5NPZYkViVdHlS9+v2TK7Zf3WE6edtRBoizOP
Jz4XUSW65crjZ3QJi/JO9oZ18bWrRLwz7GS5JQ6V5w7ItWdms6nLTEqBGV5q
OXtNrs0v2aHw+pHB/UOr1xr+WXK2rhanquj0iZWtoqq8GLH01OXydZhtUpCz
Lfr5gIDqPZZtNXwj1a8XN77RfPbhLM1dnRpB7209cTl1S6s4/Z0olTJ36eSm
VTRPuCZ8fcmkTS7at6aHdojpwOQTJjmgoZpcGfVrRnexfJfA0CTtSNO9qlLe
3Lm+d1TcsbSNmpa37qOzDl0o84tFuQe7tNS8c6fYg9fLzV6384jbStgnq2a2
qKrZJ+/vOplfLs7Z+7lF33zeTxMjqvRI2nXL8jnj5BPSgZNB+IErmeteahnw
TOjMvUcKDGfI3h3jmzResHFpN826LUHvbTN9JO2qA6EufcYxYm5C41d67ruk
u/hVuVe+GTb0hb9Vay+faD4g2HmJqW5mrX1Osx9r9Bn03U3nzMjT3e2Japny
k7CJqiLF2hffmmYyOcvWc+On9KTIyICn6k/6IvW6OGpCpcw/eSyp7VPDv0i7
o/0HZfLMegHVY7qGxsxZeuF3Qykc4UB8NrSO0FQ5snRscdqu4bUCZc+GLUwr
3WMFX295t22/o2e0o1+iWm7JyDk7uXvzjUY3XcUuaw3dla767eKq6OYpv5SN
CPbGwKLc/S9rn4RGd9pv0lYZXiofJay8ZM9564p9WxpngmtNPWz6fZUXjk5+
1Pwlb1/slTAO2HFMtdd1/ZjQ0G499168rv938YcfeujD+Q4uBVBccPajcW3v
DYgcMfxAlu5tVb9fP/nhkMYTTN/TiR0G1W8/Jj2jScSC33n/59uGLNWec6Yo
N22UENCqvz5r9nf68rnKq5cOjx741NjZWWXm7aoKvto0sl69gJdeWHooTXcI
lHeubf38reZmSi0ZcittFNJ91ncfvtMk4cjZDzTJeGBsj4NXyhV5tuEStnKK
2ufGycmP1ox+xVIpvoiIhq80rW7DICLtSaV5VNHK8Ludo+4PqDdTn1Ipi7JW
rxxaO7DcxWNG/eGmsVqjuPCnteumtu/f8eEI8V1Cour3njxGcem2yrCWa8TD
HTpqPrvNCs1ykJpHXQ+YfLvmzZ/4b92/Wy7OUHTr3NqNpXPbhU9pGTpg0vAd
F7Q5cOH145NnD43qqCtUOGCQIxmHyYQLK8wM6FXdTFmtySmExGFN2XkcZb5C
8oxuw7uFtn1Kl2ppqrF1ejt29sY153ItDCH++dulrdrVqVIteoxL53GYfmzR
mbSt8nmjW8bpShBrq/m9O3/a3vPZFXTFlUXZm7Z8HBMXVT+kUWSjkEah3d4f
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
    "], {{0, 399}, {1062, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{590.5285714285745, Automatic},
  ImageSizeRaw->{1062, 399},
  PlotRange->{{0, 1062}, {0, 399}}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
UMWlquMwn8uTqVS2CyY+WerjsOJgK5q3qv3TcVjUo7XUkbVgx/OUnyKdw9rf
qD38oORX8o8WJVI1F+O2gbqyZmxxS9K6tRCnvzpTa4iu9PI8+Sfd+zCN65Zn
6lkfDRUS5GZ9O8r0ms9r7aQpk+t/ify15zxeZPwkvrbxNyoMXMX7/4EK2Qtf
r9UNs8+aEqwE903ULN8JffWbcKXA9R33q0YcuesjJptFYpgfgRHReJ2dR6NK
PQT30bQZdGUZtco3YbvgtKq9IErieHDaEAvXYNFWOvEhvnyNSOSJ+VBkHQdy
I0Y5eakEb3QDqv4+H/2Lrrh6BxL0PU+u7B8CN6Qzm39iReXI/2ZBt9q/Mueq
nzoTintlxcHrH5SX+vNXL5Gjdl+DV4HmvtdmI4QpTeNOoqb8MD/Qkt51K9By
40UiNQw02+coXSuWpeNWGyI05ZtZH43pVL0Bqx5q1ftmvGBd70b03nlHU6Ym
ljPLnYV92jPn/Cd1uX1RyDkGiODUZOUZgnK1jklir/FHy4qMPOej9aaWN3LQ
6LbjtgYMy8kjUf+2jZln91WtjcJAc3r/1ptDb1M01W4JD5nbux4DjJ9r4ogU
2G8zvm9bFt0K0WQMhV85PL0Tv2+Xv+RT1Wr2x2P06dafg15J6jrpVF9zfq/f
mLn2gVq7bjFYjK8iuNJC3kqktjQYk9md6fPXFcn/Vc3lCU7Zv1s/9r9J0OI/
KVgtakK5lmM46Z+pvRlkPkkE65YjOB2QphHHYDq6PnWmmf5cKv0Ng361qT16
P/5FaBR7ip4NKtDPyE1KClVVCc4GvUSK35m/XKWESjCLx+cws3MnSQX9afcF
86mqtd9TXr59P6NdRapPNeC9lmsm3WJi/bLUmaWHV5ZmiROdGFtPwKSlt5Yy
gzCd1oaWM801Q68iXyqd8R0YuO+e5tXnmU+Z36kilcfvwzO9ROOe+e9Y1LMc
rfbeVb9NWqrJNh3chKbTjkrNalht+mvWj23DGBMPTb1POeKfbKNj9wlcCM7S
Shczeag/hDp9F/BIi3AXeLN6SFWqTDPW8KVyJAkKXVUmE4b6QaP/kpfM61CL
Xltuq9PgeNed9Br8F280nX96bcLuh35qo/k3fEmFmC67elK+nzZXKiXGdTP1
a7Rg59sM9UKn3WNam4ZMsvmodoX0d/vlj7D2FwRXYyDerOpRh04r5Y8MqBOa
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
/mHAMDG/+ueLVaTmcTaax3nnfwByYIcs\
\>"]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "- ",
 StyleBox["Torsion angles ",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.709461882393795*^9, 3.7094618999855137`*^9}, {
  3.7094620661209927`*^9, 3.7094620673386745`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kTMLS9iSMmfOnF/96lcuLSlhyeZSW1uVm3vDVVd92WnN5Vhtzxx97bE+H/bJ
UZHXvR5s0krxv5Z30igmCzH5fnHMdtPJc2fF3urAIwOlJ0fU7rVbgXb2mLg/
8E5FY9+fVXRHW9s8S2GRxxtv/FX108R95Is0Oztb/jRnzZrFFpMaxAQAwNU0
SCLnFBb5OVhKypgxY+68885NmzbpVFLCcmBzibCwHKrsvqHx58Sm96w1xLzP
WOUhu7ZSmy8sbK7pyI8Y0WRNVEfowrAJE/7m93PTsGhUV1ebW0yq/j2nkgYx
AQBwNQ2SSG1hkR+3rKwsJyfHPFP91re+ZZQUeQ6v+oRLAec0l0gKyyft4r5L
+7y8ci6yKyz+WnF/rThplJHa7ussReL9Ph4fvyssxrFkyWFLZ7n//jbVzwu3
MreYzMjISNotJjWICQCAq2mQRIkvLGFLSnZ29oYNG5KzpITV0tLy5JNlt9wy
XlVzCR6676uwvLWu+/LKpWLnX6P8QO8eCrpQ0n1RxqawxPtob88aP/60pbP8
7nd+1c8IF9u2bZtxqSU5t5jUICYAAK6mQRIlprBQUqKmqrl8ckz8qHv3+l//
OcwDTr8lpnc/4GeNYW4OdqhR1G4TOSmiqDHij9tdWPr6JycPidpasTInvo1m
164aS2H5+tdPsDBsMOTL3NhicsKECcl2qUWDmAAAuJoGSRS/whJaUkaNGpXo
kvKn5vpqaWP5wuvF0DurDxwLetuxg3ueXHjNUCGGXnPv9oPHE/QZRS3RzeWs
2JTV9YMLrQ+f/I9Yfn3XW6c/IU5+Yv235vSKSBGN70f8Qd8XRSmB5V57T4Z5
qzm9YtNoYnWELgy7444/qH4KuJ78bTNu3Dj541u0aFHyXGrRICYAAK6mQRLF
trCElpSxY8fK/1yzZs1bb72V2JOjo83l00VvQxfWH+l667GD9fdd0/OW3OqD
/53YTy96CWsuf90pjAmVC+aId/+/nr8//SexsntTyenLxbEz4ftOFIu7/LWB
LV36n7gfUAmK6gi7MGzr1j+p/uG7nt/vX7FihejcQam+vl71779E0CAmAACu
pkESDbKwNDU1bd68uaSkJCsryzz7N0rKhg0b3n33XdXnR8f/9Ora7w81P7Xp
5c1HA3+5Z1lQW3HHFZZQwc2lpka0tcX6vP2M2LO0a0pl1Ezxb78OLMfaVC5u
NoZbRoil9SHXVkIKS+T38jq5NzBxf3+j3eO7Css0ccj+PsmxOHy+Ukth+eIX
T7/77rH+fzDoj7nFZF5envZbTGoQEwAAV9MgiaIoLI4vKRbv7XloqtlNri9/
9b8Pbr/3+z+tbj7S/z91CbO5TJ/+tRg3lzNi7zNi5pW9r1SNEPc+IfYes9vU
/uwhYSwKM25o3FhkudhlvdHxyXcC0y72bSWKEjTIY/ny/ZbO8p3vvKf6p60J
v99fUVEhkmCLSQ1iAgDgahokUYSFJWxJSU1NnTVr1tq1aw8cOKD69MfO8eby
681P+po7F/5wfvmr+rSVYPFqLmfEsUNi797AcfAP4mTYNWC9j16XQozJlGC9
L5EcaxY500Ttoa5Wsvc/IypBCThOnZoYujBs7dq3Vf+c9dHc3GxsMSl/seh6
qUWDmAAAuJoGSWRTWMKWlG984xuuKCm9HH+1/HpzWdhlP6z2uXD918AENZeh
cVktZn8M5FLIsUYxLUc0H+v6h83lwtvHfEoi14OZR+jCsPPOO/3WW66ZeHKF
6upq41KLlltMahATAABX0yCJLIUlbEm5/PLL3VdSegkewA+sCrMrLMcP1N97
vRDX31t/wL7XHD+4e+1C49LNZd9/qHrPQSdON8jmsm7dsltvHZPI5hJ8KeTY
f9rtGmnsLBn24ouxSKxng8igEnTmmPjP+OwaGfaoqdlt6SxXXvlH1T9Y3cgn
qrnFpM/nU/17MZY0iAkAgKtpkERGYZENpaioyHIl5fbbb3/iiSf02Cel16qw
68ub+64iPY+0f9iB6h/2zPIbi82W7fmTcy/dJLK5mPcfLqoMjLoMoK0EXZQx
x16M+4yZJWhykfjN3gTNsBjHqVMTMzPbLZ3lwQf3q/6RasjcYlKnSy0axAQA
wNU0SKJf/OIXoSVFntyqPnOJsd79wrhXWJ8P7f8Ky3Ff9b0PdI3t/+nV6q7r
LGMX1h+Kw+ceY0ZzufLKYfFrLl1NZHL3WEq4wywgFuZ8ytlj4vGcngoj//P+
znpTVCtOJrCtdFWwQ0WWwiLE6d/9Tocu7zStra3GpRZttpjUICYAAK6mQRId
OXJk7Nix8gu56aab/H6/6rOVuDgeuC3YwocWmtdY+lsV1q8/+ZqDFoB1X5Rx
R2ExybPBlSvvj2tzGeTxfqNISRG1fvWfyblwC8NGjTqm60tGuYaGBmOLycLC
QrdvMalBTAAAXE2bJPJ4PPJryc7O1u4E7PifmqsXXp9b/uqR3vcKM5dvHTtQ
v9VrLuX6U3N9dfXGh74/dOi99Uci7TRd73kg/8RRnNhczoq91WJyiqh8R/Vn
EnTMneu3dJb585tV//S0JX8XFRcXG5daXL3FpDYxAQBwKZ2SqKqqyrjO4vb1
YMcPNiz7/mVBi4ymPrTH2DvjUP3CseZFls7NIo8drF9V3vXWXnMuQxfWR3zj
4+NH6u8dKt/hQ7vdvg+6c5rL+40if6Xd/IuSo61tXsjCsHNbt+5V/XPTmXxO
mltMuvRSi04xAQBwI82SqL6+ftSoUePGjXNzZ/nvg9W5PWVl6PeX7e7ZxD5k
Ut46qBLN4q7jvuofXubwifuBck5zcdpRW1tnKSwXXuh/910n3iBOG+YWk8OH
D3fjpRbNYgIA4Dr6JZHP5xs2bFhaWlpDQ4Pq85QoBSZWrhlqlJXt1u3sjx3c
8+TCrrcG7kRs6RjdhcV2Kr+X9/Y8NFVcc1+9I+9pPHjBzWXXLtHerr4yKD9C
F4ZlZrIwLO6am5uNSy2u22JSv5gAALiLlkkkO4txYuDezhKt7u1ajBsaH6lf
aLlxsfVGx0deLf/hUH3bSjCzudx559eSvLm0t2eNH3/a0lmeeMKr+kekP7/f
b24xuWrVKtW/KSOlZUwAAFxE1yTq6OhIT0+XX508PVB9kpJAx18tv35o9z3E
jMmUYL3vLXb84O5lP7x+YXVz50qw4294ve6cuB8omos8du2qsRSWL37xf954
46DqH05SaGlpyc7ONi61uGKLSV1jAgDgFhonkewsxj6SK1asUH2GkiADWA8W
2Ktl+veXNRhLyo4fbCgtb4h4SF8T3c3lq3fe+eUkbC5Llhy2dJaJE99Q/TNJ
IsalFuGGLSY1jgkAgCton0SLFi2SX2NxcbF2tzsOFbQe7L8Per3W8ZYeXTtL
9n3xJcnI5vLoo/ckW3MJuzDsgQd2qP5pJBFzi8mMjAwnX2rRPiYAAA6XDElU
WFgo9Nyipbeu9WBCXLOw/OmQafyeh4W2lQEN6ess2ZqLz1dqKSznnXf6xRf3
qf45JJdt27alpaUJB28xmQwxAQBwsiRJImOLFtlZ3Hy74/50NZGh13SPpYTT
fRXGwjqMn+yM5iK/Mdo3l+XL91s6y8UXv6l5tXee1tZWc4tJ+dxT/fvSKkli
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
CsZRIhZ4VSPzLIo1W282H7XU15rrHK6eH+MLjApgCxEf/F479l1UmHWsYWWr
Lt48klmIh3oun2t522o5bNC/1Yw2N73Ez/3M89ig19XShPLJUn/IaDru9PTn
9Iju/ybGKCuWlGSiujbc63Y222xWs9FEmoKFvHXPkOVk5DZKrpUcgGMOl/dW
5Eler0KanUazuRYdMdvbp109IVQSCiQsKzNR9EOOOnNtveWo2VzvIN7K8o2P
7TO/93vOOWzHLfUmvaGuBe6PzhD1+ZHM/Hgw+8ji9PyXeiQakphfQKKoMIkE
xgQkNfmj97wNNeAVbzqu/l+ygK2TrDsySMrgI+dstmMCYqxFdRgTEA5huXKF
MupHb7vNYtZXGhyfjXKvSCg0spK5jY472rNOtEVzPaqfaM+60BaZdPK5V1Qs
f+zpPNvSfMxirtab3nH13GE4CNSldrHvEWAiN6hABQzV484Wu60RtREmo6mx
DdPj/Jd8kQqIakadxdJgs5/GR2Q5XwgtyVwQvs/9bvvlD904E92wxxeKjPWd
M3uihYqe5bkvaW0h8hV8ud1hJQKDai43JIzd6nzse6/rpB1VTMsRk/GtRqw/
PPZE+gjmsk46t8V6HHGQYzwF2yJ103YEVWerzdYobL3FdYFdZpbwkqjF6Pec
cdgb0VHWV9e2vB+IPiOFIPN8IvgR9eggak/76Uck5NkT0YZR2CPziQpqc/6L
9gTVmnqjwVB7Ag78TtXMWZ2fuJV9ZDnj6f9duJxOQVPDy0Y0pu3pPHey2Vpv
NhhMzV09P06msl+QHq4oKUgyIZywIJnkgFOnzjsViScsjBCfp5uZv0Odh/FP
lJvae4bCY5HIWHjouosskqyCDG03RqJjPcfxNohLXvB7LZnNchKWmK+RTGTI
r7ITFuwx4220U8+m/E3lumOXb9zyt1cRn2WteiB/D5x4A/99uaX7fxEcYyPf
djuqyEzK9mmO+9sMyPIFJGSWViOOrtTAY3NkPwomLPTREgwH2keeb6oTHCyP
uirOhrIdQfMXI8F/V3hB8K3M30Md5jrPXaaHRdJ/hToPQeJT/sziH75GLDsy
e272tDV19Y0llnBxQa3rg5vtb0KqvbXwHU4khqSTYbcZY4elLzHV13a+b2I+
NeWrh7gjspaK+Vv0lbXwd1mzjJqCAbi2vLrFP57K1VZSqQqUsMgkhzpNe7SW
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
VWJ9Zw==
    "], {{0, 522}, {1083, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{601.2428571428583, Automatic},
  ImageSizeRaw->{1083, 522},
  PlotRange->{{0, 1083}, {0, 522}}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
QFF6d8AvMkVzR0RS11qKAZYsWYLRo0djzpw53KyTN2QKYVUpmjYLnHJ2dkav
Xr1w/PhxYSErWzbkNwJFskZaGBAQwN9GYyA5JMNJ9srS0pK7X/NKUbVJ4JSF
hQW6d+/O54DeTJQxTv0lcEpknkgU+SNzc3Ns376dyxQxmSw7yRT7zKRSNG0U
OEWRV9euXflDyRaRnRrzG5miz8hjkytRU1PjhnPs2LEcsNAzmOHk0Ztxpaha
L3CqrKyMNwXv3bs3bG1tRTs1UeAUEUVcIpmilQRqaMoCSR4DUnBI00fG1MnJ
ib5qWCma1gk0EQ1kZAgXuru7cy1jNE35BSGIVoFmklSDZH3z5s0YMGAARxf0
2Hfv3vFviZkulOYiMSGOcrmyxZUidq0wrTRlNDWkYYQtGUXsbfJTPEjORBxD
VBL4IrS3e/du5rQZ79gzd+7ciVevXpGcyabzZ1ZD9pfbGNSyPnodMEBIbvGi
ShG6RiA0ISGBny9LAh4bG8uN7DyBpb/CUrJ55LXIBdH9ZAupudLNmzf5WfsU
+k8WnlsU9QzDW8jQaqUWnGMzUVRYLltYKYpXC0/++vUrtxE0qaQRjJWyRUqC
SUJJv+Q+SE4oriCLTUJJxo4Ek0AdY/8E4ZFAPDTmt0Pt/lvhmscXuSpJ7Crh
yS4uLjzWIKwjoselv0gsyQDJArGa4AZJLLkK0iTyfeTTCC+xe2WDhXcVZ/1E
VEw834OuvCaelRiFqOQs5Y5Aoa/XoHrDjjjlnCSrnMysFAZFjpZsFtlREeyt
UjKiJNwkL6SKtHRJGGzr1q3cKY8cOZJbdlNTU5Kn/vyRjYGiHzi5sClkVetg
0HYteKeJNTOF+Pp6L4a1qYYqrfti8TVr2s7Ff0rD76I/05jhau94WUflZmyF
MDhCod26deNPoFkhrq9TGhyJGCkEfUZIljT3xIkTXCRpxkghKE5jWt1HHFxx
FHSOj0O7Vq3QrEVnDFutjk/UHT3ZDLM6y5eY/hi/BXdemsDkszcyS2iTx0J0
rCVDrWlH8C2/srqzXBgcZe+6dOnC3ZqIijfzwdXl4keDEnXnw4cPPMb4+++/
+awtXryYiyYDEMIKHC25lPPnFBdm4/sbXVy+oA1NNlI680HWeCAueMuXL9PD
viI6Lx/5qZHwd3jOnmNMG9EqN6il/K/cWRHQGDx4MA9SyVUy3dr2GzUjWmkC
CQRRhECJDPInFMtSuE+PJ2nuJfAr1UMLM9rIZ6jxeFV8KVNUPRRGWmDvlm24
5hxFq0cLKjWWJcILaRJI9ydOnMgNHfmNPUrSJ8JLGgQtEz179owPglSLUDjZ
GVIt5pW7C4/MD7yFvnx5vRama7hyVRHHEGaykZ8mPvKGKxUzV24Mi4UXkksh
9zBr1iyEh4dzmHzgNy6FxkGQmugl5pOBpnFTpoOiC3JHbG5lnYTn0iqrk/o0
+a5UWRusNf4h1djRyRe+Xj4IzSyppKosEt5GMQ6FyxRF/Pz5k4/iyL+kR2jE
BPYJR8+dO5ePglwO5QJYDNdBEFSUfsbuMQ25NNUbvQInTt2EkU/iikrRu1Cg
l2JF8jQEkYg28jSq/5I9of/39PTkmI0ib0K2RPeFCxd49oS+K18ZrMc3aoYG
fIbl7YVoLJOL0Yw7H5GX4oOLq8djxLCRGDt+FvY98aTte0sqNZgFwmAI5ZKd
IqRLDKZ8xhmlgIbUQETwpCZkcClnSAaY1ICSLtbW1oQPWojjyA2A7oWVmDqs
H/p2rI/afRfANEFec5od9AIbh9bjE9N65SNqYVG5ccwXxkFpEYqDyNaQXSVn
cu6XOEgUJPqc1IVWQEiNCV3ReDZt2sQ9KPOWQllMNfacdKYeMdwBpaWlijVU
eSlJSIzyw+eQn4q+VUw5ckLg7vwBX3/mCEbzfzuuv4VxkR8hJ0l0kbmlcV3+
JTSnMdE8kRoTfKFkphi1rFmzBjo6OmTC5LVP8jSVzoNHuKCuhXPq2jh37T4u
XLuD25p3mGx/3lQpuucJdBNf+/Tpw5W1tLSUaJVd+01WiD5TzgqRfyAfSAEO
+USK4Al3ioXoZmYW2LT9AO4/t4OrfyL8Y8rwLbYM7j9SofviPTbuOATDF8Yb
KzUIcS2dCKQ4lNJURAj5CA0+iIYVMkj0/5RlpgwSOW+ySjSIixcvMAo0sePA
abh8jUNkJhCSTPVYgT/p+cHJQFQW8CkkHXuOXoTxy1eyDZWifLZAObGXkiGU
MyJgSMHGHQF+/KoONAqKjJ48eYxVK1dg9ITpcPuWQtQyU/qDH+EQlgZ8DM7C
xm0HEBQctL5SRM4SiKTUMy0BEO4R09A6Qugmyjb9sPmExgNTRGQAP+KoOI6I
UuH/1jN2xN37D2SVo2imQBGF14RSduzYwVlI5vkBp6g6pygvLxfbd+yGhXMg
wlJ5Dw5OSXAS4Oj7E4eOnqokJTMESij6I/0hR0d4ivI6ckpqcEpycnLZvzJw
hSmuy9dkokBOTHUEMaP6JbII+w6fxsuXxlx91laKqOkCUYQfyFmQkSWpIQCn
K5ydJs9UEOgrYLoQAwvz19iweQNcv6WTzMuJq8WJ+xpdgtXrt2PY0CE8UcDC
cQ7uk5OTK7dyNk2gU1tbu0Kqh4ymdgVEkc0rvjMyChEWFs+4ZM7GpIrbt/sz
Q1sNW7e1gIVTPE2xnO66CEkBbD0jsW3HHsTHxfLlKkrKEv3Dhg3jMbKQrhJi
gP/tIKYKg6B8JuXQyEOLEcQ9PogGErOzs4nZ0Uxa3jGIsYfFiX+xSaqJz59l
7Du0GCmDu1sLXLz1BOHpwmAags7mvXrHEPoGz7gzJOdBr6AgnwSPEufiesGy
ZcsYX27z3AqlvSqXtZEnLWpw1SY3Ra6X8JGQYtJSMlF0S04OCRlNUgKbJDOo
qx/D5csD8fRpHWbWZEwIZRxhUx/n/DwZTqv1w+t33xHDovWABDJcNOAa9P+g
HYKWTG+37TqAiPAw4mHV32TZyBlR0oJSLZRXIidKaRtyxJS5ZTyoHHifJMwv
mWDycgTgibmUp5aPv06F+fX3j4KlpS0b+26cOjWUBSI14eEhY5PGK+RlvES0
OtTOXEGfAadg4eiA2Dxw4xjEzBIpHJt67mdeWHth5dot3Ckz/a3+mzyxuHRE
CT2qEiG57t+/P2cBhQ6Uo2RiIvj5/y0PxCI3WkygxB0tPhB6IQ9wW0kG5PA6
j8tAeHgCV1R19aNMNwayyLYG/Pw4H3ghr4yN5OPHXahbl/4/HO07HsN+1esw
MHdmSCGFIYR0vLTxwdlrbFTbduGDsxN/Xx0lw6CcLCSYJCQLecBEykDJQirt
YXTPrhQDxHwYoQYx202SR7b6liAE6emEMChDXoTAwDjY2TkyKdyPkyeHwMBA
LgTs9nrC2DMy+jJ3n8T+H/y3evVc/D3vEIN6GripqYPrGjrQ1n0Ek9evWBgV
z9faGvyCyMRgkcIssjtkCEg+SQkI9d+6dYsjZ8o/Tq8UA8YLDCBVIz9H18Vg
6vpvJCAjo4Bh8BRYWdlAU/MMe+tI3LtXU5KABvzFlKCrgxMnbMBrifnfWsyK
foD/V29mIbLxk408IT6OsDwbLUlWZpPfpDTJElIpBCXeCJ5QdpBSmpTiJHvF
rMCUSo1/nDB+yvBRwpzMi5jhu/ZbAYhnAuDCxnyS4eKRLHapzwWAsasxf2ct
ptWHUb8+JAFo2TKCEfaOGZJMYmVV7kHkK9epvDNJqqzZf0iQiil9Ek3SUSqP
oGiPIgxC8xMrNf6xwvjpDeSqqdiFXBC56iu/zH9ubh6HFTExqYxfduyNZ5kM
jGFwuw6LSbkS8JJbGT8HegSTpzSJCTJZBgvUTdg9MezZmeL6r3LylAYtJk8p
I0KmjtA7/T+tDERHR4+r1FhH87/yNWkK/Hv27MnzgkJ5xWVhuuURBXmhEq7v
VlZOuHPnJFPCMWy6G4rT3UyS9NrYu9dZSdJVmDt1Yfrpz4aWLev8L7pNSJuA
HCXySKTJrompVLJ5jEqhEvx/O95RwnhpPvfu3Yt+/frxdUohDrzwL9MbG5vK
Hd3Zs6pMz0ZDTa0KA+Qydo+MH3tAx7+Zm19AtWoKGW/aNIgf01BUlCXrrjRg
5diGFohpdYBYTw6XhJn+S6iGdJkyX39VasAjBWEm9lKOkN5Alp3w0gVJmSmn
WMBnNyhIPrsaGqrYvn0QE/4GzNzKmATwZBDJcWzsKCbH+dJAq1ZNY3bNgQ0q
mR7V6z+kXCmIIbUiSihTS/kmct2UbyLzMrRSYxX3GZGLIPBLv+TGyZWeVZpZ
eYAvn9mEhEwGHBxx7twJZlFpZqsywy9jA6HsonzAwB/YutVbSXFL2Sy5MUsc
ymYzs/8vqVkxJ0XlCmJqVsxJKaVmB1VqrH8JY6VFc4qkKZlCCXvy0moV5pXy
AKVM9RKZNLozVbrEBH84I+wPhqf5ONsLwzQyusI8s0KA27YNZazwZWJBK+Sp
g37J3pJLENc/qOaD5pGGSBkGyl7TmOgzUtp+lRrrcEFpKWFPCktLR3LtzCVG
npSmNvWXqc1ijsedofKzzDdNY0pWnSstTW1HYcxBQfPQvn2BNGYVlRTo6bkx
gSVPlDbsl1yvWPtCi6BkNmh5nHwwzQABRSHX26dSwx0mTC3JCeXXKNoSistk
J38ztWFhiUyEPfH4sTrzJ2PZPLZm/5YxopmhFSW4AYuWvipJMAtzV39ij4yi
x478F5Wl/yeoQQGHmCKmlDZhL1pVpci/R6XGOlQYK/lYiihp4U3EGsd/M69Z
WeK8uvEyv7t35zDMUVua164QPVA15of1UKWK6IGqYdAg2kEayPiWSfI89pdU
Mr1WBBf6+vp8wKS2JM+0+ipUgXat1HiHCOOlb3fu3JmjeHGB8dgvc1tUVMpi
9iRYW3syvqgzpz8GOjp/MkJk7E7OeJrbgICVaN68TJrbmjWTmS/6LIrwhP9Q
FUh4+cWLFxUyzQQtaDZYzNOpUkMdJGgtQQty6FQZqLQy10ekKyOT564yM9KE
ylN2LZ3NNq0U5tM5tPRXBbnZmRI2HCnBkopS4ejoxgz4BYZYZ7FQpBb7t4zN
NF/II07l5XXErFlhSlpQzKj9zpiRSKyZqqQFyrlrQiVULEKVgGLqgZAncYmW
3yjiaFcpVg0UpIIMGhUakTkR68P6KuX4EmMjWVTxDTE/U5DBETN9Vo3xKx0/
o4OZTrrhk7d3Vb48qwL/sFjG3nR+03CBZfIEXR43HNHRKcwHeLJg+pokXBYW
Mmbd2FvloObKlddK7Cpn8CGIcTqM8SddNlPpkeLCkpAN4usxFJHSYgq5YWYw
K8eiAQKLaDIIGtJEhIWFceHoKyRmU1MZci7Kgev9fWjQoBW2aVjjJyMsg1nC
qoJoZWTn4ed3G8wd3Jr9S0bvRtsJxxCUnovs9DShQE0uWpTIJNFKSsplrP3E
EK8GMyp/49Sp2swAcdHqL/Dp06d1DPApg780Jn3BTIfTZXPEljSMT+Q8iE9k
YMiakrYRsmVAr3L86S/wh/AOqTHlxsTyxH4Sf5hg5xfgh9l51FapjwVnXyI0
LhEFxYrDQemUgaKiPER4GGNK75ao27glC4I6o22f2TD8GEsHhjBx/VWWSpi5
SMOHD34wNNTEmTOzGM5oy5RGxuaLSzepX3Z2PybZCUryVMDA9A8mM8lE2mwh
hUymnsTIy8uLL7mQYXr9+nXHSrGnn2CMSKsoZ0SZE1FmGYToIkpHZjZX+exM
Ubnq8h442WyUdCZDRro8QE3LyEVOgheWdvoTg1feQlJOOmwMNBkXVVVVGWdU
L92Be0giCysKEe5uwqDHNbz1i0Js0Gc4eX5FMhtjempqX+EVFYUth/lcH17P
d+fOMty61ZTbMXYjM6UyblblHq4us3FWFWKsuXMjmPbFseekS4VmotTRf2mp
l7yOUDUlq5yB7yuIHBl1gmVUAMOZx1BBV/72ttwyJUaHwNvnM6JSWKSXk8U+
SeGqmpWdgahAP3j7ByIlKwfZ3FSloyA/DQZHp6F6u5lwDI+H4dGFaNKgAVNp
9tusH86ZfUVBIZuQgjxE+1pj/4HjeOIYwOYyA0kpqbLevzF18fFpDLB9hYHB
PQbaaFG+I6Obi+cwQYVdXQ+gXj2FCrdvn8ywXChjnshMuWySuyY2ENal5BMb
fpdK8bGPwEcm5Fw27927J9X0y/nYjnfdLmRg7fLG0dym9pm9H++/UlYyl/Eh
Bz6mNzGiY33IGrbGwj338IONNyeLARvGI++nx1BX9gdOvvRDUWGu/EgX+k1K
RGJSsuBVGeZgACjExQDzlm3GU49wFORl9fhFQCnpKxfQz8wSarGIaSmDp805
3GT+iAvocIGfaWn9WYyXIvGzSpV8BmPCmW6nCK5DXgUp5rROnjzJaxeosJDg
X+WAVm+BqfRtKmClBXUhqSHrxt/elDGVCWRGPJ6rb0ePju3RqlVHjJp1EM7B
aShi2r2sfyPO7D8HLsKdp6Z46/AB4Yks7vj5Df9Pe98ZXUXVtj0mpFFDr9IU
BVFBKRZUsCAqRRFFQLoC0nvvvfeO9FBCD0F676T3QCAh9BoSivRyffe1Z885
kwi+71ohz/v9eFgrCWfOnDl7373vob98gbyZPfFJh3m4Kr7zbYbsacV58fws
BVNu7saNFLEPbmP14EZ4/fOuiLhym6fkGa8/h0YvXCCNhslmZ4rBVFs4v5iy
9eLj1aAAMv2d8waWrjRw+rqhTA7Tts+M1q0P2cTqU7Fdzwo7XJYF3fhWk65l
0TB2ypAhs5vijr+ZLiiXUb89Ff7oldGEZ8kY/1Ho8EsFDCbAc4sopfOdouYw
JadcR8xeP0ybNA/TBv+ObBRhHq+i/xpOPBeOPRGN44nn5ePXcfpEFA5sWYtZ
87fiTNJNUejW6Wrm2WI3rl/B+QsXkXzbHEcW7TsA3iJ9RmyMlGXcEW/PIuOU
VGR89KiTjEeNyquMn8uXDRHbnC1PGGQSfWggwM9A9x4GYq7IQ03q3rKlhw7n
mz9vv31NEHVGGDfZ+MZG3QQ565uYUWJwjSLY7GFIP9yzKiVBCqVQb9y4sXKJ
mAmiZUQnjlVxuuSEpGbG3XLJf5PVJbL1vQdiO0duxS9v51WPylG6MQ6dE1f3
VrLgKEWrvGS57w6C1k5Dg4adsD4okfa4iyZiU5hfR9C29Vi6bD1Cgw5gWMuq
8jgvdF9yVAmpG0lJr9po/vbtO4rmr1y5KViIwerVi0R11hFP00Hz3hoBeGRg
UnsD33c0kHhHFXsxpr51ooEqFQ18XEX+8ucTA1tizLzihQAD5YoaaLFAXj80
0L+hgVaDDVx7oKN1njh37kuUKOF0/D087okAPifSifOakmporiEQScjMrDCX
Sic/PDz8rZeAvSyq+IVaxGp6IEsyKkYpyAgKUxosYBJXzOEGaQWr5FhJTWcp
dx7gRqw/PsnvLgt4BZ91W4obsuhkB5uI7SeC6MH961jWtRYY2Rq6MUpecyiW
86BCHvydcjEGM7vUE9nGKq8sqNJkCI4mXKcyKfwPLronV+6BrX8LF/4pnNQc
U6YUTsVFuRRMOIrCQNNyBlxzG9h93MCjZ1Z21BU3Ewy0/VDVVypLhjmzmqNN
TK7rb+AVNwO95Jm4a6B2TgN5vzQQctbA/cdqookV3/jjj+BU8Y2ePS8I7V8V
SN34WmOTKydD0uJmHQU7sETbpi9cY2Izj0pJkjz4cP6wiptuI3tk6QoR09RE
dB9ZiUNeZW8EnXBilCFokprmVZNbvE3ee3QX+2d2QjYXQ+XTmk/8C3cePqDP
rLjphtY4N+SjlxNjsW9/CM5dTaKczKS3niyW7d8pl3Foz1Zs2noQ58QYu30z
peA/ePKx8OQt4cnjQvM+otwbipB5Hdu3Gzh50siv0bltiIFsRQxsEtQ9uC3s
GkPUnThhyILP3TBR9+SqgT7Cs4OnGTgWaMDX18CV+wYeyvvBYQb+fmret0Du
8XrLQJgYuOKI5NMC1sdncqpoZJUqKbKyq0J5NwwLn7TeyRAMuzFTxTJNAec7
LwGf5iACBruioqJkb6GhoSJ0GBtikw2T4qy1ZA8eK6vIvczNsMGLpjBlMYNm
TElfunTpecxbQO0hp9Jfd+4/FupORN/a5ZQMzl6uFoaOm4HVO4Jx+8FDsYjp
Nd4is6qJaUTmfbHsbnK4nIoOWHEAkef3H+LRw/u4lZKcXzMsk3VkWJYskGFD
Q2PFElsg8GkhDFsM/v6vCGgNMVQMdWoAT5t5kmJg7RwD7f8Q0dnGQM/hBvZH
q2lbJIA7EQYKexro7CMIFSKonM3iXU+Uqi3eikauuL9YOcXAX4fN17fvONg+
cYuBIpkMjN5pOPg4IaEmXn31oQPp3t53hUcuCFmqjX+VxkWkN0dHt2LFikyR
lXsJeM9kxztxrEZVGHkREhKiUE62JvqZluP3k8X5hay4YS6edEhWZ0MyqwaZ
3mFfDPFOdWxjcSO3rpmhi5l87SIiQo/Ad2JnFHIxq82/7bYCKbfPYUanX1Gh
XHlUrFwFbYf54nzKbfJ2iTTMy4DhtWtk3lgBx1KxpBtgwoRSyg8X5jUVqpeY
tgZaf23ATfD3U1tBwAgDv3xlIP+rBpoNM3D1oaG1bCb0rmDgjQYGbgnuYkME
xXv3kjmPioK9q1HMnwfC64MaGZi50flRiuuabxt4t52BpxSQJoqfPSuC+vXt
oehnIgqvqiiAyDELxbqGS9VzUUzTZb1w4UL5jECxp0JxHoVeO4cTvaxHoXih
BGctO/Nn1NEUNUyMaw5XrM0121g8h8YuI5y3riZg8aQe+OG7Gvio3BvIUbwq
FgecU2MEr508hO41Tc4vXm0g4pLF90u+UfQF3BsWFiuWw3yMGdNcAFcUK1YY
OHNGFVVpdesK314mAf0y0VCRHYUVsaMW9zPUxP8PfxUj6a4ZRiCuzol8/pwt
DkICR68phco3bwmXVxcK8I2wtHUmRAkxFfc2kPUdAwn3NVo9ZEULbCiFwIrO
z1VxYm8YX2qcWs0ljOwwhsfKen9///Qlwl6A0yzPYVu+RbYljolXZiJplzNA
ScebbMtkHdmWXgzZ1ioEJl4tts2iA8UqkHEjRdm3Sdeu4uypaBwKjMVVwRhF
9c3bf+PmtdPYv30bjkWfZixWLC8nz968eVsp3GvXbmue9cGgQQ0xenQprF9v
yHp1Rl1gL0r219dNpPqGarwJToUHx/xkXq7T1wCTsi76I0nxBnzEAO4t0ntz
iGZLDzx55mRb/nQTy+tDkQL3ntnIIdrAolkGOvUxsDPRUcAQHf0L8ud/4sBx
4cL3BcpXRBUp6fy5LeJkOfXMXVk1NNR6FTIC194K194Kzww8k38ZmCfOiWcm
lWjukX8ZTST/sqyA9jVLRsi/Yui7qLojV4t9tVGcpPXrDaRwwKow4v17d2ym
dSZTG7MF/Q4zFNcLOvg2WUllmsk3btwT6+g0lizxcfDt8uVOvs2vAX9PTOM3
spv4XBfu4Ll7gsqPxXI2xBKeus+hQQOERjbtN/AMFnt64IFYV4HBYl0RvTcN
NCkmH6ts4NQDSzK7YstaA1vDFfodFToPHxZEvXqnHbh1c3ssls11sQmuUyx/
bmNhWtB0MhlFYKZCRGD68vYvQGtuotWFHCwUaPEvq8HJv1wAA2XMOrMWknhl
po6JGfrYxCutcMsLtqvdN1Lx4C1VzpgsQjc4+KQ4L2uF/5qLDCgjjugr5EEr
EpAUJL5HVo2cCIeeW6llbclvRKY+cbDf/fOCM1cD+T4SjfrEgR+6owdXizf7
hXwin/nJ+gOVNnWgOzlU3HC5XrqVXIfW2+RNV4wdu8yW03QVNcRm52sM9BjV
bPxHMcvwP4NqtlptxxzPl4qoAv/Cf/RwmCjr16+fqvag/mTU1BqDQP3J8krF
f6aVbOe/HLbslzXgmH+JxszPYTQqyOPHE7F06QrZYzth8TeUgjwr/uJDsWte
1SC+HSXgz2GC3yfAgctk0YNvZ2NlnjDaLgcun4nq3DjTwJJN4tZA3y2/RZQe
W2WgnUjY8euE5x47rZ+ntwwsnC7C+rDiT2+N/qCg5vDwcKrJ11+/L+u9Jmom
SePP3VHpxqIKOouEdEBAQPrqgF6AusJ2HqO9Q95i4QrtH5qu/CaW1rFjg5Vn
1kwN6kiavuQxS0daNpsTOV6mMmAkUBCXkBCP6KhI9ff27VvWNArtvjj58eFD
1sXfQ2Ag+XGDSMzfxNZ6G5s2ucr6dO1GJjwR4flRbhOHozY5sfLYQNfq5uVP
OigOMt7U4L99+y1Ur+6Ucu7uj7FqVZKKSVe1Re3oXNAvp9VHn52+HJOxH2UE
Dopr85OmClnGnPwZo1iJRSbMFTKBbjUV0lxhxSsLPumAMuVHmrFMUP5fNmFC
Nb9iGbaKsX5h/IQpGDtpNsZNXYBJMxZi1JjxWL9unXqfbGeFrfmIv/+29NYZ
zJvHUEA78RZLi956xcFOr2lUQKi9eQkT5o3maC8xEw5MMNRhCC6lDARcE7lr
CbK0hbCu6NTptiye355kqMoMF1XKlMkReSMBCnGmr/zvBRh4XWGgtMKAxQSW
EGOdC7snmN2i0KKRSCZgCIcCjAE6MgzBx1IHiwkIyjtyjSVQY8ZNRK/BE+C7
JUS1L4WfeYQjsclY+Vcg+g6bhCFDR4phekKt+9ate2Igx2HNmvXiwDVDnz5l
hERVuWFpTeHDvjMh/bZ4XBdE3yffMFSBB9+7IQ738a3izHmY90zZbWi4M8PV
GTlyOIVPxYr3VA3AnTtJetyIu8I+KzS4fbqwTFKL/fRpRoC9tAJ7SQfhU+aw
no3g58dZ9cpSI1ZEUr8T7KxzozJjL4iu7VOJrIGDh2PKfD8cvwKclgWxf+34
Zaj2J/YbnEqCvL8R3Xr2VuWkI0e2x7BhpcS/FNvolCGySJeJuGFpPxN07l4G
yoiX83ZZgvett/heWXFoy75hOlG8p+ZYq+aI6fVK4v07q9yzZn0qTJeihMsn
Nt1MPiWFzJs3z+FKiquh645fMozfVjD2+gdpE84s7WJzKo0EsaGEFwXCssnm
zZuhe/ceGDllseoLPHGFOs9sVyFM2a8xbqYfmjTNiSDRmE+f6noRN4QuN00X
KtBGA0S3LjFUKI0hpfnzxQFdKNc/1cfT/aDiCq85pILnP4qG+/dnoEtZoEYV
WxCX2oYUQ8uPIPT19a2WEdArr6CX5R8Uyrf5cWYVBw0cgLo/N0HQqbuqg9LD
1ngXGPcM3Xp9r8tExCiMM1CVVt8rBvr5OuSk3xgTIoXLG4i7ryHCHFP/VCHQ
qlXZB5UkosYqgXI6W+RbVhEzA8fub07g+jwjQFJRgcTdQVAkJs5UGj9jKZnO
7OPyUG1N5MGZi/wx789fwdDN06fMvrio3KzS1E8M9Kxtbr1SSwN34LSfQpcZ
6jwcD3F6915QlQoEyblzH+Gdd+44QJInzxPRkSmijK5rkDiT9DRfuHC2yG7a
tOnLjIBGZQWNTGLWRGHmrNlYsm4/t+2loOClpM7KTfuQJ99+vCq2Z/36p0WV
rxJ67SBWL3t5vdWTueOgPw24keyLqB1bgLi0W6QQLxcwsDxWGz/klpxo3To4
FbeMG0fD0eSWD230QYeNtcGUpWxEpy1OZ/yrjIRIlILIHCxZb4OIqwmRv3Yj
b4GdcpPK+aJkySeoVClWZM4WIaVxQlJfy5pZfZ3VeF2D4el1Az/qAEibeQ7o
3IkWIy+LXM4jsiVaQ8cDa9eOFNvOyTm1azPzzxpeCzLOhDg9RbqxzL4dO3bs
64wDijm2iDJj6LjZijvYCOih+5jJMexlHjdjPTJnCfdUwHGHlxfw7bcXRTTu
Fwk6TGySBqJB3iupAXBgtsknucTHj7WC65nwMNHAlwXlAbkMrIjVLUjZmJJj
yYsql50tnxw2zBAv2hBjQ5ybJYZQiPn6wAHTZRKt6AgcpS2Vzp//qbgzKZTP
urrQmfFmlR6LSpnJHD16tLKda2QkYOl6HjywHy1btcfBqCSSmQasJ4UyAuOf
oNEvX2J+/1oY3XEeGtQ4hGIFryNXdnhqKixYELLea6KOD8r6/pS9NQInIIqQ
cbiNuGeg11cmFf46zhmfEbH+cXaxc4saOHxNnQvGnIZsWrW70gEdMsTAnDmG
qrlngptJUvYZ0PaIFiLetMm8zkTbggUGOnYUgl5s4NAh1WXCJ8pPNjRsGG6x
u4u4p7Nn31H2xQc2oqY6YC0R3TV2RonK/zYjYP+Bhj1NiukzpmH4xOmqnZNK
0DQXsiklGC/XBo31wdTe+XF+s4HT/gZOrjcQtLQs/Cc3xZgOQ1C/+g58/O5V
ZPYkxkyEcH/ly98RXycKw4dPFjnfUnb5uRKahTTkbwr4vi8rt4utNnazI4B5
aoOhCkpe/1mZGF6ahO/eNeAv3z55svmzb59ZtsQQnJcWrI8fq2YXtjSJYJ06
ldeInAkTJnNFDmH700/sxWRlepJRyUrEp6QozWN3HQk0Vgh/l3EoKCIoCMGB
/ZGo9sUIjJoyX+TII9VJHae7bNlte5avrwP9xyxHq3reiPIVT2GtgZjV8iP8
f2KdUKOf8L1QYeImLzHlSmHDhMpoXbcZGn2zCm+ViEf+XA/h4Q4PBQNPVS5X
uvTfYjZGY+LEVdizp6cY5e/LfomfTGZWzwu3Thr4TYy+LDkMNBtkYNdBAzuF
AL7j2Kv8BhYFWuDPJJs2BNkGTUa2UefUWLl4UVyZKZ/Dw+O8AwNlyjwROLB7
7LrGgLujvpYmPl0XJmLFO0tfR+y/Aj+7qKsAjBp1RajjHvLkXYSGLQZg4bq9
OBB1G0dOPMDB6L/x55pDaNupDwa3y48wH9naells9GpWWBD2JzeYuOjcQCSG
mNCxa7Ji9+w6mDegB37/YRm+rJyAkoUfCZRMpZAv3xP8+GOiaPL1QtAdkZj4
g8j24lYyhqm3DTMN1Ksl2vEjAx9+LJ7KTwZWHjJ0bieTGJKmChgzRlXb5LY+
iiJC2nEOKc9gla/vHcaBdW2008CiNqOPyIy3+BF1Mk7Au4qMDBA2PI7ChZ9o
AvDCq3l2YlSXDzF6YD2MGNgSQ/s0xLger2Gl0E/8BkXRzFoIlHMo6t43z0AL
sTflinpNqCduMik+alVR7J1bHvMHtUO/lr4C8QgUzncL2bNQFJnkzu6+4sWf
iq2SiF69NmP9+kliAlcX+Vxc1p41p6UknokEEbf8RopKfFoAP3bMQO/ehqqV
fPbMkTgbN26VA9j8ad2aXbVJIkuSjAo2qmZIhgkrRnMZh7h48WL6Gt1fAPBK
GuBhYUEiVoKFzG46AJ5J5Ou4TlNwRoAWIUotTIz0cPk5IaQb76fEiNxFgGdS
wF0z1sC0nkLOa4lBB7Uf15KGiiBhIynfHUcWVcHqMa3RvfF0/FAtEO+XTjYy
a2qvUiUJnTrtw4wZfYXmGgsomG94pYCWDTRm/vjDkHUbOl9m1uPnzu2E6nvv
sZeGXfTXjfdtuQwG+thoySYunY6sm5FQpayYOPEsSckhx36oFiHkmI8CgFMh
1giUTBASPqM7GFg2QtGqh7qcVYFQIEoZosB3fgvfzo2AJWWwYmQN+chs/PjF
YbFvLiB3Dod9kz8/qxSThGMPYdGi+bLqtrh2jbGhPJr7XQUUBvr0MXDpkhOU
d++WEgF/3hYzBTZsuK1crvfSFJnT/mNYkoqP7bUc25u+kRT/6oUyHByIvXuj
xK156IBnwTwPsG3Gt4SNMD5h5qbgFSYU27eFqJ5ZCnYCSZMkLVhSFBCepNyw
FUWweWojjO00EA2+3oqqFc4jjzccArhs2btil0SKqpqLHTvaijSl35DFavWn
1de3r8rv2ZqiWbDvn8pj69XrviPqWT6NX8LMCVNsjHzt2rUrfVM7XwDGCjZm
j4kJQqNGN1RXDD8+vO1snPlL2QcOMMYLeNaIwuj/m7Yd1ljvZVN2RKzF3Rss
O8ITEStLYvO0TzClx3B0bLAZlcvGoUDuB/Bwc0pWOjlvvHEP33wTjvHj14iV
PFCU0rui02hIuFn1CEyX9uyp9JWjTuzw4S6pyvYrV34i5HtDBUnKpXGCmWhi
sIsKi1Pl6ASnb2jM/wDX48cD5a0E7s+B82oVTgisCivt5K05neQ3vouB+QOV
VMxrE5ZUVKRKCoNTSsbmEEX1Leb2746WdZaj5ifRKFrgoYMys2V7qkyD3r39
sWxZP7FF6+Hp0xJWzpg+CU1fmrdW1VVKSllxFq44QOjtDfGKSYXqgM53bXkp
+hZM2Vm+hcAifcPkXgDA9zUAIyICBcPhYmU+cAAwTw4RQBOaIsHfAqCbgtIh
cZuaisUTqgwowyj4HHlJHqe8PL62IPbMeVcA3hz9Rd1/81EAiuRLRlYvLS89
UbQo1QYrt7eJBTRNlvKDgKAoNm/mGUraMvXAbXHOoiLF7xPDNdBsHJd3cotG
OuJgpUGD7qvADNn8HaTO0rI43PIVWFBEX6FBRoD0PQ3SkJBgxMYGiny+6lhg
z6ZLkOjvpsBm0SR5f4Dw+bjOSrkXU5czK7anrick+TdOIH9scUUsG/4Huv46
QTTPIZQunmyRI+3HqlWv4LPP1mHo0GGykKaihCuaZYZeuHPbwNIl2TFibAP0
GTIGv3fojTad+2PCtKYYOvxzIcUbDrx/++1jIUcGca5rKDorQBlUsbJEstf0
TdP8HwAYExMg5u4pWdszx9reef2K6Iw3lV6xaJJCcO9ccX2+N2mT75W006TF
3cLZF7YSmjlwaH5prBxZF8PaTkHtT3eheKGLyJrZocPZYli2bJLohaOYNcsH
hw61FGHHBEQ+PXEpB86e80CXbu9j9FQ/7A27yUlhuHgPKpJ/NPYu5iw7iGrV
+8m9R5Xg3L//lsXpunXK3ZEDZXCXxibjOPPmzUvfCLR/jbG7Ijw8CEFBoSJa
7jrAmlkkv8/wFkKbTrASdCS6Xs0MzOmnCNEorYkzVvtSlmXJ/4cuLyHE2VDY
vB/qfbEarxW5YBmWr712D82bR2PgQB/R4n+IFufknHwuGpIMF3Tt/gHmrQhT
0GPsklG6mItwxLeZCwk4cRqffdkfgwexmfFvFX99K03Ch1qdTilVDyF68uRJ
Pcw8Q8DJyQYB4h46uy0ZTWlZZ4dQmyuloQVNmvJ/itbp2cQkSGr0snzPRf03
s1LnBOXFrSa/759XEr6jK6JPi/748gM/odBYeLjf99QuAjV5qVL38ckncWIc
+WHPnoEYOaoyJs5Zp2DIiKe7ngaYKLBbuz0YY8ePFOq7qtqnyqQp8WXWhalW
MveyZcuaZQTIyukcGRnbzy8WBQpYNW6PkC/XYmHickrcRdksIb5eP97AL9VN
5hZKE2tYG5RrTFXtEJFChQFLvMSb/w6dG3bCtx8vkOfGyvMf6mAXI+H38U2d
uYg4e4t05aFBRDIj2fUaNBbHjh5RvZVvPsfoZokba0XYPc7UT/OMgNO7Nmsx
PDwENWve1pzqBk/xCn7+qi56NDEtQwq77BashBu3zzDQrKbpEgp3ir3I91wJ
UwWfk+uZSP2ncLQUNq3LbTMKitnzLtrXb4ZKZRcL6QXKtydl0iB0cQkUobdU
pX8Fbp46rs6Q5BwfZhY2cVrLG2kIjCNpaGbnyJGDHf7pm3H6PwAuLi5AvuO8
zfvzwK/fHhZNkRMj2xvo0ki82GUmv5ncR4C4K4Dy2oYJpjbhXwFiNv12tJaI
m8aZZUonheZiV2uhmN3U2NqCJDky/LF9hgtGdXgP7eo3x0fvjoSr6wF4ejC4
vxIDR4/F5Qc6Y5NJjZdcvSUYa9b549bNm/bORVqD7CTlGBTWvbN1kx3tWUWv
sCVi+/btGUKI72h4RkUFiqEajeLFH2t4ZhYr7j52zaquBBstvindDbSua2Dt
OKdKENi623iVlyN9DczsbaClgHfjJPMaARUrcD0vou+0HynZBChp9qS8f2mb
vPeXCXvS5wn5up0iE3rXF0t+vPn6+Aat3Nfrj3sodCVuNi/zEZSsZ/l1q9iY
5WQB4o2rPbfZxFvAEkMkb3aM7/wOPnuvNAaPW6iCug5ad1e48t0ciK3bd6qq
K7MF9UYJXYluFWAz5cV0F/sVOHqJ/xjFJ96Y2vASKc6iC2ZQ5f4M0VNvaxyG
hgYhOjoIDRsmaxwWhZt4KxO7jFfMr5CgKdhvooF2P5vu57bp5nupgkn+JsQo
OMJXEFoGujc2MLi1gaOLndTPzwTOMTBETIiFwkux6xUCXRTwc5q4FARsHm6g
vXxdjz8M/DXPxPlxuX5alrWkhYE3SwutyNcETjcDC6tmmo+mx2w+S3iIXrKP
WNFNDbSVZ3UWFu/UwMCgPgYi1pmOimlae5qR4PXmVs7Kd+yS540aMwaRF1Qt
i6dOKhPnnfuMxIgRw1XlkTV3yop9U40WSZOQo+fLMj6WB7Am26y0NJFFc8Qw
7P13rqqZiRTBO37NSPQzIDZrViIyZ3Z6yDWrRAocCygP2YwbeivURaw0RIea
tkrPpqa3vGSI/AwVNA42sFj+P6OXgQ7Cf8MEZ/6TTN0iYsDFCmAIaLcJ6L3k
mz6rJ9aMD/cs9GXkUqIgjnwoqP4kl5lxnyCPnCDU07OHvCesHjtfV2JnMuAj
FLWxrZkMrN1c+HOl4lkXhVMvRbQxQh1+srpuX5u3vfuxgeWC1WhNJSW1BFcE
Livt1KQQfLfH4cxNNU7aXQ/FZVr4QMRlNGzyO7779htVQMtidib0Ob+HdRjE
NMtirOljmvX1AXxmWIkUwqpSRjpZTRgSEmKeneChok0eHh4WIYj3W1SFSDhw
PkPM/rI2GX7gQCTKlHnkIADvbI+weWpN5eG7WTpwncm/FNQ7BITLhiumc6FC
lLfHdBT+E3Y/vNAUF6dMMW+ST0GckE9GCcfzNKL3apu4ilxj3kaJcUrwfkqe
PEW08DIxVS7tlEeNEIQJDYwSzXFGvn1WG2HbbvI5uTdYJFEhNwN1hBSDfZWa
kO+iEehhmi1ispxaZKCCl4GK3whdiAyPW2Mh3NNcoqzppNw7up2Bhk3bICAu
RZWqiTw3hwPnUYg/cfUZ2nYdhAnjxyvY8Tg0zgdkBwOFOAsS6fay6oczIVm0
aM2QtIkEEoO3LU9JOmGeko0RbH5h0TxjD+YxAm6qlpFlESSGbNmykcb0eVEv
mRDessUlGINs3fq6Iy7Rq5mPKAEXxSseOi7hyFUK2s78JQQg5qEOlltpNLnF
zWYbnRVA96xiwLuggd3yekELeXThvIZRSKXlL+0QzSGfTBAcRYgoL+1hoLrw
8yl5YqLw/LlNWgOJWvhdRH7hiuJUyv0j6hgoktfgk1CkpNCOiBuauqflvQHV
DLyST5j9T8XYxdVq3lBrp2Uh1pnKUnVp7I3+PZqI5zgQbTr1w5bDJ5VXpKbx
iy5PEPxfuMsB7hfQpc9oDB8xSmXdQkPD1F/imj46j2wkXbCnmB0QnJtD5JHJ
ObaKQoIlEixKpdFLI8Aqsxe6yGKLppBkOLWQVVNsZ46Pj/fSiKPoIDnkyZOH
BVUvhxpYBfkcaoiNDYCPT7yYIs4gy8flziLC1wyyZLNRA5GjfNfVmkjccUrw
tlNUQdasIiWEjw+IOdaohjypYQ2y34QRpnVG6y5IRHqPTw1kcjHQsa8SMq46
aUiaWiFc757ZwJxZYhD0N9C4hsGHoOG3BmZPNI1tYt1XNAEPpekjFHV6I8dz
8Bl5TMph3HaV3CNf27WJN7q0b4DlK9YgNCxalRSywrtT194YMHI6Fq3Zjc0H
T2H11iD0HjoFzVu1x+jRJtqFBzPpYnGKfIKM1Yh8BGcjcrQH58vTBGdwluOR
mdhiaypRys/QXLcbC7pe301LBiu1y0cztcuGZh8fHzXEMbOWDDzsj0keFvjw
Kzik9OWYiCzqZYU7fTJZbBlbEPjo0XBUqeKMDHlnhcj7pir6k00b1kQF7Sba
UOr/m02tGqMoxbzHsrF8O5t67utfBH0i7K9soyEg5rjYGqdNmwEHRPD//KGB
EnkMfCPGwiHh2oT1Kg6gzEjKllNCQbPFnuMBSs1EOZzfIYvjYzzNW1eZNkWA
0N8bWUT/iGlywl8JgMKWhWiTCSuGk0Byomv7RoKxNQiPiEFUdIxhdmiIOxgd
hcNisM+bNxeTJk/F1Omz1NkoUyZPwi4x6kkNcqfZ0Fr4Hz3LtBZJBCQUxpop
+8l7tCeISXYZsFmHk6+JZYoK6ww33ZFjTSZSjbnUG+xEuHDhgioxg8rIRaqp
yXFxcY4RPk/vXse5pBT16uW0irGFlKtm7lZ2VNqmQ+hk22Pb7X/2U7HtGOXv
mXHCaB2h2T9ZHIQfDdQVcV2vuljoYsVv+tN0NuKspLWHMuLjRMtPaGmgRnkD
VcSc27VSaW9NWDmUXRIu147OFjEiTmQ9eexhX/UYRSx8Rqw4AkPEF/28rIFq
YoUEr1cOhX6GWHu0HOTeX+X9rIUNbJXnnVqrExmZHXEluyjp3M4UJSFKlMQQ
3aaI8FCYJsGEhYUiOCgQoUrBRgs7hct6U7c8W2KEioRcSDFCD569JvQSqUg4
M80SI1b0hPezCJsd+GvXrvXWKKMIoQSaNWuWJoJMeHLtCMaOboau64J4YmHF
l0IHLGHnuDvSg40OGMnz9Y0TTfXUITHKlUpC4NLSykizUr80+7aIF1E2h7gE
Yuq1FE7uLiz6QTEDecVU7CxWZdQGhURNDKZFoaID4o7PE2G/10cVQFgCJkpw
FiI/yUcM7BOvwcVVECW3nfG3nEJ3RQsJIqhChNTm9jObyIQOLDKgfLmyR3wa
IaFM7gbGT1EBgvyaDOientKZF5MMTIHh4xQYDiFAlgjJpAv1goOD5CcUsXEn
cepEDAnCMN/LL/ojGOFRMTgVH494MQvZoxV/6gQiwkIUkp83+oCEQvTxVHSe
JMwAJC0P+g08qoYKQsSI6konBlgRwIOs+Op1rUx4eODNC4cxuFMDtF5wDI/l
6stpEk5DGm860gyBKnhZrdrfDtLw9AAWDuqjlElWnc5mTOCEoPjH4rxFHMqx
Bi5uM1RcKVqcjMblTAXyczPxCPxSkwjJY3UnA7m8xRnto/X/amdMgMEdEQ2+
Yk50+El00Jtma2+foaYp4YwfuKvXs0VHZc9mYPBIZVo4H2WGDBiqWC6U9sO7
5oq+F9c4bpMyifJYJKMlB43jTWK09PvdG907io5ZvlYbIUpy5LRq+8W8DAvc
i5lD+6L3uPk4GBiKsNAQFx0nDw4OQURkKPwXTECb335HqzZ/iCppi9Z/DMCq
bUcEvGGarrxSCRirqY0tU/QvKTS2b9+uSqGIBqokurV8lUtjEbiOo6unYMTk
5dh/4Y6HJptrMZswafBA9O8/CjN3hOHSA+h4BmsFHuCvAZWQo2hdbLwmL59e
wLalIzFysR/Ckx6+nCkhaajrDV31biZXAzB8+AVGeS0Ca157lxCBcvs0gWVX
7sXewQby0cF61cC2laZ1oXQTiWyuKIkCJvF1ZtGDvw3zbsrX2TxARJXQ4ciR
yh1yyCAGHSPErG1b1UB+8U5atRJds1ZRiqZRN0WTK8TzrPC2eLZTlaGk3/NU
SyCpMAA2SD7bRfRZox9NA0joPNdzBJGf2EoD2+REr86mIApzCqLcmqpCw6MR
dWg1PivkDiNvDfy5cTeCQkJd1WwdT8WUezevxYzRPVCW06dcS6LTqEXYdziQ
Z795aCFmteKQsGi7iNZRJTYEM6cps0mMWRKTgMSbTdlsnt6Z6V20meCHkJNX
eMqlefgl+7Gj0L26eaLhp93nYV/ETgyZOAwLg646DnZL2NUNed14z5sYFCIf
vrQQlYjYQtXQd/UaBFy9hcfP8DLGDr2AsMz6x61bY1Gs2GOH2CpW8Bb2zvmM
qHTkAuiyLP3DFAQFRHTt8FUmhEOciF+0rpNZHO0lUFm5QETOBo14V4V0+tai
z3SE3E35SPS1Y3U4mgaLm5khPK6iHie0hRPtMLPdEOdnKslTpvlNO9jI+Rxh
5D/BQP9WOdCrS0MljIJDHcIorzZjgkPCERt9BP1rvQ/vwl9i3qYDSpOFR0TK
EkS2yD1i0iA8MgaJZ2Ixq001GNnexJgNAYg/EankFVmTBEPDlhpKvFeLZjjo
g64yY2UOmnl4CiPr5oXhVRYTDybi0omzuG3RDGvlUrB/3WRM3xEuosb8F7rk
F+QuVwdL482D4a4eG4bSIv49yrXDbvHicS8I7St7ycrqYHnsacRdOYd7z6wh
qi+ZaEqlqeGsW/emwxye0n2gyiiYeQZnRoKKZVYLk3AKFnMQjqYcD8QKJuOX
Gaj/hnnPd42EJPxNcrDIRzvhlqGkrlkOOvNZ1rVo69pqq0DX1ZH0i3YkWbWA
2fBPAbNUBExouEPAZNUY5pDZyJgTSBAbJjYq3NVq3guLwPGT8Ug4eQKR4aHK
nImMicXmGe3h4VkIneftQsCGSfi0ZGHZbaFChWRNnzUdicMRUYiOOY79K4ch
/yte+LrdDISJGgsLCfZ8Dk35+/tbNMWubaLDnPFk0tTpjb/BQz7ywajtCp+J
2wfgk4oVXNi/KB+p8MH3mBRwTT+Av7PiZvAg5BZQlx/0l6aze7gQJ/r00m1N
FM9wcNo3cBVQ/bQ0MkMUm0VKjNNPnnwmVeFq7U+DRQSYhavZ0pDSojYmmeQW
zbZJLOT4dU7ziEJoSXOz282zkNhB81UArnxa+SB//cVYGdDaW8uHNXb5kE2t
TJRLiFimYYFYNXsU2nXqhj/99oqlEaXcndDwCIQc3oHJg7qgXb+RWLPtECJE
eYSFRyHyyBp8UzA3KjQSVB/eiv7tGsvO2AfribY9pmBvUDgihQQij65H3aLu
yFX1d+wKiUFkWIgd/YQThwbt3LnTQj+jbYzMMsliof/ZNT98Lx6F8W4bhD0S
TIYNQxHDsEaQfzByKw9rVTe7aExc2NUZ2Smnfx6Fi8/gpi/fj52Nd7OIg/jV
KJx4inczAuuv28pr9+yJQsmSzuD8q/kfYfecmrbyWlPrbOhiYtQtn2B/jk2t
iD0i2AydZuDtLCZR/NbNzNWR/995Hq+PF6wLr/fsIsaEYD3Myes5NNZDwsSm
DNyOBh+aY0uNbGXRdcIqRBw/ibjowxje7DPdpJ0NVev1xJrdRxAlzu/hzfNR
vYiAvUxd+AccR2LiadlZQkICG8XiohFKH0nM39jIoxjY4D157geYuyUA0ZHh
z8P6rl27LKxbR8RaOkIpEtzAn+2Kg4H/fseEux/fwMnQIFc1oF8cgXM38MSG
oie3jmDET0XUhsr1X0udY1hox7PjGPRlDhg5KmN+3P0MQftrjjCKWQ7csqVV
fSem7CvA4FazxP9R4fgcGrW0YveJe1uSdwl6h4lCv7LFNEdddEKEXvZ5IYGu
lUz0v/GpgcD1pjla9gVMP5BM37mBg+mj7B6KZvrQAKydPx6tWrZE82a/4ue6
v2Pq8q3YtXwUXstqmnRVW4zC7gN7sGr5cuwKCMJf80ejXq0v8E6ZLzFu2U5E
RUZoV8VduTVRsTHwn9oFeVw88fPIlRQkz0P7nj17LLQzhkYH2Il2DoZ5isB5
P6rNlu/rj7uaGNTvR2exYV5H1KmcWxXkvv7zIBxOfuZMu9zHliGVQVOq5swA
kfAZZCNYuGad2Ny5CfDwcAbaP690SnRxQVuJsgdOCBJDphv4WE/N+amlgYDl
Bg7+SUTv/5P3HBBBHiQ+85j65j1ZxH1ZIRbm6fWGLCMNnwsBbLB0+j/5PI9a
Xi5Tp0cfV6kq4VVEHduO6cMHof4Xb6uvcM/3IaZtDhJLLxrBRw7j8NFjKo4R
ExGAdQvmYrnfLnlsmBUTCw4KEhERj7iDy/F+QTcUqzMEgeKWik43PGyIZgSa
ZWd+fn6Wd8ogKKcX+fj4aI/VDXfiN+D3GmWRj+RWpgH+SnqiES2exZNk0R07
4btkEvr/UQdVfuqEuYFn6HxopnbD5aDFaPzxa8jpJZZi9W6IvP8sY7Bd0hFK
D8KhQxFidNx3YDu391OsHddQlWXltBLSDKGL2q7zlqEzgMLir8rNJQoR0cVF
a79W2EChnObbHPfQc6iKvouP9CI1nsPk6BVr7RxdSK0sByLEcAvbtQif5lE6
Ea992V2csVhEhAYjRDCi5g1ERiNw2wJUK5QXZav3xJ6wKHk/xHC1Ip6i7vf/
tQxdWtZFARFGrxT4Ckt2hyA2ItSBXT6HAQlid/r06RZ2CS+eUHP58mUHdp89
fYiL8eJqHlyLpUsXi5/30LByYbTFtg/7DC7eZdDvwHkLoc+e3MWF2BCE7FuJ
BYvXIupWBiG0hC3izS6DLl2cEe++LXxVmIomd07LpV9r5kH7fWFizEUw2EX8
xAmdDYzqILQwuoM670WU+OjfRFPn0qPJhMtPblbJCeP152jqVBy8LBUHF9FI
oam9bX5f5FMetBfqj1gpQicaIfKuiyM0EImgPavQvNonqNtmAg7Ja2FJV13L
ynTn0T3+GD9sAPr07Iw6dX/GoEXbRTpH8DHuz0HtjBkzLNSyJpJ9oHyVT1/D
09s4f/UmzWrDQzPsvVvXYRnWSbu7oyBd6AbzcNUhveVzD27g0vU7KkyZoXhl
EGnlypPIlcsZwa5U9jxClr2h8p+5tViOp0PfwZwBYGQ3MH+2gcvbzBSki7LR
PFSx2SXBf8PyJlI/r2kgfKOpf0vauJVZjxM6Qkhu7UluXZZK/76quZVO+YkT
wRjd5DOV+jK8iqJJ3xk4EhmLuOOxsvwY09cSectoIiM2ERFhCuluViQnzExg
M0cRIffSJvJ8PipzawByrgBn3TNqaIUC8fdxbPEZhgF9+2Do7E2IuPNUm9Bu
eHLtEOaM74s+fQZjyvoAnHlkeVechxqPcU0KqUrvnxYH0fx2yO6kczsxZXp/
9O/XCdXfZi9DFlQftRO3bAbZszsB6PuRp1wohi67TmcINRR3OPKBApJQfPaZ
MwPqLgtZPKQdayB0nNcM/IXNMPCuniHZuL1gdZPJvpYjz+TDOUqCauY9b35m
4DCzouLFFU8ju1Uge5SBvr9lfx6Lv6oH/6nEQkgYTiaexfH9PqhWMod6dKlv
2mHWjMno238Ulq5ag1Xys2P/EYbzlBeu5bqncwidKdD4nmWT/Qs1MEHF0l1n
2Up2PDz3F9p+XUh9vVueAnj1zdIo9eFPmBl2Bw9TdqD1V3ngmTsPChQogJz5
ciJXpfoYd+isRTB4chXrxtbFWx99i2G7E2idOy03IZGzAXPQ5ssSKPba+6g3
dDUSHsLd0ggPTmFRx89R7rNfMCfiWobQQzEHQIKU1O/T5xLHQVok0frHncLE
qvTMQRIqXSWSum9VE93FPzBwZF3qfMVpESJzfhSlIO9nf9/AjhXKYS/6HNmw
UVyzDg3c0LJpbcxfuAKhYTGWbCim++FDwsTBPrIT44Z0wfefllVPNV7xRqtx
G3H6dASmdaqHnLrM7L1aA3EwIlps+ZC8z0e2lTxisqlgwYKKSkyQM9mYjBXd
y5hORZuFOEUX+kkC1vWuitc+/Rm/Na2CAuV/xfqLfOMxTh0ch4+Yzyn8CcYH
Xnk5UzGeiyKmIAPx11+xKFToiYNlS72ahKOLP1DOUT6rUkUcqN2DDTXz20Vs
lrEC4LP+DtRQvvu2MQsWPcsZ2GaipshzGHXtaJaXZkXzX2ti1pwlIrYZv1IF
ASUs1IgMCQ08hGVzJ6B3j55o27w+qtXrgo1Hw8XDjURU+FHMHfAb3itdBvU6
TMPRCKWH06KG5WazZs3KqaGSmJiIEiVKsPpIS2XhhuSt+JWgzvQRpsc9sGIa
eBaJnjVYZfwKvhi101VfPr+jM4pyh1X6IvQB0nd+9wsQU9QWFGVKvEaN2w7E
sOB4Tt/+tJp0mtXDTMYLxXf5RE+o+s7UmnFrndk5lhlt7GogKxlHtOvOlQo7
hZ7DOH6acX4Txpk9dwkCgyMRExvrHD+YVTm15KWYaNG3AuZwMWfDRFQGKSVq
zr8ND6MyVYo0XxqsNGzYkEEIb719YoXDAjgxTySkhZinZ5fia3fyQFPsSIGF
gT3jP1e7rDJ6O4WeUx7GYtDXOUF50n7DKeWOvpxBPi/ATlzcMUyadFbhxcLO
z18dEiL3VumGAjp7xqKa4MkiQLx5o4FBI8xC+Vhdm8NivrXtzIhUGRF9x0yR
V+AFfNOpoeabuUsF1FEWZqx6gmABsSqmCbGcDfNaqKnAhGacqKBJw4bOLl26
5NB75XE8RAVF2qNHjzwtVFz0RS1mugo1xtYbDlRc2NYbr8qWCjeYg/M2VIj6
2THsU4Wld3qtU0GFDEHFq46UUyC2bIlG0aLO4F+JQnexe/YXpGpN5dlUJM+/
t4Fi4sR6iVvx5wyz9IphXoaChuuBSQ3E3Tj5l2mM5HueaplgoCNVS5PaSn4p
DolRePjOBl9mkllJ0LFjx+x6Ayx7LVasmCqJffDggcNHexSGbh+KV+RZHYtP
P7Tg+/S8L6rKOo2yrbDvbwfYI1c1URHDnM0n4TqQIaAt4mh6CBZuDkajRskO
0KrhGp0nKBlU2ErPrDE7oDb2NfC+UHrmfAbatzKwaJgoiiYGcslHC78r7y9R
HSZ5n0fdY0zqbibUPVugqqjbhGqtNFBlgU/v3r2zaoKjuKFMKVKkiKoOdtYA
0v29j02jPhTb3xtN15+0YIj7R/B7BdlR9sqYG3fPunx2dw+lwLwaDsOVDAYt
ExUzZyay8dgB2uofHBdvVQ2BcWhOq4wneI6Ywj8Z+ELE9/tvmvnwH+qIUzVP
5cTz/JsN1KRWWkKtY5uOSJBy0SxzYJWrSAFTCLurpm8WfTKWWLx4cfVX9pBN
b+3B2RX4NLeolJpjkfjMJgGS4NOiBKidmvrEKmFsKdbz+3rCk/mWllNxI4NA
XNiWFTh4MALlyzub8vPnfgi/iXVVEKmYFTLcYJbLRK1gi7iBwGVmDw1LDXI/
h1TXjDINmBaNnQaMhusP6qtzOuDKSkVWGTLbzzlPrFFjHwtJmOWuPIyOio9p
GHY78B6Oio+IiDAsqcw6kT1TqgvT58UfW89YxBq9oTPKlXsXzWcfoU9oATjS
t4FQuwtqTDxE7z9DAFzIFn9ni36rVs5S+N7NFqqRGgRbcZ1lj9bjNhhLjdPN
RLleQLCUrC0amwQb5CTYH3WIxS4DCCj+o93BvQ0aNMiVF2XBnILMY8uY9BRJ
66zSOYu5LcvA4/WG8Lv0xGEE4m+sa1daBPDbmB79d4aYdYVsfL94cTyyZ3fy
/SflEhGxsoQKmFR+HsGNfg7BmZr/p+donHbt2hV1CLowTGhcDm/+PAD7kx9Z
PuCDi+tQq5gHXmuzGJefZYwdW9BWFR0QEI5Kle6l6pdfPqKtiglUepHk+sVU
sTRCHYQQFvqL3jCL+zhgmQe0iMR3bPjRSSwf2wD1xi/HuYc6GemKpMOj8d0v
reF/+YmRIe5UgVRTKwKEDC87WKJD/Q1ifKgeAKPC/8Ihshl2DW27ZT8cwwhP
njwpphdGwj13/hxuPrHiPXLt4W0kP7qvXmXoVrnNdetOcJKLbb5EMoJ93lGe
4/tpEbvOhtimqRErjs6vtq1yQjBLemWr3TNiC/ltsxwY5Kle3Vlkyelp8wd2
UUWW772QGbPYsOVwkJr8H2yB8mTkyPOpCh5+/OKAQFw1DRvlXmTB/pIJvzWh
rbXIhoWwZv/BLeSz1Yxt2RIjBpyzZuz1IrdxZGF5Qt1490U801Cw0Ogb2cJi
jYXjxEKL/+AW8qapYKpX72YqZ31c51F095zVA9qac2g7jYVZNiyEhoX9ZtvC
8OHD/yNbsEa+ubo6Canu5+GilPKrypm0GXCHJfR8LLTSW6CbybVyC8nJyRmy
hTxppqyVLev0BPPleoSt075TPZpvPQ8Lihdc0ZK6dbZgISTKwkIbvQU6GBxU
S1Vz9erVDNlCblubeWxsEBo3dk44G/rHHMeEs9IvtEezoMWv3yh2Dg6JsLDQ
1rYFnlBRq1YttlZl6BaoFxYsSBALx5mpr1ohTpZcSHk2b74ACx1SYcHBC+3T
bIG1K9evX8+QLeSyEdKRI+F4803bOC9vc5wXM1Zv/JteEF4gO4c4sdDRtgVO
gGLHWkbxQs40trm9xah746Wi1tRoImeW1MLCOhML7esLFiy9oHlBHts5zRaY
qMzoLZCQVq06iZw5nYRUtuQVBC8ro+awvPZCW4pYqOHAQqyJha62LbD0jVhI
SUnJkC142wwMtrJUrfp3KuN3GYdFbUqd1rRjoYNgwaGdQxzaubveArsTeE4O
xx+cP38+Q7fAPrX+/S+linQ2q7VTPOhMSi84cnE63W7xQpdGmdGCWJhtSiSN
hZ56C8y0sv6UXu+pU6cyZAs5bAaGn99xDkxybKF08VtqHhxLv4qlISRigaUg
lEhKO89eaLeRetu2wPPdOPkyPj4+Q7aQ3WZgRETYZxmZkbhpPQcrQiqme3bo
YrNlYusUAyPaZ0XHVrUxc5bwQagDA0bf/4P1k4pGjjzHc0Ic629Y47CAO4ui
olSJIl20sXOGIbovM3p2qIP58+1eYFj//+AWsuktcALEjh2c4mMvMr2HXbOr
qwKGIjYUJAgKtkw2UdCtbW3Rh0sRGBRhRTOMgf/B9We1mRZRUUEi95IdGmF0
+wnKtDCnT7wYBT3a18affy6WPUSq1I88drBtCzy9kltISEjI0C1YQdMsWexB
00hZeCH2yest/O9QMNS2fi6BXYFHjx7NkPVnSRORLFvWOQY4R9ZH2DKtlpod
mN+GgpM2FAz7wws92mkUBDtQMNxWCchaBEYXN27cmCFbyGwLcLDmNnXMz0fU
gTmJL9+/omCJEwUhocbI56zf398/Q9dPEko7sKFKubOIXFVKxd/y2NSZHQVD
23g5BJGNC0b/B7fgZSuOTDtnIHtmYPnI35jMcsasVxtOffAiNISGjv0/2AKr
eXv2vJLKqGhfXzfAr7H1YKXFglIH3wsjpMLC+P/gFjxTWacneL6MYwvl3zB7
txn+ypmGEZRGbpcVXf+wZJEjuG1MtK2f0Wyuf/PmzRmyfg+bacpexi+/vONs
MHZng3FvZVHkSIMCTqMwUaAZITUKJtu2QJHKjMbSpUszZAvOeisz2Dps2EWG
LaxdNPpmn9C8uwp/ZbdjQSzTbdMMDGnjgTZNv8Ts2fPtOTFjmsNWiVNTAUaP
Hm1k4PqdzZLOuYCuKF7wFvbMqaoy11nTaGSigMPWBrVyR7sWX8miZuHw0VAL
BTNs6+eYjAxbv1uaqFfqvr1Bjr69LGmAv3Uqge+JP5p9hWnT5+DQkRCHUTor
zeLHjBmTsYunCJo+PTFNp1iIo1PM60XA/90dbQX4U6bOxhEBfnR0LAl+zn9q
/ZlstsTu3VF47TWnLZE35xPsmFFbBbu8ngt8DxP402anAv68/9TiraIUa5pi
ixZJzs4dF2Bw61lij7o4J186/UoL/gMV/KvLuiz4qxOc59u2wFjj2LFjM3YL
NCTmzUuAu7vTkPjC1pDiboM/Ow23/Qv8Fzpo8oQaZjV8+PCMWbyLzYQ4diwc
FSva+ityPMW6cQ1UajzTvwL/KwX8w07gL3YUE8ao8Y2dO3d+Kev3TLt+sxxX
9xJ0737Vkjptf16rpA5tB5c05k/Cc4EfbAF/qW3tTBt37do1A9dOdbVihYpp
mXDPjg9Uufzraq1qAs/qfwqcdprgbTBfZls3T0p8Wev2cKybyXOq8vBwljmH
2aq6s/FUDCwZ2s5yHv8B6DZNCWgR8UedVL7CtmIebyE/L2XF7grC1RSkj8p3
BAp5H0b3bpdM6sii6o0TNnqac3UJ1RkWVE0x7tCh4eGGr0M3R6tFDhs27KUs
MpejdWf02EkYNW4qBo2YiKpfLhTLZZs86C5KF7uD4GWVcGGLBUZPtGmmwSj0
qoPJq1/6Akur3zm5fXTvPQj9R8zAhl3hOBKTgoORSdh6KApjpi9A6bcHo0ej
XxHsQxMkUyotaIFvbZrVDR06NJ2re1P99mbUB81bdYTvlgCcu2OeQWmdGcf/
89ruoGg0bfINGnxfHrNmmTJWg229bWEcP9iwYcN0LuwN9dtNzZjq0LmnOjVb
zznW5wq6qddbj55Dyz96qM/Ktxt+tpWwXu2HH354KSvJpALzA0bOUuMYZRXW
iZ1cxPhZvpgwcRIjx/bv5yibH3/8MZ3fb43Oevb0Kfr1H4TlmwKQmJJq2vPe
0Evo0rO/yrZTpoSEhKzPsHXwoO3BI8bjUFSS86xfN3UmdPiZx/i2Vl1s2byZ
6xB5JjpXL0KPLjSn2Plm2OquXL6EEWOm4Ojxmzz40FxdTrU60nOFylVQuVJF
VerBQlzqpFmzZqmplnwcHSwuilLUOoWc2oX1vT4ZtuhHjx5i0JDhWLczipPq
zUXnUws+HHMDnbr3V8XqPKabVTmtWrVSLhSDgpy4zqQdB35y5BbnqnKyH9UL
F3ry5Em1mUhVSq4m5igMzLdthnMc07+ZYvoaHj/EvfuP9dbMa3/Ony9CbgUn
2xqe+hBgMs5sn61YsGipvi+vmjfLA90ZteUMQlb4MZPEk4Y44pYzWjjvh8Mt
uWpChHPM2alrjUK1ptjp3RpzbJkpVmAS9Xfv3u2Wrs1a3aHs7V8/+Du89XUr
+MQm46lj0+64n3QQw3+piJIVq6LFyD+x9GAwkp44So05R7Fxs1bYEXCO/Oxu
O6ng2IkUtO/aH/Gn4jPrr+PdxCV3O23aNFVczpl7rH3kfE7+Ze1jt27dlNxb
uXKlmupO4qXVTuOXEDAHx5o0MFVDhrTB+wnda9euvSzI3IZPu1dV2V+PTdG4
eOOxYc1buhc6HuVeK4KaM/fg6t0rWNHvG3w9ZA2uPlMEpD6/d+9+dOgxBHtC
FHjUYb4u5GOOvbpmnmR6OOYa2nQagOUrVhhmH4q3UhiM8qxfvx6TJ09WhaAk
HdpcHCtK94WAI+fzwAw/Pz8cPnxYD0qMdiH9KBs+wsH4E2xwWr58uYK14CN9
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
\
\>"]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "- ",
 StyleBox["Homogeneous coordinates matrices",
  FontSlant->"Italic"],
 " "
}], "Subsection",
 CellChangeTimes->{{3.7094619492573824`*^9, 3.7094619624719625`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
F+rqG2rOnr/4ZE+wlVj4o572Ftf5+jpXh3fkvhnqVOrq7RZDfRecWV3oC2m7
ee+TjYKzl9WnvXctfrk6PcU+9LQ86/71pbaOayMH3aRO0+BPRP1NSp66eqMB
the0eR6wVCcYC1/vfHt4hqoaAKxEr91ob3bWut4ZijxS19TE7Oee6oqqy59O
q2o87Lvc+/l06l0PK7HRd2vsT/eNPdKsGaVCXQ3L0jT4lyO+xkLraqXRFzng
Xtx7//4DvW9xOfz+P1z/OkZVDQDWokOJmCyer19o/Oc7T7Y+ezzpu2BTzniG
P3/vNd93y6m1R53+9HJVmUkuMFJXw7I0Df7NX15IXb3HMSVpA7MbALBf2i8i
y+H+c62+yfjWn6XvorQddpx8MfNQz+J4X226GYd/0f8NdTUgKupqAABy0XoR
WV0Y6vxl353lHT8Mvnoodffrqxt7oK2mXqTmqKhq/cNY9jd6rMajf/s6sutr
1cTU6IfeTvfft3VeueR+tqm9xzcYnk9o/eUrKy8si7oaAIBctF5EZoLtL/km
H2//YTzsrUs9eNQUmC7ol6jL93yN5TblyJWt++6mtyxu7R2ajGd+tjx3u7fG
Vlal+ev2WHlhWdTVAADkovUishj95oedV5nVSb+rfK9XP+yUrKvfbzlxytX7
+fST/+DRWF/dEfe/fre1hM7s81Z2uu/rx1l+T6mw8sKyNA3+pYn+c1I8twgA
sKZ42Nee2hDN1T10oF1t92P9TcRKbd/4AfZgy2ywZjvSObzlt2SuhK/v1qsZ
IzoNEIKmwb+fffa0qnuZ3QCAoul/cUZdCnmOJj+w7PLQo4PcCB0L/9F9vPzp
K0NbX2cWG+05m7rDpME3qeFN1lzRgmXp816Yo+6BBzkOeTDgTuUPxeEJaTL5
mN0AgKLpv4hkLilr8hrizEXsw7XecS2+Id7AygvL0uc95g6nP5LjiMx7zAt+
OmO/mN0AgKLpvohkSt8sN1ersR++iS5u/8ndgOe19jfam1yXCngV48rC7e5q
m63cdT0c13RLEFZeWJbGwZ/JD/aTfXey34SRuaLtaPBNaDPJmd0AgKLpvohk
rkftvrn68aSvvWPopyc/iI/3P//rwP2l1KYibZVKedvAdK4Wrsbno/du/7G9
6kS9Z+CetpuBrLHywsK0Dv7l+/6WZIawufzRbHWzGvW7bMm6u8V/X6OvpJjd
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
zro0r8AGkEtlZf4hJt0ZyYKnnKyqp4c6qpLnc6h1YGdVXejO1auL4T80nvyH
kcUiLmkvz40PXL3U4nQ+c/bU6Xr3630fhDbeHa8d8ycKyIO6WuSsS/MKbAC5
VFbmH2LSnZEseMrqcthba0ueTmVbcGbXv+bduVpNxCZv+6/Ul9uUQ68GF/ZZ
D6sPx/rbG7sC4fn0neqJ2fDHnvpyu6PmzeC221FKzvyJAvKweF2dSTKiPtVC
8/ZGLpWe9kOcmBq98e/+on3wv0an9ywYSHdGMsMplzgCfxq6lN42MHtVvMfO
1Y8jgdedSU3tnncv1tlz/YY9rMwNe2pb/JOJrb87Pul3lyuKrbp3tJir3wVi
LYA4LF5X72cXJgMmLM3bG7lUepoP8UrYe8amHEDZGe/dvXZnI90ZyQSnXOII
XH8te64r0gXuXL3+S/ZbV6sTvmfO94092vnzxS89J+wav9FSsriFqVm8rt58
a8BR98CDHIes/4GfbK8npPt8pXl7IpdKz/xDTLozlNVOeWW051i62M663Ueh
O1cXVVerU4Fmu81R9StfeMefMPMjnalZbG8OTGlVWJs/UUAeVq+rN95yu0dj
Mm+5tTUFpnVtWRrN2wu5VHrmH2LSnbGsdcor04EX0he/z/SM7rpunP/m6g3F
1dWTvobUZ+++Lh0Pe+tSjTrtDWv1/KL5EwXkYfm6Wp3wNSSTqv1k353sX+Zm
rndo+h1WbjRvL+RS6Zl/iEl3xrLWKW/c95L13ZHqpN9VvvVStjr9l3/8UzhL
txR5H8jD8I1rff2fTsR2/MrYaM9ZrlfDMixfV68t3/e32JN5yOWPZpvyatTv
Sv4Nbm/x3zfkKR6atwdyqfTMP8SkO4NZ6pTVR0OXy3Ld05K59braE1pI/+/V
hWDXS1lvjymurs7l8dd9p5ONOt46kHUESsL8iQLyoK7eeKoie15dz8n2E13D
C0Zdy6B5OZFLpWf+ISbdGc5Kp5z5M2F3Xa0+vHP1fOqOmCfV8kywvT37tCpl
Xb2+H4itvNF3b5n9QGAF1NVr6d2B3qqy2Y933JrbPu/VuVsdx+22qreG5/Z6
4l9jNC8Xcqn0zD/EpDvjWemU1alg+1OKcq5/Yuvme0vRm2+2tLU+vaXkVmcH
XnrOfz9rqVuyulpdvudrLLeXu/7H2M6bQ0rL/IkC8tAnGtVE7Kfousjdwb5n
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
1sySbAUHJCDRrEw8CPW/fMp2zNnzyfhMfH0pUuOzE7ffv9L66/fDsR0H3/b+
/fGKc56P7268dUJNzN/92HOu4vjfe28/2NkX6o9DV56pufT/bVs11EeTA7+u
suVP0epUoDn1Tbf9ZN+dLGXB+mNZ8jyiLpJCB+5xchH3v3/tH5urbFlqvIVw
8N/f7+9uPVuxMVkeRW96Wi6/Pzq9Hmkrse/+1V1hU8rd/smC3otHSGxYjvga
C62rlUZfRJYXemSoiejnfU0n7VWX/xyeTaed5bm//u7Cyx8MXxP45up9Jds1
XfOtxWaWRCs4IAlZZqX64+Dln9uU3fvfLk4E3qirPGT7Rf+9zWsXie9vdvzc
Zj9/9c7DnVeC1PnR3jqb7ecdN7/f0h3pp2BOvB3KcjFyMex9xpanrl6ZHXg5
lemVE5eGdi+S6lLIk36n2uF633+KeWXKtPY/cJkv37PXeOpEf21qpJ774/D7
r/f+x8K23/povO+XimKruDSYfVOLHQ0jJDI2U1AhdfUex5hRsqj+pKOqzFb1
xs1tL75JxpKzsrJM0Jur95Vs13TOt1abWbKs4IA85JiVy9HAi+WpVLorFa+M
9hyzbT/B9ZcF2E94vsx+2+Lil54TdmXbK7pmgm2VuS6SpGqtPHX17NClE0p+
1Z5QARUZ9mH/A5e52TdH/Rb1O9NL9tnGvl2Lvro00nVYKfB5KEJik3XranXh
C091mWKr9dye3RFMq2Hv6dT5Cnhz9b6S7Zru+dZqM0uOFRyQiRSzcnG484gt
+9Pf6lSw/ank6W2+HUCdvdleYdtzwYqN9pxNXXhsv7mx2qW3I8h6vWUtXYk1
7VlXr9zpO5m+glLTF4ru9kVfTfp+v0OvBhey3mq4uhj+Q+PJfxgp+NbdLW2b
Gv3Q2+n++7bOK5fczza196Tuf0xIcZ2mIPsfuILq6uxfMWf+00LuAT5gSKix
8PWWk53DxZRcwoWEVetqdXqooyo1yK0DO6vqvXeuTvw0PvC7S02u9F39De6O
vg9CP8T3N4BL06MfeTtfbG57461LblfTqz173Re93X6S7Zr++fagyXZNXRy/
3vh058h8nn7I4gC9WjwpVnBAKhLMytWF4KvpO+ZOdo48zPLvibmJr+9GYutn
93jSd8G2Z1598k3ik5dZx8PeutQnOGrbvDdG/3N2+yqWeBRb2mtZmw402XIW
Y5v3+2V7KYaaiE3e9l+pL7ft2eDs1NjX3pbW3qHJjdYuz93urbGVVbX7wzEZ
H/7KYv8DV9j16mxfMW/ua1HAVCo+JJIR8aW/65nyPd6ikpuQIWHNulpdDntr
UzFQ2Rac2fWvOXeuTo5gf+vzXYH1u5QztyiXKxU1XTejBf5xpD4c877c3Hsr
knlgUE3MfdFTc9hW9Zo/nK2O3WZfyXbNgHxb/MxK/uKFydvvd9UfzTEoezpQ
rx6EBCs4IBntZ2ViavTGv/uL9sH/Gp1e2vMDHo32nEmfQiHPNK1vCZvny/qN
Aumoe+DB+k/Uuc+6qsqefIvoOFXvfv2frv/PkXtzeXtt47dlzdWb9/sdax34
cUv6fRwJvO5Mamr3vHuxzr73wpTVo7G+uiPuf/1ua72k/hBoPqIoZaf7vn68
n9+lIY3DY98DV1Bdnf1fC6+riwkJ9b8Cr1xwOl1NbW+9e6lur7cT5iRmSGRq
SKGfWyx9lP40dOlk7gunOXauVmeGu5wt/olt4ZWY8DdXKoW+5119PHb19JEX
//Td1ocDMu+7tJ2+OrbzLSo77CvZrumfb4tKtmtqJPBKKts2t3m6L9WV77+u
PmCvHgR1NSAazWflSth7xqYcQNkZ7909L6XdDzRt7tKQ7xQ27wAsKM/btmxx
mnlsf9epVNR0fLDntb7NKzzn+id2V4Dr34Emf83rQ7nK5vVrLPutqzPvsLMd
2Xa3wMaFoKw7UBlB+/DY58DpUVcfMCQy//m+62pBQ2I/++wZVDyUPko3Lpxm
3+4jx87V6qTvmTO7izR1MfR26pbiJ9d797BxAfnIla33lW3czp11w+et9pNs
1/TPtwdOtuu3du+7rj5grx4EdTUgGglmZeZdbAWdwkYGLyzP7z4qEYuM/uXP
1/u62p47W7mR820VL348lfOCxEbZkPVWycd/7XnKruzxUM9asXX1Wiz8R/fx
8qevDG29MpNZWWwNvknr3GSdUvDA6VFXHzAkiq2rRQ2J3ZcrdynosqeJpOrN
dARk3e4jx83V69c/y6ta/xTecTt15p7nI82BH/KNoRoP/7H5+LGaK7emt3wX
8ni096mCKvP9JNs1/fPtgZNtkXX1AXv1ICRYwQHJSDArN08h6zWK7dT/9NUf
LjjPb+7FtDTzn/djO/P0anxm/OY/tRxPpfsznlC2uw3TvyyT6k/2je+8yrKR
eO0t/vu5v1Qtsq7OJnPF8nCtd1yyXYBz2P/A6VlXFxkSRdfV2YgQEpn3mDuc
/kiOIzLlnK0pkOcFTOawMh14IV0lnukZ3b2Jcq6bqzcuiu6u01bvek8fyvHa
7kJkfvPW5w1z2E+yXdM/3x442RZZV2dVeK8ehAQrOCAZCWbl5nd/2Z8m225x
vC+9A7H95YHZXF8mbq56m9/DRvyNr+U4Pj7pa7Lnekxm62/LsjfUw5DnTL7r
JyWsq1cWbndX22zlrus7r3dJa/8Dp0ddfcCQKGFdLUZIZGr73JMo07OOBt+E
FIG7Uf5l3TpGnfS7yrdeylan//KPfwqvpLeBueH9Xf9fvttZc2auxBZyvTqL
zHZ/5U39u9/nstO+ku2a7vn2wMm2dHX1fnr1ICRYwQHJSDErFwYvpbZy2nHj
6DZq5MNOX2ptWr3X/4tU5t1j/9L5kc5Un2x5u0HE7zyVM9Omb4bc43pMpijY
leoz7wUrfzEQ3fNKYQnq6tX4fPTe7T+2V52o9wzcs8pmIGvFDJyezy0WGRIl
qauFConl+/6W1BNeLn80W12oRv0uW94rjSaiPhq6XJbrKm7m1uvNBJUc7q6X
ct4hs5Z5aC7ZP+VtA9P7y+FqKgi+8LX/vCIVBAsF1eT7SbZruufbgybbUtTV
xfRq8aRYwQGpyDErN15VUHExmP0qx6PxvhczXx2qs7c9tTbFfqJrOGvKy2y4
uu1lDamvoe2N/vtZU+TSSOfhPW4N3dj6aWeqX79+Utm84+n+3Q5WV6vRod96
kt7q/NW5sw2/7rfe/tX7Gzhd6uqDhcRB62oRQ2L95SDZK+f1qjvnhDWjzF8K
u6tD9eGdq+dTN8U8me8zwfb2vSIqsx/IsUbfN/v4q0O9P/Tbt1NR0PlS/VnX
G/23Ct5peT/Jdk33fHvAZHvAurr4Xi2aHCs4IBNZZmXm1br24+0f79rHdSV2
558vvLzlUZf4eL/rmGI72zU8s+u9ujPDXWdtyjFX//iWR7jXb++s6hia3pXp
VxZG3jyRc4lZ/53pr7m33fKnLn93vcGetbW7lOw+kNX45AetFfby+u7BaAH3
Rspg/wOnT119oJAo4X0g4oTEytzwW1U2+/GOW3Pbz16du9Vx3G6remt4TqLv
WTKvUNlxl/JS9OabLW2tT28pudXZgZeey1Fhpqy/zfCYy/v1rhuSC25L/LsP
Wk8o5ec8gz8UtAbsK9mu6ZtvD5hsS3gfyH57tUiyrOCAPCSalYkHof6XT9nK
TrVeG5lcWD8ZNT41/nF3y4t/GNvxTXfih8GeZ4/bz7T7/mMy8xaD1Xj0tq/9
jP34sz3B/9x+t2kqz9uqWl57YfONDOu/fTH6hbf5VINnZNd6sU36gpvdHZjK
9LAaG71aX1Hu+h87W5VVCZ9b3PzCvea3Y5a4xbrwgVuNz09Foz/cG/xNTepr
68M1nr/ci0ajM+vBkYjN/BiNTt7xvZjeZWzjX3+cT/WiGp9P/mP0m0HP0+nb
RE+1+UcjT/7brA4SEiV9blGgkFiKDnbXl1c6n7xcYzUeudXrrHTUvBmU7i9B
dfrTy1WOzWJPjU8O9ba2XP1ievlBquRej43E1LDn5bd3veV8Q7IOf6PK/vNL
gW+KLqozjbnvb0wFQX3fWGE3A+8r2a7pmW8PlmxL+dzi/nu1GBKt4IAkJJuV
yVz91YdeT9tztaeqnna90Pqrdk9/MNfX3InYZOhDb5fbWV9Xf97pdLrcXd7A
F/eyfHN3/8P2196/t7iW+Gks8E57kyv1DgHns01Nz7f3fhCKFvB+8eVvfI0n
a3q+mEusxKPDV11P7eMNd6Wsq1Nb4Dakir/jrQNZb2WVTOEDl54Itsqz550b
nj7lsG18oZy+gLb7X9cvKq5fp3acqtv8x/PpTcGyPDy1RfEhUdq6WqiQUBMz
YzeuXXG7Mh2ZmpIfjk4bfpuKJtTE3J0/e1rr6xqcruea27r9o5laUI19O9Dz
YvrnL3kCd3PUzKmiurq6RK/z29jbvLz1493XiHPYV7Jd0y/fHiTZlrSuLqpX
90uyFRyQALNSJ2rsu7/0e9qannV3/P/s3d9vE1f+P/75A+bGl1zkLaTIki+Q
EIpyEYSq+CIRKFKCFkVRILIcBHIiimxAtSkioSoJ1XaqsraWGrZvq8WiqvtZ
/GYX0y+mb7wl7iphG3cxIlHWpUnfTokhTvNLxnKwncnXM7aDf8e/PTN+Pq6q
JA0nc855nZfPnB/6O44XBUwNFpVX076Ze9c/uzWxkFqpuW/yhSoqtkkUmVej
SQgHvTZlPNtzxjT9Nl2kg/P/+m4628z22//Rde+/dbcm0lZERPPJsn1+r63i
g21xeXUtnypGcACuQa/kvGLy6vglegnvQ5N+GyHar33ClavMoTDF5dVoEkIR
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
Kpv2/uNP37jYn4tPkKbnbJszhvZdmU/CyUvsN2+flpNdWYPtVlnibcnBtsi8
OqP8n2QpBDaCAwiAwHrlvFnWmjUksosVU2clq7ZvMS3Ux+4FE5+xeHJmNGXL
q8Prk1fbSFIsv5U6xyU862NDzNF5KWsektDz90ZMTJayOWs8zAzGOY60XZ0Y
YbpJwlUyhbe0BKU1iTLm1RxpEsEF8yCzElVu9mQqBe0xy8kdZxr5iH5tv9SQ
7V1JbOn1drOM1Pvo2e1tsz7XA8NfjP/4JXXGOLbaIZ/56kwFip6kLVYYXTue
u1LWYLtV1n2LRQfb8uXVhTzJUghsBAcQAIH1SuZ9sajfvJBxRNmYGNmdtoaz
8nl17Oin1FAfnT9pGkjZeZSuDHn1ZmDVMzv5tUba0kNZZ2t7GEiVxO+FkVy0
ZZ5Sez2tPxN7T00vT1JdJCFqGR1fz5jXRQ+4Trq2o/CWlqikJlGWvJpjTSJ6
807mzDmadWetHV6LfWRIz6vptWfX+5jVMW87/pJNo9kp2rAb6CK/UKy2eguL
5zTTIB6bNIckTIPI50mXNdhulSnelhhsy5FXF/4kSyGwERx4ZPvcrR2Rja3M
KaDm8V/q4JjfLcH1yug6TOmw3ZtWeeH1iT+2pGdZVciro6+5k5b80cFfbvWK
RM2a+zufiFVaXk177DeoiI9H3jvW0fuhsS7Or2bF7jHP+JDDvmf/ffxcwr6q
wLRRvo8gO0bHl9J2iC2Nj3aQxD65cTph91HhLS3pd5bSJErNqznZJMIr4x9L
SVHz8KOV5LLQK4+Gm0Wk9OPxlVon/5UQu6UoZSPAhufhHwfVqiMJKTe9bD17
MksSuy12Hsi+ftPPBczs0wv2G58wLWLkbE+H/LLxUX6nLpc12G6VKd6WGGxL
zKuLfJKlENgIDnwS+Qj5krlu6bmd+gPbCHd3an9wp1/HNO9y3L+maI6MWqRY
dm3cI/iDawTWK5lQT0oHL5zePtaVRfs9jw0Drb3UxHbWtBlYXfR4XsyOfdpJ
su2B+sdspAEs+UJbId9SpLG4n5nOSIiEb71cZV6Vx1rSz2PUEXbBbava7JyP
/Y/ZsBNuIqVlMfYjtM95vUciln85lc88YdnWgWwG3HdUEpG45+qY8Bs2K/TK
YTzXSja0qm5OuNejT58OLE7fvzp45qvUhx96MaY90Sw6qDH9yx2rzM2AZ9Kk
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
1v2xZuiQ5596xQGR9NJd1zL7pwZXnvzl+Lk74zfrYXF1retdOP0XeTUAJKpy
TKADUzc6Rd0652rypER43T7SoX3yptL/fug32+iRRqJBOvydJ5RYhOCy/cqB
Acsi3+ZKaqa2TxL1WB617o81E0mqvxuWNpDSyw89iTO0r6f1sqamBqEvrq51
vQuq/yKvBoBE1Y0JtNvcLxGlhs2Qd/yavHkXITN7sv1/gRcO61d6Sme45/SG
io259PIk1UUSpHjA7E78JfTLsUuHyMgzaKQciIv5KPZJoh65pdj+yHf0+mOq
rYEgu6jJ5ZRWuOkytBNCX1xdfL1vBjz/tt7SU9ov7zkXi+xkQuu/yKsBIFFV
YwLtMcvJ9Kg5b5Y1EkRDu/5ppnmSsG/apOocZN9X+ly3Blv6TbPBIlKy0KJV
I2He7ypM7kDiN+IjKUH2mtx8miepleKeJOqRc4rqj/xHe+3D0kg72aWypmbV
eZ1cHckt//N03le5Jkb7p2/1HxmZWC3lV3imp+d94czfLK7e6bVpk7qz/8aE
x8+W8GC/6edgwSUTXv9FXg0AiaoaE0IOKhK4yc5rzqSAH/bNjd978G9PYDPt
/wj7pr6USzpHx5eigZZetAyI9mtsBb8npFceDTeLItG8hfoxdR7K/+xm/wFx
x4Vvptf4FM5rpKgniXrkosL7owDQQZehi5kVbVLbltK+u+PJ1XRw1tQvJok9
Vyb8FWhloXX35O3Rnr1Zipcn/6xpUEyQe0bGM865F1Pv9NqU4aRE+vH4SvR/
CS1alCLJRdty5tQ9GyH2X+TVAJBo6X+O/RcbE/aPzFR8J/jbGYlm2dBnX923
P3F5fDkiEe39/pJUIh39YWU7zm7OGNp3pb3B3NHGrLGPGUtFg+aFwqdY+Cu0
6HzwN3PR7vxv2vkAxTxJ1GNJyl+JMYX2R0H43T7ETEgTu963racnkDueXB3J
q28PtrTKdf/0ljX5o+ct55lDOQbU1NWhbnGpefXtMy0tJ3TjrzKWsfB6D3nH
RqWiju3PxfFfsmfA8qKQxyDI/lvVMRQAOK/K66vnLYNNRJJdzXLK4so0QUEv
WM+0pEZgNh8j9uucbwoJ52+eaPeLmHDOsx0xpQq7DAdJogQNBw0zSRNSRTxJ
1GNpyl+J2wrqj8KwblPvYv7OzDPSnDi5esmmbiotr95JgfVOL94/IyFF/eaF
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
PSK2Uy9+jLP/J90Jfa4TlUuxY14dejGmO9ev+mwsZTl00gqrSAKsP6H7qbQ5
ZXa1duKii8BTfWejOO2AjspU9Oa6/QMJeWjo7sxqiKYDXpf9S1Wr5J2ONnHi
F8c+H2huSdpcXKF4kgvnxlAAqCkOxoR1p/YPksHosVEbnoeX29oumF1p0w60
29x/gnkdye6jIQ8by7O+jl4aH+1Iul5XfNLwbPZHqivxi6T08sPk7ZYes5J9
F8nuyyP7uL3KtDryqkfaY+5nFw+wl5unnpVXvOLqsUKNitfQI6I74KLXoNBr
U19c/mR8qUKzoDsdDR3tJszzTl3pzewZbIie/0z7nn5x/tr4SskfCZkXTAdi
7yBCvz0cPtymMbtSp6MrVdH0yg+j0obEJiaWf/nsxTjVlvjFBunwd4mX4FQq
nuTCwTEUAGqIkzEhtDBh+ECp/nBEfXbIYGPmxLJipzWKuSwmK3YH0ylpI0k2
HVZSd5zejXiRLnY37WK/eHdqJUuRmMk9UjRgWaz79QOMAuqRPVSh4Jsmcimh
HsvfqHgNPYL2zVgopVw5NKS+bJhYKHegpP2OG8dlGZ3WO9aSS/LUOPCOuPVg
6+GURe/spZCD/397d/AaZX7GAfz9A+aSowchMAi5LSV4EKToQaEEVBCRbGWI
YMl6WEYKVSgmLUt02Z2DJBSEQqDmlN0yhzIVFBqaeIhQs6xlXRa7GDBLpmtc
s4YgCU4y1EnUvu4mMXnnnXnfkc/nOBnIj+eZ+T4Pk8z7nsl/1He+P66bQlYr
5cnhvt+eH/jofP6PtXfwFpeSjr/RK4sPbg5+cDgb7Oo8ki8Uv5yr/fa1I13s
7sysPfj/CxD9RPx5srlUzlAgMS2eCesXg9riulVNtX5xuf19t35I+iQtZu1j
ukxH38QW98lunnS9qFqad0RjrH4z/Lu/pun+O+lqdHPzpMVnKBCz1s6E1Qcj
xzLrdy54dn/4TGNv2fD20/xn5Fj7+p1QatdGOF38+b2E2cjyg5FTmaBr8O5i
7ftWx/LJvhTT9aJqad4RjVF9dP33Q1/u8L6zjZSuRjc5T1p7hgJxa+lMWJkr
fZgJ9g/cflqZLZ07PHCr/n8prMfaDcXaB24vVx6Wzr3ff2vOErE9s6XejqD9
0u3lpdnShcP94/NJFi5lL6qW5h3REM/LpcLQm/8fkrB0NbrJedLSMxSIXWtn
QnXx38M9+zq7jnWduPjZ1024pNLWp3l6b/g3HZ2/Ot71/oXPvnKJtm1bWbz3
l56OvV3Hj5648PnXSV+QLV0vqpbmHdEA1bl/fvyHvz3c4l+dmy9djW5ynrT2
DAXiJhMAWkT1uxsfX701J6vTwwwFwmQCAERjhgJhMgEAojFDgTCZAADRmKFA
mEwAgGjMUCBMJgBANGYoECYTACAaMxQIkwkAEI0ZCoTJBACIxgwFwmQCAERj
hgJhMqF+1crjezevXc735Nb15C9fG7v/Y6puNMzb6WNcVJKkVb77R3/PhbFH
jf9NZigQJhPqtFyeuHKy45cfDE+Wl1bXHlldmhkfynXuOXlloryc8OnYLn2M
i0qSrGpl7s7IuUOZIJsrzjT+15mhQJhMqMfKwp0rhzLtR4amFt/8KK66ODV0
pD1z6MqdhZWEzsb26WNcVJJEVBYf/7c8c//uresjhbMHs5m1oWavBppPJtTh
2ReDh3YHHRfHnvx8VVh5MnaxI9h9aPCLZwmcjJ3Qx7ioJMmYKeaymc6uU70X
CsPXpyb/fMJeDSRDJkRWeVTKtwXBrvNjCxv+fGHs/K4gaMuXHilsmuljXFSS
dCgXc/ZqIBkyIarq9Gh3Ngh2Hx35duOvY1W/HTm6+0W2d49O+75WeuljXFSS
lLBXA4mRCVE9uVH7bC7o6C3NbvKM2p8mg9rnczeeNPVk7IQ+xkUlSQl7NZAY
mRBRZapQWxGCA4WpxU2e8vT2wP7aU34xeNdXtdJKH+OikqSFvRpIjEyIplIu
9gZv2SJe1TbzYWnOGpFO+hgXlSQ17NVAYmRCNM9nRk9vd4sITo/OPG/q6dgu
fYyLSpIa9mogMTIhmtd1284WscVzSJY+xkUlSQ17NZAYmRCNLeLdoI9xUUlS
w14NJEYmRGOLeDfoY1xUktSwVwOJkQnR2CLeDfoYF5UkNezVQGJkQjTL0yO/
3vYW4VtaqaWPcVFJUsNeDSRGJkSzk6uKqW166WNcVJLUsFcDiZEJEb26C8Z7
+Rvfb/KU72/k31tL98KU0qaVPsZFJUkLezWQGJkQ1cu7Nm8R3S/v2pzpLc01
9WTshD7GRSVJCXs1kBiZEFV1erT7xZLQtv/qVxvfOu7l53fZ7tHpapPPxvbp
Y1xUkpSwVwOJkQmRPZ8tnm0LgkxPsbzRllAtF3syL7aMs8VZX9FKM32Mi0qS
DvZqIDEyoQ7P/lXY17bJnrC+Y7TtuzS54LO5lNPHuKgkaWCvBhIjE+qxMj/5
6cFM297+8fk3V4Xq/Hj/3rbMwU8n5zf+kzhpoo9xUUlSwF4NJEYm1Gm5PHHl
5J7O3ND4zNLq2iOrSzPjQ7nO7JFPxsrLCZ+O7dLHuKgkzVetLP5QXjfzzcTV
M3tqQy2zp+fqxP2HLx9/vNiYCWeGAmEyoX7VyuN7N69dzvfk1vXkLw3//e5c
xV+7W4s+xkUlabL1y6fvOXDiVG4Dxw9kM0GuWG7IrzZDgTCZAADRmKFAmEwA
gGjMUCBMJgBANGYoECYTACAaMxQIkwkAEI0ZCoTJBACIxgwFwmQCAERjhgJh
MgEAojFDgTCZAADRmKFA2OtM2Jfr+6SwscHRuz8mfU4ASMLqw7E/bTIeCwP5
rqy9Gnjl9V69hWyuOJP0OQEgCZWpQvZtc9JeDdTYqwFgc/ZqAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDr8Dy9AEdU=
    "], {{0, 774}, {968, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{534.814285714288, Automatic},
  ImageSizeRaw->{968, 774},
  PlotRange->{{0, 968}, {0, 774}}]], "Input",
 CellChangeTimes->{{3.709461945225815*^9, 3.709461946178851*^9}, {
  3.709461982190946*^9, 
  3.709461988426648*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzcvQV4VFe3Nz7FKW0p0JYKFGjxokWL0+LuHiy4FC8El+AQEoh7QlyJCyGB
uLu7y2Qik0wmmYz8vn3OnHNmeL/Ke9+Pe5/7/+d5ciB79uy91tpL915rn9X7
zh85eHLf+aOa+4YuPbvv9JGjmueGLjl1ljR1/YjH63Kb/H40lEf9Hzwe9+ha
DKCR+eXRT/pxk3p85E818nhdRVD98FT/vUk9PoplOjX+XaeI/690+p1+diUP
BdqEAtTU1PC6o7q6mrRV1/AhkshUgz3mOsvQIqiju3VjO1fXkC83oF2q4J35
p/m6kUcbjM4sRp8+vdDlI9JArU9X8Hr8CL2wij+ZUlGBa7O/pbuxnbt174U+
fZfCO1P0z1N2J49W6ByaQjp8gZU7DuHkieO8Ljh27BgZ6uiRIzh88gqCsxuU
8z7h5m2AxyMtHD58mOncnTyPky8fwtyf+pHBZsA9tfXfQ5mafzLpsBBvSuX0
h8bcZwpYnp9DPpsOj7TW/+Jor4s6/2U0KczP/WejLUBQQce/jCaB2dnZ//8c
bTHb3NmCsqJCFBYWoUog2sc0S4R8FBeS5qISCEQytre4qRZFdHMpmsSKu3Tz
xzTdq0oKkJ6dj9KKKjQ0C9HSJEBVeSnyczKRVVZHJAf9PhTwi+jmnihPCIS+
jh6s7WxhY2sHM/1nMHQJRbMCPA2mD8EQyT520H1uBDtbG9jYvYT+s6dwCMvi
/cr1ESPW3RK6+qawtyF97G3xXEcH7tEFPG0ORxG8LXWhdUcXRjo3sH7hLMxc
tBE3dIyg9+AabtmGkFE+HI6/0c1dURvtgDVzVsL0TSERRGZ1BGk4u2kJ9j7x
JdhhF9M13vo6Fi7SxNviZqZrV9Sne2Ldr0vwwD+HjMvOpMDbF2fx64qTiK8W
sV0rY22xbMEKGLwr5d1juirasrDrG6JuJuxGtkjxxYfC7le2WVKNs8snYsZ+
cwqTrgwoFUEPMfjLmXBMbuLtZNo6a99h4YiROGScSI9HtQVob8e3Y/cgvVnO
m8+0iYt8MHXwKFx0yeP6OZ5fhe+nnURRO3h3OYgqcHrk1/h+wRlUK/CBUeuK
xjhL/Nh/AE665zBwkGddBFZ81gtLbrwia4AdTNcko6P4+JtJcMwVcyDXhurh
R14/XPIp4FALu78NPYbMRWCFnOtX7H4T3370DR6GV6tQk5fi5IiBGDTvd5RL
Pzxq4bqH0Jv3HfSj61SotRfiyMy+6DXnIqrl2M6NIIbu5qn4+OvFiKwD27s9
zwuTv+iCKb87U5phLte7ETcWjUbfkZuRJgSLY1OSDX74pAt+uxH4347jQq65
E4bEUPN44+Ga3sKhKa/BhdVDwPt0C5IaVGh2lmLnrMHoOWwHMls5NBXV7zB3
cE8Mmf2Acrc4NIlUrRj7BfpPOobiTq63pNAH4z/vhvGrjChVov0/hqkQD/b/
TJonwzNLxGGqqMOl9T8Q/fgbwsqkHKbCdKyd0Bcfj9iLnDaoODsSC4f2wFeT
z6NcpsK0LgrzhvbCV1NPo0zK9ZaW+GPSgC74caE26v8nMW3AnR2jwftoMjwy
W1WY1iox7TED/vliDlNBAlaOJrpv5F6i+1SY1lKYdsPn4w+joJ3DVFEZitnf
fYSvpp1GqQrTzmJ/wug8DJp7EVWK/0FMG6G9Y8xfYtp9JsG0ncO0IQGrxvwl
pv3GHwHxPzhMq0IxZ1CXv8b0EqVP/+cwbcOTw7+Q5kl/immv5YiolHOYtuVg
/ZQv0Hv47n/FdMHQnvhmymUKdo57CV0WjvgEX075/V8xndS/K0YteoSm/0nu
lcHqj5WkeeJ7cko00h9riEYavBeZIpVGklXhwLwf0OeHXe/JaXU45gztjR9X
PScOjQrTjgJsnPA1Ed8TKJOpMCW2dNwXPfGzhg1lnv+7MWXtS4rFWfT/6HsY
xfJV9qWjEIdnfI4vNtxDM9TsSyesNOej33fLEF3PWQzKvvw8sAd+1Q7gzeO6
ivBs/WR8OWYbMlrfMy4/9uuFjfpRKuOi+O9FUJzvg8lDvsNxxyzOkEMQiZVf
f4PdzyM4n6fA8wYGfD8FdlltXL+68BcY/clI6EXWco5BitUpfPbDPPiVqTkG
3ncw7LOJsElr5t2m2yhHVwFpZyekcuJ9oAZnR33N4sj78L4dobfxyTX4ZZcu
6cD5djkuNzBu0k7EVEk5PNGWj8OLZmH3k1AOfudLWzBtjTZqZeDwVDSmYNus
mThhkcjryk3TAZOjqzB353M0KcCh2loM0weXcOWRMdwcDbBowCcYvPD0h0VV
6aT3QkdVIi7t0MBDhwg0SSSQkN/yFF8c2r0LzwJzNZhu1XGu0Nx4EM5Reeig
u7UhxV8fm3edgF9e40KmW2moFXZvOgafpGJ6JIlESMKTR9iw5xzelonusBjK
pWglUVZlSQ4CXZ5j+c/DMHgB0VSdHxBDZajVA5KGEgS42sHc1BiGRiYwt3JA
RHbVHubjpqJkuNlZwczICIYmZrB28ERmTetvzMf83Fg421rB1MgQRqbmsHH2
QV69+AGzrG2FkTAxd0R5+weEfAkzuEwqhZT8Eo7n7afaulB/sp/SEkH3kPFs
PtTU9If/SwP///WjzedWRopmfgMZE7wtH2qGkXQztSemQElCIAwMjeEblQ85
af2O+YqkPg/25sawdA5GbbuCNb+K9loE2ZrBxMYDOfUdbG8o5MiL9oG+oRmC
E0oXq01QlfkWBi+M4f0ujbKevCVqWOSEhyAssYTiysFqX+HnRcNY3wjuwYlU
CMDBJG+rQaCNKUxsPZHfIPlgQsLRQ16HyxuXYf99W7ibmsErrpiZuztSzM9i
+qoT8PFxgqFdEJqlCmYroTvxm4wxZ/ou2Pu/gp6hC8pFMt637JgSYkRXLMYJ
XWe4EOoEplbzFnG4tkB37xKsuWiKAEcT2Ifl8ZayCy+uRnBwMEqEcp6SNj1o
RC1PrMaik3oIcjWHVWAatWbsVNXvDDB7hgYcKDCM3FAplvMGfCgafc8xpBzi
tjZIFUqIqK6+dzWx4qQF+I1FSCqs+pzpqlAbtRcDY1umKxYt3IvXhTVIScpB
c4eCN5MdWt6JtjYxraO6syRqSsTOeatgFFGCiqQUVLdKeX82fk+OpDI4XtqJ
9Zec0EBYOLmkjsfu20UancevGjooa65BfGr5GG5aCcQdUvqvfsxgChkBRSSC
SCyhx5dJxBCRvzs6ZTzWhFOUSAgNQ0Jm/XttYjEtwhyY0g4xGV/GAUg90+yv
Y86GWyho5CM+uYSK/nl92TFUeHFkQ0Msts9bDbOoUpQnpqCGcNgHW1pW9OSE
5bxdXsLOzhGOrl5Ir2hhEKNEowP88mo0FwZizZz1cM0TMwB/DIkgCzf3LMKg
4eOw95IRShrbwU95ha3zx2P4zNXQcY+nJJ/dt2sRVIHfLsDzw+uw8+HrX5gZ
RHUZsLOxhb2DMxxfvUGVUMrN3tZcjxqBCL73j2CJpinxdVhy9UZ9ViA0Fk3A
4AnzoGXgh6Z2CZLcHmPuxOGYuuogPOIrmH1AgoVUjLqKWtSnu2P53K0IqpDz
fmHGqUx0x6a5ozF0ymLctgpDq6QDEdY3MH3ccMzadBIBGXzVOAoJauoINSqj
sX3RSuKiN/BG05/1oFmgONobjx4ZwNHdD2nlDZSQfs5wVmtFCmwsTGCkdx/H
9x7C1Xt6MDIyRUhqGbezCVk9jM9twpjZexGc3czO2loajxdPnsDcyRORCcXE
MoD3KTdrJ/IjXsHS1h4uTk4IistT0ZziOinq6qqIKUnFgWXL8CC4kls+KMQI
MdfClMHDMHvNEXgkVUPSVg6dE+sxeuh47LliSrSQjB2qraketYJWeGkfxPKD
FrRO/2CamNV0cZa3cOy+CzU4qlK9cfCAFoLzOEpA1oIAayO8iknA3V1Lseth
KO8z+rM+NAw+dw5g9uIduHvvHi5oamCj5iFsXLkE205ew71717Bt6y7o+KRz
61kW7wUD2xC8tb2JqYvPoaQDvBmcXmmF7bUTuO2WRpMx6ZUB9p7SRb4Q3Peb
C6NgYuKK+GBTzJ++DsHEq/+MVSiSajzavQKLd50mc9+FpsZObDu4HyuXLMWJ
a/dw7+pJbNh5Al4ZdUraSAR4ZWGMgPhYaG1YjGMmCYyG7E9AKcTVTYuw6sBF
MtZt7N61CzsO7MGyxStw9uY93L10GOuJfxxSwBBbTpbW2RKeb+Lw7NhmrLvk
TvHiKI5pRHiqsQi/HncgurcRfvZuyKxu7c8oIknhK8zoOQRXuD1kaouvFk81
V2GR5n3KUe3CjBT94jBGziZeN9GbCf5uxMrVUGrsE+ZjUVEoTmhcQnwDmb2l
FAbXjuO2Q3QXDg4Jol7ZwDkgFuYXd2HJMSvK4WEpyE9wxrLpv+HUDYLhtVPY
paGB/Vu2YOmKPfQKn96zC4evWqBarES6MS8CJqZuiA80xrwZGxFWJ/twHDqI
IQ4UAtzZvg6nDSK5Y4a3Bmcwb9stmn1YWW4XFsPVXB/Xr95HUDr/M3YlpWW4
f/IOYep2ZkIZ/Iy0sOaoGSRsS3UC7t16gOgypo+sA2kBrnhw6yqeOEVCIoeS
ST+DoiEeuxasgUVULfPlZuid2IxN11y44aCQojTJH0/v3sRdXTfUdSo+Y3hc
UhGJ80d1wZxL0o7Qo9OaOK4XziBCwrYEF1y5Z0mcG2UnsSAPjsa6uH79Md7l
Nc1khmrJCcaZ44bgs7NKynDt8F5ctErmhioJt8G1p47gdypNnVRIfB1bfWhd
14ZbXLm6Jo0xOYGhE3YgmcTO/NS3iMypYtlTWuaPX78cC23vYsaudiXBIAkU
pfSoPJa76uOtMHHENBjHCyCryUHoa9oR/YQBOMX+BuauvIMqBt62fD+sX7AW
NrG1nHzLxPUIczDB1Ws3YfeukHaUWe6McrmPCzYxHOM0Z7hjx4498CthW9rg
TZS9kW8qaMopOlGS6Icn2jdw/7kH6j9koDqAQYqQFGnhQXB0tCfm3AHu3gFI
yCmjTQbLregswv4l07Hj2VtVmygd26dOxWmrJB4rvE1lmQjwdMFLO3s4Obki
8F0cKpvaua/Ia2D9xBHZtRJumLZMPxzYfJk6BODasoLc4BSQTIMwlW7rA7mo
GqHezrCysoGjsyv8Q+NQWtcMlg07C/0wc/Iv0Amr4sZpSbXHjJHzYZPcSGt7
Wr/UFiDExw129vYEZRf4volEUV0r65V18tNg+MSH2jFjhumJbGddHDppSrWx
jIrX1pZ4k1HDm8aARzFgYXIY7G2tCfYUFYOQlF0KUacSwNbSOOjrBNIxCjtu
vNk9HLvkADE3bht8zSwQWdTI+4Hu0xudDQXwcrCBhbUDQmKzoJQoCRJDPGBq
bo+ozAqVR1kfg2U/jcZhyyRVm1SEopxUJCQmkRmTkqhPkhITkUpWuEMObvOo
s9SPlpA7XkX02a3yEwFurJyCuQfNKDeqG8swkgYkhfnDwcEe9sT/8/AJQnJe
Fc3pyml7IeTBfkyedU6lJYiKd9HagolrboMvA7sY9UWp8HV3pvnF2dkdQRGJ
qBF2dmVmSguzgXFEsRozC3Dv9HE89i3m1ljRkAJDI0/Ukejgmw8lG0q98Smk
NWl4cUcbr4iLVF5SjOLiEpQV5yDA2RDaJt6oFTMOuKIef6ybislHrDnK+9/Z
hkELfkdxB7i2PK8X2H/yGaplbNunNOckuRrirqErCisqyBzFKCkpQ25CCJ49
eQq3eFbdSBH90gL+hOs45Jsy8fjGNQQXiVVyWR0Hk1cBEHSqyW9DEi4cOAyn
1EbeBLrtE3TUJuD84SO47/yOTmYoKS1FQVYS/Nyd4OofiTqK1RrjsHDCGGha
JHMOJ3EEbmyYjunHLClzwc0gI64LWZonXuzh7acoCH6JO08tkVnKYlWKwnRi
cHUfwzo0nxNddNbDy9gcSY0yDmJhli+u3NZFQZsKC0GqF0xDUui/2LYUh0c4
cMEUjSTGZDGjNjgDTW5gxzk9oskKlatWUoCYED84OLkjoYhYHEkt3AwtkSXi
UOATq6V1zwRVEtXwFfGusAjPfW/KqggL7D2ijfw2druhHyR1hMB79+CpRwwK
CkuQGhEEt+AQuOppYdHyC0RMs+Hv4oTYIhHNnVU1AmJYZLA5vRIjl2ihSqoa
X96Qjfvn9mLrtm1EBraRZ1fy3Io950m8JPpzke3FCBQlZ8L6KjSRKDHPWQvf
D1uO1+WSrow26SBaSOf2PQSkFKGU4efyoiz42L/AfasgNKqhnmR1Fj/8tA5R
jaq2zmxnTPv+Z+iFV3M83ZDshP0HriClUcFj56F4NcpOFw8svFFSUU6vfmlp
GTJjAvD4sS580+s5LViX8xYm1mGQcVIpRYj+E+jaxqj4l6zoW3MbJFa2qtpk
lbh/6jh0ffM/nFHszzS3ZblhIo+H0Tv1IWS5nMiqogUWWsehZfqW4V4p7E+t
xIBBi/Hc3hH2xKg4ODjh2Zl16NPrZ9gSw8PSSVSZhVCi34Sc7CtPqGz3Tidk
+BHGUXxW7zWke2DvzvNI4CvTteqzAnD/qQv4UpXxkBP3mXFfaBVSEW6CVcfv
Il+sJvbSRsS+e4ecmjbeeG7KDtidWIuJv12nTpK7cjIjRg5ZHWvXaAg7KnFu
3liMnHcYdk4EK6KdHZ0dcGrVZPT7YQdShFBfmKyoCCTn8zm+DL6+gZCzH657
FnL2QFz5Doe3H0NQoZCDOCXAGs9sIlVapCekUuqohe0hRajlJWy67UQHjuyU
zaVpCI1ORRsn8aQtxR7Tv5kBg8h6BoweEFblwMnWBclFtYj3tYShSxLFY6yr
10mmknHka4fnizPY+dSPXa2OeuImhMWjgUjEtxzp5Ai4sxsjJ59GmYIZ6RPU
F4ZgzaiBGDL7Nm3KBanv4PoqlkzWDn9LG2LOxejMdcakYZPxPKpuwD+Ib3qo
I6xCSwlrFEHj5wnQePaWZZfGWAv8SLhy+vGXlEFWLbMAz08dwh2HBM5vro8y
waBvB2P3TWM4UYba3gHO5vcwYfAALLruxaIpbS5FaGgMatsUakzZhhfrxhB+
nwynNCHLlFXRL6Gx+yqyhUqqycVVsH6mg8CCJo4pKX7u7JRyYiZrzsWdfRqw
jK5Sk+V2ZBKWSS0UfHi5VcgEsLmsiW2nTIivwHH36xtbMGrOeVQywxR63sZ3
X43BY/8MogdLiG4qRVnqKywe8SM0TWI+ZkCtjXeBxtqtsIyo5DgZzTFYPmwc
tNwLlGMRleBlpAOL19kUe3HBL1rw/NAcDF52CVUy/Mw2t+dj3bjv8fN2K0qB
KGORj1FfVYtOwu8+V9ZjwJhV8M8qJdZSCVey+z2MHDwZRjH1vRm4WvLf4PCm
jXj8KkttO7EIeyb8hL0vVGpT0VwMwwdPEZRdz4Q9BIKWbGjMGY75FxwpCKYw
Xd/qa6JL94UILpNyO4/S1gbUNbUTg5QHvXvPEFEsVEVP/His+XkY1twN4A1l
h1Y04MLK8fhqqppq6QPXcyvw9ZB1iKf857ZiuPsHoIoISltZKtw8QpAS7gSN
lVtgm1jL+zPh6M2C01yGAB8vRCdE4cre7bhoGcPxrKKjGkZndmP3ZXvV0emn
cDm5HOOXa4NjIWEKNgwdhEVHzVFaVkr7PKWlRXi0dTbGzLxIpTLwWCKXvbPG
tjUacElW27OtDMTcQRPxMLSaI3JprCvu6TkRB1TOUafAi6zZd1Ngmdjw/+iU
PtEcTzrMQWB+x1cMs8jbm1Gamww342sY1b8Hhqx/TGVVKJmxMQErJ42ncv5U
DhufaO4JmHnentpn+ZShZlNdOZLeeuHcuklkgmHQfatCSSqsQWFxJR1/qRha
gaqcFCRmllF8wzG0KANLRn2JIQvuoAHoyYzQkGiBUcN+gXmCUCX4te8wa8Io
HHdI57FQUBu86dFBuKP5K7oSm3HeOYcjdmsNcVCqm7j5WeWRmxiHrLJGJjIk
jvYzDYLBWLyMFzCKlBiEykISHba8/125CJlxccivFqqxbA2OLhmB7oM0KFeQ
Zdmq14/Rf/AYPIsiSoSQoaauHqIOpd5rrS1EZOgbJBVU0yHPn7EsG0Ep2uqQ
EB6G6MQciGQMdfpA2taI4qxEOOiew5BPumH8PjOwezvU7qzT2ZUYvfIapcE4
6sUaHseocVuR0Agu3KYMkqCmFPEh7gSL0UQDj4d1UqO6cS7NKUJju4zjTElT
OaJjU9Egfj9cMjk1gxDxZ7il/nucKYL5xeUY8sMWvC3tUKrxnvRAce5PsWTS
YPToSpdS4OMflsIxmeWt3jTMwQ8OYNLyS6jgIoA26O5eiFnHzWmS9mHGa+en
4/bBtfj2s55Qlmb0wIrzFqgnYjqeQ1KKgoRQODk5EbpQz54ISshHJzu0ogm3
F40kK7wMkfXs6Q/FJwI82r4Iy887qFzPtmzs/GUyCaDj+zDDy1qK8fzCDvzw
RW+CgrKc4Jc9D1GiDNqZc72uKPS+j/7k330WcTxONsiiGu7+hfD5KLzMEqnC
9AjMGzAIu++/ZeIH0lYTjEUM83AbM8SbeGurjfljvkH3j5TU7Dt+A3xyGjgZ
aclxx7zxv8I8TsBxSr7vQ/w0dRuialWUFFXE4dLupfiyTw+Gkh9jy20Xyrfl
jVRjA8fbGzBk2GoE5Py7bGB1ZS1Gjd2J8DKGDYjnleWFKZ98hI++HoutB05B
m8SAyeWt7P6BvCkVpzZsxmOvfGZAQqb9W3HgfiAHL4W7zYmlNKzjftuIs5dv
w8Ynjt4+mcDNLkW43VPs0dDA7j17emPPnj2kec+e3dDQ2A1tuzB1JynV+iQ+
Ig7H9VeFjEboA4VC7VyQ/DSnu2HT0n3wy29hAMvHsV/XQCeohBFppYsTcHc3
DdkPs1bi5B/XYewcSpkYHpvIIxMkYc2ITzBw6R1KM6tMtIKNeXnjmLZsxz/Q
nUjnQWP1BB0Bbi8Zg/HbHhMvQs2l6ESMpwVeOEVQPrPylKg7GgpjYUe8O3fL
Gxj38XDc8S5mFERXVCZ4Q8fACRXEvWP9Yn7sS4zoyUOP7ydj15GzxHa9REZt
RzdOLiTwfngS686Yc1alMPAZZi3XQmE7ODIohNDbRWURdsHUZVtx4Zo2HIKS
aU99lBpDudzdipGjNyIo79+1eI/3jyMdZlMW7wsGjXK/+xj47XRYJdepQtHy
WBjoWyGnXsIQrgfq0wJw7uw9hBcTV0OcjfOHzsApsb4PN3o9zi0ej6kH9NDY
qWBHinAygU1gKn2wOp/t2pKLfZO+wDcLtFCr4M4jpVXR0Fy8CEcMgiiFzcYS
qT5mOHXNHCVNJCbL9cbuA7eQKpCq9tE68HTXbPy4+jIq2mXc1oWvFUzco0Ds
Cm8h0/bu+QF0+2gICbDZHWXluntpH8KvG35HXG3HOLZZlAON0f3x/aqb6kwW
+GQ7eozeTOyEQs12S/H6xXlsPq0PvpzjHImoERUkOk8OscLqyYvwwD2P45zS
MDNs2XyWTCjlDGiW/UUMGLoA7nmqcglR/ls8N7RHsZA97Sa80VEB07sX8exV
IsFcjiC9izitH0S7E0qaEDMgK8O+mSOx8Kw1RFzA0IlgW0M4vc2lD/ZHqPGR
8anpdL71v2uf3osOWD6SFPphw7pdCKpRCydJrD1/ykSccM5kEO2O2sJk+PkG
ItDbEwGRabTWYQ0CRUvPO3ux5a6X2gqJ4KS1BoNXnEWeGKxNqHxnjJH9huCo
WRzXtVOQgn1TvsVHozWRLVY7dJUhPykcfgHB8PFwR2R2BbMUvRBpfAorz5qp
nfV3IkRnH76dq4FIvnwhS9H2cmitnIzBc0+jsI3tKkHwI02iYb7AWftszmjm
E4EaQuT/+TvVPk6eyxV8yhsN81gBk61BvHyZjJ2Wx56l1FM7eRX0XjjHLXKZ
nOvHmaY0R6xafwCxQhWx62KsMXXSFFwNKOGIjdZKvAvyR9DrQLi7haCisUON
2O2wvriNBDVhKmLLm2B2YhGGbb5JbZupM8n/Uwj5BUNuas7XBg9w/oYT+NzW
fBu8rF7AJqaSdaSIE4eGZprOjDdLhKE0Fpf3X4RHXKVqIzMnBNpGLqgQsVLe
CymvnmHpzGV47BLDbf7Xxbni7E1rVIoUrLxJ25rRJOp8j9IyQTbuHrkAy6Bc
boqOyjg8fGGNrAY5Y4J6QS5IxaWtK7Dh8EPk8BnnsrMKz2/fwcuoqvEs0xDx
DDe/SnTLMfhmMgdx0iZ46JzCV199iZ2GEbxJHGFa8OrxbWg98CLqkwFb3ggn
0+dwTuWzPCNsbGTPETmoG3NCcX7fFQSmqxS4IMUHd0y9UC95X9LVFpFjA2kr
qmobaAWi+dcLy5pfhZiPtz4usHfzQUp+/eg/X+8v6WairWSNCHW2h5XtS1hZ
WMD6pQMCwzLQJgNPGXL1QF1ODGxMLGD30gbmFtZ46eSP/IomNluzNiMURro6
MDQ1h4k5VTL3CtnlDV8yHzeXpcHe1AIvHWxhYW4FWwcvpBfwF7EAtNcgwNYA
z54bwczMFFY29ggIS1Pb4KLWSYb0d+548uwFzE1MYOvsiYSUVFxcMxkjVj6i
Yl5mnSj1W4dAe1uCCIWQOfnXCSGRubSdYRGqSA2HlYkl7GytYW5pDXuXYJTU
tKi7gn+2Dp1CxAZ7IyqX/8/r0B3Zrjcxdf5hxFRUIcLHG9HFTWq+wXuLMZBp
bmmoQ1VlJarrGilX6Wu2t1SE2uoqVFZWoUks5WoxiSbkV1eiQtnMDgJFO+ro
3pVoaO1YyjSLm/jE3FWgmt9EKavJDLkU4iZUkmYqUYX6Cbq+hbjAG5DYDMaT
J0ZCUEuPVlPfrIqaJC2oqaJmqYawQ67u9KiRjpUASX0BfD2C6MOF/f9Euh50
ft5Pw+fAIacNkopEuLjGUA6Han3+7zRQNtugOlQH/b//CXpR9TytvweKsmUJ
4SGITG/4d4CCvBrnFk3E4lP2tB8raWun/v13gKJinvkDBmPPw3d/BRSrRFsy
kxEZmUG7Y/v+GqhJDFCpQVY4dPAg9u/ZRRyWLdixay8OHjrUFQcPHiSTHDxw
FFfv6cDO8w3KhTLW6Eg7O+ioL8XyNL4ftQ4RdXLeX+gJNTyUnz1cMxHjd9Cu
+aU/R6UPM4tcVAl348e4ceE2XN4oz7P/EaW+EPLLkZqainAvPQzrxkPXQZvg
F5+O1KREJCaS36QkJMXHItDVHHtXzMSwccvxwidF7cS+O/KjPOASV0N0dgo2
jB2HQ4bRf4sgm7sqbW9BbWUZnh6cBt7QdVQaDu9vsewGfpQphtIx5VjiPNT/
DSOpAuMOPFk7Dt2+XYTwBmYXlIRjwlI82jqTCOVAnDAJ58JyUU0mHJy8UFhT
gUd7VmH9Ffd/C5fWmiy4mDzDqX2rMGb4WjglNPwTLhJiXnX+OIFzT10ow/Q3
uLAbpxG6u8D76Gvc8S3lklzRmoPdP/cl3u5Y2ETXsp6LmJ+HQCo7wv4Vcmrb
2F1mQfZb3L9yERcvaREiaGlpkbZLFy/itp4zCdxY7+LvUVXIpRC3iSAWiyFq
aYVYIvsrVP/GM5rCfKMu2hCfk3833vCmNCWLVozJETrsnX7CknJb2CTU5tJU
OFiaw9zcnBh86tkVLz3egvE6GCfgQ2XCszCiIR4bBnbFgJVXUSPnYCwJfY4u
BMY+Ky6jRsFFRa1VOYiISQEJ0N4zQc8OU2WcCxH8J/AoL0aYAc9/Dx6qVHLT
cPA+W4awik4WnnTHczTNVlxzV6/XLgt5gXmztiCwuF0Fj6IR2ptH0GGOS3br
v8DTBr19E8lno2CVKPgbeNhdUZ97O8iHX+IpcfHZvf+OmiRozhmLsctOIrlG
wvqZis4WlBaVo6VDzu1+K6QdaBU2o1koJEwpJE/i2TU3o0UkpjWziilb8EST
AmwuVSBJw8DGP9I2YlmVNxnwNnP9O2Byito3mALX1JZ/RKQbKoP18D3RguO2
XoS1jXUXWFpaEoysrCzx7OEN7Dt0HLeMfNCgYFOyiQmMd8eBTeuxfv0GAvyG
DRtI2/r167H7jC4KWv5Fog5PZjmAXQhZWxVcjB7g5hNTRKTXsiUFrcUxeKx9
GzomLihq5Kq2RBXJ0H94Cw+Ik59TJeaS+eUSxHia4fqdR3AJzqCONdWS+WXI
CXPC1ev3YOcVjha5gkvml4oFeOflh9SyRt73XH8p0gLsceeKNmwC49EiUx1K
djbmwereHRIAWCG+XPjeidq52f8GA7N0llWFYfY33TFw+gXkCxq7oKGhgWi0
BgEfhalvof/gKjGmp2DsEUsJP5ex3t5Ke2ZVVVVE0KlnV9QQB0ui3Oj6K+Ef
xWDWlu2JBdNXwSYkGvYvzJBUJ+HKIZLNTmPq6nOIiPDDc0uywhIFE0F1R6bT
TcxYfAwhEaEwNXZBdTsYx0xZRnF86a84YxqAQEszeMaXqVGegKGxCOuvOyDa
xwoWARm8ZQwqsrp0eL9LQTuhLldGoajHzS0rsPe2K4JfvYRDEH3Kx05V/U4f
M6fvg090GAye26PkP8q1Z1eASqX8Y+4wdBu0lMq64AJkooOTHW/hh179sOHK
S5rTVaf575F1CItKezNZC+KXStTKI1CLq1tW4rR5HHGzS1Al7GQSE7vSvmxt
fcN7OX8dLQ2obxZzE9FmpjwYK+dvhVtGLdEYlRB1Kpik+K4QN/NRVV1HJ9xz
c9aEY9Ov62AVXUE88lI0doCbU0KdLjYoj2i4YLmhnjjycrU5uyHg/kEsPWKC
BlEtiuqalNP1RLuwHnVN6hcwKdBEvi7sAKfvMgjV5q2/TmS+BYXF9WOZWVqI
N1/XQCtYropDIiK6qrQMFTV8tIpaUF9dgdJyEj+IJGrbPHK0txbCxfY1asVy
LlVA1IBqJjrlCjOIshfUVFHTMF5Bd8Sb/IHftt5BaaNSLcqh2jmghm6s5UMo
lqsluIghqGtQO4UjeLVn48Cvy/AoIB9NxSX00c5/neGmMTP4X1lJvjgYum9r
1dhEAY/r6+gTgoN6b2nlzW05/lmdT3cS36bC8rkZ3Nw8YWfliIRCPo8tx2iv
r0BBUTVSPR5i4arzKOxkOeBjCIvDsf/XsejZ9yss3nEZMQU1yAkyxOyRA9F3
2FSc1vOmEplY8gsqcpDfKMDLP3Zg3WW3X1gRJQCXxoXAxMAKbp7usLV9haIG
CQtAY0keyuv5cL2hidWn6GRxBoDPUfTOGgvGDkTvr0dh1yVTFJEV8H9+CsO/
6YvBU5dDzztVLUmN8FB6HuoLXmPj/HVwzm6byeBBLV6mP9EEw/vjk8HjceC2
Hcr5tXC9q4nvv+qLH2eth1lIHrfXJ29HQUE2+DWpOLxyJe4HlvPGcNRvR5it
Dq7cNYCXnz/i8gUci9bnJ8DJwgJGT65g3cr10HpkBHMbR8Tk13Ms2pLti8Xj
h2LG3hdolHPbi0XhztC69BCO7j54l5JPby1w5SASAfxdrWBu5wYPZzs4B6ep
UnIoiNqQnVYEYUUMdi9cixdvq7kFRGcD7G9q4Lten2D4tFV47psGfmUKzq6d
jv6ffI1Fu68joaKVK32oLUVucQPeGpzDou069OHTfz0DhGXewoA76Er8lYM6
4ZzjLSnwxoS+PHQftxuZLfgLvh3MEJRC7aX2cZwyi6OHrk/wxOEtvyMoR8jF
URJ+JsxNrRHsb43ls1bDLkXIUI7aDxXD8eIerNpzBZ6vPGF8+wI27NiC3xav
wqXndnjlYYuzh/fh5stwsFvcVSmBMDD2hLfJZUxbep7K/2fT4dFWAK0jB2EU
KaC7JjvrYJ/mA+S1qMK6xozX0LP2RIDVdfyy8BjSOG+mHxTiEmKrVmHvdSO8
8nTD7T+OYfWmdVi8ajv07F7Bw0YH+/cehnVkkRIWaRP8bU3gHBSM8+uX4Lix
qnpE0ZiJc2uW4+gDS4KGE66cO4JVG1djydrdMHZ+BTfz+9i97wRck5iUGkUH
Igi6jh5BuHd4E9Zr0dUjXHq+og5nFk3ButvBoBxlT3sHpNVJ2C3l1mQrjB00
AWaJrdxhg7gsGuf27IWOH1t7o6zGd720EWOX36X3TWPdnRCWVkUfFrBn4lVv
zLD38F1UUH+Ly/HozFFoWUap2JkImL05XEJeQ3vrYmy9682l51eEW2EJsW4G
Tq/gbqOH3w9sx9pFy7H1wC16fV9cO4sDZ54RJaRUCsLiWJgZ2yLI9Rnmz9yI
0P+oeGQa843OsteY3YOHMZq61EUTqnyddCwe1Z24N78gqFLxtyxNlYLm4OCS
ubjsk8/ZkZCnJzBv022Uq5WaNFWkwfaFLsycQtDQCc4MSUtw7+wTRJaxmbif
IM7pEbadslUpQmIBn997iDe5zCEpIX9xTCD0dZ/BKSJPqZZ7QZzpgl/nroBb
UQfTrRE6+9Zh8xVX1bEsiddSw2D4RAeub9IpGfmUWWlJWQQunjEDW6JCLZvl
zbM4ZxDLpbiJikJwS9sYBU1K4ZITt93Pzhy6BnbI4UtYsWrODsaFc7Zo4YZq
ht6F33H9ZQY3VFOmD24+sKbKYJVdOoXEebfBI+KSRhU3j2HZmKAa8lgTI6Zo
IpcwYGluEpKKhSwbCxKsMWXkTFjENTDnXD1QQzzEMUNmwTazDdKqTMTnlFKU
7MNMTI3odecQlu7TB3tm05L7CkvnrYF1PJ/zPCT1eOtlhcdPrZBcJmQZNtL1
Ia57pHKIySrDcPjwEcInbIsCUYSRdd1iOAXEz4uAsd4z2Cj9+P8HhqXuw7j8
29f4aNReZLdxDCsv8cdPn/Lw6bRDVDLqXzDsADUCNJRnI9DDERaWlrC2soWb
TyChUzkFsiqBPR6rxozHSbtUtaT2WKz9eQrOOWZyWkPW1gphawc3p/LcjjAo
iWCszE1gbGKOlw7OCAiLRUGlgGHqejjoOCKrpp0bW5zjj71rf0ecQOWPlYT7
wMkvjj7iZn0/cXMT2pSlScxevTJDIDf+NSzNTGBiag47RxI7vItHUU0jN1ZT
lBlhizl4malKaBbEmGLC2N/gmNmk0oIk5BYxBcEqfMRIDPOCmYkxTM0tYe/s
ibCYVFQKlCwua8yC+VNvOiOB1Zx5REXt1nxKnf4yP3JEOxPVlaJWPkIi1ibi
USvUcZEKkRX7Bg62xEEgc9k5uiDgbQzKG1W0aiUBsOkzf0ppcfMlW2hj30kT
CLlDy06EvbRGWJ56AbQUwiYhXR6u1F8fQ9FWAV8Hc+gbGBNbEoBM5UEjciK8
oKvzHPavwlAv4Y7Q5SQemTPkJ1xSSxuTiaoR5uMJd3d3AoiHhwdpc3dzx+vI
LIgVqnQwpbTOgDknrdQI1TizdCLmn3XkqRIi5OAXp8PPzR7mFoRDrV/CwzcI
yfl0yYt6XpPV+bUYu+0+2BxnihOsj6/G9C0PIVDgPcwbm1tp35rNivkzrgl6
j2t6IivCAcZvi9SEsREPjh/CTccstbKsXFgYeaCKRBLsfO1tQhJZKMvW/9Pw
tAfkMilkkkY8OUQdxQ+FYVgZlbDdBe3t7ZSnJOlAY0UWHmyfiS79R+Geb+5f
halsyly2x3McOfMAadVUQgG1yfQZUQaZsDd8gPv2kZSbqvyRFuLIxDFYc95d
7RSc0PvoUoyYdxHVUrWE9FZYnDuAP0zfMaSlHAMFMj11sGrHHwjLqUIzESph
SzPKchLh6+YI18A4CIjOSHG1gFtCmYqSxbAyfI7wUrXimtp4PHfxRp1aoYRC
kIDfd+6BbaKAkZtP6RWOe6lNXMMbiC2so6dsaWlCcUYcvFwc4BGShGYpZW99
MXfASFxzy1eFmfIKHJ3xE5aecX5PBbbm4OIODZhFVKphJoLHo9PYcEofudWN
ZBohWpoFyEl4B1dHBwTE5qFTLoQfUX0RVR2cdiuJgK6RDYrVimsa0r3w3D+e
ln62LdlWGztPvqB5dzyLmaQC+meP4IFrDCGiUDklwSwr5hWu3dFBaIEya0je
XgM3YxMkNqg0aHNOMHRMnVCjXmGT4AqDkAz6L7aNSpzYuucackTgKU9eSAzU
yYfesZ048sgTgqZm4sEQo+H/Cs5WDzF/3CpYxdagPDkADn6phCtFKMksIhzS
AZP9CzF67R3Uy1Tjt1cl4965E/Qtvb2Yi31v6JJxlScOnNyoqwhVin4HigqK
UE8YJtnqDIb+tBGRtZ1s5UuS/UMcuaSHPL6Q2julmJpojxRY6t6DjnsiHX6y
YAQ/3o2+k3YjXaRq4xN/YfCQ6bBMUiX55ZOYePPeeyiVsKD1o9XFPzFYE7FU
zYXRMDHxV6sxlCPByRo2nskqpibK+Z058XRK1ZJ1pRW4fVgTDz2z/wMXQbkp
3pMmVrDtXezeuRW//jIRQ4YMw6wla6GhsYvMtGPHDjLqrl07oXn4GM5duguf
hBJVdt+fqozYZ/vp/fS9xBHkKujac3Bm005Yx1UzALTBaN9cfPXTKuhaWMOC
BM2WVta4tX8R+n83Fx75bWq4KyCoKEBhdQNnGagbG7eNHIPdjyK4rDlK0pJD
fQhdsyEoi8KDu1YoFsnZzDOVWpIiw1MbszWuUplA3CxyMYrz81Hd3MHVrMjr
orBi0Bj8bp6mkmcZ8TuDXsE7vJCu/zg8YxhGrzgBS2srGgsra1McmDcKg+Yc
pXwrbngSfVUU5qCSWGUWieY0B0zuR6X48DkkqHTkYA93hKdXoSDGDY/0A6i9
ZBYJLhtS2gaXh5pYpvVSdTEEkZrGSuQWldN5BJxib8/HweHdSHSyHnH1CjYD
LN3pHrYdfoIamZLjUvys8NT8LW1/2Y0ZlmQKSRNMr2lg3d1XHMdLRXzk5Jag
VcoqgK6oi9DHiL5z4Zgh5mITqsDJ4twydCOBq08R5ds0wsfaFcXCBgRbGyO6
VoGONAuM+X4u7DNaWCb6c7nuRIybHdzCSsl/s7Bu/Ggct0lhIXp9kypq6oYz
9molFw0JOLJ+N9wyWRPdGyW+DzCk5/c4cMcQVpYWZNUsiexfxIhPB2Lv47D3
1Ct1Z3QeiQfa5CqVo+BHY+XgsTjJcUUPjitehebSQbuT/hM4J1exCTfiylic
XL0GxhGVamwtRXVhAcrrWv9j8VXGO2JRM+rrBRCKxOjs7CDmpaEbaaDcuKYW
Ls2M9w9i21mfBZ3LF2HxOk9Fvs5c7PppONbfDubgTn15Gh8PnAXnjAbS1tJC
3SrTlOFGfOUROO2czR1PCVOs8Xm373DGMoPZuVRmw7c0U9u6HXjrYAxzf7p4
X5UE2QKD44sxfrM26uRc4UtNuC568Ibhjid7NQDlYcvQImyjqWh16jf0nXwA
GY0iCh7y24pM12v4bNAcOOW2cRDF25wkSE+Dc7pItZcq6yB0IypfUge7F3rw
S6vl9qYpc665aBLW3qJvNlYdjRNfxd8M5y+/QH4LWIHKdfwD3329BMHVjAPf
WgbzZ88RmteoKsmpT8Dm2ROgoRfKlI93RbjxQfLPL/DMauOxxQ3NSdaY0Odr
XPZU5l+nxvgjnLgCbZU5CPT2R4C7IfZpXkFUhZj3ZxLD1uPIWysQ5B2AsGAX
nN13CFYRZaq4qCoJD/64CMdIVRuE8Vg99Efs1Y/jxEVWG4llIwdh06NAtLW2
KClMHHjtLVMxbiedY8HVdNRG6KHnR+or1YNeKWGTMu4RZAXiqZ4D8XxlLEkK
fR9h8tiFcEpv/nDF4WwOFbWPW5ydiEA3SxxZMYGuebzolsPFJtXhWDViPP5Q
d84Jy+8dOwbb77zmGKc5xRYDyLJsve7PoUqdx9TxG+gAgcWlpa4KFTWNtAZh
mbc6/AV6Ewt4WDeS+25VmD7GD5kHp2yVlZPkuWFG/wl4FFTBzRtne4aA/B2e
+JVw35W2CMBvbOXwVqoSGfjlZahtEjMX3fSAuKECiVFvYPnkEsb264Fe044g
t5XLqJY088FnciNVw3SitqwM9cIOjjtDjQ7SIDwLLGW4hARibbnYMvN7TL/g
QluI9nYRieiVuxdiQTlSUtJR3djOpvQ2/EkUp2hvQHZqCgpqmphyjx50BllB
Rjz8nEywZ8FwetoHwWWqox0xDEk0MX7dQyqXjkXE5+4WfLHgKIolKjasidTH
xyRQUac5JbWN1XVolahqwOQdzSgprQKJuz4c77FJix21abiycz4+Ub6whPz2
xeoLFqjliv570Qvnc3c3pq/XpipmmJ8aXF0xlzBgUG92hsYkbBjYDd+svkFV
7bGshbYquBk9xb179whzUs9e5KmHsNx6Dkpp5Vv89ikPI3Y/o6J/rrRGxset
rb9hw1UvlV/Ef4d1E2bjfkAZy4CCOBsM78rD4ts+HEND2oAAa321WbuS52P4
JpdzpGaZMs1LF3NHfcmV5Xz246+wCKdvi+CcrFL/J+hP6LPqaTBPVV4hgYHG
PPww8TQqZcyVeF0JGWwxleEktgRHVBGL0+t/QS+WzF2+xPbbzvRtAywoTSmO
mDt5MewyWjh5SzA6hTHziY/G8Q1VOxCORZ9xxPrpP2cJKk9kE5MnktWiKr5S
wO/2TroiY9a249AztUVwdA59HstuMsga0nF++w48Dy5kRq3Gje1roOWWxeut
BpDDhd9I96mUp8w5JlIxBIJmWiVxtVft1XDW08alS1pE+C5fvkzatLS0oHX1
Ad7kClQRLWFiQyqh7PNf8aZayg4p7xShvkGo5hP1hCDZAzs3HERQEXO0WxmG
Hcs3wyGnVQVhRzlOLRiEHmMPIL+Dy6mRtgtR36TUOmx5DWRN8DN7gksXL3EQ
XiYQXtK6Ba+kcpWLRVXsfN8bXQZOxLGrj/DSxQ/ZNa2TmBkp07r2xz4YMOeq
qqy4K1IsT2HgsLnwLpHwVG6GEE4PtHDbLJSK3tlai9KUUJib2sD0/hEM+vZn
WMQ3ctnRie66OH7DEnWdLFcpS+kczlB3V3fHwt1noG9hj9CEArUtI6ZU58Fp
7DpnzW05RelfxhqNZ1RFSC8OIhEMqT2bv6a+Kv+6DXp7mTSjhL9LM1LppxY8
PUCVkM5DQH67yteUweLYYozccJO6NocrYrR7iAtPnNAgZTHtgfqM17h94QEi
i+rRUhqKMwdvIokvYYtnWouDMGdAb8w8YqsejBR4P8aI4RNwxSODe01HQ4Yr
cWx6Y6kWnbam8imv4oeRP+Px6yJu0mx/a1y/ZY4SQSsKgs3x+zlT1EvBWpAi
vwf4gqjUE1apakwsg+8tDQwbvxguGY1skpOiNBAzho/BzUDVnTRUjfX9C+dh
H1Ou5hhTdY870fXjsYSZxdzWXI4rfvh6uNrLN5TGyN/oFi4+86OSflkWkhHv
WyQSIjvSGbtWbYZdAp9jodwgcxzXeo5iMdT0XDue7JyNSft01W9qeWN6C5f1
vdAqV60BOqpg8UgbLzyS0dbWANObF/DYK5ddg38g7KPgwvcy+E1PzyL8MBVu
f5vf9bcWrhdyX2lj9WFVZTOl3tKcr2HUwu0IKO9kadVcmYu3r4Ph5+OPhGIB
J1J21/DdlxPwJLhIdeaV7ovFPw3CxN30q1Pmqy3MW6KvB349A2bR1SxytbGO
mPnjN5h3ypVbmKqcJIQEB8LH/w3yBGLlIU5ver1eXtiAL0euxesiMQdupscj
/PjFd9irF8PViVLbZ7cObIW2fwkHmKK1CNd2zsOCq27UjjLLMQpRDk4sm4x5
R0wpg8HxYd1bzOr1OVaedVPd6NoVHY21aBTRhRdMqU4vJNpqYd1pY9W1boSF
Y8xPYfgSTapyiEsqoS50igxDoL8vQqLSqDum1O6A+hPqdKOp8wuhzpyTtJc2
XG31P4B/QzRXRw3ML13FE9tItMjlkMsVaC5LgomlM/IbOf+evm9C6RsyoqC8
eybS5g5W/LYFFm/S0S6nQqYORBLPT881kU67WcBOQ1Yu2EALy5dqwDGa2iul
+ooQbGMAY99MdhqF6q4QriqLStayuXoQKzb+jteZlTSE6ODDgcR5zrGVykS1
nqiI9cK5w3cRlVtHusihUIiR6GsPi5AsJt+7NzFnMfh912acMgiAoINCtgUJ
fjZYM3MIvlx5kXJSeBOZaRUtZXhxRgsvXBPQxhBGkB8FA2sPlLUo2D2BTglX
U8fr8y/ILluiAYeo3PeQNfLN+GCFVGx8JGutRrCbE6xtLGBkaAxrJz/kV7QM
ZD6uzQqHLXU5uqE+DM0t4R4QT/nPbE1NRcobWJmQjw1ewMjCCt4hRDVJFVzV
DhHhnAhvmFL3p+vrw9TiJUJi6ItMuXqFitRIOFIFLmQYYwtr+ISmoU0in8zQ
Q9pcAg8HK3oGQ0tbvEkuRpTVOfT9dAH8SyRsgYGkqQwBzg6wtjYnsJrA1iUI
pbWtA/8ezg9Gza+ZFZW0t9PZ3Z0yNpxQZo21kzaxuIOnup9dpmxrl6j6yTvp
77Z3SJkbjlVtVL9pLKrt9N80POJMJ0zrOxhXXhWwVTAd1MfkK1Qq6/8FAhnm
L0pg/sNrzQezn7XlYfOsIZh+jlY1F/97JqFigp1z6ZigQvaBJ2Hvw86xv4Bv
fpgHr+IO3oedQblHSm04taGiMBdBxifJhJ/jtF32f8tMPeh9yGg/J+hoX8L6
Retw5UUEtTp/fNDJ/jffuv+/ebQ99Gdd6bunywqyUdUiJeN9oBlUl/J3oDg7
DSnZ9F2h+5g5Jc2VSE5MQllDO+8V21UhQ3VmBLzfJFHXoKiETo66ggwkpuVD
LP9wL41RQtgd+a8eY/kGTbqw0jMiCxISte9hPqMuJ35wZCf2XboPIwNX5Fa3
MuAqVWh88Fvk14p47IXnghQXbF26C/deGMDCh1gq2X9ylP4XAHMvFVK0oSQ3
E1kF5ZTPxm4jl/jcx6wVF5BVWQhnl9fgixW8rQyscrEAuZkZyC8XqLad6fuG
V+K4SSTKEgPglVjCe870b6krQUZWAX2ZvjKxlPgUna0oykpBQlIqCopKUZKf
hcSERGTlV6mHXM38SryxtkRYrqponDrCyMnIQlVjO5f73FhZhIyMHPBFMg6k
5gxn/PbLLgQTzEIcPFEolH448s2hm6lzkgZ4mZrAwskXwd7OMDXzQHkb2HiI
cr8gLcWp1cug5Zq9jflWZ2MhLB4bwC2QUMreGi9d36ncbYqYCvpgrCTgKeYu
/h257WCI2R2V0Q44cOgiHANDEBQYAz4hqjJa+xQKcT1iX3vBzdUKO1fMxsL9
1+Dm5oGQyGzVXT+yOtzfOBGfDFyKwGJ2u7Y7XdB98chxGDj5IDAoFAWEOdkb
k4piPfBA3xaBBFxzE0uEpNXw3sOQ0EZ3/1po3Hv95YclcE80Jdth/Z5LyKFd
BAn8H57D3tPmEEhVGaol8d5wjMhD/MtrmLX+FnUEyDDrp0hyvI71582VWVcd
FdA9tA8XDcK41EIF8Z/97RyRXZGDP9YuhZZzNkPrHkgmccuQCRrIlZG1iPaG
fUCm6hWpFAEa6SuQpv7hpoqjia/99uVT3DX2RZOcu62jNdUe44dMx8ssCRSV
MbB0e42GTgV39Yy0Gvf37oJeCJ1CippEN2zafBx+eS0ckvxs4ll6xKMgzBTz
5+1HUrPiw91lx1I7zvAkpqy9oMxkpX5EuTiy+FectYrnAGkXlMLb1Ax3Lx3F
ljOG4EvYd790pQExObwcSy7acectLTmeWDxtBayT2F1cKQqTgqGvp4PD2zWg
51vAUVxS9RZLxo7FWbt04oTVIy+9hFIHHMXlVTi+YgJmXXTish0p2l1ZPg0L
TtqTxelARnYhmtsZ0n4GafkbLJ+xDFax7Owy+N3XxJxt96ida/pH3lqLUA8L
PLx5Flt3aiGtWf7BKDuVoZpMWIWU+DjqUmSkZeVDIJJyGu3dY00MnXIQeWo3
siaYkZh5+n6kNalyWWQiQpH8Enp7dQ2LPn3qmoUkulCXjJ1dgMZ27jY6+g79
rfMwVcNQLSSnFmkppuzUpd7CywoC6ssKSZTRwr0CR1Ceh0QCcnxiCsrrxfOY
9ZQ0lCMhNhbJmYWUZWV+xMhPjUdKToVaQU83GjqbY0sxdukV1KnlFRF1lOBj
B52nTwnTPXv2jLSR/+OZoS3Sa1TvV1Vfb/ZCgAy7PzB4yEqE1Si4MpfaokzE
xcYjOSUVuSU1793dSV3SPW3iNDx4U6HaLKt6gyWjp+CWb6GqTSJEQW4hff7/
wbSY8oyhH4rjvXDl1mPYubrDy9sHQcHB8PPyQtA7ZcoM9ZPrfBUj+s+Fe1YT
RKJWtLaKIMxyw7T+P+CyS7bqHEJSAUcTM8SUt/FW0W29IG+pRnRoAN68fQc/
X294exFzFOQHh5fW8I0vUSUMKuB6di1GTjiIzKY2iFrJNCIxMsnUg/rNhFuu
iJumMsYPJi9DqRRh7oYP6s0f3oaP8NjACl4eHvDwcsOLh7dg+CqOUoyz6W6f
ozrFB9eu3ISVqxt8/Xzg6f8GBZUlsL+rhdO3TeDm5IDglBIa68rceGTVSyFM
MMe476bDNJqv4hIRIp1Noa2tTeamnl2h/cSEKu/gevwrl/RmxKKpOBfp2dVk
OdKwfuIYaOiFU7GC8iv9yVcEcDd/hlt6FnAnFtLXLwBBQYHw8vJDfC6T0tOU
iKU/jcTG+4H0y3ZaCbHaxHW4uWkKRmx478yOWnWvl5bwS6n9cDqZDYE7S8Ow
Zco8XHNjE04/pe+VSHzrA4uXfihv6EBbviemDRqIRUfvwtrSgk4atTR7giUj
v8EvJy1ojaFK6suH3p278M1sZPiH+E9R5pj8xTCcsk1WHTKVROHi7xfhGl/F
ne9lO1/BwC9+wOG7RrC0MKfTp02enMeoL7/FIYs49qtFIba4+cyJPrNSvRmz
A+5XdmP++ivIb+HSaYW5flg7bz6ue6TzZrEQivPx+7y5OPCMfXnFJ2goTYHF
PU307/oTXkRRJy58IgXu1Mu/UJ7kCwNXqqCmBVrLZmDllVdsEsGf8UZbSTzM
LFyouyPhe2MzxvymppyUIUKU4TlMnXcMyU2qe5ipiz/Ks+HjYg+3kBy0yxtx
Z9lEDJq4EQbWVKqyOayIq3px21wMHLwG4bWqm8UpdrN7/AAvQws/PH9EGx/B
J32W4l0duByFsoxkpJcIibxX49DcUfjlqK3qIuKucL2yDn2nHUUR0XXrmdEl
tfHYNfY7DF99T3Xe1BOBV3ZgiaYB2KrHzvIgTBk0FCes1Y8p+PQLwsfvM6G0
P7st1Jxuj5HfjMYd/3JOo/vc2IRvRmogQwiuirMxwQzfdhuLp69Zt7IPqiP0
MYQ3EJfs6DRNZAU5wj9XoLxQMzYYXp4uuHPhMqzDCnh/t9b0FaJpMfD3e4UX
d69B2zKUyktUJUeU4cDUEZi+w0qV3yFtQHxkClqJCx71fD8G/LQesQ3cV6hX
kf40fDyevq3+cGfs7Fo63FpLQJiP4KIO7qA//NlRjJ62H1lqmbMZtn9g5KB1
iKgHbwPdNgCt/AqU1TSpzdaJyqwQbPv5WwxafFftVRJCvND4DbM0nnP1HxTP
2x1dgUkLrlGiwL2TjCKf/5W16DlsId7UcLdElXnfxaAuA3AtqJRbxYIAbYLN
N7hhz5oq4qFJinBw2neYdtaWPpUX8vOQkMfnwKurLAe/mUusoDIFTvyLuRfy
q1BR18z1oKFqTsTsH7/ET+sNqcVkL4BtL/HDnJHTcNe/TCV5ddFYMGkMjtql
frjVGsYMLmlrRVNTE/VL4KWePSAUtXMJCBEGR9GN9xUevi5lF1PemIDtc+bj
qnseB2N58GNMnboLUQK1l6jKJGh5b2jCec0t6GDeHsMeIjcWxkDn0mGsXjwH
333aBbyPvoWWexqriKkEg9lT18A9T5WYE/RgL2auv0vf9MqtM/UyiXnD0XeU
2mt3u0GYaocfyajz/qAP4UayRKVeatqsDhyJ05qa0d6pulC/LtoEA3gfYc0t
L7XTQSnMTv6GvhOOoaSTuWmJukikE6KWFuL0lOAos/z92K90lkJz4rfoN24/
cjtU6R5kCV0vb8PcPbqqIqu2bOybNQsXnNM/2Epzd/YS7RlmfgvLli7B0qXL
emPZsmUEjGXLlmLJkqU49tSdA6M51QmjP+Zh1gV3pRLqiRx/fezcdx3Zzcqo
s8D9AVbtvo3yTtWCt5VE4tRGEjktXUoEhxq+K5lpKZZtPoHgwhZuwTvKIrFl
whd0aki/b4Zi0uz10HGLV53Pd8Lv2XkcuGzDFcJ43zyAnbdcKdXMrXdrBpaM
6Y8Bk09QK8Gut6TIFxP6dcO45QaUamDXm6rMvLFnPQXPe7AtXbkbjgnVnB2Q
18djzTdd8NmSq+CrLkKhlNXQT2fAPV/MZSoVBupj0/YLSOLLeNzdkA3F8LK1
hL2NPuaPGkjzAXu42lH8BvvXacAuvua903Gvi8sI2qNglSzsxVBbzk/FuW2a
MH5TosRfmIr9S3fBLrH+w6sA6gaC4sJCFBZRNzAXFVH36hcWFKG6oUWVhyRv
xuMdP6PbNysQVS9XBz/R2xrPXwaika0mUWZhRNsb47GRN6oENXB6fBv6bml0
zgTLLApZO2rKS6h3qDCzEooSKIrLqqmDIC5bI8flGj7uPRRnLYJQUtukhKi9
/v+w9xbQUS3L/vBACG4HOMDB3d3dnYO7u7trkOCEQICEkIS4EiHu7i7E3d09
mcj8vu49s/cM93Ls3ry3/t9aL2sRYE9P767qqi7pEsQnpNGQavFVfBFM5F/h
i2UISgrj8frGQ1iHFbJ2oCDfGwsHt/1pL/merTFsyWO629zhICB6UnY6XQ+3
thSytpS0LFTWN0nsHh8GN1cTmTYNFsn1LLHUJ1gQ8ToIZwyiOGIpS/KBwhsN
xJU08tiq+w3lWdB/dRmnP9qJkxvJ+VqeDA2Fj7CPLOSOnepEK0zp2g6LrxhI
KkGC8hRoffwAy1A2H60tiuLdISv7Ef4JeUj30MaVp1rI56PFyEZoD3ZAVZwV
ZvbsgdV3LCSyi6qgtIeGtfTDB29WFaI4aEZOYgTcnRzhFZ7ExMJvF8GQ56qA
2asPIUYg1g0yHN9i4sQFUA4o4HHX7U3EPg/3h7ODE0JThHUguO3NdsP8/q1+
ur29eBiw8BZyBOBKbqS4YOHQXlj/xF58rjelYM+YYVh4RJseMmyB6Zo6Pleh
szuHj2Y4vt6Pdp1mwCCqgiWGujQnzGjHQ7v5N+ldGDtxXWkmArzc4ODqh/yq
BnFTjBZxyrRHvN07zBw3D7KGAVzlr7osHxzeeQAK9un7WZKuScWL8xfw0Vos
tNGQizcPr+CVSxpvE4vJHHcsGND6jzA5cNEdWu2ftXISbN5h4dzfoeqbzjFF
Y34Adozvgz4LLtIA0Mns8huK8P7cRkxddhY+qRXsGkK/PsXKPc+YhkVDWwo3
wovZdsjwNsb1MxegZGANT09PeLk6wNjYEVnVzbwDojEVCX6Qk5GHubMXfLy9
4OnuDAtzN2STMSxSaKzn0lFd8ev0iz8gJc0Ok3u0wZhV8lQznS/akTgXLZy+
9hgGNm7w8PGEtZU9VJ8cRYchi2EaX8vVBW0ug8W7+7h05xUsyMs9vP3hYGoC
e794NDWjxZAxi+WfhjJE+LrBxsYGzt5hTFGZQ6LPaIZLiK877O1syWehKKkD
bzO3canYM6Ufek85Jwk8rRkxvldbzDhOfZZgva8NZZnwdbGDtYMrEvKq0Zhm
jVltB+KWXjRXx64iOwHuDrawtnNEcHzO8JaCVNzzoB6f98xGrzHbEVEBVuMv
CdLA8O6dsO9LsNii56fi9MLBmH6FydTf3VJLYZX9eJN76D5sPr4lN3D2Y6KJ
DIb9MpfoEjUSnoVGfLm4At0mnKHKTIuvgwgQnFu1CEffukmosmV4fYioZxd1
qKa0TDQ0Vv8uhnWbjW9E1WmxdVSIiL44whoX95+Fvls4igoLUViYCQfNR9h3
6TkiSxrYOlVMyfdmAaqjv2L4wL6MJG2xtQhrJ7VFXUESkz+voaoKVQ1tfHP0
o+mJbBgMDeqM8LSG4uMz6N2uPWYfYqrg7Povl0GF40r4iTz587mXNaEoI5Gp
T+np6ARX7zj6st2iPTG4uxg0S4a8iPe330RL9I3BHQXdNkx/BykYGdsgsUBY
mor5ghxLHcQEjXK1ZIeR3/QrejixdgQDn9nfgE/o6/xwjhb/o9G3wuByWkrv
lVPGT14pyMD1yZ1/GNxKejHMI4WO0ct/5318xAc40B5NPBZEQ0MD6H+1QExu
lfB9b7j3VSHMyYK2GvthsBENSyrj/xlWxf989H+D/n82iKWVDF8dbF6zAksW
LSDbP3fuXPJsHjG0r392YRRJZrShaDA9jO2fn8LcefO4wQsWLcXKlQdh5JUr
vCn8s/dJI8rkBmPetuncFyNHj8KI4cOJgjSc/JbC0KFDcfi1FROT/i/v5cPk
5g4MGzJUNFia/B6BUaNGok9Xmq/RA4/0E/7O+2MsbqMVrxOOPXFCSWkpioto
sSth/mFhQSFKq2oZa+xf3i9ATUUZigoKRIOlmRzGktIS2LzbzbjGnhol/vX7
pZj383hdceljhPAdtqIPAjWPkw/6/rN5uuD8u6Af5/FWO/J/8/w4zynmWRta
0QcZSQmIj49HSnbxVdHj4pw0xMfFIT45g955DhY9rijIQgJ9nJhKL12VmMcd
UJyVjOCwKCSlpCG3sBilpUXISk9FfEwEQmJTmeTbHv/9mk8yz9qhKMYTn97I
Q13fEHp6+tBW+YA3qsZIr2K/Rwt9ZcP8swI+qmlDX1cXBnoaeCP3Hi4xhaJs
53ZM2yJXnU9Q+KQOAzJG30AHCnJv8C0ghfeRGUPv3AUIsdPBrYdvoPH5DQ6s
W4TpM5fh0pP3UPvwHHc/fkV2PVoAuhMiZNYkumDfohWQ/RoibppUmweF81uw
5oISzavlnReNpVFIn85sw8bTH5DHlR9oQqjJE8xfvh+2SVUSnRXrYfn4OJZv
v4O40gbWpkr3UsOKxRugHpDLU+KGluPFijEE/lmwTW/49b8H7jg3czU+nlqK
YSsf0No5XIhTohkm9x6Nx2YJItho/4wn6NdvPozj6yW00BLcXjMFs/cyFzRs
gGxZuA5G/zYer5xzJIY2QfX0coxYdBs5DVDkHvOhsnUOOvddRVtVtRhotFmO
K5b074r18q7i6JjmNJwf3QNj9spRo+8st4hKKGwfj25LzyOzibM5nO5uRtee
c2GXxedxVfmJxDG/tgrtxvwOvxJuaLTmVfwqPRSfQkp4YtBq8WnzLHTqswKe
+S0JWrL1S/QgzHDdKFIMGgHoze6R4A3ZjsASAQdaRRg2/NoRE3a8oGkl3HoN
rhCNrQdumyWLQWvKxoVp/dF7xgkk1XND870+4td2bbFd3ud/ATQnxWPkWR/I
26ZKgFYP1Su0fvIcmEdVs6DVJpjjtzZEuh9Robcw7HrTnZ+jPbFWDsl6ikEr
DsScAZ0waDHT2oiduDJKH4OkpbDwgAH1G338H4PuGDezACZPNzHTKDikiwHk
Q/36QjApaH6FLIBFQV/QsxUPi0+o0/A5dnSm22t0IjJ+yw0Lqv6wHSAa0xww
qacUhi1/gELx6OrYrxjWvhWmbvlAIwb+N2BshsH9lcw07xzSJGH8cm0ReTwA
Su7ZLIy5Ph+YZNV/gTHDlcLIw+pL+nRnWBhrE80xvhuPgbFAPLoqhliaHXgY
t+E5vVT/34HRUGbVH8M4EJ/cc1gY83w//hmMay4ZSMJYl2SJCd3/EMbxG17Q
k/p/DkaWEy3kdgnplOtbJALwOrUSJ0I/uJQFsCxCD72kWmHR8S8/AOj2Ch3J
3zvv2lF9lQWQeimn9GmHIctkfgTQCMPatcKsnaqUnf/nAfT6cl60gek/HjWX
5hBZvgyOqXwWwIY0e4xo2w6Lj6mJASRHjdMztG3VBacUg8VHTUUElg/pjqFL
7klCVxmpj4Gd2mL5Zcbh/j8PXb7nJwxr3QXXuR5fQhnxetsISM8+joQ6sfir
T8LR4T0xaedLmlPLQhepexltuw6EnFe+hPgrheyykeg38yRS+NzQPI8PxMgh
iNCPkpARdf9DoAkqvmPH1IFY+dROQrKn4vSEIQS/+tT3IpbsfBheXYnuC04h
tYFbr73MDgwcuQNhFc1cVo/vhyPoPGYtPAvZ220pRGlfw8BeC2CdWsd7zzwT
5pw31Nehjk/j5prwZftcdOq9nMLIa1HNTACXD2cxcellpDRwmlmxnyqmj18L
06gyTjMrjzXDgomL8cm3QKxuNaTizPJ5OPLajdIbC2Rzvj+2zJqLW4Yx4qGE
Kl7uW4G1F/RonJYYzgpYqsji2iN5GBlpYP/EwejQbxW8WgZOVr1GdRbeXziO
G2/MkF0hTLYqiPfBrVP7IaPPXIuI1WvyvwBtWoVXBoHJBcJcrtIMGMtfxp5r
H5FeA1F30fZIdlTDod2X4BCRLhxXXQRX7UfYfuohIgr5HyR2s76mEkV5GfB3
MsLJ9bPQfcQ6uGULWgJK1kRCfTF87Uyh/kUNn5SV8UVTD27hqQx0nIlEhEp6
qDv0tNTx+dMnqKipw8TOl5bp42rzF8QF4KuuJlTI58pqX6Bv7ozMykZl0atR
lQoDDU2EFza2xOpPs9MKmkVx9uBdYymJJmKK8kOH/OSZxX//euaT/4ds9P+b
5//m+e99PNJoqspDmL8vvLy8ERSZzATHXhZ9RhWQ5KgQeHt5wScgDHkVjSL/
CPV9NCAm0BMWtq4ICApGVGwc4mOjmBh5dycbWPvH0rlYAVyYHgs/by94+fgj
PrOsBU+zRDcjyD54CUNre9ja2uKbtiLuyiogJKeeO83q8yKg9OgBlHTNYGtj
Azurr3jxUAbabgmiM7ojA6yPtQHeKevAUP0VVk8cigHjl+LRJz3oayhC8Zs3
dSsIz+r25BgqgaXSC7z4oAE78lpbexuovnmEF5qOdFjP/x7AE6JnRUGGWDNt
OZTcUiTiRaqIXbMXs3c9QEqt4Dz7uD4dD7Ysx847BqgWcMEdae6fMH/uOmgG
FfDEuX+5uDiqF7qMP4B4/g8uEJsnx7Bg/TXEljWx7+PnBuDgioU4o+pNzbwW
8GhxqkVzKR7vmoGRW+Wops2qFoJsR8ztNQRX1MM41SJc/yq6D1wOh0y2sq7Q
Z/R88wxMWPOEWlviNnH5uD15EPrOPIFkFjop1CRZYNLA4UQPjefUKj/Fk+jT
dz288xr+cz/kLfJhJ5x7K9YL65JsCACdsFXRS6wXCjJxbXJPDNryGEXNEnph
KZ6vGYFeq64gp5nTCz1kd6BT9ykwSa7lieHKxc1JA9FnxnEk1nFweb/aj459
p8M0uZ6Dq9jnM0ZLdcRpw0gxXKqHyUJ744nh34Ir1loGnTr2wVXFEA6uWNPH
6MzrjDsmkqp8Jd4dHAte343wyW/m4CoJwLLu7TFp12vq4GIXFmtyE62kujP9
cP8Aro8SEz/ZOBnt+66BXyFnv9Sn2GJG79aYcFRbMiHKV+MUWe5QvDJN+jvQ
Jbu+x5zpC/HKKJKDzu79YaEZ9i92pto1WlFlJu1+zEJXHWuK3lJSWPijGZbh
+gIdyJGz/6HbX0JXn4Jdc/qh3bD9iBHHmSLfC4sGtceg2U9pWCoLXZjpQ8yc
tgpfnNP+Fk2aU5rsiLNvf/T4GD/+XeTx+dFTwHh8RkDdp4AFsDBA5aeeAsbj
04qpBd3Exjf9MYxl4dg4sQs6jDj0I4w+WDpEGr2mMMFBLIxeqodAL3r/Jn3+
ocfnXst6fP4KxuJgrB/bHh1/BmMbdJ94Ckl1HIwt5PExerDmj2EcjM8enMcn
30/pz2Bcd9no78BYGooN4zv+EYy/TDqLlPqWgJHlRCv5vSyd/sTjMwVGoeUs
gBWRhugl1RqLJT0+UshkPD7S2CPj+JecWJuIbTP7oP3wA4j9EbrFQ9qj/6yH
tBHGP4RuMfO7Larz4mFnakDMLVUof/4MnW8uyK5qHvsnwPtrXUFrck7L/3AM
1UHl/Ezwuq2Ca2YjC3xTlgvGt2+PRUdVJYFPs38C6dbdcFY1/C+Bby7AhWUj
0WnwHkSLgRdke2De4PYYteMznfgfAi/MqBdayWHfVPHgpTYS8guRn5+PvNxE
qN7chfErziIwu0bUSvTnmCgJ1MDYtl1wQT9CAhNEXm4chk6LziONLxajjem4
MLEPxm57Knm7EK5xHu27D4NiYIkEJvJ+Lm6aYHJxDbr3WwYPcYJHTZwZpvRq
jw3vPP6phsAVFiBqypsj89FjzEkk1HDZVfXx3zCR8OCiu0ZUkI3+E0SgNgmH
F4zAonvmYkTQaqajhmKLDBMDcFYCDOvHW9Ft9mGaLc+CYX59E4ZPPEbLYov8
TO2YlhOFuZnILiijXRZwf+pg9Jl+jCKFxyoXOe4K+G3wZHwOKeeUiyxHOYzq
Ng2638v/KUqElQE7I+O7Oz5Rz8FnVWjr6kNfVwsqyp/IM2UoK5M/5LNPyqow
tfNAYnYZV7aXyLDs+EA4eX6nl89cCa8sVyxpzcOY458otf4Mk6w+HaJ3H9Pm
H0dYmbhBQ6qdHKbN2g3X9BpO3azLdMXGmUvw3DqZG4fycOxfvAjXNENFd6e0
fXg2dN/J4O7z9/ii9ARze3TEr3NOIZnDIaXNPKLlrsLW28biig5CslA6sxHL
T6pSZ+d/hMmuSI9wxccPH/D85kF0pUUyu83Dw3eK+KDwDm/fvsW7dwpQePsG
zx/ewMaVS7Hh5HOEZFaxZUDjvt5G167j8MEt/aesKMQbsXgay/H12Q1cfayB
yHRhd+84PytcPnMKn1wSL4qGJTpq4OyxW7APimOGZCeHQ1X2PM69NkZpE1cp
h19djO9+1ri0YyFGLD7FtBpQEk1Rne6Le8fOQNnCRzhFTjocdZ/h4OWnCC/i
/0PbahKH7ErcWToC7YduRzQbfirs7ZnkY4KNo/uiy9iV0PbP4bLfyvJSERYU
AA93a7y+cwPvzQOorPwZlk6KvkLt4sRgNxgScv6irg49E2vaROWy6OOKzChY
E2GgQRMkdY3gFpxIZxzM0ldlOpwcnJFNePST6CuCqlx42X2DNpnti6YOLJwC
UMwHmyf2N7EwWTTc5fEW0JaD8h75XNe2ugQbzOrNI+JvIzxSa1jM0DbYUWHe
UH5wDmceMiUuxY1a+OUI93aCjY0tMXzs7Oyo8kzNYDt3pBTVcE0m/1vXBbvs
DJdXaEeY7cBLV1FJ4Tawf7adfgEbHlhQHHInRG06bv8+F+uvqNF0cq6hbmUq
VB5eZtqSd2Z+S+HEqTuwjypgRnRp0RW3QXOOB5Z14WHobuaOrK2IttOJ1SFN
+yOvvUXj35mf+txQPLtxH5bh+azJ7qt4ELye02EcX80xZazVHdBQqIsKwT+u
zEed9mToh+df/9Tw4QLoBfmQWdUPvH7bEFDYzK3MRY5B55iD77j8reIANUye
NBPvvfO4lSkdAq/HTHyNE68sVO8S+Wo7HH3j+ePKnN/uZpZ8Ry/qb62MUWw3
MhqsenA5t6OCYrzZOwtt+s6ALlsDsT2aajJhrK0F17BE5OaQAyk5GPe2/44T
L0xoeSB2ceEGtM52exx/4807zJIvEZHVwuRE3lXumQB1tdVMvQTWsVxfU0Or
rTH/YzN566pr0ChyLLNt31wUqLbaHff0o/8MTracbdK35+hNpNWKm4pwdHRs
DXt7e8JwDg4OsPhmDEWFFzh/+TFsQnNEEpcm4lYigjCcpcU3mJqYwCUwkcp8
jh+rMqD98g4uXrxEqPvSpUvk2aUrsnCJLfqBulkauvAuWAIZtYj0c4V3bD6P
jfGiCEoPc4d7aApFCIujgtggOHtEMTiSTIvNjvCFq28CXRGLEiFR/vZXRMmi
pCHVHrN7tUbPaWfgFBDQGn5+fgQl/v4+sNJ7j6OHj+L6M03EFdTxuAzZOnqP
8Y2Jwe3Mhhx/tUZsbuUPMEtyNFslq4ngy+GbEwr4Ao4ABPUFcLByQlJRvZgo
BDXwc7JGSE6tuMIfEYSeDtaIKmrgCOBvHg4stLRF8vGZ/Yg5tQdx4pRDQXUW
tO/sxdABM/HaMnLaTwA4KnqWFuoEzxQhoOxi84O84R+d8cOz0szvcHRL+oGC
85JC4OaTzvyP7e7xTwEgnGp8filhw+FQCS4Va2cleLF9MtH8R+G9Y9LUnwDA
1iJCVRYsjTSJ/qeEV48f4/nr9/hMdD9T11Bxs5zmCpjL38D6PSdhGsU2xyHn
P78MEZ620CQm1WcloukoqsLGN5Yhy0Ps/PUl8LLQxidicr158QSPXrzFZ/Jv
fTNvlHNd2Pjw1H6OHSv3QM8/TTw/IeRcomQa62lC5fMnKCoqQtPUGTk1zbyD
HKg1sPp0E0vnz8OcWTOkMGXKFPLV6avOwTOTrS4jQJSNEjZv2A15gzCJ6RuQ
FukDQ3q5Rqf/oAg9S28q1UWF2MnyBRXwNTcknyvj7csnkH3xhhmr/s2DaX0k
/GlCkLEc1q/fD1XrOIn565AY5gF9jS/kO0pk/k8wtAtARSN4/1Bt4HbQlLqT
OuOicjCnNpSH6WC4NA89F95Aeh2m/OFm92GSpKurKlFRFoFDI4dgxUktpjNT
dW29OOWPn4sHe+ZizNIrtOWq8FF+OB6duwZ97wRUVgq7OWWEmGDF1Gk49Jrp
qiTakD7MxWBdNXlHRRZubp6AAdufoYCMryLnPLffROHWvrQaI6bsg3c2i8Yq
fJN7gPvvLVBYWcm8oyI/AU8OrcCE9bcRX9IgyvHqy+xocaIXTi6fglHTl2Dn
rp3Ysnkztm7fisUzN+KLK9scrhF2L45h+OgltJ2g8FFDEXSfXscTLTeUi95D
24BeW7cQi3e9QEZ18zQWFFrUs7qKDMnDq10zMWr9PWSQ4ZXVtWwdXGaTjW7v
wPAJ62GXKqpdQEwRFZkrkPvqz3TyoK8oTg3AycWzsfbkRxTUg/cPteepos2u
TbDA2FY8zD6rRu91OIav+I61Y9sS3MyFXWbzz2hgj+gZkIVL0ydgy01LkYLd
DjVlhSgoFTcRLwnVwuBfhuK6urj0ivbROcRenAyz5GqRyBIy3/MDczH2uCKV
OcLzsz3TMj23SNz9jybMn1o2DmPWvaI6GKvC5Dq/xa9E09mj4is6LqTQWByP
b6ZmiMxv5MqsVEc7wNApgGvd2Vhbjtz8UnHkbWUk9o4ciKVnVSXraCQY30Qr
ImOvGsSIW8sTlv98ahlm7JajkW/sghuqS5FXWCbmgQJf/N6/LzbeM5ZsPRei
eoLZq2e26f/p/tH8tAtTOqHtrDPUU8ftX2kwlgxqhVZD1sGvWPCz/dsgGtpY
kQ1vJwf4hifTg5ZrvSFIx0W6rTfMudYmAn4pwgKDkFpYw22jyZnF5K+R0I2u
FmXsUiTUIjbQA07ugcivahYXzK/EM7q7xz7S+BnusaAJGXFhCInNEjd+lEKR
1ycMILu58a2riD7aoTr7O9SVPsHMO0m0dZXIJngW93NpwxTnTIkIxvfkfMmi
6mnWD9CGQHJGLUyk39L86kx4EdD9vqfSbRGvsw7KJ+mmMhcc4nXWIjE0CNHp
xZITR+nRBkU9cN808Z9uIqsIfLm6CLzWM2CV1MwT2698uMofRWvy+Zan1owM
/Nk2jmOeDWQKx3pbWyI0KQUhxK7VUFWBqsoX6BiaITAulyPFnFBL3LpxCw8f
yODufRncuHEDH5y+I9ZdD1cvXofMg/u4Q59fvgo53WA0N2VD7e5lXLn7APfu
38NjmVs4ff0ZEYa1nD3Nzw3Hu6fPYe4ZDDdTFTyWV0NipYCtWSJJSl1ZZNbE
Yu+MoZh+SJH2op8mmqkq/TvMdNSg8E4Byl/0YOPojdSCalZbLogNxjcDHaIc
KOGTqjr0jS0RnFYqJWK7koQg2Dt5ITkpCjbGZJiyCjHWtWFs44m8Kn5b0SxE
H4Otyiso6Dsg1MsWck9lYRGRx9qf/0KmrMlrdn8zuozYANc09t6uLUqSgmGs
q8VUy/6spg4Dc2eaFyzcJ6LDNxbD1VQD7z8SPcPAHP6xTOU4ZIc74Z2cPL7o
WiKlrI6l3LqSOLy7fAVPFB3piztz6+FD+dhS9J94AEFFjdIiYAX8YnhaWiI8
OQVBrpZQVyEbrko23OgbghNEdl0vpAeY4fr123j0kOz3PRlcu36dqHCxoBFZ
hnL3cZEYqPfv38WDh3dx7vxjuCZXo+S7JW6fO4+7D+meP8T96xdxXdFCfNvX
FrWZwZB/8gJWPiFwMfmExwpaSKuFGIc/sFAXCdS+2DYLw+adR0xV8z9kl8mi
U4BK4SA7DcjcuYblU/sz1u2sjUcJGPfIGX/r1i1CmEy7lJuXsWP9BlyQ/8o0
Fv2Z2sqxD4rwZPcCzNx6G76xaUS7qCaWZDWKUglp338KMz9hwTR+bSUKshPx
7PcJ6Nx7KaGbdJQRTaSuugJ5qUE4OakfOvy2DnZRGSgtr4VA0ICywlz4Gdwn
x0977JUxQ0Z+EWoaWFYXdsJ1eHcFmy6w3cCrYPnmLLadkUcuH2zteUk26sSS
cn0ZosmZ5OFiD+2PryD7Rh0J5QIhO/VAkqsq1s1fjSeaLsgrryIQ1SA3ORS6
2iYITWMFKh/e+q+wbcslWHjHopKpl1eBCDc97N5+EO/MI9nSeiUhWpgzZgqu
KlkTGVDBIKi6uhwR9tq4/1gHWZVNnApQEWmMtavP0YI/zE+Gvza2bTwIy5gS
TtP8F07jql2S/c1JjoavpyusjDXw+J4sbMKzB4jQleKsit1bjsM8MEm4gsp8
OKjcxqZD9/C9qEHoFxT2cP364CR2XVVBDi1rV5oFH2cLGBspYd3EpXhsloji
tABoG7kRDVrAMmFDbjCOLV6C43KMGipuY8hHZmw4fDxdYKn7GXcey8MlppiD
RJCL+1vmYO4uGQTEpbemCyMEXZAcjDf3nsEyqECI6ZoK5GfF4dGKUeg2YC3s
ojMJ9VB9tQkVJQWItH2PwYSal577jJTsQlTzm9BYRyguMx6P98xg7qp1vBNR
UFJBZR577tGvW7w4jy1Xv4q2tBzGz05i50WiGzZCjO4fmJJDt6AOqVGh8HZ3
hpmmIm4/+QDf5Ir/yBEptLHSonxhbmEBByc3eHt7wtHWCubm5mQyCwvajNLR
IwBZpcJu4j8zhsdxFJ+PZ8c24ppuOHdFkWathPMErhKJaiBmZ1dg1PhDSGqS
rMpZizfLp2LohNO00iurrlRH6qI3rz/uaMTyxIyVh+tr52PHWzfx16vjcWLh
DOx/5UxFJ9cY4994UJpp65mVmowARz2cO3CcWJw5XCWDmnhbzP2tF1be/iYu
zdgWFck+0DZ1QhV5lun8AaMHTsIbt+w2IhxG6d7CwD5zoBkqLCNWHKiO9ZtP
wL8Y4isLQt4qp0/hk2MSjxUJ3gqnMGrVDWRw2yKAhcweTFxxg/YkFlvzf8B2
zSjNz0JshBfeXjuB6++sJCudNBX4Y/O4CTj9OZDHhekICnBr4ywsOa9Dr2fY
/lX1abaY03MSZK0yJYzXergpn0Zb3mDIO+Yya/PQ1UNQdhW3EclWsujbfQq+
+OeJKsNJM/RUnJ2O6CAnPLp4FHfUvXicYtGUhQeHfsedrzEcfSSaKuDi1c+0
6CtHH4ZHFmLs9FOUDsT4S3fEfF43HHnrxX3X6O4WtJHegKBScXtANGXi3PK5
2KfkK66LUh6JA3Om49g7T96fMhedhFZUTEWkny1unzmCJ19DWyJqluOQ+hwY
yr9FWEkzBwXtnjXt9wtIk6i0+/X0cowcdwCxtZIcUo6Xy6ZgyISTktHfpaGa
DIfcVPsu5pCSYCycMAKbP/pwCIzWu4PfBi2CeVIN72fswepNKTavMHn0AqgH
5km4meqheW4poYtJME3ic85QYv4lpKSjrjYH11eMQM9x55DJplKRTS8Pw4oR
XTBiy3um1HeBtylRoWyZ2EYxW+Tj+u+zceKLn8TFciM+n1uBzqvu0vt+rtJw
vjdWDhuCg8q+vD9gDVZvEZSE4uDsidj93JK+me0N5K94FNKDF8M+U4x9v3fH
8GvnubDNqOf6uWU4v4I0bzheWbNdOwl5FPpgHTkZdrxyYrY5J9qZCDmyPNp8
TOk29pxSQIZEK2IyfG2fzlj/zE508LRBfaYrVk6bhCNKHlQacF11qtOh/+Yt
vleAUzEClc9gxpZrNA5N9NME3UMLMGbaCcm95yeR44owxSE5VzGPE0bVu7UJ
0m1/h2++gNvqAh/MGD0Ce9SCOOSHql1Gn6ErYJteJ4HRn2iCUkzB7HkTp+CK
Xsg/9V1xYWxWd0X3JiEifiBYpUXDUrPFjqGmehTlZMDV+C2mdO+OFdeNJHt2
/bdskeOO8UP7Ya2sRBfEqkhsGNoXi8/pUsJkyYLS5ZWZEyXM6Q7MVjt9eoBz
snq0jrrwp/I71ozthnGntRmrlrtCqYrBrqnd0H7ICdqbjz116pNtMJ0mcm1Q
pCVaxIyUh7OLhqJV39XwI5KysawIBYVVbHVzfnUZ0mP98f7iOnToMg06YcUS
zFKDZ0dno/WMS8ho+qFgrM6lVeg6aDvCygWSrPXq8DyMEfIL6yjID/mG0ydu
wTNdXJJRlxq5w7YguEyyb2cZnhFdqOdUsgc14hAfh1fo1a4jTulFcTyU5vwa
UoT0z3zwEfMQ2apHOyehz+ZnTKO+psY6VFY3MNM+2L0Mk9c/Qzaf222aYTW/
YyfslGcvG9sj1UMDJ04/RngR6/2pxcut09B16DGafCSk4m4QNBDFOSVHoh15
HQpz0uBk8Brju3bH+nvmYvfRj7zF+w+YS0BWOmxAP2x57SkeWhaMVQN6Y9U1
Y/G1qBS+nFnB8paIsNojxlYRxy+8RmIVu95S3FwyCr9Nu04PQNbs8lE/9nfu
F1l+C9W5yNwGHnnjIYpRaIeiOE88uXoKm1cvxrDeXRlTbMTSMwjKqePg/q+Y
jAwt9MXM/r0wd7/WjzEWjTC4tBi83ovhmFrPknZjWTqcbS3g6PoVO4YPw5ab
FhL8Vo63J5Zg7rlPXF9HlARi6chfMIOozpTf2KM9yccCsg8f4uHDh4To6G8p
vNVzpr4KbgGMZMj1JLvCQ/fR15HexPFlib86RhNcjNr+WcyX9OwrwLVlQwlF
TYRJEnubUANPYyWcPrgTS2aOR8dWtB9qHxx7a8v4wcWsVo+3pxeC130bQksE
LMry3BTwq3RnHFMN5rGdGJprC+FrZwl7ZzucWD2ecady3EnIw/g+Rs/fCudM
1lPeDNUzc9Fm3D4iNAQcc5KjaOXQbug//xptlcauoyxcG/2l22DpmW/0mJ0g
elybYIUpUjyMOclE6rDLc3l5EH1++Z06IX+oihhoog0N6zBJR5rb2yPo9Ms8
mH4v49jTU/kSRs04iYgSlpKr8GD9RPSacAEZfJG7oR3yo13x6PJJbFq5AEN6
MUWDMHrVJYTl83+opPnfiDxhEcEJvXpgyQlDcY1FITiap+agdb9V8MxqYDeB
dv/zdbSBrZMDrm+cjmm7mXoA7CZYvTiGcQuvIpkrT1yAc3OHY/DCB7SrMMuj
Tm92MUrfbb3Iv8OjEUZXyYcdcELehzdehJyCcFMsGdSR4d0+I6dh5+mbUNO3
R041OK3lz3h06MTTVJf8Nx5VleDRujjCbb0wcOENesCwQ7Pd3uIXsppjKr4c
bTbVlCA2MgKB7sbYO2satl83p0TQXoQWSotpoS7QM3ZAbEoKkpOT4PD5IbZu
uQDPzBrWGEkLtMWzhw/w8NEjIgcekd9SeCDzAB+/EmO+WcIZXB2LnVN/Qceh
Z+ims+ttyHTGnF/bYKik2KRqVR7OLRoG6QGbEVLGdMmG6bP9aEPIqV3XXhi/
eCNuPfsAG58ECb1fAKPbWwh2x+FrbLUUO1VtLLZQ5ll6C2xveUFDJZKjIhDu
54DLG2dg2ilFhsNZkuCXJsJY7yv8o+KRkpKMGL9vOLF+K+Qswim9sXxJY+Im
926LYct+koTfGrO2M6UKWL6kIWp3Vw0Cr/9OWuuO3ZpCLyWM+G0kXnmyTYfa
Q1CbCSsDbdj5hCEmKhKeFmrYtWwjsVmC6PtZZqvJjISRngkCYpKZgqwRrlrY
sW0nPrgk8dgxucGGmN+vHROg0Wf0DOw9dwdfDB2R/0Mf1T9lyCNv3P+dIaV/
YEja+OD3/t0wbJWMZPvgNIcX6ErzNrRDOLKjfcqTYyIR5u+EW9sXYf6+VzSx
hK1eXJ4cAgP9bwiNS2FgCrb9hI3b9kPTL4tTT10/0CbQv0DGIObvqafikAyh
ekqXXQPFU0vRb9pe2AYnM2VO2eOvtjgPaUmMt+wvzLYKvFk5EZ0Hb0RQGQd0
WZiWkC2/sGxJ6bkS79aPgtTAJbBKKEZ1ZTlKS0tRVlGJomhLLOrGw69rn6C4
WXwSFCZGwsc3iSl6xRqxVbmJTD1GGxsrWDv6oqBaIL6AIsSmcmIhWnWbD5cc
kVhqh8IoB9y6/QiO8aVMLtD9DRMxQKh+iP2eNdFYP7EvJu5nKBZ1KTaYPWww
fr+tjeSCKhay9OhUlFc3cu+j64rSvI7OZGXHtAJQXVOJMgJVaWkZqmpyILdp
BJG102AcU8MCVZsXA4fAGAbfnGVOL7M8nWFraw1LKzt8TyvlsdHyf1UfYeNL
eu/IqqaJFk/xS+ueuGebJrZDy0KxfOwQbHjsKL7SaapClK8T9LTVoanzDeGp
JdxqBDX5CHB3ZIpvWlg5Ij63UsRM0syOyx+aj4GzD8MxLJWKcq5ZRXVhLtJT
SiQI8CdMRYtxEtWXtry+bSj2Q0lB//ZmtGm3Hr4FAtGRSYmmBM+XDYL0sNVw
IDOzRFNOiIaKkjkdeRiwVY4JG2TxW5eXAF/fEFRK4JfeK/q4OhCIrGFh44zk
olrO88EGET0z+lua5089H2QHnp7bh6smydwyfG2NoGYR9wMLWVxYhZFj9/8L
CzXg4++z0KnTImj7Z3OSLUAZXaSH46Vtpgj3HeGqcJA5xKYu3YQD+/dhz549
2LtvP/bt2Ypxv3WCdM/18MhpXCOaovK7Cab0+Q37OCulHUKUjzMKyc7n3gxY
uR6fMWPUAqgFl/BY10a67WuMHbsMBpFCBFRF6mPFjquIrJdwbTSn491bPcQV
Noo2qyOqoowwtgdRP4fPwd6D+7GXLG/P3r3Yv38vVs0ewZxXt7TDudv+v1Xb
ZCKLJsK3H8+uxphVN+jdMoe9pmQcGNkP41Y9owH5bBdO6gt8cHIP7lhlcBvi
YWEATdvEHzbE+NhijJl6XMI0IqNz3LCYnJVTtz6lRgsLscbVVZAezES7S5Cn
AHYvdjBJUNOXb+E2ZR/dlN2bMbp3B3TotxX+hQKRBtQCjjahBIpx1cd9OX2k
lxBzo6mpiZBzdXYA9m/diLu2wgCRuvICxIa44Nj0/ug5Yh/iRCFPVUVZCPUw
xLK+PTGKHINWHu5wD0xETWMjGhrKoHdjE/rNO4aI0iYuDrYg4Av6EbpZ/8gM
tbU1rVFTU0NdyrXVMLuzBa2IYJLzyl3LjO6B8G9vsHrxTmg6RqKazNpI/uSH
W+LEoRMwCM4XwciHl+5r7D38GN7ROcyYxsYGpIbb4cz+E3grvuohLI0vci+h
4RyN+qYmCi75w0eE4UNM3XmbadTBieH6ZBya0ANdJx0gANRJiRaa56+FkcSY
mX+HKUnO+v4aMxwxqRfRvX5SmoWpIfSeRlJMYtdRlQr5ywewR0YDSUV1aGis
Qay3NU5vnIZ207bDp0jAG8TtUTO+O+hA5u1XZJTxhXvUG5UZXti5aSMeO2cy
OKgty0NMkCMOTOiNvhMYQhT+NPORlxINK6UL6E729syTr7B1dkd0egmDpeoc
P+yYMRprHlnQI5hVALM8PqIX2aYtL21Q9+M2GVxZB16r/lAMKm4BUhROQbXA
eqRG+MDayhrWdnawsbaBm6sj1FTUYB0svKYsSw2BnvJLnD28H6euvaNXs8xP
9ncPfH51Dwd27sLFGyYoqytHpLcjDHXV8O7dazx+ogjfhGIeF/NQm4ITM3qi
88J7VNfkNCzLx+jcRhr7NUJ565hnbVEY4w9DGpmmrATlL5owtXZDcm4F65LK
ICv+qq/LFNNVIR/rGpohIKGQ1QWaqnLgQ8xVa2tr2BKgrO2c4WL3FfKfLZBb
2yyZJuLweCM5+iZB/3sVd36Uh2PXiHbouvkZPcA4N3NxIGYP6IyhS2V+0JQJ
qQ3pII1Fx40oYbItwGn9a3frr0zk4UcVDVj7EjXcQxkD24+FgmvuYGYY9Q/U
ITnc+wf0uxM5p/JZDfbhwnu+4qQAaCs9Jzb9Ppy9rYgs1tRvqkCglQ4e3TmH
beuPQtc2GRUlGXC2MoW6qiJeysrinZo1UZMF3E16ZRwOTOyGX1bI0tOW3YFE
4ztoJ9URJw2jW+KYEx/5jaJToZGihm092tjAB5+pRSNOFXBTOIYO0mQbYqo4
EVUXb4pB3btjw31Hru1WA1/43aZmSBhNzdxzgciyaE1fSt/VyDnSuIue6kRL
TOnaFdtfOkvcPRXi+pZRaDPuEtKbxXvemIUzU/pj8LxLknX2ivxV0LdLB+x4
78djg01o+3kRVISCgrFt0G/Y8cqZLawuaBLjolmMCxquxKdrbxSILDchPPYv
96N9+xkwTeT6PFAp3rdzDyL5PVtikzaIngkKA7Fm1ACskbERKwdFfpg1aDDB
vAOPKxtAKJXesnSfeopmy0v6K94TI6Tj2AtIaxIjjmy42ZVV5BTfhjBxUfQU
88fo13UklIKKRf3MhSaI7N4p6L3xKXVpLGHXleeNZcP6Y/NTZ/G68jww+bch
2PnMoyVQMJOdlpjS8d9DkZxfRU544TP/zxcwbOxmeBdKNCUrDcGySeNwVDOE
d4ElphR7LB8+FtcNo37o4ah6fjUGbJKlELGRIqVh2hg7eg6UA0s5ncbk5jZM
XnKXRmaImj8LvVx9f1kP/2IBlzxBey3GRYQitbBaoteiAJ7vT2HYxJ3EdhOI
L3f8MH/CeJwjK2oxJLVBnOlz9OncEROJuZIvEFXHog0O8/D64Dpsuq4PLuI4
1xMrF/wOjeBiNuErWOce5iw5juBCsWf89fEt2P6Y6ZMktv/qYC57FpsPv0Sa
uOVdTrABNq3fCQ3/HN5s0bPKEA2MHTASrzxyuRC8SP2H6EnWOGOnAjXhuTUS
Ln66ZzV23DflwjSbM5yxbMFmGEaWtyCSMj3UMXXYUKw5pUovYYTE1A5NhVG4
f/4cXn4NQn1dHaJM5XHgqhLy+JLFlKphpSiDYzKaSCmpQ3WmD84fuQDzmEpR
vDcZ01QMR61P+KiqBSMDAxga6eH9W3mY+ieJqEcYW5KblgB/09fo0aENVty3
pRgeLVphqvNnTBoyFBsvMbla7Ar5eWG4dfY85L+FMSsMM3yJQzdVmabBLclp
5GgrK8hHRV0Tj21m1VSdC+dvhlBV/IiPygZIKKjhXZYAJsrHAVrqKnivoAzH
wCQKDIvusrx0xERHIyYuCSW1mM19i6DYywbK8k9wZOsOnL1vRl0CoyUWUZqf
z/TWYRfRWJkFBzMDqJBFKKoYMfblhP8e7q2iZ1ThZcdxWSPNTWycNs/5J+Na
4PXMJ/8P1RNqqXkkk5KSYuOQW9EokaHVxMR7pRbXichICvVESY+LFvo61nDj
BMhLiEVaXiVvUEstSXj258T6wMIpnL7uCvdYgFKiRlva+6CoAZfY/a4vg5+N
DQJTCnlrRc8qsqJgZemOokb808yhny2MTWaiK4gmin10SQOXuRbt6YXvQn8P
j10SqhJg4xFB7DRwS0ohir5PnLDhyT/MBfrZkrjsnvpyxEQEwz8gBLFJSYiP
jUCAvz+ikrPRwE0hQFlWIszNNGAVWSpSBaRRnp3ElJEK8PND0PckJmxDuAft
mRiq1OhQMm8QouMSkRwXhcCAAIRHpaFOXPGoojAbbloasA9N4qZtri5CdHgw
AgL84RsQhpxyNq9DirwyDnb2jnB1pZc7Li4u5FUuLp6Iy6sSA9xQheQYd3KY
2ZJ9FnD96QmhpsSEIzAwAL6+AYjPKhUJsvZMxFx6NIE8IBCRZLVJ8dEIJq8P
ik4htje32prSTNiYmhAKiuVWW1eahfDgIPJVP/gHRaGU3yKVDoX7Q0RDbQG8
XWxh8U0d++fOxu+HZWFhbgGP0ASxrOdn49b6MWg/dB2c00WWSVM1Ynzd4OTi
DDtrK/J9M2h9JGfxORm4xJcdYre/oQIRXvYwt/iKM9sWYcaOazCxsICTx3dU
cTEXVVA5MR8dOs6EQVgh56ksiA+Hs6Mj07LZ0sIcZoZquHz6LOTMQqiA2CeC
qiDWBqtHMb3/eFLM71/I71bY+tiJQ0FhgDbG9OyEuRe0mEAg+lNXmAx3Fyc4
OzkSXrSAqakRnly7iOsvTFBMGGMmiyFBNSI9nWFhYYzru5Zj3pbzMCTLsfEM
RznXPbwOupdXo03HcfjkmS161oi0KD/YO7rAydaafP8bjDXe49SRKzD0SP4P
Y1h+nlBTgAsTR2HjdRuxq7y5Gs4Ginir4UwrgDE/ZRGGmPDbBDwxT+LU2MZM
nFswHL8tuIC4qmbxoduM5/tmYNgRJdGMHRh4wq3U8FLJDPksaTRl4/Lq6Ziz
/5OEk5kwzpvDaN9xAlT8snnCfmG/oDTaGQ/uPYCBcxA5qCMREfkd/nYGUHiv
iWzRUVCXFwnFF69g8z1H9IJmfLuzHSOmH0KUhD823/szRnboiYMfmEAmVl9U
Pb4Qk3bKMakPkqGuUQ66eKWgh0w2n7A4CDvHDMO+145ifb4eqscWo8ugtXBI
rmmBsm3sfVozvwbl5RWorKqhViEbCsSvrWLSsiqranniIPhmpudnRUUlKqvr
WGOxMicaViZfYecejJL6P024qcnwxpnDJ/HFgT3vpGB7ZQUDw6fQMtElTDsI
xP310FhXLVwJeTO/mUUypU8BE6VeWlEjDGNpqmcamtbSpOdmPspLS1HDFyoz
DbWVKCmtYkJa+PQ75VWi0JdGVJSVoqK2gTPl+UXwdST8ZuGIuJyKv8r1aSyB
+tNLOPPYhF4WsARWHqCO4bRgyhNrrpKdoKFOmLNXWU0Rzea+UKRWMTlz4giT
RoL8qtoGbgRzo5cWAB19M0TnsXKpEsFB3kivFEjEpjUjQFcOR04+RUxZI0c8
VVHYPFYaHWYxTi9235rqhTtfJWyNIunLqBblMNbUN3HBihJbQkGpFG1JbUMz
510rz4qEpfFX2HuE0pIGf5V/VJWM1yePQVbbUxwII4WEbzcYZ/hFrah/mn/0
xw5variUw8tEC+9otREFRegYmsLOxR/ZpXUcjkHtACN9qKmpQEnpE1MYQ03P
FBG51TzOkUzQE2yhAyN7DwR62ENHUw0qKmrQ0taBqZ0fSvisW6gtqpI8IXPr
CVyjUhHqqIWbMs/hn1P7p3lEBFdyWyej/aDNCCxsEjLEQFSlBUNHQxc+IYGw
NtGHymcVfPmiBW1CEWEpot5ahDBd9N/h/KVrhMkO4Pipszh98zEcqLO0OAzP
r1/COWIC7jtwCBcuncelO2rIamxCsP4bnD97DiePHMThExdw7txFKNhGSvTW
Lob2s/v4aBFAJIY35B/ehKpL3F+kFyWY3kcHogo8sEkUXUMKq/Um+djiC21A
xqQYEdypGyA8p1JU/qQjGitS8VVVAW8/KkFL3xjOgbGoamxAtLMhHsm+hqrG
V3zPKWO9FyWJPnj18CWMXRK5413i9OA8Wk1pdpjVpS2W3jKjxMbe66OhBO5G
GiKqUIKukSnsXQOQV8bn7rIKYwNh+EUdKqrKUFJWhYb6F+ja+tHQKY4qGstT
YUyeuwQFw9nyK76Q/VFTU4e2rhE8I9KZ22euWkusC+7degrPmFQE26vj5kM5
hBbU/0GqEYtPlyfbIdV5MvQiSlqCLYRlvchEdRl4eXwDFm66jsBklpAayEZ7
QF3HDlllwuOGnxeCy7u348wjQ6SzegV1MBu+wsrVR2AalMshw+rJbgyZugM2
EWngNJCGUtgpv8YzJTeq4ogVAXICm8qexKZrxqKBTfDVvI01228ipvzPc4XI
0LqaGlSTP9khJti4ZDlkLWLYVIWGNFssHT0ah19ZIKdCFMbUB3nRTrh3RQ5B
6UKVuZnYu9W5PtjUXRozD7xHSV2jkIBo/eaGWrjKHUMbXg88s0lAAxkrYDr1
NaO2KASrB3dHn8nXkVpVT+Zp5nKFisjxv3TlBYSKovLKEmyxe/UmqHim/1Gu
EAsUrZJOk4BqS1Pw4sharLuqhuIGsBW6g3UeY/3Gs/BMYhuy1yLI+BlWbTgB
55QqtmgVrfqqfGYndt3SB5O13FiOKH8HaKvKYuaA2Xhhn4fGshhoa9mhuI6r
IFaa5IFz63fhuWEwj82iaG6oRw1ZUE1tGSzlz2Hu6ssIZ6mV3melQPbgWizZ
dgchqey9Pc1YdcUXXQeCeTZPuSu+2yli/coDULeL5Eon1BDl4dXlg9hy8h3S
2QTr2hgcmT8Oy88qIoWN8qVWaRheXpeFdUi+BPnwoXf3CLbdseRI1135Ktbu
uY+Eqj/PFBIWMufX1jBpZJWZQTixbiVOvxKm67cAj43h3t4Ae9ntaNV1FkwS
atkbpGRvM5gGpjPVI+R3zcGQ5ddp015OGJFvqR5djL7TjtIaYMxrrF6fwnE5
Vo2mAdteuLD9DPyLxQH7NMHj7NKZ2K7gLnYHN+bg5prZWHvFUJwV/zOuIp/U
FhK55gIjNTmcOXkdDjFFIuefFGoTLHFw30l45Au409Hy7mncV/MUo6I5GWeG
98WGGybckuJ07qE/byS0wsrF1x3IxsGpIzB2MZNpzjK6y8vDGLbqJpPawm68
p8IpjJx2GGHFTX+U2CBOTyGkFxkAGzNt3LtwBi91PDl3QV2qPRYMGYubX+Mk
VlGNF3vmY+ouBZphw/oZaxNNMbHzeDy1FreZDje6ja5ElD2zSGPgDDDWg2dq
GYvLdJcPGDtoDt47pYqEjjRK0qPhZmsGeZkruPBMiwbOSSjTfJjf/R2teiyA
dTqXMhLvYQKzgFTmDdVxtlg0aCAOKvpwWliRL9YO7offH1kK/ciV33Hl4G5o
homL3oV/eYBz93V+TCPhp+DIghnY99lPTBT16biwbAY23mZE4h8kOHCYFdQg
xt8d5vqfcfnUOSi7JrSEoc/yCE1eWdRdCqN3vBL305CGgF+GjIIqlISpozeh
0UMvPTk5mu1GI+i74KJqGDO/r5YqPNgbWCnkuChg4vTVsMtqEvNGUQDmjBuG
TR+8OdRk2L5C/77T8CWk5Kd5P2zOTH1ZJnQfnsS+Sx/oScXm+ZVEesBQx4rS
sBjbzQW4s2kmNr+wFmObH4+Tw/pg/VVDqg2wQ6OIrPuNNwJfgorFRNmUjv1T
hmPMopf0ilS8MQ34eGYJOq68I5n2Q0tbbB8/BOtkbf+IO7jM66YaRFp9xM6t
x2EVmc8Gn7o82wHp4SvhlieOgAr9dAa/tpsIo/hqzvue7vwSrYgyKmvCVhqk
538Edo3sjTUPmeYFKEzxg2NEHnP/7esdgOxyyYjlYtxZMhJjNsqiqAkslzBV
bGIdcGz3Hjw3Y0KoOSnJz3LFrA6tMPHQB3G/KiKU6suQnlfBoMTo3lqyqjmw
T23guITwxqdzc4nMWQU/et1TloCvytrIboYE5zdA89JazD7xTjK+G7kemDxq
GHarBXLbmWT2CH37zYJeZPkfpQGxGG6uLYaTugx+P3AHAdk1LeBFYa/f0p1e
oD0xKbfesOGukb3k95Bx3XBTL060sC6oiTHDEDJu8vGPjJCtKS7jbpz41aVM
oXwTteeY16czxm1+AYIeCXHijnGD+2K1jESf+Pok7BvbD1P3fqAWLjcUmcIq
KZx1T4WxAEXpiYhOyOESlhpTbTCjby/s+eg1TUQyDUzFGNZF04Di7BT4unzD
vcOLIN1xAtT881qUa2rw9OhstJp0HqniqG/z+1vQqccKuOWyfaqFwuD5QY5r
WLAaKgsQGRGHsnrWrqjAk41j8dua28hs4MKYISjCvQVD0YtIqgRxOdMcF3n0
atceB1VDOUbKcn9P9rIdDr5yETMSze89Oge/LCdGOnmRgOifDQ3NiDK7jy5d
J0LJNZMn6Q1S2T0NPWcysWScktxYjaSoSGQRk5Y9HZzl9qJ1n+VwSq3l0ryS
rB8xZTj2P3IRi6PGDFye1x283rsQUiLCXmdYPd/PBP3KOqYzsRRlxayjWYDy
gkyE+DhC/tZudGrTBzf1I1mgab7P0H59semZRPftmhhsH94Hs49KtJ4T8qGw
4sxryXSCmsJ0RMYko5bFeX08tk3qj+lH1ei3W0A768HRTTGMXt/F8ePHcfzE
iQ5szUX63+Nnoe4azyEu6ut1InF42H3XheNB+7trmSlvGcTzWKzVxJhjBBnX
f88TlLE0k+CBW0c2Yeak0ejTvaMws2j+QaK1i+sHFvtjbv9emLVLlQpvyVQ1
K5l15DSbAbMYLulN0FiPcuq7qozD+WkT/iUTrxIKh+Zh9NZHyGO5vz4BG6Z0
x4B9yvRAEBcZ/iv443hs6UWaQWGl/ACrF83EiEF9GVzwOgzHBWUncWGhv2Ra
9b/DtHwonF1CcLmRln7kAloDv6Bf+w7Y8dpdHAjf3IBKgobyynw83jfnR+Yl
qqeJDAaPXAjD6HKOJ0wfriKW4Gp4FwnEmXtloUTX6ooBC29SNY2lzvLvuhgg
LYXFx4yp87Avy2nlyVC8c57ijBhKQoQx+Dt1A5bf8zlG5ac7Y0EHHgbseU21
GhYOf8Wz6N9lOVxzxZEdSU7qOHD8HbIk43obaWRqX0zZ9pZqp5xvNpmcqUPH
4qpWGPf1dJvn6MTrB3mXHI5cQ3VoJZ82OPbUW8zntbE4OUoKvN/2IFjM5zYv
DjG3EhdMokTU0oQAs4/YsnIBxg4fiA5SPKYo0JbbGijii5mXSMspvXpg4SHt
H3PZmmB8czl4PebBNrGG2ypBI7NVZRXF+Hh86b+yvN2rA+g3fh9CilnhUY3H
K8aj14gzNGu6JVleUIswF0toaWpCS1u7A7S1tclQbS0taGrpwz+pkMNhof8n
ovVLYdM1C47lY4yuMci4rhPLhfFWRX9FPzL1mhvGjKe0LtMD68f1QKtOfTBt
/mqcvvsa5s5+KKiViBrjJ2H/qF7oO/cicsTUURKoRqaSxo63zjyW2RuKEmCi
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
CUvvvf+fxZgz/JfhydqxaN17MbxzWAmQYoZD2zbH3Kv2QlcL6/Du7Cq0lBgB
06gyxrRcn+6BBb1FMHAHHWHH+Aj8NY+jLTX6Qzfh1B5xkJ8oBcl5F0j6s1+w
QjeCt7DP5s3J5ZCQlIV5bCUzHgk+mtezOYbs1iGqDQtlTRL2De2I3nKniKuC
daa9VUDLFlI49iqKQ51a0iZ3lsTAhddIShk+oi3gq3MAoj3nkeSKtORrqmuF
rbjWF9Z/A/BKaO2Yja6DVsIrp4694VUShkVjO2DQ3hdkWjXN7vwjzKvisWF8
d0gO2YaoMs5/SZeVagGZxUpkrRWOVLi4XpbanObAJbWWxbIoFOtlpdBG5hRJ
7SXsxNM5t5QiRQbGgQVs6/oMnF3Zl1rMftWJJ828GaWJeH7+ILZt20bpZtu3
b6eebd++Ddu2H4GpXyqXzbCxGZKPM6tHgdduATwzuKKThUFYNaIN2o04j7R6
dobUpblgRFtxjFh1j+QOYWZIhucztKNGWn3GnstWmxWKO0d2CdElge3btmH7
3vNwiCrgo1SbiXOTO4PXbwk8suuZaVIcYojRIn1w/V0cj5lZ5IxQXJCL7LxC
vD69hplG3Cyqg/3d01BQsiEvG7NslIUaQ0aqDXZo+/5Ly0Z+ABbItOYXkeTq
cNWnOWNKdzH0ntqwUmNNKuQX9OEXkfw6lKk9xHtux+dSoSlUJvDbj8Kbr0KZ
1hO//Tx8SKr+nSlUWwQfh3cwNjamoDIxMaGevXz5Ei9fWSA8vfiHU6g6GXvm
9fxbvckSfr3Jln12I6qcnUJlkW/QW4Jfb/KrkKdOlLY4f6+xcDxkfXkW3Kze
wMj4pRBpxjAxs0N8XiWrXnqr7YYorwvu2Sax2wvJcLp1Ui9MVzDjplFNEbzs
TPDCWA/HFo9Gn1GHkVCHlvTXEihO9YeGjimisvnhyPUlqbi7ZQaGyh1HJJch
/X92Cv1aXcsKEq3TaHRVs+5/j9b5XnTVeFj+UrTOj/af8u+Xtuz1VWlLfkbT
70frsGtRXjA2DJXGsJ2qDZK+kIx6u2eh0/iT3CZGPisQYq+No4eeI7kKrQTz
ISM2ABZmptBUUcbD21dx/b4mPmdXNvGxoEmALv8+0N8Iy/rru2FZTQv0L9Yw
/RmghwvIiHN+jvHDZ+CpcxJPGGXNfbMhLjkH77/UMOls6qtrwL/fBfZWb215
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
hP/FTe3+A47/yaY=\
\>"]]
}, Closed]],

Cell[TextData[{
 "- ",
 StyleBox["Run applet from  \[OpenCurlyDoubleQuote]4) Solving Manually > \
Solving Manually: Continuous Problem\[CloseCurlyDoubleQuote] ",
  FontSlant->"Italic"],
 " "
}], "Subsection",
 CellChangeTimes->{{3.7094619492573824`*^9, 3.7094619624719625`*^9}, {
  3.7094621819857483`*^9, 3.7094622527302327`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980732060967464`*^9, 3.698073211231152*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGSetXByCartesianSystem", ",", "\[IndentingNewLine]", 
    "DGSetXByHomogeneousCoords", ",", "\[IndentingNewLine]", 
    "DGRandom3DBackbone", ",", "\[IndentingNewLine]", "DGRandomMDGP", ",", 
    "\[IndentingNewLine]", "DGPlaneAndTorsionAngles"}], "\[IndentingNewLine]",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByCartesianSystem", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "dihedral", " ", "angles", " ", "using", 
        " ", "rotations", " ", "and", " ", "translations", " ", 
        "explicitly"}], ";", "\[IndentingNewLine]", "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "            ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], "        ", "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["dihedral",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}],
           FontWeight->"Plain"], " ", "\[IndentingNewLine]"}]}]}]}]}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "i", ",", "v", ",", "n", ",", "R", ",", 
        "X", ",", "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "positions"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", " ", 
            RowBox[{"Normalize", "[", 
             RowBox[{"b", "-", "c"}], "]"}]}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"a", "-", "b"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "creation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"R", "[", "v", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rotation", " ", "apply"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "apply", " ", "torsion", " ", "rotation", " ", "and", " ", 
            "translation"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"R", "=", 
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"c", "-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{
            RowBox[{"R", "[", "v", "]"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "v"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGSetXByHomogeneousCoords", "[", 
     RowBox[{"d_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "Euclidean", " ", "coords", " ", "from", " ", 
       "distances"}], ",", " ", 
      RowBox[{
       RowBox[{
       "planar", " ", "and", " ", "torsion", " ", "angles", " ", "using", " ",
         "transformation", " ", "matrices"}], ";", "\[IndentingNewLine]", 
       "   ", 
       StyleBox[
        RowBox[{"Input", " ", "parameters"}],
        FontVariations->{"Underline"->True}], ";", "\[IndentingNewLine]", 
       "   ", 
       RowBox[{
        StyleBox["d",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"distances", "       ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"norm", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         StyleBox["    ",
          FontWeight->"Plain"], "        "}]], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Theta]",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"planar", " ", "angles", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "i", "]"}], " ", "=", " ", 
            RowBox[{"angle", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "[", "i", "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "1"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"i", "-", "2"}], "]"}]}], ")"}]}]}], ")"}]}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["        ",
        FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["\[Omega]",
         FontSlant->"Italic"], ":", " ", 
        RowBox[{
         StyleBox["torsion",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["angles",
          FontWeight->"Plain"], 
         StyleBox["  ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["(",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]", "[", "i", "]"}], " ", "=", " ", 
             RowBox[{"angle", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "2"}], "]"}], ",", 
                RowBox[{"x", "[", 
                 RowBox[{"i", "-", "3"}], "]"}]}], ")"}]}]}], ";"}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "\[IndentingNewLine]"}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "B", ",", "B1", ",", "B2", ",", "B3", ",", "X", ",", "i", ",", "di", 
        ",", "ct", ",", "st", ",", "cw", ",", "sw", ",", "v", ",", 
        "numberOfAtoms"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numberOfAtoms", "=", 
        RowBox[{"Length", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "atoms", " ", "positions", " ", "on", " ", "Euclidean", " ", "3", "d",
          " ", "space"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "three", " ", "first", " ", "points"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ct", ",", "st"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"d", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "ct"}]}], ",", 
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "st"}], " ", ",", "0"}], 
           "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "first", " ", "transformation", " ", "matrices"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"B1", "=", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"B2", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"di", "=", 
        RowBox[{"d", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "ct"}], ",", 
            RowBox[{"-", "st"}], ",", "0", ",", 
            RowBox[{
             RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"st", ",", 
            RowBox[{"-", "ct"}], ",", "0", ",", 
            RowBox[{"di", "*", "st"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "remaining", " ", "coordinates"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"B1", ".", "B2", ".", "B3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ct", ",", "st"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cw", ",", "sw"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Omega]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"di", "=", 
           RowBox[{"d", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"concatenate", " ", "transformation", " ", "matrices"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "ct"}], ",", 
                RowBox[{"-", "st"}], ",", "0", ",", 
                RowBox[{
                 RowBox[{"-", "di"}], "*", "ct"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "cw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "cw"}], ",", 
                RowBox[{"-", "sw"}], ",", 
                RowBox[{"di", "*", "st", "*", "cw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"st", "*", "sw"}], ",", 
                RowBox[{
                 RowBox[{"-", "ct"}], "*", "sw"}], ",", "cw", ",", 
                RowBox[{"di", "*", "st", "*", "sw"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"apply", " ", "transformation", " ", "at", " ", "origin"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", 
           RowBox[{"B", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandom3DBackbone", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"algorithm_:", "\"\<HomogeneousCoords\>\""}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Generates", " ", "a", " ", "random", " ", "backbone", " ", "in", " ", 
       "tridimensional", " ", "Euclidean", " ", "space"}], ";", 
      "\[IndentingNewLine]", "   ", 
      StyleBox[
       RowBox[{"Input", " ", "parameters"}],
       FontVariations->{"Underline"->True}], 
      StyleBox[";",
       FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "algorithm", " ", "to", " ", "be", " ", "applied", " ", "during", " ",
          "coordinates", " ", 
         RowBox[{"calculation", ".", " ", "The"}], " ", 
         RowBox[{"options", " ", "'"}], "are", " ", 
         RowBox[{"HomogeneousCoords", "'"}], " ", 
         RowBox[{"or", " ", "'"}], 
         RowBox[{"CartesianSystem", "'"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", "the", 
         " ", "current", " ", "time", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "the", " ", "local", " ", "variables"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "d", ",", "\[Theta]", ",", "\[Omega]", ",", "X", ",", "output", ",", 
        RowBox[{"\[Epsilon]", "=", "0.05"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"seed", ">", "0"}], ",", 
         RowBox[{"SeedRandom", "[", "seed", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"length", " ", "of", " ", "covalent", " ", "bonds"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.526", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"plane", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1.91", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"torsion", " ", "angles"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "Degree"}], ",", 
              RowBox[{"180", "Degree"}], ",", 
              RowBox[{"300", "Degree"}]}], "}"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Epsilon]"}], ",", "\[Epsilon]"}], "}"}], 
              "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "remaining", " ", "3", "d", " ", 
         "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "algorithm", ",", "\[IndentingNewLine]", "\"\<HomogeneousCoords\>\"", 
         ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByHomogeneousCoords", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<CartesianSystem\>\"", ",", 
         RowBox[{"X", "=", 
          RowBox[{"DGSetXByCartesianSystem", "[", 
           RowBox[{"d", ",", "\[Theta]", ",", "\[Omega]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", 
         RowBox[{"Throw", "[", 
          RowBox[{"\"\<InvalidAlgorithm:\>\"", ",", 
           RowBox[{"OptionValue", "[", "algorithm", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "output"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "->", "X"}], ",", 
         RowBox[{"\"\<TorsionAngles\>\"", "\[Rule]", "\[Omega]"}], ",", 
         RowBox[{"\"\<CovalentBondLengths\>\"", "->", "d"}], ",", 
         RowBox[{"\"\<PlaneRotationAngles\>\"", "\[Rule]", "\[Theta]"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGEdgesMDGP", "[", "numberOfAtoms_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"i", "+", "3"}], ",", "numberOfAtoms"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"edges", ",", 
               RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "edges", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"numberOfAtoms_", ",", 
      RowBox[{"dijEps_:", "0.0"}], ",", 
      RowBox[{"dijMax_:", "Infinity"}], ",", 
      RowBox[{"seed_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Generates", " ", "a", " ", "random", " ", "MDGP", " ", 
       RowBox[{"instance", "."}]}], ";", " ", "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["numberOfAtoms",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{
        "number", " ", "of", " ", "3", "D", " ", "Euclidean", " ", "points", 
         " ", "to", " ", "be", " ", "generated"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        StyleBox["dijEps",
         FontSlant->"Italic"], 
        StyleBox[":",
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"the", " ", "upper", " ", 
          RowBox[{"(", "uij", ")"}], " ", "and", " ", "lower", " ", 
          RowBox[{"(", "lij", ")"}], " ", "constraints", " ", "boundaries", 
          " ", "are", " ", "generated", " ", "using", " ", "the", " ", 
          "formulae", " ", "lij"}],
         FontWeight->"Plain"]}], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "dijEps"}], ")"}], " ", "and", " ", "uij"}], " ",
          "=", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "dijEps"}], ")"}]}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       StyleBox["dijMax",
        FontSlant->"Italic"], ":", 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "all", " ", "distances", " ", "greater", " ", "than", " ", "dijMax", 
         " ", "are", " ", "dropped"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["   ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["algorithm",
        FontSlant->"Italic"], ":", " ", 
       StyleBox[
        RowBox[{"defines", " ", "the", " ", "method", " ", 
         RowBox[{"(", "algorithm", ")"}], " ", "used", " ", "to", " ", 
         "calculate", " ", "the", " ", "pairwise", " ", 
         RowBox[{"distances", ".", " ", "The"}], " ", "options", " ", "are", 
         " ", "\"\<DistanceMatrix\>\"", " ", "and", " ", "\"\<Nearest\>\""}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        StyleBox["seed",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{
         "integer", " ", "number", " ", "used", " ", "to", " ", "reproduce", 
          " ", "random", " ", "sequence", " ", 
          RowBox[{"generation", ".", " ", "If"}], " ", "seed"}],
         FontWeight->"Plain"]}], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
        "0", " ", "a", " ", "sequence", " ", "based", " ", "on", " ", 
         "current", " ", "is", " ", "constructed"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"declare", " ", "local", " ", "variables"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "X", ",", "D", ",", "E", ",", "dij", ",", 
        "DijEps"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "=", 
        RowBox[{
         RowBox[{"DGRandom3DBackbone", "[", 
          RowBox[{
          "numberOfAtoms", ",", "\"\<HomogeneousCoords\>\"", ",", "seed"}], 
          "]"}], "[", "\"\<Points\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DijEps", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "distance", " ", "bounds"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "numberOfAtoms"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", "numberOfAtoms"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"exact", " ", "distances"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "2"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Continue", "[", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"intervalar", " ", "distances"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "3"}], "||", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{"Norm", "[", 
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"X", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "<", 
                 "dijMax"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"E", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DijEps", ",", "dijEps"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DGProblem", "[", 
         RowBox[{"X", ",", "E", ",", "DijEps"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"A_", ",", "B_", ",", "C_", ",", "D_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "the", " ", "plane", " ", "and", " ", "torsion", " ",
        "for", " ", "3", "D", " ", "points", " ", "A"}], ",", " ", "B", ",", 
      " ", 
      RowBox[{"C", " ", "and", " ", "D", " ", "in", " ", "that", " ", 
       RowBox[{"order", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nabc", ",", " ", "nbcd", ",", "\[Theta]", ",", "\[Omega]"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"centered", " ", "at", " ", "C"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{
          RowBox[{"B", "-", "C"}], ",", 
          RowBox[{"D", "-", "C"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Theta]):Angle[BCD]  =\>\"", ",", "\[Theta]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"centered", " ", "at", " ", "B", " ", "and", " ", "C"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nabc", ",", "nbcd"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"A", "-", "B"}], ",", 
            RowBox[{"C", "-", "B"}]}], "]"}], ",", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"B", "-", "C"}], ",", 
            RowBox[{"D", "-", "C"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{"VectorAngle", "[", 
         RowBox[{"nabc", ",", "nbcd"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(\[Omega]):Angle[ABCD] =\>\"", ",", "\[Omega]"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{"X_", ",", "i_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Calculates", " ", "plane", " ", "and", " ", "torsion", " ", "angles", 
       " ", "of", " ", "i"}], "-", 
      RowBox[{"th", " ", 
       RowBox[{"atom", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"DGPlaneAndTorsionAngles", "[", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlaneAndTorsionAngles", "[", "X_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Omega]", ",", "i"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
         RowBox[{"DGPlaneAndTorsionAngles", "[", 
          RowBox[{"X", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679334396696954*^9, 3.6793344197378874`*^9}, {
   3.679334459021727*^9, 3.6793344614910192`*^9}, {3.679334506573509*^9, 
   3.67933450744427*^9}, 3.679334554859289*^9, {3.6793347748775415`*^9, 
   3.6793348146727505`*^9}, {3.6793348683176303`*^9, 
   3.6793349148147354`*^9}, {3.679335216182414*^9, 3.679335270449379*^9}, {
   3.679335358320606*^9, 3.6793353855927134`*^9}, {3.679335422113183*^9, 
   3.679335422860292*^9}, {3.679335467322652*^9, 3.6793354718670073`*^9}, {
   3.679335502941807*^9, 3.6793355176517873`*^9}, {3.6793359308181715`*^9, 
   3.6793359602458916`*^9}, {3.6793359984610925`*^9, 3.679336011029911*^9}, {
   3.679336355941925*^9, 3.679336390681263*^9}, {3.679336436703087*^9, 
   3.679336440913059*^9}, {3.6793364973777227`*^9, 3.679336508943397*^9}, {
   3.679337482798051*^9, 3.6793374878195066`*^9}, {3.679337531710136*^9, 
   3.679337679993342*^9}, {3.679337711180924*^9, 3.6793377943636985`*^9}, {
   3.679337830273183*^9, 3.6793379235522385`*^9}, {3.6793380600889235`*^9, 
   3.679338107718841*^9}, {3.679338168311281*^9, 3.6793381690922422`*^9}, {
   3.679338254307039*^9, 3.679338327393572*^9}, {3.6793384127916727`*^9, 
   3.679338418720523*^9}, {3.6793384657072325`*^9, 3.679338788372825*^9}, {
   3.679338898441475*^9, 3.6793389990638256`*^9}, {3.6793390477861385`*^9, 
   3.679339051499843*^9}, {3.6793391446277075`*^9, 3.6793392599804153`*^9}, 
   3.6793393742092657`*^9, {3.6793395780321927`*^9, 3.6793398587893867`*^9}, {
   3.6793398957561593`*^9, 3.6793399605794096`*^9}, {3.67934000207397*^9, 
   3.6793400630782733`*^9}, {3.6793401514655437`*^9, 
   3.6793403347497687`*^9}, {3.6793403699550896`*^9, 3.67934037140318*^9}, {
   3.679340563130898*^9, 3.6793405841237473`*^9}, {3.6793406189939303`*^9, 
   3.6793406823092556`*^9}, {3.6793413087872534`*^9, 
   3.6793413117913976`*^9}, {3.6793414144409704`*^9, 
   3.6793414780425982`*^9}, {3.6793415857352*^9, 3.679341749056054*^9}, {
   3.6793418327409945`*^9, 3.6793418417524166`*^9}, {3.679341876481241*^9, 
   3.6793418824052687`*^9}, {3.679341997125859*^9, 3.6793420172739105`*^9}, {
   3.67934205563032*^9, 3.6793420821291895`*^9}, {3.679342117275077*^9, 
   3.6793421196924405`*^9}, {3.6793421834981775`*^9, 3.679342183855644*^9}, {
   3.6793422500684495`*^9, 3.6793422840007253`*^9}, {3.6793424043195424`*^9, 
   3.6793424350150757`*^9}, {3.679342585125659*^9, 3.679342801705634*^9}, {
   3.679342833323803*^9, 3.6793428396110015`*^9}, {3.6793429405557547`*^9, 
   3.6793429972575336`*^9}, {3.679343068573412*^9, 3.6793430980621653`*^9}, 
   3.6793431423230133`*^9, {3.6793431858227177`*^9, 3.6793432209529057`*^9}, {
   3.6793432860551014`*^9, 3.6793433042354126`*^9}, {3.6793433545087633`*^9, 
   3.6793433652364955`*^9}, {3.6793452969963503`*^9, 3.6793453088097954`*^9}, 
   3.6793461153501606`*^9, {3.6793473536334457`*^9, 3.6793473954665585`*^9}, {
   3.6793477301073675`*^9, 3.679347763333604*^9}, {3.6793478591437263`*^9, 
   3.6793478625984306`*^9}, {3.6793480121537013`*^9, 
   3.6793482720333853`*^9}, {3.67934834772797*^9, 3.6793483523074236`*^9}, {
   3.6793484687244396`*^9, 3.679348489631818*^9}, {3.679348535732118*^9, 
   3.6793485836744003`*^9}, {3.679348656480409*^9, 3.6793486600900903`*^9}, 
   3.6793492489231615`*^9, {3.6793494190708942`*^9, 3.679349419296319*^9}, 
   3.6793494823993444`*^9, {3.6793500975888023`*^9, 3.6793501010398235`*^9}, {
   3.6793503502988024`*^9, 3.679350357442238*^9}, {3.679350388693789*^9, 
   3.6793504609919558`*^9}, {3.679350512381988*^9, 3.6793505224916997`*^9}, {
   3.6793505658690414`*^9, 3.679350573203977*^9}, {3.6793920543569756`*^9, 
   3.6793923209393916`*^9}, {3.679392352626535*^9, 3.6793925381168537`*^9}, {
   3.6793926280473437`*^9, 3.679392661685611*^9}, {3.679392696383786*^9, 
   3.679392699025669*^9}, {3.6793928383564887`*^9, 3.6793934549091573`*^9}, {
   3.679393586505351*^9, 3.679393616703784*^9}, {3.6793939133345203`*^9, 
   3.6793939143222685`*^9}, 3.6793940696010857`*^9, {3.679394099668668*^9, 
   3.6793944506348133`*^9}, {3.679394784056423*^9, 3.67939534176003*^9}, {
   3.679395381425836*^9, 3.679395503566868*^9}, {3.6793955684350924`*^9, 
   3.6793955734567842`*^9}, {3.6793957804079714`*^9, 
   3.6793958367041416`*^9}, {3.6793960807594223`*^9, 3.679396100513118*^9}, {
   3.67939616157646*^9, 3.679396197364892*^9}, {3.6793962497184567`*^9, 
   3.679396282906206*^9}, {3.679396609090597*^9, 3.6793966167836933`*^9}, {
   3.679396648625914*^9, 3.6793966543985653`*^9}, {3.679396740943916*^9, 
   3.679396768582145*^9}, {3.679396857866257*^9, 3.6793968963813653`*^9}, {
   3.6793969336171*^9, 3.6793970905785065`*^9}, {3.6793971251566105`*^9, 
   3.6793971298515577`*^9}, {3.679397221304947*^9, 3.67939722410863*^9}, {
   3.6793972641763353`*^9, 3.679397266225936*^9}, {3.6793983203128195`*^9, 
   3.6793983706649785`*^9}, {3.679398435449253*^9, 3.6793984477299423`*^9}, {
   3.6793984907409554`*^9, 3.6793985421648207`*^9}, {3.679398593771634*^9, 
   3.6793986705180993`*^9}, {3.6793989235435977`*^9, 3.67939893434542*^9}, {
   3.679403394164427*^9, 3.6794034018166647`*^9}, {3.679403783825127*^9, 
   3.6794037864835734`*^9}, {3.6794038759602175`*^9, 
   3.6794040830475106`*^9}, {3.679404119305796*^9, 3.679404298238202*^9}, 
   3.679404382036023*^9, {3.679404653274694*^9, 3.6794046842305584`*^9}, {
   3.6794050293859835`*^9, 3.6794050557043276`*^9}, {3.6794051146048007`*^9, 
   3.679405116722584*^9}, {3.679405184367193*^9, 3.6794052171029243`*^9}, {
   3.679405498432304*^9, 3.679405569807764*^9}, {3.679405690984426*^9, 
   3.6794056940269375`*^9}, {3.679405754352635*^9, 3.6794057624882355`*^9}, 
   3.679405828952403*^9, {3.6794059773823776`*^9, 3.679406037058329*^9}, {
   3.679406078458248*^9, 3.6794061638320656`*^9}, {3.6794064355972614`*^9, 
   3.679406619068183*^9}, {3.67940666239577*^9, 3.679406687383835*^9}, {
   3.679406724763648*^9, 3.6794067251687045`*^9}, 3.6794068172515316`*^9, {
   3.679406863506428*^9, 3.679406872901106*^9}, {3.679406930446825*^9, 
   3.679406948401491*^9}, {3.6794070040861063`*^9, 3.6794070065561094`*^9}, {
   3.679407312344544*^9, 3.679407314713808*^9}, {3.679407430180848*^9, 
   3.679407458271701*^9}, 3.6794078238766403`*^9, {3.679407878354503*^9, 
   3.6794082035777364`*^9}, {3.679566685353998*^9, 3.67956669759547*^9}, 
   3.679568153295287*^9, {3.6795682979748397`*^9, 3.679568399913588*^9}, {
   3.679568451510522*^9, 3.679568495166552*^9}, {3.6795691795206947`*^9, 
   3.679569250499019*^9}, {3.679569280716798*^9, 3.6795693785712852`*^9}, {
   3.6795925633128986`*^9, 3.679592673970081*^9}, {3.679592721867278*^9, 
   3.6795927229374475`*^9}, {3.679594988131906*^9, 3.679595118982105*^9}, {
   3.679738892130002*^9, 3.679738904422254*^9}, {3.6797389527800984`*^9, 
   3.6797389661620564`*^9}, {3.6797390238401327`*^9, 
   3.6797390636940556`*^9}, {3.6797391569629755`*^9, 3.679739218024413*^9}, {
   3.679739321633385*^9, 3.6797393341911097`*^9}, {3.6797394358016376`*^9, 
   3.679739498369319*^9}, {3.679739592363925*^9, 3.6797396087330103`*^9}, {
   3.6797405277538753`*^9, 3.6797405906735935`*^9}, {3.679741837482974*^9, 
   3.679741856061937*^9}, {3.6797530753347263`*^9, 3.679753080740266*^9}, {
   3.679822610411623*^9, 3.6798226951736937`*^9}, {3.6798262757554946`*^9, 
   3.6798262950500765`*^9}, {3.6798304972475395`*^9, 3.679830500587058*^9}, {
   3.6798305863580213`*^9, 3.6798306115801296`*^9}, {3.679830653827534*^9, 
   3.679830659160823*^9}, {3.679830750679475*^9, 3.679830778729604*^9}, {
   3.6798309380103083`*^9, 3.679831207376337*^9}, {3.6798312397643733`*^9, 
   3.6798313536889253`*^9}, {3.6798313849934535`*^9, 3.679831403721264*^9}, {
   3.6798314534696703`*^9, 3.6798315710288057`*^9}, {3.6798316592417555`*^9, 
   3.6798317372267046`*^9}, 3.679831789061343*^9, {3.679831822090675*^9, 
   3.679831828828328*^9}, {3.6798318972804823`*^9, 3.6798319051885147`*^9}, {
   3.679831945915737*^9, 3.6798319534838204`*^9}, {3.679831984167186*^9, 
   3.679831996593215*^9}, {3.6798321399538794`*^9, 3.6798321522301235`*^9}, {
   3.6798322802409973`*^9, 3.6798322901002426`*^9}, {3.679832475527353*^9, 
   3.6798324791745257`*^9}, {3.679832515937626*^9, 3.6798325272304134`*^9}, {
   3.6798328341287575`*^9, 3.6798328453074446`*^9}, {3.679832936913255*^9, 
   3.6798329499211493`*^9}, 3.6798329836635427`*^9, 3.6799120745739098`*^9, {
   3.68096946640281*^9, 3.680969506471238*^9}, {3.6809695943663626`*^9, 
   3.6809695983006277`*^9}, {3.680971291386725*^9, 3.680971292487916*^9}, {
   3.6810483453596783`*^9, 3.6810483658374515`*^9}, {3.681049666557871*^9, 
   3.681049672721483*^9}, {3.681049746015087*^9, 3.6810497473331203`*^9}, {
   3.681050036116782*^9, 3.6810503893437195`*^9}, {3.681050439415736*^9, 
   3.681050443570201*^9}, {3.6810508388119097`*^9, 3.681050853163069*^9}, {
   3.6810508894027395`*^9, 3.681050893808611*^9}, {3.681050960791823*^9, 
   3.6810510981120815`*^9}, {3.68105113216866*^9, 3.6810511668364615`*^9}, {
   3.681051291204856*^9, 3.6810512973216534`*^9}, {3.681051343040867*^9, 
   3.6810513458639803`*^9}, {3.6810514354795513`*^9, 
   3.6810514424265547`*^9}, {3.6810515295113626`*^9, 3.681051567230074*^9}, 
   3.681051692501606*^9, {3.681051791144629*^9, 3.681051837795389*^9}, {
   3.6810519974251823`*^9, 3.6810521036048183`*^9}, {3.681052180564599*^9, 
   3.6810521932444377`*^9}, {3.681052498724401*^9, 3.6810525317013626`*^9}, {
   3.681052601514738*^9, 3.6810526020129356`*^9}, {3.681130097135313*^9, 
   3.6811301355329266`*^9}, {3.6811306071661057`*^9, 
   3.6811306080939198`*^9}, {3.681569293340601*^9, 3.681569317434729*^9}, 
   3.681569384549055*^9, {3.6815694300305977`*^9, 3.6815694757801313`*^9}, {
   3.681569563306698*^9, 3.681569588540775*^9}, {3.6827030876800084`*^9, 
   3.682703262424608*^9}, {3.6827033351522703`*^9, 3.682703415951787*^9}, {
   3.6827036928979535`*^9, 3.6827037232224236`*^9}, {3.682751730525303*^9, 
   3.6827517963283806`*^9}, {3.6827518694423895`*^9, 3.682751938368969*^9}, {
   3.682752027328513*^9, 3.682752222908455*^9}, {3.6827522575518446`*^9, 
   3.682752305498808*^9}, {3.682752343269593*^9, 3.682752354684014*^9}, {
   3.682755918271523*^9, 3.6827559318206263`*^9}, {3.6827559727179627`*^9, 
   3.682756087687999*^9}, {3.682756145721592*^9, 3.682756179708579*^9}, {
   3.6827562427576885`*^9, 3.682756246343544*^9}, {3.6827562838961797`*^9, 
   3.682756361155776*^9}, {3.6827564050716653`*^9, 3.682756407820393*^9}, {
   3.6827568065792284`*^9, 3.682756817610793*^9}, {3.6827569799864893`*^9, 
   3.682757046769945*^9}, {3.6827571010926585`*^9, 3.68275714115174*^9}, 
   3.6827572933922772`*^9, {3.682757377968191*^9, 3.6827573780054502`*^9}, {
   3.682757430656029*^9, 3.682757430938339*^9}, {3.682757538765318*^9, 
   3.6827575688045273`*^9}, {3.6827576062534266`*^9, 
   3.6827577481318636`*^9}, {3.6827581645482197`*^9, 
   3.6827581925304317`*^9}, {3.6827582367544127`*^9, 
   3.6827582371612177`*^9}, {3.682758608097464*^9, 3.682758623028547*^9}, {
   3.6827587073678665`*^9, 3.682758772728657*^9}, {3.682758834124054*^9, 
   3.682758836456462*^9}, {3.682782233662289*^9, 3.6827822447829604`*^9}, {
   3.682782320018792*^9, 3.682782487834862*^9}, {3.682782529947446*^9, 
   3.6827825314122334`*^9}, {3.682782623878173*^9, 3.6827826814501777`*^9}, {
   3.6827827337311916`*^9, 3.682782750069191*^9}, {3.682782896362369*^9, 
   3.6827828993756037`*^9}, {3.6827829353820267`*^9, 3.682782936614396*^9}, {
   3.6827852963565493`*^9, 3.6827852984977875`*^9}, {3.6827871345324674`*^9, 
   3.6827871372960124`*^9}, {3.6827873158456683`*^9, 3.682787318082534*^9}, 
   3.6860539435781755`*^9, {3.689601466774104*^9, 3.6896015532256894`*^9}, {
   3.6896016488772197`*^9, 3.6896017962777505`*^9}, {3.689601830847403*^9, 
   3.689601843970112*^9}, {3.689601972787878*^9, 3.689601987554659*^9}, {
   3.6896020823447723`*^9, 3.689602177412902*^9}, {3.689602219625367*^9, 
   3.6896025123406606`*^9}, {3.689602553886554*^9, 3.689602618506301*^9}, {
   3.6896026500310593`*^9, 3.6896026586156025`*^9}, {3.6896026945036297`*^9, 
   3.6896028712580557`*^9}, {3.6896029047014227`*^9, 
   3.6896029083520837`*^9}, {3.689602966711435*^9, 3.689603058571074*^9}, {
   3.6896030932120867`*^9, 3.689603098139574*^9}, {3.6896031601944327`*^9, 
   3.6896031778706956`*^9}, {3.692621083267871*^9, 3.692621091669281*^9}, {
   3.6926212289569902`*^9, 3.6926212863157787`*^9}, {3.6926213497820015`*^9, 
   3.692621425637977*^9}, {3.6926214644408817`*^9, 3.6926214670573387`*^9}, {
   3.692621527200048*^9, 3.6926216897906265`*^9}, {3.692627410197031*^9, 
   3.6926275455290575`*^9}, {3.692627745145838*^9, 3.6926277852211*^9}, {
   3.692627821712092*^9, 3.692627853727536*^9}, {3.693051401128996*^9, 
   3.693051427295449*^9}, {3.6930549156980915`*^9, 3.6930551127231016`*^9}, {
   3.6930552622573557`*^9, 3.693055266815773*^9}, {3.693055339369998*^9, 
   3.693055342949571*^9}, {3.6930554341310496`*^9, 3.693055503513935*^9}, {
   3.6930556414092984`*^9, 3.693055671403966*^9}, {3.6930558447268047`*^9, 
   3.693055926052605*^9}, {3.69305610697759*^9, 3.693056188778535*^9}, {
   3.6930563054950542`*^9, 3.6930563090177827`*^9}, {3.693056360765195*^9, 
   3.693056364987186*^9}, {3.693056410841975*^9, 3.6930564674928303`*^9}, {
   3.693056544238221*^9, 3.6930565494853306`*^9}, {3.6930566103966265`*^9, 
   3.6930566475710416`*^9}, {3.693056687192659*^9, 3.6930566953123307`*^9}, {
   3.6930567877264233`*^9, 3.6930568950334253`*^9}, {3.6930570764514155`*^9, 
   3.693057081922228*^9}, {3.6930571431816697`*^9, 3.6930572655759053`*^9}, {
   3.693057312085458*^9, 3.6930573768320684`*^9}, {3.6930574682013035`*^9, 
   3.693057478075393*^9}, {3.6932296110918107`*^9, 3.6932296491465197`*^9}, {
   3.6932296904250884`*^9, 3.6932297134186444`*^9}, {3.693229748263383*^9, 
   3.6932297809611044`*^9}, {3.6932308110630655`*^9, 3.693230887986189*^9}, 
   3.693231311160925*^9, {3.6932313870086255`*^9, 3.693231387261767*^9}, {
   3.693300257298705*^9, 3.693300990881487*^9}, {3.6933010948551283`*^9, 
   3.6933011038372164`*^9}, {3.6933011352536983`*^9, 3.693301291501009*^9}, {
   3.693301360678998*^9, 3.693301846650869*^9}, {3.6933018835332117`*^9, 
   3.6933019831666975`*^9}, {3.6933020216715317`*^9, 3.693302099051983*^9}, {
   3.6933021369545527`*^9, 3.6933023594457426`*^9}, {3.693315004372259*^9, 
   3.693315011074277*^9}, {3.6944413361908827`*^9, 3.694441336907129*^9}, {
   3.6950542188467774`*^9, 3.695054222592431*^9}, {3.6950542990197506`*^9, 
   3.695054307656605*^9}, {3.695055223340433*^9, 3.695055253120858*^9}, {
   3.695055384838611*^9, 3.6950553878557982`*^9}, {3.6950554421005893`*^9, 
   3.6950555642412815`*^9}, {3.695055732966177*^9, 3.6950557465022993`*^9}, {
   3.6950558046684055`*^9, 3.695055961220101*^9}, {3.695055998668761*^9, 
   3.6950560162157063`*^9}, {3.695056048840163*^9, 3.695056146211532*^9}, {
   3.6950561862654486`*^9, 3.695056188190776*^9}, {3.6950562373677807`*^9, 
   3.6950562879516363`*^9}, {3.6950563517744646`*^9, 3.695056360712323*^9}, {
   3.69505860651243*^9, 3.695058635588434*^9}, {3.695058684806075*^9, 
   3.6950588940516233`*^9}, {3.6957164552525945`*^9, 
   3.6957164560312014`*^9}, {3.6957168591079035`*^9, 
   3.6957169851976123`*^9}, {3.695717024315192*^9, 3.695717055967568*^9}, {
   3.695717541243352*^9, 3.695717560925682*^9}, 3.6957176038835087`*^9, {
   3.6957178788805103`*^9, 3.6957178831140776`*^9}, {3.6957179221867228`*^9, 
   3.6957179708748155`*^9}, 3.695718071534438*^9, {3.69571902099082*^9, 
   3.695719034182557*^9}, {3.695719110436449*^9, 3.69571912465912*^9}, {
   3.6959981424530063`*^9, 3.695998143402657*^9}, {3.695998201800911*^9, 
   3.6959982211236086`*^9}, 3.696161679540288*^9, {3.696332885830512*^9, 
   3.69633291986983*^9}, {3.6963330735158176`*^9, 3.6963330774044304`*^9}, {
   3.6963331566111712`*^9, 3.6963331767939215`*^9}, {3.696592128005638*^9, 
   3.696592200325493*^9}, {3.696592280079686*^9, 3.696592300895893*^9}, {
   3.696592360614642*^9, 3.6965924391532173`*^9}, {3.696592549000717*^9, 
   3.6965926737509665`*^9}, {3.6965927230303907`*^9, 3.696592776632204*^9}, {
   3.696592858783024*^9, 3.6965928838162374`*^9}, {3.6965929149072313`*^9, 
   3.696592957987955*^9}, {3.6965930011830645`*^9, 3.696593001767194*^9}, {
   3.6965931015144644`*^9, 3.6965931654384584`*^9}, 3.6965931976879473`*^9, {
   3.6965932301462927`*^9, 3.6965932334864273`*^9}, {3.6965933569359655`*^9, 
   3.6965933577742367`*^9}, {3.696593390597328*^9, 3.6965934361026325`*^9}, {
   3.69659349189392*^9, 3.696593496582985*^9}, {3.6965935305307894`*^9, 
   3.696593532985401*^9}, {3.6965936048453135`*^9, 3.6965936500412455`*^9}, {
   3.696593703183982*^9, 3.6965937451325016`*^9}, {3.6965938330555153`*^9, 
   3.696593888009883*^9}, {3.696593996396145*^9, 3.6965943945158587`*^9}, {
   3.696594455320829*^9, 3.6965947103520412`*^9}, 3.696594768684037*^9, {
   3.696594815028183*^9, 3.696594823298046*^9}, {3.6965948702502565`*^9, 
   3.696595114616662*^9}, {3.6965951697312756`*^9, 3.6965953069777794`*^9}, {
   3.6965953500124445`*^9, 3.696595353751785*^9}, {3.6965953948831806`*^9, 
   3.6965954213916507`*^9}, {3.696595542553995*^9, 3.6965955448754787`*^9}, {
   3.6965956361847277`*^9, 3.69659568404626*^9}, {3.696595734352703*^9, 
   3.6965957496578636`*^9}, {3.696595795766102*^9, 3.6965958031733503`*^9}, {
   3.696595870299922*^9, 3.6965959033890886`*^9}, {3.69659594497962*^9, 
   3.6965960170554657`*^9}, {3.696596069740856*^9, 3.6965960719006443`*^9}, {
   3.696596115793432*^9, 3.6965961457518997`*^9}, {3.6965962116946173`*^9, 
   3.6965962545251417`*^9}, {3.696596513453669*^9, 3.696596515787285*^9}, 
   3.696596667129428*^9, {3.696596717699503*^9, 3.696596905098714*^9}, {
   3.6965969520835447`*^9, 3.696597023631856*^9}, {3.6965971034463863`*^9, 
   3.696597122891425*^9}, {3.6965975434946456`*^9, 3.696597546602838*^9}, {
   3.696597678096383*^9, 3.696597688330096*^9}, {3.6965978572829094`*^9, 
   3.6965979026996202`*^9}, {3.6965980212576485`*^9, 3.6965980251793203`*^9}, 
   3.6966112031725936`*^9, {3.696611352492113*^9, 3.6966113711786222`*^9}, {
   3.6966114660470867`*^9, 3.6966114941486444`*^9}, {3.696611603631793*^9, 
   3.6966117017799177`*^9}, {3.696700266768712*^9, 3.696700288898875*^9}, {
   3.6967004337486825`*^9, 3.6967004344970875`*^9}, {3.696700470331721*^9, 
   3.696700811186071*^9}, 3.6967008770696635`*^9, {3.69806251910773*^9, 
   3.6980625541108*^9}, 3.6980625975942183`*^9, {3.698062632771715*^9, 
   3.6980628199497538`*^9}, 3.6980632337317467`*^9, {3.6980648304601855`*^9, 
   3.6980648325027876`*^9}, {3.698065066304674*^9, 3.698065079166938*^9}, {
   3.698065285455764*^9, 3.6980652965729313`*^9}, {3.6980653380167575`*^9, 
   3.6980653446492004`*^9}, {3.6980654471979094`*^9, 3.6980655292188916`*^9}, 
   3.6980655608374662`*^9, {3.698065604769106*^9, 3.698065619074422*^9}, {
   3.6980656675506783`*^9, 3.6980657993549433`*^9}, {3.6980658534383354`*^9, 
   3.698065966443425*^9}, {3.6980660365747347`*^9, 3.6980662024756727`*^9}, {
   3.6980662555999365`*^9, 3.698066332245663*^9}, {3.698066967983133*^9, 
   3.698067007227691*^9}, {3.6980670546053877`*^9, 3.698067056006934*^9}, {
   3.6980670908888907`*^9, 3.6980671669030037`*^9}, {3.6980724764654927`*^9, 
   3.698072477326563*^9}, 3.698072882773279*^9, {3.698072926956035*^9, 
   3.698073002792399*^9}, {3.6980735228888316`*^9, 3.6980736363143997`*^9}, {
   3.6980736736873636`*^9, 3.6980736762855873`*^9}, {3.698073733371315*^9, 
   3.6980738176139774`*^9}, {3.698074115673706*^9, 3.698074151883384*^9}, {
   3.6980741951740847`*^9, 3.698074199709016*^9}, {3.6980745246005197`*^9, 
   3.6980745474711885`*^9}, {3.698074601676409*^9, 3.69807460485203*^9}, {
   3.6980746715422163`*^9, 3.6980746777413116`*^9}, {3.6980791312936554`*^9, 
   3.69807925534293*^9}, {3.698079396933419*^9, 3.698079417484049*^9}, 
   3.6980842057440357`*^9, {3.6982409454848895`*^9, 3.6982412171955957`*^9}, {
   3.698241250091914*^9, 3.698241286441023*^9}, {3.698241327342353*^9, 
   3.6982413450801177`*^9}, {3.6982415966143312`*^9, 3.698241607293414*^9}, {
   3.698241638323495*^9, 3.6982416395132837`*^9}, {3.6982416887425785`*^9, 
   3.698241696773405*^9}, {3.698241822416162*^9, 3.6982418436196356`*^9}, {
   3.6982418853778315`*^9, 3.6982419724720964`*^9}, {3.6982684593176923`*^9, 
   3.6982685497169113`*^9}, {3.6982685851762476`*^9, 3.698268651698173*^9}, {
   3.6982687051849484`*^9, 3.6982688063507752`*^9}, {3.6982817507720194`*^9, 
   3.698281838841721*^9}, {3.6983178004506273`*^9, 3.6983178149373293`*^9}, {
   3.7093029132134314`*^9, 3.7093029246151695`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980732393627605`*^9, 3.6980732540080023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "random", " ", "backbone", " ", "with", " ", "7",
     " ", "atoms"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"x", "=", 
   RowBox[{"DGRandom3DBackbone", "[", 
    RowBox[{"7", ",", "\"\<HomogeneousCoords\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.709458316158923*^9, 3.709458335126977*^9}, {
  3.7094583696826596`*^9, 3.7094583740770683`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Points\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.526`"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.0337555109089696`"}], ",", "1.4390484151485563`", ",",
         "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5359624694613592`"}], ",", "2.153125897821833`", ",", 
        "1.2533839940837501`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.010627571036426309`"}], ",", "2.19646438335184`", ",",
         "1.2410867049936272`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.5393682631165084`", ",", "0.8154666725384576`", ",", 
        "1.5860880167920268`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "2.064203547805576`", ",", "0.8684851392562625`", ",", 
        "1.6133349754131963`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"TorsionAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "5.22598959574467`", ",", 
      "1.0833415791464915`", ",", "4.975075197035577`", ",", 
      "3.169886496746648`"}], "}"}]}], ",", 
   RowBox[{"\<\"CovalentBondLengths\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1.526`", ",", "1.526`", ",", "1.526`", ",", "1.526`", ",", 
      "1.526`", ",", "1.526`"}], "}"}]}], ",", 
   RowBox[{"\<\"PlaneRotationAngles\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1.91`", ",", "1.91`", ",", "1.91`", ",", "1.91`", 
      ",", "1.91`"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.70945827554522*^9, 3.7094583358283463`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Creates", " ", "a", " ", "random", " ", "MDGP", " ", "instance", " ", 
     "with", " ", "7", " ", "atoms"}], ",", " ", 
    RowBox[{
     RowBox[{"precision", " ", "of"}], " ", "\[PlusMinus]", 
     RowBox[{
     "10", "%", " ", "and", " ", "upper", " ", "distance", " ", "bound", " ", 
      "of", " ", "5", "\[Angstrom]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"P", "=", 
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"7", ",", "0.1", ",", "5.0"}], "]"}]}], ";", 
   RowBox[{"DGPrintGraph", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698268659292677*^9, 3.698268679682145*^9}, {
  3.7094578190047965`*^9, 3.709457820820792*^9}, {3.709457854192442*^9, 
  3.7094579564482503`*^9}, {3.709458046939109*^9, 3.709458049173118*^9}, {
  3.709458166981526*^9, 3.709458205028442*^9}, {3.709458261862075*^9, 
  3.709458264255425*^9}, {3.7094583954761567`*^9, 3.7094584307584143`*^9}, {
  3.7094624440356345`*^9, 3.7094624690429926`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "2.491389535840226`", "2.491389535840226`", 
      "2.491389535840226`"},
     {
      TagBox["3",
       HoldForm], "1", "4", "3.838990443901864`", "3.455091399511678`", 
      "4.222889488292051`"},
     {
      TagBox["4",
       HoldForm], "1", "5", "4.222228390744383`", "3.800005551669945`", 
      "4.644451229818822`"},
     {
      TagBox["5",
       HoldForm], "1", "6", "3.706254437605708`", "3.335628993845137`", 
      "4.076879881366279`"},
     {
      TagBox["6",
       HoldForm], "1", "7", "2.2497887459943438`", "2.0248098713949094`", 
      "2.4747676205937785`"},
     {
      TagBox["7",
       HoldForm], "2", "3", "1.526`", "1.526`", "1.526`"},
     {
      TagBox["8",
       HoldForm], "2", "4", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["9",
       HoldForm], "2", "5", "2.8109990038783095`", "2.5298991034904788`", 
      "3.0920989042661406`"},
     {
      TagBox["10",
       HoldForm], "2", "6", "2.3408905796346953`", "2.1068015216712257`", 
      "2.574979637598165`"},
     {
      TagBox["11",
       HoldForm], "2", "7", "1.1885919546654615`", "1.0697327591989154`", 
      "1.3074511501320079`"},
     {
      TagBox["12",
       HoldForm], "3", "4", "1.5260000000000005`", "1.5260000000000005`", 
      "1.5260000000000005`"},
     {
      TagBox["13",
       HoldForm], "3", "5", "2.4913895358402267`", "2.4913895358402267`", 
      "2.4913895358402267`"},
     {
      TagBox["14",
       HoldForm], "3", "6", "2.8954262133887596`", "2.6058835920498837`", 
      "3.184968834727636`"},
     {
      TagBox["15",
       HoldForm], "3", "7", "2.3756091682983853`", "2.138048251468547`", 
      "2.6131700851282242`"},
     {
      TagBox["16",
       HoldForm], "4", "5", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["17",
       HoldForm], "4", "6", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["18",
       HoldForm], "4", "7", "2.8459169915532194`", "2.5613252923978975`", 
      "3.1305086907085418`"},
     {
      TagBox["19",
       HoldForm], "5", "6", "1.5260000000000002`", "1.5260000000000002`", 
      "1.5260000000000002`"},
     {
      TagBox["20",
       HoldForm], "5", "7", "2.4913895358402263`", "2.4913895358402263`", 
      "2.4913895358402263`"},
     {
      TagBox["21",
       HoldForm], "6", "7", "1.5260000000000005`", "1.5260000000000005`", 
      "1.5260000000000005`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
      17, 18, 19, 20, 21}, {"i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{
  3.7094583998662834`*^9, 3.709458431752821*^9, {3.7094624508716803`*^9, 
   3.7094624694117894`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], "=", 
  RowBox[{"DGPlaneAndTorsionAngles", "[", "x", "]"}]}]}], "Input",
 CellChangeTimes->{{3.698074093754369*^9, 3.698074100719349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7094624734354944`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot Routines\n",
 StyleBox["DGPlot3DBackbone, DGPlotAdjacencyMatrix", "Subitem",
  FontFamily->"Arial Narrow",
  FontSize->18,
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "Subchapter",
 CellChangeTimes->{{3.698067020384124*^9, 3.6980670292797318`*^9}, {
  3.69807933406898*^9, 3.6980793390359116`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980799303095355`*^9, 3.698079937820016*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGPlot3DBackbone", ",", "\[IndentingNewLine]", "DGPlotAdjacencyMatrix"}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{"X_", ",", "r_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"objs", "=", 
        RowBox[{"{", "}"}]}], ",", "single", ",", "k", ",", "Y"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Plots", " ", "the", " ", "points", " ", "using", " ", "the", " ", 
       "coordinates", " ", "of", " ", 
       RowBox[{"X", "[", "\"\<Points\>\"", "]"}], " ", "property"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"single", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"single", ",", 
        RowBox[{"Y", "=", 
         RowBox[{"{", "X", "}"}]}], ",", 
        RowBox[{"Y", "=", "X"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "Y", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"objs", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"objs", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "r"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Y", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"objs", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"Y", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "d"}], "]"}]}], "}"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
       RowBox[{"objs", ",", "\[IndentingNewLine]", " ", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"DiagonalCovering_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "n", ",", "ei", ",", "ej", ",", "edges", ",", 
       "primitives", ",", "add"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"inverting", " ", "edges", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"edges", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"n", "-", 
            RowBox[{
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"primitives", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", "edges", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plot", " ", "diagonal", " ", "covering"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"DiagonalCovering", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "edges", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"add", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "edges", "]"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ej", "=", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"ej", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], ",", 
                 RowBox[{"add", "=", "False"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"add", ",", "\[IndentingNewLine]", 
              RowBox[{"PrependTo", "[", 
               RowBox[{"primitives", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Red", ",", 
                  RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "ei", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "+", "1", "-", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"ei", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
                  "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"primitives", ",", "\[IndentingNewLine]", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"n", "+", "1", "-", "i"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698067066932127*^9, 3.6980670691426945`*^9}, {
  3.6980671902539835`*^9, 3.698067204062685*^9}, {3.698072477390606*^9, 
  3.698072477433634*^9}, {3.700987271372648*^9, 3.7009872875874596`*^9}, {
  3.700987323104432*^9, 3.7009874696514378`*^9}, {3.700987505505695*^9, 
  3.700987529023263*^9}, {3.7009875975775332`*^9, 3.7009877752900534`*^9}, {
  3.700987878201973*^9, 3.7009878784024715`*^9}, {3.700987950788203*^9, 
  3.7009880153453655`*^9}, {3.7009924409184427`*^9, 3.700992486222743*^9}, {
  3.7009926305790386`*^9, 3.700992654396882*^9}, {3.7009926852740664`*^9, 
  3.7009929240122814`*^9}, {3.7009929569973097`*^9, 3.700993026603757*^9}, {
  3.700993113636631*^9, 3.70099315839818*^9}, {3.7009932005168066`*^9, 
  3.7009932252977724`*^9}, {3.7009936381442947`*^9, 3.70099364635505*^9}, {
  3.7009938366151433`*^9, 3.70099384037185*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6980799499995937`*^9, 3.698079957872316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "a", " ", "simple", " ", "a", " ", "backbone"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"10", ",", "0.1", ",", "5.0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPlot3DBackbone", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<X\>\"", "]"}], ",", "0.1", ",", "0.04"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698079970912464*^9, 3.698080010863962*^9}, {
   3.6980800447884617`*^9, 3.6980800500019207`*^9}, {3.7009874748140745`*^9, 
   3.7009874888528194`*^9}, {3.70098769231281*^9, 3.7009876933628187`*^9}, 
   3.7009877878708878`*^9, {3.7009878646324606`*^9, 3.700987907848855*^9}, {
   3.7009880253623495`*^9, 3.7009880288635263`*^9}, {3.7094625681120806`*^9, 
   3.709462644772151*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], 
    SphereBox[{-6.14996908213371, 2.435277977916759, -1.105917758947314}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-5.7115230378693855`, 3.414167177217996, -2.1913748063519316`},
      0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-5.583857988642851, 2.8815866144846716`, 0.2390739996711083}, 
     0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-4.187298737350634, 3.4554526180681515`, -2.2522993012774557`},
      0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-4.059238062142024, 2.8792169500772093`, 0.17423215818576435`},
      0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.656536523553129, 2.0747133065016543`, -2.6271678461030334`},
      0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-3.5563127649082165`, 1.4402631576382048`, 
     0.10243989796440275`}, 0.1]}, 
   {RGBColor[0, 0, 1], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], 
    SphereBox[{-2.0337555109089696`, 1.4390484151485563`, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{-1.526, 0, 0}, 0.1]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.1]}, 
   {GrayLevel[0.85], 
    TubeBox[{{0, 0, 
      0}, {-1.526, 0, 0}, {-2.0337555109089696`, 1.4390484151485563`, 
       0}, {-3.5563127649082165`, 1.4402631576382048`, 
      0.10243989796440275`}, {-4.059238062142024, 2.8792169500772093`, 
      0.17423215818576435`}, {-5.583857988642851, 2.8815866144846716`, 
      0.2390739996711083}, {-6.14996908213371, 
      2.435277977916759, -1.105917758947314}, {-5.7115230378693855`, 
      3.414167177217996, -2.1913748063519316`}, {-4.187298737350634, 
      3.4554526180681515`, -2.2522993012774557`}, {-3.656536523553129, 
      2.0747133065016543`, -2.6271678461030334`}}, 0.04]}},
  Axes->False,
  Boxed->False,
  ImageSize->{391.32315307428496`, 290.0755416711859},
  ViewPoint->{0.817865117396076, 3.2060545483161347`, 0.7087389385155402},
  ViewVertical->{-0.7490797744412057, 1.1504773405592683`, 
   0.03291533446833822}]], "Output",
 CellChangeTimes->{
  3.709462523307476*^9, {3.7094625878306336`*^9, 3.7094626478337746`*^9}, {
   3.7094627349836473`*^9, 3.7094627537769947`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "adjacency", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"10", ",", "0.1", ",", "5.0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "True"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.698080062339603*^9, 3.6980801360647244`*^9}, {
  3.70946255357071*^9, 3.70946255963478*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{10, 1}, {10, 6}, {5, 6}}],
     "Triangle"]}, 
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{8, 3}, {8, 7}, {4, 7}}],
     "Triangle"]}, 
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{7, 4}, {7, 8}, {3, 8}}],
     "Triangle"]}, 
   {RGBColor[1, 0, 0], Opacity[0.2], 
    TagBox[PolygonBox[{{6, 5}, {6, 10}, {1, 10}}],
     "Triangle"]}, 
   {PointSize[Medium], 
    PointBox[{{2, 10}, {3, 10}, {4, 10}, {5, 10}, {6, 10}, {3, 9}, {4, 9}, {5,
      9}, {6, 9}, {4, 8}, {5, 8}, {6, 8}, {7, 8}, {5, 7}, {6, 7}, {7, 7}, {8, 
     7}, {6, 6}, {7, 6}, {8, 6}, {9, 6}, {10, 6}, {7, 5}, {8, 5}, {9, 5}, {10,
      5}, {8, 4}, {9, 4}, {10, 4}, {9, 3}, {10, 3}, {10, 2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[{{1, 10}, {10, 1}}]}},
  Axes->True,
  AxesOrigin->{1, 1},
  GridLines->Automatic,
  Ticks->{Automatic, {{1, 
      FormBox["10", TraditionalForm]}, {2, 
      FormBox["9", TraditionalForm]}, {3, 
      FormBox["8", TraditionalForm]}, {4, 
      FormBox["7", TraditionalForm]}, {5, 
      FormBox["6", TraditionalForm]}, {6, 
      FormBox["5", TraditionalForm]}, {7, 
      FormBox["4", TraditionalForm]}, {8, 
      FormBox["3", TraditionalForm]}, {9, 
      FormBox["2", TraditionalForm]}, {10, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.7094625237932034`*^9, 3.7094625604826636`*^9, 
  3.7094626809904127`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2) Check Solution and Standard Solvers", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution Analysis \n",
 StyleBox["DGRelativeResidue,", "Text",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" DGRMSD", "Item",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", DGLDME", "Item",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.698080472408944*^9, 3.6980804768391886`*^9}, {
   3.6980819993394966`*^9, 3.6980819997147427`*^9}, {3.69808505769368*^9, 
   3.698085064416663*^9}, {3.6980850988719807`*^9, 3.6980851081311226`*^9}, 
   3.7003143420681887`*^9, {3.700316618932584*^9, 3.7003166283211555`*^9}, {
   3.7094671877906017`*^9, 3.709467203225402*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.6980817616089787`*^9, 3.6980817644118385`*^9}, {
  3.698081995870195*^9, 3.698081997682396*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGRelativeResidue", ",", "DGRMSD", ",", "DGLDME"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", 
      RowBox[{"verbose_:", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "k", ",", "lij", ",", "uij", ",", " ", "dij", ",", 
        "numberOfEdges", ",", "E", ",", "error"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", 
         RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numberOfEdges", "=", 
        RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numberOfEdges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "numberOfEdges"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"j", "=", 
             RowBox[{
              RowBox[{"E", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"error", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"lij", "-", "dij"}]}], "}"}], "]"}], "/", "lij"}], 
             ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"dij", "-", "uij"}]}], "}"}], "]"}], "/", "uij"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"Solution\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"Quality\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of nodes      : \>\"", ",", 
            RowBox[{"Length", "[", "X", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of edges      : \>\"", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Relative error bounds: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "error", "]"}], ",", 
              RowBox[{"Max", "[", "error", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Mean relative error  : \>\"", ",", 
            RowBox[{"Mean", "[", "error", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "error", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculates", " ", "the", " ", "relative", " ", "residue", " ", "of", 
      " ", "the", " ", 
      StyleBox[
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}],
       FontSlant->"Italic"], " ", "considering", " ", "only", " ", "the", " ", 
      RowBox[{"nodes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eij", ",", "j", ",", "k", ",", "V", ",", "Xi", ",", "Xj", ",", "Dij", 
        ",", "Lij", ",", "Uij", ",", "errorDij", ",", "nid"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"current", " ", "position"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Xi", "=", 
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "indentifies", " ", "which", " ", "nodes", " ", "has", " ", "been", 
         " ", "already", " ", "fixed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nid", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "i"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "i"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nid", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", "k"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "considering", " ", "only", " ", "the", " ", "precedent", " ", 
         "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"V", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"nid", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<V=\>\"", ",", "V"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"errorDij", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "V", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"neighbor", " ", "index"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "=", 
           RowBox[{"V", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"neighbor", " ", "coordinate"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Xj", "=", 
           RowBox[{"X", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"actual", " ", "distance"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Dij", "=", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"Xi", ",", "Xj"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"distance", " ", "bounds"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Lij", ",", "Uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"error", " ", "Dij"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"eij", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Lij", "-", "Dij"}], ")"}], "/", "Lij"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dij", "-", "Uij"}], ")"}], "/", "Uij"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "error"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eij", ">", "errorDij"}], ",", 
            RowBox[{"errorDij", "=", "eij"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "errorDij", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGLDME", "[", 
     RowBox[{"G_", ",", "X_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "E", ",", 
        RowBox[{"ldme", "=", "0"}], ",", "lij", ",", "uij", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lij", ",", "uij"}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", 
              RowBox[{"X", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ldme", "+=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lij", "-", "dij"}], ",", 
              RowBox[{"dij", "-", "uij"}], ",", "0"}], "]"}], "^", 
            "2"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"ldme", "/", 
          RowBox[{"Length", "[", "E", "]"}]}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRMSD", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xc", ",", "yc", ",", "x", ",", "y", ",", "U", ",", "D", ",", "V", ",", 
      "rmsd"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"calculating", " ", "centers"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xc", "=", 
      RowBox[{"Mean", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yc", "=", 
      RowBox[{"Mean", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "translation", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "xc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "yc"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "svd", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "D", ",", "V"}], "}"}], "=", 
      RowBox[{"SingularValueDecomposition", "[", "V", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"N", "[", 
       RowBox[{"U", ".", 
        RowBox[{"Transpose", "[", "V", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"x", ".", "V"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rmsd", "=", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"x", "-", "y"}], ",", "\"\<Frobenius\>\""}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"rmsd", ",", "V", ",", 
        RowBox[{"N", "[", "x", "]"}], ",", 
        RowBox[{"N", "[", "y", "]"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.694502972960245*^9, {3.698067367481141*^9, 3.698067395833313*^9}, {
   3.698067426273737*^9, 3.6980674351745768`*^9}, {3.698067476857498*^9, 
   3.698067483945337*^9}, {3.698072477617757*^9, 3.6980724776993113`*^9}, {
   3.698080496562684*^9, 3.698080532662128*^9}, {3.6980805663762627`*^9, 
   3.6980805821927524`*^9}, {3.6980806901517887`*^9, 3.698080796669462*^9}, {
   3.6980808393943543`*^9, 3.698080998395549*^9}, {3.6980810288677597`*^9, 
   3.698081062766244*^9}, {3.6980810944827795`*^9, 3.6980812551239653`*^9}, {
   3.6980812941803694`*^9, 3.698081718035078*^9}, 3.698081759366491*^9, {
   3.6980821303298736`*^9, 3.698082131928934*^9}, {3.6980823171869106`*^9, 
   3.6980823242021375`*^9}, {3.6980824851120887`*^9, 3.6980824974522734`*^9}, 
   3.6980826051157875`*^9, {3.698082694063882*^9, 3.698083018317852*^9}, {
   3.698083054638441*^9, 3.698083067468951*^9}, {3.698083643291038*^9, 
   3.698083685250867*^9}, {3.698084961578022*^9, 3.6980849783856697`*^9}, {
   3.6980850110823555`*^9, 3.6980850259131927`*^9}, {3.6980850881383624`*^9, 
   3.6980851960959663`*^9}, 3.698085227318336*^9, {3.698085299672714*^9, 
   3.69808532412243*^9}, {3.6982596118859816`*^9, 3.6982596174341617`*^9}, {
   3.7003143019857407`*^9, 3.7003143249318533`*^9}, 3.7093889810015297`*^9, {
   3.709389028227051*^9, 3.7093890622281184`*^9}, {3.7094675057193584`*^9, 
   3.7094675153799567`*^9}, {3.709467567246298*^9, 3.709467591506498*^9}, {
   3.7094676322869787`*^9, 3.709467636493117*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.679350148964155*^9, 3.679350152549901*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "relative", " ", "error"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGRelativeResidue", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
     RowBox[{"x", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "]"}]}], ",", "True"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6980818764703417`*^9, 3.698081886967304*^9}, {
   3.698081945433242*^9, 3.698081988827022*^9}, 3.698082060929844*^9, {
   3.6980820951910677`*^9, 3.6980820983881884`*^9}, {3.6980821446609993`*^9, 
   3.6980822671425567`*^9}, {3.6980825518738685`*^9, 3.698082555863014*^9}, {
   3.6980830370027437`*^9, 3.6980830414366865`*^9}, {3.6980830871540065`*^9, 
   3.6980830909235086`*^9}, {3.69808533986487*^9, 3.698085364223053*^9}, 
   3.698085405098055*^9, {3.6980854633787403`*^9, 3.698085468666749*^9}, {
   3.700314324969633*^9, 3.700314324969633*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583315468*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583331479*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583351993*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}],
  SequenceForm["Relative error bounds: ", {0., 0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583372507*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Mean relative error  : ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.7094675833935223`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.709389220467783*^9, 3.7094675834145346`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*\\nStyleBox[\\\"Solution\\\",\\nFontSlant->\\\"\
Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\",\\nFontVariations->{\\\"Underline\\\"->True}\
]\\)\\!\\(\\*\\nStyleBox[\\\"Quality\\\",\\nFontSlant->\\\"Italic\\\",\\\
nFontVariations->{\\\"Underline\\\"->True}]\\)\"\>"], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583428043*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of nodes      : \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Number of nodes      : ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583441553*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of edges      : \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Number of edges      : ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.7094675834630675`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative error bounds: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.0003123555748908001`", ",", "0.06248323019324786`"}], "}"}]}],
  SequenceForm[
  "Relative error bounds: ", {0.0003123555748908001, 0.06248323019324786}],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.709467583484581*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean relative error  : \"\>", "\[InvisibleSpace]", 
   "0.024024259009554384`"}],
  SequenceForm["Mean relative error  : ", 0.024024259009554384`],
  Editable->False]], "Print",
 CellChangeTimes->{3.709389220436531*^9, 3.7094675835045943`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.013426200848620673`", ",", "0.006841068406823414`", ",", 
   "0.013299300415732148`", ",", "0.05956154273822229`", ",", 
   "0.0003123555748908001`", ",", "0.00031480870187348704`", ",", 
   "0.014647140835572555`", ",", "0.019991494719866675`", ",", 
   "0.06248323019324786`", ",", "0.04936544766069395`"}], "}"}]], "Output",
 CellChangeTimes->{3.709389220467783*^9, 3.709467583525609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"DGRMSD", ":", " ", 
    RowBox[{"X", " ", "\[Equal]", " ", "Y"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "X", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "Y", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmsd", ",", "Q", ",", "x", ",", "y"}], "}"}], "=", 
     RowBox[{"DGRMSD", "[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"rmsd", ",", 
     RowBox[{"MatrixForm", "[", "Q", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.698085535985145*^9, 3.6980855913598733`*^9}, {
  3.709388798861831*^9, 3.7093888081147995`*^9}, {3.7093889765170937`*^9, 
  3.7093889776860886`*^9}, {3.709389142735469*^9, 3.709389153618148*^9}, {
  3.709467661313006*^9, 3.709467697074379*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "0"},
       {"1", "1", "0"},
       {"1", "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "1"},
       {"0", "1", "1"},
       {
        RowBox[{"-", "1"}], "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.709467720108614*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6212677718685768`*^-15", ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "7.216449660063518`*^-16"}], 
        RowBox[{"-", "6.661338147750939`*^-16"}], "1.0000000000000007`"},
       {
        RowBox[{"-", "7.216449660063518`*^-16"}], "0.9999999999999984`", 
        "7.771561172376096`*^-16"},
       {
        RowBox[{"-", "1.0000000000000007`"}], 
        RowBox[{"-", "6.661338147750939`*^-16"}], "7.216449660063518`*^-16"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.25000000000000105`", 
        RowBox[{"-", "0.49999999999999856`"}], 
        RowBox[{"-", "0.7500000000000011`"}]},
       {"0.25000000000000033`", 
        RowBox[{"-", "0.4999999999999992`"}], "0.2499999999999996`"},
       {"0.2499999999999996`", "0.4999999999999992`", "0.2500000000000004`"},
       {
        RowBox[{"-", "0.750000000000001`"}], "0.49999999999999856`", 
        "0.2500000000000011`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.25`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.75`"}]},
       {"0.25`", 
        RowBox[{"-", "0.5`"}], "0.25`"},
       {"0.25`", "0.5`", "0.25`"},
       {
        RowBox[{"-", "0.75`"}], "0.5`", "0.25`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.709467720169153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"DGRMSD", ":", " ", 
    RowBox[{"X", " ", "\[NotEqual]", " ", "Y"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1.5"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "X", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "Y", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmsd", ",", "Q", ",", "x", ",", "y"}], "}"}], "=", 
     RowBox[{"DGRMSD", "[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"rmsd", ",", 
     RowBox[{"MatrixForm", "[", "Q", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "x", "]"}], ",", 
     RowBox[{"MatrixForm", "[", "y", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7094677389584646`*^9, 3.709467744093162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "0"},
       {"1", "1", "0"},
       {"1", "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "1"},
       {"0", "1", "1"},
       {
        RowBox[{"-", "1"}], "1", "1.5`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7094677157462845`*^9, 3.709467746227599*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.14583412818890978`", ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.2361385158889105`", 
        RowBox[{"-", "0.043462851429882265`"}], "0.9707469195724322`"},
       {
        RowBox[{"-", "0.0635577689365334`"}], "0.9961691585328074`", 
        "0.060061781490799604`"},
       {
        RowBox[{"-", "0.969638598304334`"}], 
        RowBox[{"-", "0.07588140835291768`"}], "0.23247150480173873`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.09708464712766732`", 
        RowBox[{"-", "0.44651708860576256`"}], 
        RowBox[{"-", "0.8162089566251587`"}]},
       {"0.33322316301657784`", 
        RowBox[{"-", "0.4899799400356448`"}], "0.15453796294727357`"},
       {"0.2696653940800444`", "0.5061892184971626`", "0.21459974443807317`"},
       {
        RowBox[{"-", "0.6999732042242895`"}], "0.4303078101442449`", 
        "0.4470712492398119`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.25`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.875`"}]},
       {"0.25`", 
        RowBox[{"-", "0.5`"}], "0.125`"},
       {"0.25`", "0.5`", "0.125`"},
       {
        RowBox[{"-", "0.75`"}], "0.5`", "0.625`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7094677157462845`*^9, 3.7094677462588525`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General Methods\n",
 StyleBox["DGNSolve, DGAllEdgesSolver, DGOptSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6944402487750998`*^9, 3.694440261776547*^9}, {
   3.6950520111428094`*^9, 3.695052013723016*^9}, {3.6980831506880984`*^9, 
   3.6980831767769136`*^9}, {3.698133371312555*^9, 3.6981333836562414`*^9}, {
   3.698135930449641*^9, 3.698135948486604*^9}, 3.700322100281624*^9}],

Cell[CellGroupData[{

Cell["DGNSolve - Nonlinear equations", "Section",
 CellChangeTimes->{{3.695980774599187*^9, 3.6959807890422645`*^9}, {
   3.698083438792361*^9, 3.6980834456569133`*^9}, 3.6981342346777525`*^9}],

Cell[CellGroupData[{

Cell["Main concepts", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}, 
   3.7094665937853384`*^9}],

Cell[CellGroupData[{

Cell["Formulation", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094667051407757`*^9, 
  3.7094667208634553`*^9}, {3.709469242957382*^9, 3.7094692452832413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Determine", " ", 
   SubscriptBox["x", "1"]}], ",", 
  SubscriptBox["x", "2"], ",", "...", ",", 
  RowBox[{
   SubscriptBox["x", "n"], " ", "\[Element]", 
   RowBox[{
    SuperscriptBox["\[DoubleStruckCapitalR]", "3"], " ", "such", " ", 
    "that"}]}]}], "\[IndentingNewLine]", 
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"||", 
         RowBox[{
          SubscriptBox["x", "1"], "-", 
          SubscriptBox["x", "2"]}], "||"}], 
        RowBox[{"=", 
         SubscriptBox["d", "12"]}]},
       {
        RowBox[{"||", 
         RowBox[{
          SubscriptBox["x", "1"], "-", 
          SubscriptBox["x", "3"]}], "||"}], 
        RowBox[{"=", 
         SubscriptBox["d", "13"]}]},
       {"...", " "},
       {
        RowBox[{"||", 
         RowBox[{
          SubscriptBox["x", "i"], "-", 
          SubscriptBox["x", "j"]}], "||"}], 
        RowBox[{"=", 
         SubscriptBox["d", "ij"]}]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{"(*", 
  RowBox[{
  ")", " ", "All", " ", "constraints", " ", "must", " ", "be", " ", 
   "equalities", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["d", "ij"], " ", "is", " ", "exact"}], ")"}], 
    "."}]}]}]}], "Text",
 CellChangeTimes->{{3.709469382050675*^9, 3.709469599132248*^9}, {
  3.709469785822062*^9, 3.709469803624137*^9}, {3.7094699947486534`*^9, 
  3.7094700397214284`*^9}, {3.709470894555976*^9, 3.7094709453967333`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear approximations (Newton method)", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094667051407757`*^9, 
  3.7094667208634553`*^9}}],

Cell[TextData[Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3W+MHPWd5/Hauyf3YB6cHyBhKVY4WZYcCQVZo5HOCJ08irCSGFFoT8g6
ElljNFmMyMY4vraxxJhocZFcBpG154IJ2REpi6wddktwOFGms5497LRsLsyq
bdkWahYbmYZJPKYN1tg9Znrcfb+ZMkVNVXV1/euuf+/XA2R6enp+iAmffH/1
+32//+XR7X/9N/9BkqSd/0n85a+37h784Q+37vnv/1n8zcM/2Pn4Yz/43vC3
fvA/v/fY9374Xx/9j+LF//tXkrRbvH/xzy0AANBGqVSSTAYGBuJeEQAAGTE2
NmYOWfG3ca8IAICMEKWrOWTL5XLcKwIAIAtEpErL1ev1uBcFAEAWqKpqTlhF
UeJeEQAAGSHLsjlki8Vi3CsCACALqtWqZa+4VqvFvSgAALJA1K3mhB0eHo57
RQAAZIRIVXPIqqoa94oAAMiCWq1m2SuuVqtxLwoAgCyw7BXLshz3igAAyAhF
UdgrBgAgcvV63bJXTKMnAAAiwVAAAAC6xLJXzFAAAACiwlAAAAC6gaEAAAB0
iWWALEMBAACIimWvuFQqxb0ioKf03/y4VwEgg9grBghZAF3CXjFAyALoEvaK
AUIWQDdUKhXLXjEDZJFDhCyAblBV1ZywDJBFPhGyALpBlmVzyBaLxbhXBMSA
kAUQuWq1yl4x0CJkAXQBe8WAjpAFEDn2igEdIQsgWuwVAwZCFkC02CsGDIQs
gGixVwwYCFkAEWKvGDAjZAFEiL1iwIyQBRAh9ooBM0IWQFToVwxYELIAomKZ
bcdeMUDIAoiKZbYde8UAIQsgEuVymb1iwIKQBRAJy16xoihxrwiIHyELIBKW
veJSqRT3ipBb81fPvfn83h/9dPRH24eePHD8o0Z8SyFkAYRn3yuu1+txLwr5
1Jg5rgyuf3pi+mbr1nuHHrpLWrFzoraw/C1/eefVf/zjFc/Z25w59cqviheu
Nf2vhpAFEB57xUiI5vSbj6+5Z9vRjxYDsVn9/Y771z/+zxfmjXhsNq7+2/hT
L0xcuu4vMRvVY8/tPXDyY79FMSELICRRtFrKWPaKEY/m5cnd90p3P3fqhmOE
NhvTf9grbz9y4UaQD29cOrrj8QOnP/WVzoQsgJBEpJoTdmBggL1ixKL5sbZ1
hbRq5MR1x6/Onn5p88YdEx8H2PW9/Qm1Y7vvfcJXRhOyAEJSFMUcsmNjY3Gv
CPk0Vxl/WJLu2T7xF4cvNmvvjMort2rBI3bRjcr4Iyse/MW5Oa+fQsgCCMO+
V1wul+NeFHLp1rvjG1dK0sPjlTnb15rzlXG5b92TE38OlbGLG9JHt61YO3Tk
fY8PZwlZAGEUi0XLXnHcK0LOND+a2Du8ZcuW727q7xO/gn39m767ZYkyMW0k
4ScnRu6TVu6ZvHbL9v235q5UTh19ZXTXlg2r7xpU/nj1dgzfnD7+822Da1dv
Hj9vrlubl7ShNe0f+1oRsgDCGB4eZq8YCbAwc/RvRciu2D5hbzS2VH5Kknzo
okMwNj6brs7M3rxx7mV58fv1+z43p4+98OTuke2b1vat//HJZdGsb0r375q8
4mVZhCyAwGq1mmWvuFqtxr0o5NNnp/bdJ0krN46/aytWb12b3LNSku7ad+qm
ywc0//2QvEqS1o+cqM2/f2TP/56aXUzkhUbDEszN6yeeEe9rd7zKgpAFEJim
aeaElWU57hUhr0wRafvajfMH5Tb56/S2n7+m/t1r78+33Q1eOL1/nfh13zhe
cf04HSELIDDLiHZVVeNeEfLq2uQuUaz2/e3RmQXb165M7uqXpNVbtA9dP+J2
iSr1bT54btbtjdPaFvG2u5RTNzs/liVkAQRTrVYte8WM3UFcFs4fvE/8Ct53
8Lw9Y1sfaltWewjZVnNaG+oTbxydcj86rIes9Jg23fmIMSELIBhGtCMxbp96
avOc1GvItm6e2neX+F3eeuTDebe3EbIAuo8R7UgM/dTTmiHtktMG7l8mtt/j
IWRvvH/o++v7V3U+OUzIAugyxu4gQW6fepIPnndseDg7Nbqh08Gn5vz7h3e+
8Md3/3lbn7TivoNnHXadjbd+eGSz5GFXeQkhCyAASytFxu4gTvqpJ+deEy1j
M9ktFefOvLTj5dOzC7cq4xsl40Zts/HnCx/MWvO2MTW6WpL6hrRpD+0oCFkA
fjF2B4ly+9TT5iMftkm929G5RZte9nJj9sons41mq3nl5POjr19aasZ4853R
e0Qtu/3o5UZr7t3XXn7rsvUzF2oTO1d0vhB0GyELwC9aKSJJ9ELVdY9Xn96+
6pkTpimyty4ceqivb/Wm7488+eToyStffEG/77NqcNf+F5WXT8zYa99rU6P3
S33fPXTBrbOFgZAF4BetFJEk+qmn+0enrrV/z0Jt8um10qb9p7+8ANu8+v9e
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
QHVb
     "], {{0, 447}, {631, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{379.9285714285716, Automatic},
   ImageSizeRaw->{631, 447},
   PlotRange->{{0, 631}, {0, 447}}], "        "}]], "Input"]], "Text",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}, {
  3.7094656242324886`*^9, 3.709465663918378*^9}, {3.7094663943305817`*^9, 
  3.709466395487277*^9}, {3.709466472568847*^9, 3.7094665662751102`*^9}, {
  3.7094666178470945`*^9, 3.709466636417967*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sensibility to initial points", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094666574343987`*^9, 
  3.70946666261091*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
gtdY/YVU/xA/q9V9nH/tcHgcmsjOb6zNVydvuo2e28uyM8Twi/KOWD0VlM33
z59UzwnnSyXeru6udur6s9AbmLt+rf1Uf6KfJUdHoEnt+fZaFjRZ7DZ6eq/J
zijDv7jVCKu30uL5/vtX1UPL5WqJt6ubXk6o9TmqPEWVjdV9qK/1RmeeNez5
MtsXN5nrV/2jJjszDX9325vVWq+P3gkeTaPL+YLpd6y1tyNqPe+dt3H/+t0V
qm5+eM5Zz24vtmOhk+luo+f5UuwMt8dTofO1i0Zla7YLMCfLZt2x1vbaPWnW
3Tt801e9B/w++GwdqJq/5xFFT166jZ7q6/Ax5J7+buv0vIJZfH79zfneLsac
rFwWYCrup91TV3mKO9ur9VDfR579bP3O+1Y8meg2erYvws5wezDVWl1K48yK
FjfjR9MAs7ts1u1a7O2Ius+e8iqqXPz2w0r7HB5gHmvr99++1slct9ETfgV2
ZtpTaRIYUq5JSRR3Ikfr6LK7Zll6aTFnjmh6o+L3lvKr2zscnlj4ZdPP0abK
yTtuo+f89OyMskfSI8bcub44afz+YaPE8rlscXppN2SOaHSXRo9cvOGvn46O
KNy13ddpeaLIMrfR035udobY8xg5uxOvL8sYn79qEVc+18y6xXv9NfaIuovn
vrHExUv3MzyW8NJGH6vLoSKz3EbP/InZmV0Po35LKxvH5z+ptWb1lPK5Zu76
LbaUe99ae0hZpOx2RZ9+eA5hgdU/X/ejRV76VeHIZmdkPYkmzaxg+qcP+vt7
SAkMuaFil9ytDhksR9xfreLzZr7M4amDVaz4NQedLvLcbXQEmI+dYfUYWrWx
grl/eX3WmuepoEWu2CmjGlvtadn+W7z8z58k33d4zGB1/66XCuuMPWPkp9vo
IDAZO8P2GTRsYAVzP+X6xGVTUsHlNbnRYqeMmr2r1t7cTyLpq6XdcXi0YGv/
rp1bKww/YOSb2+g4MBM7w+QBtG1djXJLymWJqeDystx0URxI1hsjKaQvlXCv
4VmCnb3z3Zc7b1zDbXQomIadebI6zZtWo+hyeVlWKji/ODdglAWShQfIEVkr
XC0+PDxwoMU1sO6p49Ruo6PBHOxMlaWJ2K6qpKzq+ykLYDJbrU9w/NKGpwXG
sawkHDyGdBsdECbgUZktaKNK76CdM1vu9QJbrfd/8LqGJwTGtKA8HD+GdBsd
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
AABQjL+5AQAABOcfge3/B5aY+MY=
    "], {{0, 744}, {828, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{351.3333333333325, Automatic},
  ImageSizeRaw->{828, 744},
  PlotRange->{{0, 828}, {0, 744}}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzsfXd8VcXW9qRDaNJR6d2C2NtVLKiAYkFEpAmCIqiIIKJXpKWQhFSSkNC7
FAUUpPcaOgm9995DDyFhfeuZtveJXDl5v/t+f33ht0/InNmzn1l9Tdvvftaj
0xddPuvRucNnlRt0/+y7Tp07fF/5ra7ducjPRwifiXz1qizwfxLCfvgd+Oij
jy6UKFEClyB8jsOHz4UHHnjAJ3bSpElcze9aoUKF6IUXXqB///vfgvA5Fh8+
1LNnTx8qUqSIz4gOHTqg5sXixYtTaGgo8Y/AB43Dhw9VrlzZZ8iXX35pK/H9
TqWxqtKtW7d8qGLFiv+/5v9lTeFHLVq0oOeee4527NghvpNl/rRixQqaMGEC
TZ48mdasWfNwftpjBkJmcJ/oKssCKTc3l1577TV6/vnn6aGHHiI/Pz8aPnz4
Q/lp95FHHpHtrl+/3qPdY8eOySrnzp2jMmXK4L58tfvwww/bdrvrMv4/FStW
jHbv3i28auyW/CxIGzdupNjYWGrYsCHNmjWLVq1aJZ/zxBNP2If4y7rBEvzq
1avpu+++k/WHDBki61+7dk12Ct+dOHHCVN+wYQMtX76cGjduDHWSVVHlzp07
tGXLFvn/K1eu+Gok27dvl0Wo9vvvv8sntG7d2t52+fJlEaDJePr0aVm2dOlS
atasmaz7888/+6IyUwNfARQqB+nm8bdpHhdXl7eh8/gbHQ3Ud2zevFmWtWzZ
UtaZNm2avHfv3r0agh/t2rVLlp09e1aXFaS1a9dSv3795D0LFy6kdevWSWKi
PdS9efOmrlsA7JHP6NSpEz355JOSq7gf9VgyFFUKSWKlpaXR3LlzZbMffPAB
LVmyxDZ96tQpeUtWVpbmkx+IKstGjx4tfHEXl0E5UMaPFUW9EZAsl7YZq+on
P/3p888/p7p16xoB8XM9t02bNrqS+gR3vv32W1k1MjLSVAWDTaumalhYGL34
4ouynLvsq6s+9dRTtmqAhoFq58+f1zXU5xdffGHrBep6kG79o5mryvLWi4qK
otu3b8sa5rkjRozIA9FPqtiBAwc8nvvOO+/IemPHjrVlLKvUqFEjj+6BCuXK
lZN19+/fb5j1559/0uOPP+7qnj+aMrAhn4G6ePDgwZSQkCBbOHLkiGkhPj7+
b0Dfe+89unHjhqxR2Bt239A0ysnJsc+47777JJQ//vjDl6ZPn86t16hRwzzL
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
Zs2X/rFp06Z0/P+0d66hVlZpHN+e+3FsEAcGmmKmkYlyaorudyLLPhQhRFKk
eaiZAh0HNCpnVDx2uthIiIbUYH2woauF2gXHsgHt9qGCQxAEkRNpc7GP1qcY
2PP/Pe/6P/s9J5N3Wx8aaMM+utdea71rPeu5/J/L++7PPosusNah8pMc1T3q
/23Pnj2b78oDN4dDLQvuBNEgMpdFkK+88sr2k08+GQcyXGNXvmducbynveqq
q6JZPNNMzv9eBhqrPvPMM61Fpe2dd96JdchkFHINxKmwr9NPP709ffp0uX8/
hVkssLIYMc3777+fT1Z47733om1gYKC9Y8eOaYVKTz31VDSvWhW/VNvesmVL
pUk2bUrWuu666+TM97a3bdtWHtc3GIfE8/2lioPKjAHNLViwIJ83IX4JvoHl
atTZvHmzxb4ZdV4r88EkMrBBDVHABMIxYL61a9fmkpHUt956C2cg1ZB2Hf10
iEkVcKvV0IMPPlhRZai9YsWKaJKZDapIwENYYbXaTu65557oJlkq7kZfEHDG
jBnRPmvWLNOizilaux/SsGvXrmAuRkhjNHpwssmBymbKhQsXwrSLSjMmDQXG
eiXUfo6K1GX7uOOOa5900klsob9wEr3PPffcON/77rsvFiLd7Od22OKi+s1d
spNxBMIrrc7DJvZFP5xZGcYfFy5BKelYIEQMOeecc9qLFi1qf/DBB8klWkwY
pOHh4Y6p7Q1EyoyS8mbPk36tDAReMVCc3fp9abOBqJRN1Sag9DXFbBZB1nlh
2FnXXXfdlTJ/4MCBUDVYRcFBcxdazZSy8sRTog0tJcThK3NwXEnmqfbU6oXt
vXv3cpC5wuXLl8fwNWvWJKEBLsgZ7aJiI8rsrskPKr6YrEWF2dH8+GhXX311
HBIoBbkA7Egf+5zefffd4F54SxzcW5vUDPT666+bScbHxwMLSK/kk0uqRw+3
0CepgS1ZdeBssjF2uCzy008/DWG57LLLgvqYZy6L/pLm82OrQGEM5TS0dl9l
bGwsmnFjuyIZ/qtlTMbCKkcQw2ojwR1dy6uol972aaedlgrCu7OGnTNnTp4q
6oq2O++8k2Ub7Ztt9W9qtsceeyzaxCwpkWAN2jR1IVh/CDNtyDt4QUQqT0br
Cy/m+OOPj9PW+fkocRqBBt3zVsdyIXWLa4wFIxHd4juiNpzh7t27mdUP3jFi
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
6jTlf6OvsSk=\
\>"]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGNSolve", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNSolve", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "i", ",", "j", ",", "d", ",", "d12", ",", "eqs", ",", "xi", 
       ",", "xj", ",", "x", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "i", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<x\>\"", ",", 
            RowBox[{"ToString", "[", "xi", "]"}], ",", 
            RowBox[{"ToString", "[", "xj", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xj", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "i", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xi", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xj", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"eqs", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xi", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"xj", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], "==", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "some", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"d12", "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"eqs", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "d12"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<eqs=\>\"", ",", 
        RowBox[{"TableForm", "[", "eqs", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Flatten", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"x", "=", 
        RowBox[{"NSolve", "[", 
         RowBox[{"eqs", ",", "x", ",", "Reals"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<x=\>\"", ",", 
        RowBox[{"TableForm", "[", "x", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "convert", " ", "relations", " ", "to", " ", "scalar", " ", "matrix"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", "1"}], ",", 
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959807931988735`*^9, 3.6959808651195087`*^9}, {
   3.695981319470448*^9, 3.6959816654278154`*^9}, {3.695981696802899*^9, 
   3.69598193790523*^9}, {3.6959820413830986`*^9, 3.695982084209268*^9}, {
   3.695982167030732*^9, 3.6959821710191383`*^9}, {3.6959822184038534`*^9, 
   3.695982247628214*^9}, {3.695982304465785*^9, 3.6959823353580503`*^9}, {
   3.695982376103098*^9, 3.6959823800191355`*^9}, {3.695982800673107*^9, 
   3.695982828060028*^9}, {3.6959828702427034`*^9, 3.695982871401049*^9}, {
   3.6959829164454274`*^9, 3.6959830004868164`*^9}, {3.6959888042983994`*^9, 
   3.695988828501298*^9}, {3.695988895041767*^9, 3.695988955372898*^9}, {
   3.6959890712644*^9, 3.695989072049646*^9}, {3.695989103696677*^9, 
   3.6959891990099096`*^9}, {3.695989270528079*^9, 3.695989273022993*^9}, {
   3.6959893888410683`*^9, 3.695989444627164*^9}, {3.695989528041983*^9, 
   3.695989547018861*^9}, {3.695989592844425*^9, 3.6959896880344257`*^9}, {
   3.695989726077453*^9, 3.695989755804819*^9}, {3.695989869082122*^9, 
   3.6959899107177277`*^9}, {3.695989946606575*^9, 3.695989951887924*^9}, {
   3.695989995530915*^9, 3.6959901298385134`*^9}, {3.6959901809553523`*^9, 
   3.695990198460229*^9}, {3.6959902513619356`*^9, 3.695990370372473*^9}, {
   3.6959904207088675`*^9, 3.695990423239892*^9}, {3.6959904662502933`*^9, 
   3.6959905066632338`*^9}, {3.6959905389614973`*^9, 3.695990555189827*^9}, {
   3.695990592406352*^9, 3.6959905969143476`*^9}, {3.695990862448014*^9, 
   3.6959908807504*^9}, {3.696000226158333*^9, 3.6960002763225875`*^9}, 
   3.696000556861759*^9, 3.698072480850925*^9, {3.6980831666521983`*^9, 
   3.6980831691908817`*^9}, {3.6980832306786633`*^9, 3.698083358132863*^9}, {
   3.698083461150189*^9, 3.698083470133647*^9}, {3.698083534682835*^9, 
   3.6980835526362424`*^9}, {3.698083691959817*^9, 3.6980837054017324`*^9}, 
   3.6980838454526196`*^9, {3.6980839403088937`*^9, 3.6980839490326786`*^9}, {
   3.6980843544733815`*^9, 3.698084438317992*^9}, {3.6980845362034473`*^9, 
   3.6980845613631344`*^9}, {3.6980846745877323`*^9, 
   3.6980846848488035`*^9}, {3.698084721247966*^9, 3.698084721453601*^9}, {
   3.698084817232126*^9, 3.6980848637684917`*^9}, {3.6981335546141305`*^9, 
   3.698133654313637*^9}, 3.6981337103556285`*^9, {3.698133846774843*^9, 
   3.6981338552489643`*^9}, {3.698133886967635*^9, 3.698133943451098*^9}, {
   3.698135573538377*^9, 3.698135617321416*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.6981342657108355`*^9, 3.698134272655942*^9}, {
  3.6981343900066195`*^9, 3.6981343928237734`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959821725045357`*^9, 3.6959822057965155`*^9}, {
   3.695982268679414*^9, 3.6959823441443806`*^9}, {3.695982920850732*^9, 
   3.6959829209352903`*^9}, {3.6959889733898363`*^9, 
   3.6959890309626265`*^9}, {3.6959890820892334`*^9, 
   3.6959890852169228`*^9}, {3.6959894614439697`*^9, 
   3.6959894618659773`*^9}, {3.695990141312871*^9, 3.6959901626141343`*^9}, {
   3.6959902092902546`*^9, 3.695990213653076*^9}, {3.6959906056694627`*^9, 
   3.6959907132884865`*^9}, {3.69599074403419*^9, 3.6959908171476326`*^9}, {
   3.695990848691627*^9, 3.695990848783781*^9}, {3.6959909472498837`*^9, 
   3.695990958030756*^9}, {3.6959909990686064`*^9, 3.6959911014281673`*^9}, {
   3.6959913603925343`*^9, 3.695991378520133*^9}, {3.695991433093545*^9, 
   3.6959914428903313`*^9}, 3.695991528666456*^9, {3.69599293111237*^9, 
   3.6959929457414904`*^9}, {3.6959998819368143`*^9, 
   3.6959998966497583`*^9}, {3.6980724808624325`*^9, 3.698072480872939*^9}, {
   3.698083371004901*^9, 3.6980833815779133`*^9}, {3.6980834763637805`*^9, 
   3.6980835167999725`*^9}, {3.698083560105197*^9, 3.698083627113807*^9}, {
   3.698083718150687*^9, 3.698083729336606*^9}, {3.6980837656231737`*^9, 
   3.6980837817648787`*^9}, {3.6980839882216706`*^9, 3.698083993838396*^9}, {
   3.698084540828515*^9, 3.698084565599944*^9}, {3.6980849011127596`*^9, 
   3.6980849128890715`*^9}, {3.698133031309068*^9, 3.698133037710814*^9}, {
   3.698133273852414*^9, 3.6981332754589806`*^9}, 3.6981338077458096`*^9, {
   3.6981339586967115`*^9, 3.6981339613164473`*^9}, 3.6981341845189857`*^9, 
   3.698134282590531*^9, 3.6981347590256243`*^9, 3.6982328270239544`*^9, 
   3.6982330645126257`*^9, 3.6982342865056777`*^9, 3.700314325047763*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"i\"\>",
       HoldForm], 
      TagBox["\<\"j\"\>",
       HoldForm], 
      TagBox["\<\"dij\"\>",
       HoldForm], 
      TagBox["\<\"lij\"\>",
       HoldForm], 
      TagBox["\<\"uij\"\>",
       HoldForm]},
     {
      TagBox["1",
       HoldForm], "1", "2", "1.`", "1.`", "1.`"},
     {
      TagBox["2",
       HoldForm], "1", "3", "1.`", "1.`", "1.`"},
     {
      TagBox["3",
       HoldForm], "2", "3", "1.4142135623730951`", "1.4142135623730951`", 
      "1.4142135623730951`"},
     {
      TagBox["4",
       HoldForm], "2", "5", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{1, 2, 3, 4}, {
      "i", "j", "dij", "lij", "uij"}}]]]], "Print",
 CellChangeTimes->{3.7094667316295476`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"DGNSolve", "[", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {Null, 
         SparseArray[
         Automatic, {5, 5}, 0, {
          1, {{0, 2, 5, 7, 7, 8}, {{2}, {3}, {1}, {3}, {5}, {1}, {2}, {2}}}, 
           Pattern}]}, {
        Properties -> {
          UndirectedEdge[2, 3] -> {
            "DistanceBounds" -> {1.4142135623730951`, 1.4142135623730951`}}, 
           UndirectedEdge[2, 5] -> {"DistanceBounds" -> {1., 1.}}, 
           UndirectedEdge[1, 2] -> {"DistanceBounds" -> {1., 1.}}, 
           UndirectedEdge[1, 3] -> {"DistanceBounds" -> {1., 1.}}}, 
         EdgeWeight -> {1., 1., 1.4142135623730951`, 1.}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.18208563146578038`, -1.0273681161601627`}, {
         1.0975813850373377`, -0.6032010257396354}, {
         0.17999656494199945`, -0.17999656494199945`}, {
         0.1799965649419994, -1.3873612460441616`}, {
         2.212410052795826, -0.603065308253462}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.022873923537282098`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.022873923537282098`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.022873923537282098`]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.022873923537282098`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.022873923537282098`], 
           DiskBox[2, 0.022873923537282098`], 
           DiskBox[3, 0.022873923537282098`], 
           DiskBox[4, 0.022873923537282098`], 
           DiskBox[5, 0.022873923537282098`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{1}, {"x", "y", "z"}}]]]], "Output",
 CellChangeTimes->{3.709466731858241*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.698134374303359*^9, 3.6981343879453526`*^9}, {
  3.6981344825839243`*^9, 3.6981345190736256`*^9}, {3.6981347408180485`*^9, 
  3.6981347432411566`*^9}, {3.6981349406590924`*^9, 3.698134953907379*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6959914809267282`*^9, 3.6959914981254253`*^9}, {
   3.695991562961543*^9, 3.6959916431277523`*^9}, {3.6959920787623296`*^9, 
   3.695992087048052*^9}, {3.696946214015137*^9, 3.69694621608445*^9}, {
   3.6980724808839464`*^9, 3.698072480897456*^9}, {3.698084028617964*^9, 
   3.698084105895296*^9}, {3.6980858921917467`*^9, 3.6980858944297314`*^9}, {
   3.698085934280164*^9, 3.6980859343897343`*^9}, {3.6980859899040556`*^9, 
   3.698086052129326*^9}, {3.6981330460023603`*^9, 3.698133057702621*^9}, 
   3.6981330886126213`*^9, {3.6981331326739793`*^9, 3.6981331488507085`*^9}, {
   3.698133253865158*^9, 3.698133296529955*^9}, {3.698133447048286*^9, 
   3.6981334486803684`*^9}, {3.698133997471426*^9, 3.698133999296138*^9}, {
   3.6981342041044755`*^9, 3.698134209840279*^9}, {3.6981343631304502`*^9, 
   3.6981343650707364`*^9}, {3.698134496173938*^9, 3.6981345005568447`*^9}, {
   3.6981345313367596`*^9, 3.6981345910158415`*^9}, 3.6981346249008155`*^9, 
   3.698134701853427*^9, {3.6981348637946124`*^9, 3.6981349007781425`*^9}, 
   3.698232827103007*^9, 3.698233064531138*^9, 3.6982342865161858`*^9, 
   3.7003143251011763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981347628831825`*^9, 3.698134786324731*^9}, 
   3.698134823515397*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"x", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981348054584217`*^9, 3.698134807957579*^9}, 
   3.698232827128024*^9, 3.69823306454965*^9, 3.6982342865201874`*^9, 
   3.7003143251480494`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 5 points and all constraints (failed)", "Subsubsection",
 CellChangeTimes->{{3.6981343377716303`*^9, 3.6981343538603*^9}, {
  3.6981344661054945`*^9, 3.698134480170825*^9}, {3.698134734934148*^9, 
  3.6981347357797074`*^9}, {3.6981350119238586`*^9, 3.6981350132437344`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGNSolve", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698134194580659*^9, 3.6981342001503525`*^9}, {
   3.698134310771722*^9, 3.698134331373887*^9}, {3.6981350004322367`*^9, 
   3.6981350190771027`*^9}, 3.698232827151539*^9, 3.6982330645676622`*^9, 
   3.698234286524191*^9, 3.7003143251858363`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGOptSolver - Optimization", "Section",
 CellChangeTimes->{{3.6981358277685385`*^9, 3.698135859657689*^9}}],

Cell[CellGroupData[{

Cell["Main concepts", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}, 
   3.7094665937853384`*^9}],

Cell[CellGroupData[{

Cell["Formulation", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094667051407757`*^9, 
  3.7094667208634553`*^9}, {3.709469242957382*^9, 3.7094692452832413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderscriptBox["min", "x"], "  ", "f", 
   RowBox[{"(", "x", ")"}]}], "\[Congruent]", 
  RowBox[{
   UnderscriptBox["\[Sum]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"i", ",", "j"}], ")"}], "\[Element]", "E"}]], 
   RowBox[{"max", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["l", "ij"], "-"}], "||", 
       RowBox[{
        SubscriptBox["x", "i"], "-", 
        SubscriptBox["x", "j"]}], "||"}], ",", 
      RowBox[{"||", 
       RowBox[{
        SubscriptBox["x", "i"], "-", 
        SubscriptBox["x", "j"]}], "||", 
       RowBox[{"-", 
        SubscriptBox["u", "ij"]}]}], ",", "0"}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdYFNm2tglmx6wzzjg6psEwY8KsKCIqF0VHkhgBEcEIqCAmFBAQBQzn
GEEFA5gTiiKgYEAUzAFEooJKDpKT/N+h7t+HC4pQNF0d1vvMM490V+9aFfZe
767atauHgamGkYyUlNSaZvifxkJLpdWrF67XbIs/tE3WLDU2WWyoamK+2Hjx
6lEGsvgwXFpKKgbL/+ff5QRBEARBEEKDFEEQBEEQBHdUNxNOjIggCIIgCAmH
tIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGB
tIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGB
Ey3Jz88/deqUlpbW4MGDe/XqNXz48K1btyYnJ/MWePLkyZo1awIDA+uzlg8f
Ppw8efLAgQM5OTn1jZggCIIgiIZHwFpSVlb25s2bhQsXGhgYHDt27N69e+7u
7urq6v3797e0tMS3eXl527dvNzY2hlF8+vSpPusqLCwMCQnZsGGDkZHRnTt3
+LUJBEEQBEE0EILUkoKCgocPH6qpqSkrK589exbWUVJScuXKlXHjxjVq1Ehe
Xv7p06erV6/W09M7c+ZMQkICvq3nGjMzMwMDA9etWzdt2jQvL6/6F0gQBEEQ
RMMhMC3Jz8+Hk2hra7dr187d3R3CwHx++fLlsWPHtmjRYtCgQYsWLVJUVLxw
4UJ2djYf1xsaGrp48eIxY8YcOXIE6/369Su/CicIgiAIgo8IRktKS0sjIiKW
Ll3arFkzDQ2Nym6Az3ft2qWurj548OAePXrs27evqKiIv2svLCwMCwtTUFAY
OHDgiRMn0tPT61lgQUFBXl5eWVkZX8IjCIIgCIJBMFqSnJy8f//+9u3bt23b
9tatW1VupsTExFhbW3ft2lVbWxvpnu9rL68wk/Pnz3fq1GnkyJHXrl378uVL
fUqLi4t78eJFWloav8IjCIIgCKJcIFoCCfHz81NUVGzSpMmQIUNKS0srfwtD
OHLkSK9evfr06RMUFMTfVVemrKwM2tOyZUsdHZ2QkJD6jDPx9fXduXPn3bt3
+RgeQRAEQRAC0JLPnz9bW1vLysq2b9/e0tKy8ldQBRiLqqpqmzZtYAsNPerj
/v373bp1gx0hnoSEBHaFIMhdu3ZNnDjRxcWFv+ERBEEQhIQjAC05c+aMvLw8
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
NWvNmjVZWVlcxyL+pKamHj16VE1N7dixY1zHwiUirSVRUVGoxTY2NhJ4900M
QNfA09MTjd727du5joXgJ6QlLBBOLcnIyNi6dauKioqPjw/dZm1Q8vPzz58/
jz7axo0bS0pKuA6HS0RaS4qLi729vbW1tamvLYrk5eWtX79eS0tLki9XiiWk
JSwQTi0Bt2/fRq6cO3cuvayq4UDPOjAwUF9f39jYWAIfvamCSGsJePHixYYN
G06cOMF1IESdefjwIZTS1NQUfsJ1LAQ/IS1hgdBqSUFBgbu7+9ChQ0+dOsV1
LGJLZGQknGThwoXR0dFcx8I9oq4lOTk5Pj4+KioqXAdC1BlnZ+dZs2YdP36c
60AIPkNawgKh1ZKvX7+i94devIKCAtpbrsMRQ9LT07F7DQwM7t69SwMSykVf
S1Bl3rx5o6mpia4317EQdSAzM3P27NmojOHh4VzHQvAZ0hIWCK2WlFfcb/X2
9h4wYMD+/fu5jkXcKCkp2bx5s66u7qVLl+i6MYOoawlISUlxdXVdvnw514EQ
deDatWtohHfv3k0vNhI/SEtYIMxagt5fTEyMmZnZkCFD0LWnsa985MiRIzNm
zHB3d09NTeU6FmFBDLSkuLj49evXw4YNw2GlK2Cigrm5+dy5c319fbkOhOA/
pCUsEGYtKa+4YBIYGPjnn3/u27dP0l7R0nAEBQWpqqo6OzvHxcWR7PEQAy0p
r3iKzcDA4NSpU3QRTCRISEhQVlbesmULvTtALCEtYYGQa0l5xQyWlpaW8vLy
r169Kioq4joc0aa0tBTNoJaWlqmpaUREhIQ/EVwF8dCSwsJCf39/DQ2N5ORk
ck7hx9PTc9y4cdBIuoMjlpCWsED4taS4uDg8PFxOTs7W1vbz58/U0rKmrKws
JSXFzs5u8uTJT548oSevqyAeWoIKkpeXp6CgEBISQplOyEE/a+7cuQsXLnz8
+DHXsRANAmkJC4RfS8or+vj29vYDBgzw8/OjS9OsyczMPHv27JAhQ65fv04J
qzrioSUMcHhHR8ePHz9yHQhRE2/evOnbt++BAweSk5O5joVoEEhLWCASWlJe
kVJHjx69fPny169f01g+FuTn59++fXvSpElbt26lK07fRJy05O3bt2pqak+e
PJHMty6KCtbW1sOHDw8NDaUqKa6QlrBAVLQEnDhxon///u7u7tnZ2VzHImJA
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
rl275OTkjh07JqK5Jjk5ecqUKVOnTr158yb+zM3NRROnqKiI40Uv4+M7ixcv
lhAtAba2tqgdNDCp4cjIyFBTU5s1axYaIvEY5EawgLSEBeKqJeUV7xeOjo42
NzeXl5cPCAgQxQ4LsiS0atCgQWfPnsXmPHjwwMDAwMTERBIefxY8jJZIyBiA
58+f6+vr3759mzJmQ4AexPXr13/55RdfX19Rv49M1AfSEhaIsZaUV5hJeHj4
tGnTNDU1Hz58KFqXrBE8ulpt2rTp2rXr4cOHX716tWnTpvnz5yOhcB2aeGJk
ZOTp6SkhWoLNXL58uYeHR3JyMtexiCFxcXELFy6cOHFiVlYWXdWUZEhLWCDe
WlJeMb9HQEDAqFGjVq1a9ezZMxG6RP/69Ws5OTlZWdnWrVuvXr3ayclp3rx5
ly5d4jouscXY2BhaIlruWh/OnTtnbW19//59rgMRN3Jycry9vfv164fTiS5G
STikJSwQey1hcHV1HT169JYtW8LDw0Xl6RVE27lzZxkZmUaNGg0ePFhDQ2Pd
unVv3rx5+fLlw4cP7969GxoampKSIiqbI/wsWbIEeURyLrl//vzZzMzMw8ND
cjZZAHz9+hWVdPny5ePHj6fXeROkJSyQEC0pLS21t7cfM2aMnZ1dXFyckHdh
0LLl5eX17du3cePGUhU0a9ZMQUHB0tJyxYoVmpqaI0eOxJ9Lly4NCQkRxTEz
wgn2p0RpCXB2dnZycoqIiOA6EPEhNzf31KlTw4cPR1eI61gI7iEtYYGEaEl5
xc30TZs2jRo1CmaSmpoqzDd8i4uLg4KCWrVqJS0tzWgJ/KRFixYtW7Zs2rSp
rKxsmzZtbG1t09LShHkrRA5oycmTJyVKS8LCwqytrbHVdCLxBexG7FJDQ0MV
FZWcnByuwyG4h7SEBZKjJeUVHRkrK6thw4Zt2bJFmIcQZGdnz5o1q0mTJjwt
YZCRkYGZ/Pnnn3fu3KE8wneWLVuGBC1RV59KS0ttbGyg63S7gS+g77N///6x
Y8d6enpyHQshFJCWsECitASkpqba2trKy8tv3LhROIe/lpSUREZGNmvWTOr/
Iisr27VrV6TOpKQkIb8JJaIsX75c0rQE+Pr62tnZXblyhetAxAF/f38dHZ2F
CxdK1DU3ogZIS1ggaVqChP7+/fvt27ePGDFi3bp1QmgmKSkpCK958+aVL5I0
adJEUVHx1KlT+JacpIFgtCQ3N5frQAQKRH3nzp1r164tLS3lOhbRJjs7e9Om
TWpqanA8uphJMJCWsEDStKS84nJEVFQUUv/w4cOF8JpJeHj44MGDZWVleaNK
fv311yVLlty5cycjI4Pr6MSZFStWSKCWwEbOnz9vYWHx7NkzrmMRba5evaqp
qQnBq/JiTUKSIS1hgQRqSXnFmNJ37945ODgMGTIEfvLlyxch6d1kZWWdPn36
p59+wqkrLS0NORk7dqyzs/OrV68kZJovDlm5cuWJEyckcKQiTHj37t1OTk5c
ByLCpKSkLF++fM6cOb6+vkLSmBDCAGkJCyRTS8orrpnExMQwI2B37dr16dMn
Ybg58vr16wULFjRq1EhGRgZyMn/+fFgKYqOGTgBIrJbk5uaeP39+0aJFyK1c
xyKqeHp6Tps2DX2c1NRUrmMhhAjSEhZIrJaUV1y+/vjx4+rVq8eMGePs7BwV
FcXt1GRFRUVXrlzp0qULtKRPnz6mpqZPnjyhsXMCw8TERDK1BISGhq5Zs+by
5ctcByKSfPjwQUdHZ/HixQ8ePOA6FkK4IC1hgSRrSXnFPAMZGRmrVq0aPXq0
g4NDeHg4h0NNYmNjN27c2KJFCwSzY8cO5Ee6SCJI4IHQki9fvnAdCAckJSWd
PHnSyMiouLiY61hEjLKysn379o0fP97Dw0MyTx6iBkhLWCDhWsKAxmTdunWj
Ro3avHnzq1evOJnSBAZy/fr1yRX4+fkJfu0lJSUQodTU1E+fPiUkJLx//z62
gvj4ePyZnJyclZUlbMOD+Qu05Pjx45KZWZBbHz9+rKKiEhUVxXUsIkZiYqKC
goKZmdmbN2+4joUQOkhLWEBawgAVcXBwGDZsmKGhYVhYmODzL3qpPj4+NjY2
8AHBrBEqgpXm5ubCN2AdaFQvXbrk5OTETHGvr6+vra2tpaU1f/785cuX29nZ
IWU/ffo0PT0d9oIfit+VHGQWbGN2djbXgXAD5NPe3n7btm1cByJKQOdQNQYM
GBAQEEAXmojqkJawgLSER2lp6alTp8aOHTtu3LirV68KeO2FhYX5+fmCHHab
mZmJtnTTpk2TJk367bffZGRkmjZt2rdvX/ypoaEBLTE1NTUxMVm8eDH+lJeX
b9u2LSpU9+7dYSm3bt0Sv3lBJVxLoOLQzv79+wvD2G+RADvq06dPHTt2hM59
/PiR63AIYYS0hAWkJZWBmYSGhhoYGMjJyaGp4csIWLT2nz9/joyMjI+P53xO
DGxgbGwsesSTJ0/u1KlThw4dFBQUVq9efezYMWx4RkZGUQXFFZRUwPwbH375
8uXZs2cuLi7wlvbt2w8ePHjLli0vXrwQmyyG/QAtET/dqj0pKSna2to3btyg
p9FrA2rEggULhg4dGhMTI34XDwm+QFrCAtKSKqBBDg8Pt7Oz++uvv3R1ddEJ
YtHgIIm/ffvW2dll4sSpffr069mzV8+ecj169P7zT7mxYxXXrLG8fv26IJ/6
wUZFRETs27dPXV29e/fuI0aMWL58+dGjR8PCwj58+JCamooGFsvUvKX4FtuV
mZmJfRIUFGRlZTVu3DjIibGx8Z07d8RATtasWQM9wwZyHQhn5OfnX7lyZfbs
2ZK8E2oJuhioxW3atLl8+TLn3Q1CaCEtYQFpSXWQfOPi4pC1x48fP3nyZH9/
/9q/JwXJ/cWLF+vXbxo1anzv3vObN7eXlvaSkropLR0kLR0gLX2+adNdv/5q
PHToZE3N2bdv327o538/ffp04cKFZcuWYVuUlJSWLl3q6ur66NGj6Ojo9PR0
1nfDCwoK4DP379/fvXu3pqamgoICSg4ODuZv8AKGtARuibMC1opzWLyHN9cT
KDr6HWpqajNnzsQeEwMnJxoI0hIWkJZ8k9LS0tTU1KtXr86ZM2fixIm7du2K
j4//YeOTlZV18eIldXXd7t3nycj8W1b2npRUnJRUjpRUKc5EKakyKal8KalP
0tJhjRqdbtHCVElp6t69+xtitrSSkpLHjx/v2bNnwYIF06dP19PTs7e3R0f4
2bNnfJwZG2tB8Ldu3XJyctLS0po0adL27dtjY2NFdOyfubk5tETCZ/jHSY79
gAYhOTmZ61iEF5z2EPL+/fsHBgaSkxA1QFrCAtKSGkB6vX//vomJCXaRhYVF
QEBADTkLvWxPT6+JE+c2b75CVtZXSiqrQkW+91+xlNQLWVnrwYNnbNvmHBMT
w5eAYVNpaWn+/v5bt26dO3cuVMHY2BhOBXNgdzeqlitNSkqCwq1Zs2by5MlY
4+XLl0VxrkscYtISnCRhYWGampqvXr2ihPtNCgoKfH19VVRUVq5cyclkAoQI
QVrCAtKSH8KMEZ05c6auru7BgwffvHlT/WpAYWHhxYuXlJXnNWpkJi39pEYh
qfxfWuPGO/r2nfbvf//nmkl9gszNzX379u3FixcZIZk2bdqSJUvc3Nxevnwp
mBvfkBNsAk6nGTNmQIfwD+wo0boRQFrCgNNbW1v70qVLknw/qwbCw8MtLS2V
lJSePn3KdSyEsENawgLSktqQn59/+fJlfX193mWTpKSkyguggdLQ0G/efEVd
nIT5L6dRo00KCtrnzp1n8fgD+rOpqanPnj07ffo0msp//vmHGUBy9epVrm55
371718jISFlZGfHcu3dPhJ63Xbt2rYeHB73+Fbi7u1tZWb169YrrQIQOWCv6
JpMnT3Z2dqanb4gfQlrCAtKS2vPhw4fdu3cj4U6ZMgV7LCIignn1MHRi3bqN
3bvPl5W9UUcnYf77ICurb2S0MjIysvbBoEv7+fPnFy9euLm56erqjhw5EoHZ
2to+efKE89YSmX3nzp0QpLlz53p7e4vK9Qd4FGkJA6x7zpw5Pj4+onW9q6Ep
KSm5efMm9gxqXJWOCUF8E9ISFpCW1InS0tKnT5+uWLGiZ8+e48ePP3fuXFpa
2vPnz8eMUZKR+ZeUVDYrLSmXlfXs02f2v/6174dGwTylm5WVhZVu2bJl2LBh
vXr10tbWPnPmjFC9/rWsrAxJbfr06aNGjYI4icQTlIyW4IByHYhQsH79+v37
98fFxXEdiBCRmJhoamo6depUX19frmMhRAPSEhaQlrCgsLDw2bNnenp6jRo1
UlZWnjNnXteus2Vk7rBzEmaQiYzMSkPDxT98IUtOTg6aRHhIkyZN5OTkmCvt
QvvkS0REhJmZWffu3Tdv3gyj4zqcH7Bu3TrSEh4hISFr1qyBW3IdiBDh5OSk
pKSE/3N+QZIQFUhLWEBawg7mqsWLFy9gCK1b/ywtbSslFV8PLSlv0mTP1Knz
goKCvrk62Mjdu3eR4vv27duqVat//vnn+vXr2dnZyPXC3EIits+fP+/bt69r
1666urqCnEGOBYyWiOIzRA1BWVmZiYkJ2gdRuQfX0Ny8eRNOYmFhgVOa61gI
kYG0hAWkJfWhuLg4Nja2V6/eUlKnpaTy6qMl0tKX5OUXHT3qXrn8vLy8e/fu
WVtboz3s06fPpEmT7OzsgoODk5KS8vPzhVlIeDCPD3t5eXXv3n3ZsmXIcUIb
9vr1693d3UlLeJw9e9be3v727dtcB8I9OCvQAZk7d+6tW7eE/7ofITyQlrCA
tKSexMfHy8n1k5b2rZgtjb2WSEkF9uq1zNHRqaSk5OPHj97e3paWlioqKiNH
jlRTU8O/T58+/ezZM3wlcu8rQTOekpJy8uRJOTm5devWCe1LzTZs2AAtEaoh
Otzy6dMnKyur3bt3C/llroYGIo2uwfjx43F6SPIrkwgWkJawgLSknrx69UpO
boCMzO36OQn+C2nXznjcuElLliyZOXPmlClT5s+fb2Fh4ebm5ufn9/btWxF6
0rY6ZWVlGRkZu3btkpeXd3JySkhI4Dqib0BaUgX4pKur69atW9+8ecN1LFxy
48YN9A5sbW35Ne0hITmQlrCAtKSeREVFycn1l5b2k5L6Wj8tufvTTwvk5Uca
Ghoys3+jMYyMjMzLyxPaux51BRl/3bp1ysrKcC0hfL5y06ZN0BKadL0yYWFh
27Ztw/HiOhBugE5//Phx6tSpc+bMCQ0NpcelibpCWsIC0pJ6kpmZ2bdvP2np
C1JShfUbW3K1R4+5q1atfvz4MVK22KhIFdDfXLRokZaW1sWLF4XtqWErK6uj
R4+SllTmy5cvBw4cWLt2rQRO54I6iM13dHQcMGCAt7e3SF+uJLiCtIQFpCX1
pLS0VEFhQpMme6SkPtdDS77KyrpNnLjg+vXrXG9Qg/Pw4UN1dXVjY+MHDx4I
1ehBRkuE8DIOt/j6+m7cuNHPz4/rQARNXl5eQEDAn3/+aW9vT48jEewgLWEB
aUn9MTU179x5mbR0WD20JKdx4w0LFiyMj4/nemsEgaenp6qqqoWFxfv377mO
5b9s3ryZtKQ6Hz58OHjw4Pr16yVq4GtxcfHLly81NDTGjx+fmppKby0k2EFa
wgLSkvrj7e09bJhqo0anK94LzO4OTnDbtgs2btwsrvduqlBYWOjo6KisrLx9
+3bheQcroyU0K0UVcE76+PjMnTsXfsJ1LAICm4wOgr29fbdu3R4+fEhOQrCG
tIQFpCX1B0lWQ0OnWTMzKalXrLSkrEmTterqC743l5pY8unTJwsLCwUFhQsX
LnAdy/+yZcuWI0eOkJZU582bNw4ODmgruA5EQGRlZeFM6N27t7OzM9exEKIN
aQkLSEv4gr+//8SJ0xo1spaSyqirlsjIuHfqNHnPnn9L1EXy8orXLhsZGU2c
OBGKwnUs/8Ha2hrJSEiCESog3n5+foqKipVfc1BWViaWF/eKioo8PT1HjRq1
YsUKSauSBN8hLWEBaQlfKCgo+Ne/9g0cOL1x4+1SUrl10ZKbTZoobdpkLSGj
SiqD9v/SpUvKysobNmzgOpb/QFryPaAf4eHhixcv5r0iB37y8OHD2NhYbgNr
CK5fv66urq6jo0OvKSTqD2kJC0hL+AXS2bZtzn36TG3ceKOU1Mfa3LuRkTna
pMkEExOLFy9eCO3r9hqUDx8+7NixY/DgwSEhIVzHUm5jYwMtEdpJaLklPT39
9OnTc+fOZf4MDg52cXERhqPGX8LCwgwMDDQ1NW/dukWXSoj6Q1rCAtISfoEe
JTqP+/YdVFDQkpXVlZHxrLihU32Ota8Vl1OCmzRZ3anTpM2bt8JJhGfYp4Ap
KipCaps+ffq8efM4FzNbW1vSku+BHB0RETF+/Hic5KWlpWvXrlVXVxez9wsn
Jiaam5tju9zd3XNycrgOhxAHSEtYQFrCXz59+nT+/IUlS0zl5GbLyCxv0mSX
tPRFKanbUlIPpKTuSEt7y8oeatx4bdu287S09Pfu3R8fH895OuYWdMOPHTvW
q1evGzducDuLJrTk8OHDpCWVSUtLi46OZm5s4UhZWFjs3bsXJ62ysnK/fv1O
nTrFdYB8Izs728nJadq0adu3b6dzgOAXpCUsIC3hO4WFhZGRkXv3HjA2XqKm
pjt0qGGvXst+/31ljx7LBw1aPGmSvp7eIisr67t370q4kDCUlZUhzWloaKCX
mpqayuEoyq1bt0JL0GXmKgAhJCUl5erVqy4uLl5eXo8ePQoMDERzsX//fjk5
uY4dOx49epTrAPkDfPj48eNTpkxZt27d69evuQ6HEB9IS1hAWtJAIL2i/4Vm
3MPj2I4dLps3b7W3337okNuNGzfi4uLE8hEG1uTl5fn4+HTq1On27dv5+flc
hWFnZ0daUgWcqEFBQbNmzerTp4+hoSE8pHfv3goKCq1bt27ZsuXBgwfFYE4P
bCPq6cSJE42MjB4/fiwGW0QID6QlLCAtIYQBmMno0aONjY3fv3/PlbPZ29tD
S4Tz7cYcUlhY6O3tPWTIkKZNm/7000+///578+bNZWRk8O/du3dzqJF8ARIS
ExODNlBNTe3Bgwd0AZPgL6QlLCAtIYSB0tJSDw+PP/74A/1W5EFOYnBwcHBz
c5OcuUxrT3Z29rlz5yAk0tLSaFSZ/7dq1crGxkakZ5+Dk6SkpBgYGPTt2/fO
nTuirliEEEJawgLSEkJIgI0MGDDA3Nw8KiqKkwBIS2ogNTX10KFDrVu3lvr/
tGzZ0szM7O3bt1yHxp60tLQdO3Y0bdrU39+fnIRoCEhLWEBaQggPBw8eHDRo
0NWrVzmZMmLbtm2kJTWAJG5qatqqVSvmakmjRo1mz54tulOXfPr0ycnJqW3b
tsePH6cpSogGgrSEBaQlhPCALvnYsWM3bdoUHR0t+LU7OjpCS4TqpcZCRVlZ
WXJy8qhRo1q0aMGYiZKSEhyS67jY8PHjx507d/71119w0dzcXK7DIcQW0hIW
kJYQwgMSn6WlpZaWlq+vr+DXDi1xdXUlLamBr1+/Pnr0qH///k2aNEHrOmDA
gGPHjnEdVJ1JSkpCuzdhwgQIsEiPjSGEH9ISFpCWEEJFYGCgsrIyerLZ2dkC
XvX27duhJRL4cqI6UVJScuLEib59+zZq1KhLly67d+/mOqK6kZqaum/fvunT
p69Zs4aTi3KEREFawgLSEkKoyMzMnD9//rJly548eSLgVe/YsYO0pDZkZWXZ
2dn17t27devWtra2XIdTB9LT0w8ePKihoWFmZvb8+XOuwyHEH9ISFpCWEMIG
zklNTc2jR48KeGIrRkvovbG1ISYmxsjI6Ndff123bl1paSnX4dSKtLQ0Nze3
f/75Z+XKlY8ePeI6HEIiIC1hAWkJIWw8efJk1qxZ5ubmqampglyvk5MTaUnt
CQgIQIpfv369SLzVLj09/ciRIyoqKkuXLg0JCaFplgnBQFrCAtISQtgoLCy0
sLCYM2dOUFCQINfr7Ox86NCh2NhYQa5UpDl16hRyvZCPGmVeA3Hs2LERI0Ys
WbLk6dOnQuUkJSUlUKaUlJS8vDyuYyH4D2kJC0hLCCHEw8Nj9uzZODkFuVLS
krpSVFSUlpaGrMp1IN8FBpKTk3PhwoXu3bvDSSIjI4XKSQDOt8OHD+PEe/36
dV1jKy0tzalAtObMx2Yi8rKyshq2F1uUm5tbn03DD79U0BA3GVF4VgU/XJK0
hAWkJYQQEhoaumDBgsWLFwtynisXFxdkh5iYGIGtkWhokNfOnz/fvHlzU1PT
pKQkrsOpCvKyvr5+hw4dEB6L+XLj4uJw0u7evfvVq1cNEV4DAd9ITEzE4cjP
z/+emUDSDh48iPT07Nkzdmt5+fLltm3bnJycGuK4v3nzZt26dZaWlj9ckrSE
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
2bfPtH17bRGRp2RvlXxo3Xrz8uW6QjpLGkGqBbWEBKgliFBQWFjYsWPH8+fP
82/ZT3t7e75qiZeX15IlS7Zt2ybUE3DY8fPzV1NbKSW1k0b7UXst+SkhcWr8
eI2bN28J+jgQhF+glpAAtQQRFoYOHXr48OG4uDg+pQ9aApcDn7SEwWBA5ufN
m+fu7s6P9AVCbm6utbVN587/iYicp9FyauMkeSIiN/79d6GhoXEDX821VhQU
FPwsBVeEQwhQS0iAWoIIC7Nmzdq+fXvl9bGp4urVq3A5BAUF8SPxb9++6erq
amlpNfC38tWW5ORkc/PDUlLDabSbNFpRzZykmEbzlZCYuXatPl9nfNcnxcXF
4CTv3r0zMzM7dOgQueXZkcYHagkJUEsQYWHt2rU6Ojr8G5Lq4OBw6tSp9+/f
8yNxNzc3DQ0NCwsLfiQuWJKSkqysrJo16yomZkyj5dJoTJ5OkisiclxaesjW
rdtYLw4WdjIzM8Fpp02b1rt378WLF9+7d4/jfTRIkwW1hASoJYiwYGpqqqam
xr9ZG46OjvzTkt27dy9btgwCFj8SFyzFxcVpaWl37rj37z9WUnIonW5TusZa
QUUbKaLRUmi0y5KSY3r3Vjx79nxCQoKwr+wK+Y+Ojt63b9+gQYOUlZUPHjz4
+vXrnz9/5ufn40MchAC1hASoJYiwYGNjM3ny5GfPnvEp/WvXroGWvHv3jvKU
ExMT1dXVN23aFBsbS3niDQEwk+zs7JCQEAuLo0OGzJWWHi0pOUdaeo2EhLGE
xB4pqfXS0gvExBT69Zt14MChwMAX6enpQu0kGRkZ3t7e69evHzVq1OrVqx0c
HMBmU1JSWC8IRhAC1BISoJYgwoKbm5uCgoKvry+f0uefljx48GDOnDlWVlaN
+94+MY/76dNnTk7Ohw8f3bTJWEdns7b2JgMDo/37zSF2P3r0OC4uTnjHXUDO
P336dO7cOT09vcWLFxsbGzs5OYGQCLtlIfwDtYQEqCWIsPDkyZP+/ft7eHjw
aYLt9evXQUvevn1LecrHjx9ftGjRjRs3KE+5YZKfnw9+AhEcHA/KMywsLCYm
Jjc3V9D5Ik92dnZAQIClpeWaNWtWrVq1d+9eZ2fnDx8+5OXlCTprSIMGtYQE
qCWIsABhrl+/fteuXeNTgIOeLz+0BCRqxYoV69ate/nyJbUpI/wGzl1ycrKX
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
ylTJJWN2XH80nKwBCgolqdk8eJSWEu6iPWvSll3WetvHSUjvfvJ3/axqQnyt
avtfLWGUFvgWDaWlM+VVxnbtPMdA3dr7UVWxgPE15Ob6HWojoMSmT+ve+X/q
k8xcXHmUAGoJD3hoSeG7+1vlqulwpdrsKhMD9trOTnai94I5JXNXZSRn7dly
97Grq+uTB6ccdvXrUxb8/5tk9yg4cKN26bTNskVRirwvzxhYYb2UClqSHnp+
3Jy//sB5couCt8xmzxVc1Dkh15fKtlxibnZrx97RxIwV9lW/chM9Jo8sTU1E
0/bco0eQSX+/C7ePj1Uu86V1K58kUPTgSuBawigblUrQ3/RiFiViwqYlfwrS
PCd2gMTlzR1yKl+XaSEH1U3iiau7ai0hlhFwmDW3ZPZX5UrIZGT731gvW1pp
X2d/ObRikoV1WYhkMlLOmpXMa1iz5RN7bcyIf3njubfR3lmSlWoUR4IvM4K3
Txl7/MKXzNIEGbnfDmzuS6dPsriazsj7ZFTFJi4DrpjZ966v6SA93/LYR1b4
zs0IO3pkjqzcuuve2ex/AlfKnA4zTl1lb8qYabHeC1RkSPTdqtYSZkKY/cRR
0hrqdz6VdzlB6ny9DvSXHrXNKPgnt4YU4u/18yvaiCjo6z/+9p34K2Zm6oeT
lsr9//NhX5guI+rajBGmt9xZR8H4Gnp96iR6x3a7HnAOWuZ1iiktjcIg3709
Jdss1/KNKss8IzrIbuIEESWFi8G1GaVPbSUpzot7+Mj/rIthd1muly0jMdJ5
fH/i6sgOc1s0Q+teeNkpKwx9bNJVhjZM/tLHCneuq7lq8rK/mGwumTgJDXVc
6NmpYw/7BmaXXolQti6wry7tTJ/FMjPD7aZXsYlL4WYHG63vL9vHzNOfFbIh
oN/WmC+tPPZqaK0nQZSerB70mTPciPoJlfPGhWX/0HuMGe4QVVLTih9fnSNR
4RkxjxBf69pe1pBKbDttPWWsqiPLXhh5KXfcNnWk99bVelopFhQ+dZqqpOH2
rnx+H0ipV8mX6TMrXh1soJbwoKKWiGlZ7jl2zMTExM5Kx1i9dWlMrv4+MDNq
yzzuWlKcF7x6LiEPHTYfTmbzTGb0E+O2pRu6tD/8MrPg6Y2VbeAkzvRP/hsj
mU+vzhHnpiUEv6Ivs6Irl5P7N1e9jM+c6t/c4G4ItIrfD68plxn6Go8vZdn0
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
AAAAAAAAAAAAAADw3/M3Fvp4RQ==
    "], {{0, 470}, {733, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{333.9636363636372, Automatic},
  ImageSizeRaw->{733, 470},
  PlotRange->{{0, 733}, {0, 470}}]}], "Text",
 CellChangeTimes->{{3.709469382050675*^9, 3.709469599132248*^9}, {
  3.709469785822062*^9, 3.709469803624137*^9}, {3.7094699947486534`*^9, 
  3.7094700397214284`*^9}, {3.709470086725078*^9, 3.7094702874048223`*^9}, {
  3.7094703757835827`*^9, 3.709470383110248*^9}, {3.709470689377967*^9, 
  3.7094707919166336`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Descend direction + line search (Steepest descent method)", \
"Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094667051407757`*^9, 
  3.7094667208634553`*^9}, {3.709470308693102*^9, 3.7094703263791957`*^9}, {
  3.709470536079528*^9, 3.7094705454745913`*^9}, {3.709470619464237*^9, 
  3.709470624650032*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["d", "k"], "=", 
   RowBox[{"-", 
    RowBox[{"\[Del]", 
     RowBox[{"f", "(", "x", ")"}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.709470642971461*^9, 3.709470684091605*^9}, {
  3.7094708068481884`*^9, 3.7094708084816055`*^9}}],

Cell[TextData[{
 Cell[BoxData["        "], "Input"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAGCLfwEZ8oqC
     "], {{0, 833}, {1329, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{406.24545454545455`, Automatic},
   ImageSizeRaw->{1329, 833},
   PlotRange->{{0, 1329}, {0, 833}}]],
  CellChangeTimes->{{3.709469382050675*^9, 3.709469599132248*^9}, {
   3.709469785822062*^9, 3.709469803624137*^9}, {3.7094699947486534`*^9, 
   3.7094700397214284`*^9}, {3.709470086725078*^9, 3.7094702874048223`*^9}, {
   3.7094703757835827`*^9, 3.709470383110248*^9}},ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
eJzsnXvc9dWY/7d734fnfp4OKiKhnE8pEZNQEcU45pgcE6WZolChw2Smch6H
GDkbNBXSoEElEUVIZBg55TDMjBmhGQwzZv+u91rXe+217+5976fm93r9fn/Y
r9f3rue7v/u71rrWdfhch7XWww94wbOfddgBLzjkwAO23+d5Bxz+7EMOfP72
ez/3eXFreIPBYHj8YDB3t+0H/P9oMGh/ht8bjUZX5zUof8d/juPPDT7IN/GG
/xiNP4PR5Oc4/tzgwnzy6plPnveHJ//w5B+e/H/95Hbl73D005/+dPQP//AP
XPGv+veb3/zm6F//9V/LE6fkc/yb+/xrufxdGl1zzTWjQw89tNznuvzyy0fP
fe5zR7///e8Hv8zf/fa3vx19/vOfH33mM58ZzJW/w9HFF188+tnPfjbu8Y3L
/y6O/vmf/3mi/7/4xS9Gv/71r988fRi3zGa+9a1vjW5zm9sU1bZQ/g5HO+yw
w+g73/lOeeJ15e9C+fdd73pXnhg95jGPGZ199tmDdfmO//7v/x495SlPKb+e
y3e84AUvaG3tm72EZC996UtHr3rVq8r1V3/1V6P/+Z//OTVfc+aZZ44e+tCH
jh772MfGv57//OfH34MOOqh05/Wvf/3kiJ/85CcXkvGeV7ziFaN73vOeo298
4xtrjPjmOZJf/vKXoz/90z8d3fKWtxzd4ha3GH30ox8dzI8++clPxnfRdBnh
9ttvXyYoJmrwmvK7dYXw/Ibv/+iP/mj04Q9/eHTzm9989Nd//ddM3FJ5bL4Q
Y9999y2PPetZz3ps9pdWH/3oR4/SjIxOPvlkxv6m/NVHPvKRcvu+970vb5jP
2x//+MdH22233eiQQw4Z/cd/VGuyVb7xS1/60mirrbZqb3zxi18M08ykwPzo
rW99a/tVtLCYt5/61Ke22+9973sdNz2/3/3uV26//e1vL696y1veUv4d9JEJ
jjrqqHLrTW960+Bx+cbXvva15d697nWv0b/8y784WCj5wAc+cLTJJpuMzj33
3MV8g1T727/92zrXN8ov4kb5Yp999hm8dfbwbDXHsZD0+rd/+7fR3nvv3b5i
jqNTdZhVJoMJ2utg1nvc4x6QPhl9vjAcPz322GO5MxxdddVVe2Unf/e737We
bMjnYXaev8Md7oCG2DUf/a//+q/26JPzUeSQRxcWFkZnnHGGNNlrr73K7dNP
P33wkLz37//+7+3nF+Y9uM57C3lPnnrkIx85uO0qv71f3vvVr37V7u0ynbxz
Xe/f/OY3j0455ZSgashw3Iset+eWshPcQ8K9TjvttHzHAupstPXWW5fu3fCG
Nxy95jWvCRrwrsUiW86RshYcM5/N89O/+Zu/mRgp+lO9q+hAkVNPPbVwwyc+
8YnlvP3Od75z9LrXvW706le/GtW7Zb6H2QsdU25zvec97xncNN/OT77yla+U
f+2e9x72sIcVrh4PeMwd69evH+23337DThN+9atfLQ9tlj9/wxveUJpB9yzl
PWjKvd/85jfZ9MLou9/9buvSX/7lX44uuOCCHPRSYVBG8oQnPKHwNVqQ98ZQ
BvI8OqMfFkR54xvfqJK+8MIL27QN87Uf+9jHSlM8HnQrX37729+mK62rvOa8
887r5qBO6dVXV4751Kc+hXIbbJLPf+hDHyrvi/kYLGY7//RP/1S6j8p98IMf
XLoPmwR7NcpD9VDqOZjaTpCgDYe5DcPU3gl398OVsy+66KKBEsVYggSFlN5D
7sNcln+tz3YwePAVH1Rt9DfHvyljK6p58803H9373vcu/cZW82HK+DcGCm7A
ZMQ40vbXtlKVD+6TbQUbIE6jnXfeeXT88cdjzhvtUFvQCVMkv//oRz8aXXLJ
JeVf1Rwsj/7zP/+zsJDihpIPVip9+v73v1/EdS7Flflw3n1nKOJ2T53+ta99
bXTllVfmqOs9ZOrLX/5y+dcWyflomo5n5rpX0pUf//jHgz3yXmjcwirjKV0c
fe973ytT+cd//MfFRr7yla8cve1tb5vPvtBbKHnnO9+5qMlQJG3249/ru9aY
mPGbh6Mrrrhi9OlPfxpiNb30rne9a3TCCScUYoexKqBr0xzIBz7wgcY8n/3s
Zx0Ipp6BxFxMvPrrX//6BB2wIf48+EG2RGMimYcddljRZrA6Uxq0GGyZr/v5
z39e7gVyq9hsbSUMZ9/61rcucryY0rzrrru255TU+9znPirShGYLoxNPPLG9
8LLLLhutW7cu+Ke+A0UCeBy3tVQ48IlPfOJo0003Le864IADitKJd8cvHvSg
B8Uc3eQmNylgCA5ECsFxe+65J98iISqc5zznOa2LKvSgfzH9u+++e+tidIl/
F1QH5oAqzhGE57UY5zIq+j/fTAVsELI8n7MdFnr08Ic/vPziRS96EYRrRERN
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
k3f+Yb/zef8fzyUYEQ==\
\>"]]
}], "Text",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}, {
  3.7094656242324886`*^9, 3.709465663918378*^9}, {3.7094663943305817`*^9, 
  3.709466395487277*^9}, {3.709466472568847*^9, 3.7094665662751102`*^9}, {
  3.7094666178470945`*^9, 3.709466636417967*^9}, {3.709470386821086*^9, 
  3.709470386821086*^9}, {3.709470512924217*^9, 3.7094705207553616`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sensibility to initial points", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094666574343987`*^9, 
  3.70946666261091*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdYFNm2tglmx6wzzjg6psEwY8KsKCIqF0VHkhgBEcEIqCAmFBAQBQzn
GEEFA5gTiiKgYEAUzAFEooJKDpKT/N+h7t+HC4pQNF0d1vvMM490V+9aFfZe
767atauHgamGkYyUlNSaZvifxkJLpdWrF67XbIs/tE3WLDU2WWyoamK+2Hjx
6lEGsvgwXFpKKgbL/+ff5QRBEARBEEKDFEEQBEEQBHdUNxNOjIggCIIgCAmH
tIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGB
tIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGBtIQgCIIgCCGB
Ey3Jz88/deqUlpbW4MGDe/XqNXz48K1btyYnJ/MWePLkyZo1awIDA+uzlg8f
Ppw8efLAgQM5OTn1jZggCIIgiIZHwFpSVlb25s2bhQsXGhgYHDt27N69e+7u
7urq6v3797e0tMS3eXl527dvNzY2hlF8+vSpPusqLCwMCQnZsGGDkZHRnTt3
+LUJBEEQBEE0EILUkoKCgocPH6qpqSkrK589exbWUVJScuXKlXHjxjVq1Ehe
Xv7p06erV6/W09M7c+ZMQkICvq3nGjMzMwMDA9etWzdt2jQvL6/6F0gQBEEQ
RMMhMC3Jz8+Hk2hra7dr187d3R3CwHx++fLlsWPHtmjRYtCgQYsWLVJUVLxw
4UJ2djYf1xsaGrp48eIxY8YcOXIE6/369Su/CicIgiAIgo8IRktKS0sjIiKW
Ll3arFkzDQ2Nym6Az3ft2qWurj548OAePXrs27evqKiIv2svLCwMCwtTUFAY
OHDgiRMn0tPT61lgQUFBXl5eWVkZX8IjCIIgCIJBMFqSnJy8f//+9u3bt23b
9tatW1VupsTExFhbW3ft2lVbWxvpnu9rL68wk/Pnz3fq1GnkyJHXrl378uVL
fUqLi4t78eJFWloav8IjCIIgCKJcIFoCCfHz81NUVGzSpMmQIUNKS0srfwtD
OHLkSK9evfr06RMUFMTfVVemrKwM2tOyZUsdHZ2QkJD6jDPx9fXduXPn3bt3
+RgeQRAEQRAC0JLPnz9bW1vLysq2b9/e0tKy8ldQBRiLqqpqmzZtYAsNPerj
/v373bp1gx0hnoSEBHaFIMhdu3ZNnDjRxcWFv+ERBEEQhIQjAC05c+aMvLw8
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
NWvNmjVZWVlcxyL+pKamHj16VE1N7dixY1zHwiUirSVRUVGoxTY2NhJ4900M
QNfA09MTjd727du5joXgJ6QlLBBOLcnIyNi6dauKioqPjw/dZm1Q8vPzz58/
jz7axo0bS0pKuA6HS0RaS4qLi729vbW1tamvLYrk5eWtX79eS0tLki9XiiWk
JSwQTi0Bt2/fRq6cO3cuvayq4UDPOjAwUF9f39jYWAIfvamCSGsJePHixYYN
G06cOMF1IESdefjwIZTS1NQUfsJ1LAQ/IS1hgdBqSUFBgbu7+9ChQ0+dOsV1
LGJLZGQknGThwoXR0dFcx8I9oq4lOTk5Pj4+KioqXAdC1BlnZ+dZs2YdP36c
60AIPkNawgKh1ZKvX7+i94devIKCAtpbrsMRQ9LT07F7DQwM7t69SwMSykVf
S1Bl3rx5o6mpia4317EQdSAzM3P27NmojOHh4VzHQvAZ0hIWCK2WlFfcb/X2
9h4wYMD+/fu5jkXcKCkp2bx5s66u7qVLl+i6MYOoawlISUlxdXVdvnw514EQ
deDatWtohHfv3k0vNhI/SEtYIMxagt5fTEyMmZnZkCFD0LWnsa985MiRIzNm
zHB3d09NTeU6FmFBDLSkuLj49evXw4YNw2GlK2Cigrm5+dy5c319fbkOhOA/
pCUsEGYtKa+4YBIYGPjnn3/u27dP0l7R0nAEBQWpqqo6OzvHxcWR7PEQAy0p
r3iKzcDA4NSpU3QRTCRISEhQVlbesmULvTtALCEtYYGQa0l5xQyWlpaW8vLy
r169Kioq4joc0aa0tBTNoJaWlqmpaUREhIQ/EVwF8dCSwsJCf39/DQ2N5ORk
ck7hx9PTc9y4cdBIuoMjlpCWsED4taS4uDg8PFxOTs7W1vbz58/U0rKmrKws
JSXFzs5u8uTJT548oSevqyAeWoIKkpeXp6CgEBISQplOyEE/a+7cuQsXLnz8
+DHXsRANAmkJC4RfS8or+vj29vYDBgzw8/OjS9OsyczMPHv27JAhQ65fv04J
qzrioSUMcHhHR8ePHz9yHQhRE2/evOnbt++BAweSk5O5joVoEEhLWCASWlJe
kVJHjx69fPny169f01g+FuTn59++fXvSpElbt26lK07fRJy05O3bt2pqak+e
PJHMty6KCtbW1sOHDw8NDaUqKa6QlrBAVLQEnDhxon///u7u7tnZ2VzHImJA
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
rl275OTkjh07JqK5Jjk5ecqUKVOnTr158yb+zM3NRROnqKiI40Uv4+M7ixcv
lhAtAba2tqgdNDCp4cjIyFBTU5s1axYaIvEY5EawgLSEBeKqJeUV7xeOjo42
NzeXl5cPCAgQxQ4LsiS0atCgQWfPnsXmPHjwwMDAwMTERBIefxY8jJZIyBiA
58+f6+vr3759mzJmQ4AexPXr13/55RdfX19Rv49M1AfSEhaIsZaUV5hJeHj4
tGnTNDU1Hz58KFqXrBE8ulpt2rTp2rXr4cOHX716tWnTpvnz5yOhcB2aeGJk
ZOTp6SkhWoLNXL58uYeHR3JyMtexiCFxcXELFy6cOHFiVlYWXdWUZEhLWCDe
WlJeMb9HQEDAqFGjVq1a9ezZMxG6RP/69Ws5OTlZWdnWrVuvXr3ayclp3rx5
ly5d4jouscXY2BhaIlruWh/OnTtnbW19//59rgMRN3Jycry9vfv164fTiS5G
STikJSwQey1hcHV1HT169JYtW8LDw0Xl6RVE27lzZxkZmUaNGg0ePFhDQ2Pd
unVv3rx5+fLlw4cP7969GxoampKSIiqbI/wsWbIEeURyLrl//vzZzMzMw8ND
cjZZAHz9+hWVdPny5ePHj6fXeROkJSyQEC0pLS21t7cfM2aMnZ1dXFyckHdh
0LLl5eX17du3cePGUhU0a9ZMQUHB0tJyxYoVmpqaI0eOxJ9Lly4NCQkRxTEz
wgn2p0RpCXB2dnZycoqIiOA6EPEhNzf31KlTw4cPR1eI61gI7iEtYYGEaEl5
xc30TZs2jRo1CmaSmpoqzDd8i4uLg4KCWrVqJS0tzWgJ/KRFixYtW7Zs2rSp
rKxsmzZtbG1t09LShHkrRA5oycmTJyVKS8LCwqytrbHVdCLxBexG7FJDQ0MV
FZWcnByuwyG4h7SEBZKjJeUVHRkrK6thw4Zt2bJFmIcQZGdnz5o1q0mTJjwt
YZCRkYGZ/Pnnn3fu3KE8wneWLVuGBC1RV59KS0ttbGyg63S7gS+g77N///6x
Y8d6enpyHQshFJCWsECitASkpqba2trKy8tv3LhROIe/lpSUREZGNmvWTOr/
Iisr27VrV6TOpKQkIb8JJaIsX75c0rQE+Pr62tnZXblyhetAxAF/f38dHZ2F
CxdK1DU3ogZIS1ggaVqChP7+/fvt27ePGDFi3bp1QmgmKSkpCK958+aVL5I0
adJEUVHx1KlT+JacpIFgtCQ3N5frQAQKRH3nzp1r164tLS3lOhbRJjs7e9Om
TWpqanA8uphJMJCWsEDStKS84nJEVFQUUv/w4cOF8JpJeHj44MGDZWVleaNK
fv311yVLlty5cycjI4Pr6MSZFStWSKCWwEbOnz9vYWHx7NkzrmMRba5evaqp
qQnBq/JiTUKSIS1hgQRqSXnFmNJ37945ODgMGTIEfvLlyxch6d1kZWWdPn36
p59+wqkrLS0NORk7dqyzs/OrV68kZJovDlm5cuWJEyckcKQiTHj37t1OTk5c
ByLCpKSkLF++fM6cOb6+vkLSmBDCAGkJCyRTS8orrpnExMQwI2B37dr16dMn
Ybg58vr16wULFjRq1EhGRgZyMn/+fFgKYqOGTgBIrJbk5uaeP39+0aJFyK1c
xyKqeHp6Tps2DX2c1NRUrmMhhAjSEhZIrJaUV1y+/vjx4+rVq8eMGePs7BwV
FcXt1GRFRUVXrlzp0qULtKRPnz6mpqZPnjyhsXMCw8TERDK1BISGhq5Zs+by
5ctcByKSfPjwQUdHZ/HixQ8ePOA6FkK4IC1hgSRrSXnFPAMZGRmrVq0aPXq0
g4NDeHg4h0NNYmNjN27c2KJFCwSzY8cO5Ee6SCJI4IHQki9fvnAdCAckJSWd
PHnSyMiouLiY61hEjLKysn379o0fP97Dw0MyTx6iBkhLWCDhWsKAxmTdunWj
Ro3avHnzq1evOJnSBAZy/fr1yRX4+fkJfu0lJSUQodTU1E+fPiUkJLx//z62
gvj4ePyZnJyclZUlbMOD+Qu05Pjx45KZWZBbHz9+rKKiEhUVxXUsIkZiYqKC
goKZmdmbN2+4joUQOkhLWEBawgAVcXBwGDZsmKGhYVhYmODzL3qpPj4+NjY2
8AHBrBEqgpXm5ubCN2AdaFQvXbrk5OTETHGvr6+vra2tpaU1f/785cuX29nZ
IWU/ffo0PT0d9oIfit+VHGQWbGN2djbXgXAD5NPe3n7btm1cByJKQOdQNQYM
GBAQEEAXmojqkJawgLSER2lp6alTp8aOHTtu3LirV68KeO2FhYX5+fmCHHab
mZmJtnTTpk2TJk367bffZGRkmjZt2rdvX/ypoaEBLTE1NTUxMVm8eDH+lJeX
b9u2LSpU9+7dYSm3bt0Sv3lBJVxLoOLQzv79+wvD2G+RADvq06dPHTt2hM59
/PiR63AIYYS0hAWkJZWBmYSGhhoYGMjJyaGp4csIWLT2nz9/joyMjI+P53xO
DGxgbGwsesSTJ0/u1KlThw4dFBQUVq9efezYMWx4RkZGUQXFFZRUwPwbH375
8uXZs2cuLi7wlvbt2w8ePHjLli0vXrwQmyyG/QAtET/dqj0pKSna2to3btyg
p9FrA2rEggULhg4dGhMTI34XDwm+QFrCAtKSKqBBDg8Pt7Oz++uvv3R1ddEJ
YtHgIIm/ffvW2dll4sSpffr069mzV8+ecj169P7zT7mxYxXXrLG8fv26IJ/6
wUZFRETs27dPXV29e/fuI0aMWL58+dGjR8PCwj58+JCamooGFsvUvKX4FtuV
mZmJfRIUFGRlZTVu3DjIibGx8Z07d8RATtasWQM9wwZyHQhn5OfnX7lyZfbs
2ZK8E2oJuhioxW3atLl8+TLn3Q1CaCEtYQFpSXWQfOPi4pC1x48fP3nyZH9/
/9q/JwXJ/cWLF+vXbxo1anzv3vObN7eXlvaSkropLR0kLR0gLX2+adNdv/5q
PHToZE3N2bdv327o538/ffp04cKFZcuWYVuUlJSWLl3q6ur66NGj6Ojo9PR0
1nfDCwoK4DP379/fvXu3pqamgoICSg4ODuZv8AKGtARuibMC1opzWLyHN9cT
KDr6HWpqajNnzsQeEwMnJxoI0hIWkJZ8k9LS0tTU1KtXr86ZM2fixIm7du2K
j4//YeOTlZV18eIldXXd7t3nycj8W1b2npRUnJRUjpRUKc5EKakyKal8KalP
0tJhjRqdbtHCVElp6t69+xtitrSSkpLHjx/v2bNnwYIF06dP19PTs7e3R0f4
2bNnfJwZG2tB8Ldu3XJyctLS0po0adL27dtjY2NFdOyfubk5tETCZ/jHSY79
gAYhOTmZ61iEF5z2EPL+/fsHBgaSkxA1QFrCAtKSGkB6vX//vomJCXaRhYVF
QEBADTkLvWxPT6+JE+c2b75CVtZXSiqrQkW+91+xlNQLWVnrwYNnbNvmHBMT
w5eAYVNpaWn+/v5bt26dO3cuVMHY2BhOBXNgdzeqlitNSkqCwq1Zs2by5MlY
4+XLl0VxrkscYtISnCRhYWGampqvXr2ihPtNCgoKfH19VVRUVq5cyclkAoQI
QVrCAtKSH8KMEZ05c6auru7BgwffvHlT/WpAYWHhxYuXlJXnNWpkJi39pEYh
qfxfWuPGO/r2nfbvf//nmkl9gszNzX379u3FixcZIZk2bdqSJUvc3Nxevnwp
mBvfkBNsAk6nGTNmQIfwD+wo0boRQFrCgNNbW1v70qVLknw/qwbCw8MtLS2V
lJSePn3KdSyEsENawgLSktqQn59/+fJlfX193mWTpKSkyguggdLQ0G/efEVd
nIT5L6dRo00KCtrnzp1n8fgD+rOpqanPnj07ffo0msp//vmHGUBy9epVrm55
371718jISFlZGfHcu3dPhJ63Xbt2rYeHB73+Fbi7u1tZWb169YrrQIQOWCv6
JpMnT3Z2dqanb4gfQlrCAtKS2vPhw4fdu3cj4U6ZMgV7LCIignn1MHRi3bqN
3bvPl5W9UUcnYf77ICurb2S0MjIysvbBoEv7+fPnFy9euLm56erqjhw5EoHZ
2to+efKE89YSmX3nzp0QpLlz53p7e4vK9Qd4FGkJA6x7zpw5Pj4+onW9q6Ep
KSm5efMm9gxqXJWOCUF8E9ISFpCW1InS0tKnT5+uWLGiZ8+e48ePP3fuXFpa
2vPnz8eMUZKR+ZeUVDYrLSmXlfXs02f2v/6174dGwTylm5WVhZVu2bJl2LBh
vXr10tbWPnPmjFC9/rWsrAxJbfr06aNGjYI4icQTlIyW4IByHYhQsH79+v37
98fFxXEdiBCRmJhoamo6depUX19frmMhRAPSEhaQlrCgsLDw2bNnenp6jRo1
UlZWnjNnXteus2Vk7rBzEmaQiYzMSkPDxT98IUtOTg6aRHhIkyZN5OTkmCvt
QvvkS0REhJmZWffu3Tdv3gyj4zqcH7Bu3TrSEh4hISFr1qyBW3IdiBDh5OSk
pKSE/3N+QZIQFUhLWEBawg7mqsWLFy9gCK1b/ywtbSslFV8PLSlv0mTP1Knz
goKCvrk62Mjdu3eR4vv27duqVat//vnn+vXr2dnZyPXC3EIits+fP+/bt69r
1666urqCnEGOBYyWiOIzRA1BWVmZiYkJ2gdRuQfX0Ny8eRNOYmFhgVOa61gI
kYG0hAWkJfWhuLg4Nja2V6/eUlKnpaTy6qMl0tKX5OUXHT3qXrn8vLy8e/fu
WVtboz3s06fPpEmT7OzsgoODk5KS8vPzhVlIeDCPD3t5eXXv3n3ZsmXIcUIb
9vr1693d3UlLeJw9e9be3v727dtcB8I9OCvQAZk7d+6tW7eE/7ofITyQlrCA
tKSexMfHy8n1k5b2rZgtjb2WSEkF9uq1zNHRqaSk5OPHj97e3paWlioqKiNH
jlRTU8O/T58+/ezZM3wlcu8rQTOekpJy8uRJOTm5devWCe1LzTZs2AAtEaoh
Otzy6dMnKyur3bt3C/llroYGIo2uwfjx43F6SPIrkwgWkJawgLSknrx69UpO
boCMzO36OQn+C2nXznjcuElLliyZOXPmlClT5s+fb2Fh4ebm5ufn9/btWxF6
0rY6ZWVlGRkZu3btkpeXd3JySkhI4Dqib0BaUgX4pKur69atW9+8ecN1LFxy
48YN9A5sbW35Ne0hITmQlrCAtKSeREVFycn1l5b2k5L6Wj8tufvTTwvk5Uca
Ghoys3+jMYyMjMzLyxPaux51BRl/3bp1ysrKcC0hfL5y06ZN0BKadL0yYWFh
27Ztw/HiOhBugE5//Phx6tSpc+bMCQ0NpcelibpCWsIC0pJ6kpmZ2bdvP2np
C1JShfUbW3K1R4+5q1atfvz4MVK22KhIFdDfXLRokZaW1sWLF4XtqWErK6uj
R4+SllTmy5cvBw4cWLt2rQRO54I6iM13dHQcMGCAt7e3SF+uJLiCtIQFpCX1
pLS0VEFhQpMme6SkPtdDS77KyrpNnLjg+vXrXG9Qg/Pw4UN1dXVjY+MHDx4I
1ehBRkuE8DIOt/j6+m7cuNHPz4/rQARNXl5eQEDAn3/+aW9vT48jEewgLWEB
aUn9MTU179x5mbR0WD20JKdx4w0LFiyMj4/nemsEgaenp6qqqoWFxfv377mO
5b9s3ryZtKQ6Hz58OHjw4Pr16yVq4GtxcfHLly81NDTGjx+fmppKby0k2EFa
wgLSkvrj7e09bJhqo0anK94LzO4OTnDbtgs2btwsrvduqlBYWOjo6KisrLx9
+3bheQcroyU0K0UVcE76+PjMnTsXfsJ1LAICm4wOgr29fbdu3R4+fEhOQrCG
tIQFpCX1B0lWQ0OnWTMzKalXrLSkrEmTterqC743l5pY8unTJwsLCwUFhQsX
LnAdy/+yZcuWI0eOkJZU582bNw4ODmgruA5EQGRlZeFM6N27t7OzM9exEKIN
aQkLSEv4gr+//8SJ0xo1spaSyqirlsjIuHfqNHnPnn9L1EXy8orXLhsZGU2c
OBGKwnUs/8Ha2hrJSEiCESog3n5+foqKipVfc1BWViaWF/eKioo8PT1HjRq1
YsUKSauSBN8hLWEBaQlfKCgo+Ne/9g0cOL1x4+1SUrl10ZKbTZoobdpkLSGj
SiqD9v/SpUvKysobNmzgOpb/QFryPaAf4eHhixcv5r0iB37y8OHD2NhYbgNr
CK5fv66urq6jo0OvKSTqD2kJC0hL+AXS2bZtzn36TG3ceKOU1Mfa3LuRkTna
pMkEExOLFy9eCO3r9hqUDx8+7NixY/DgwSEhIVzHUm5jYwMtEdpJaLklPT39
9OnTc+fOZf4MDg52cXERhqPGX8LCwgwMDDQ1NW/dukWXSoj6Q1rCAtISfoEe
JTqP+/YdVFDQkpXVlZHxrLihU32Ota8Vl1OCmzRZ3anTpM2bt8JJhGfYp4Ap
KipCaps+ffq8efM4FzNbW1vSku+BHB0RETF+/Hic5KWlpWvXrlVXVxez9wsn
Jiaam5tju9zd3XNycrgOhxAHSEtYQFrCXz59+nT+/IUlS0zl5GbLyCxv0mSX
tPRFKanbUlIPpKTuSEt7y8oeatx4bdu287S09Pfu3R8fH895OuYWdMOPHTvW
q1evGzducDuLJrTk8OHDpCWVSUtLi46OZm5s4UhZWFjs3bsXJ62ysnK/fv1O
nTrFdYB8Izs728nJadq0adu3b6dzgOAXpCUsIC3hO4WFhZGRkXv3HjA2XqKm
pjt0qGGvXst+/31ljx7LBw1aPGmSvp7eIisr67t370q4kDCUlZUhzWloaKCX
mpqayuEoyq1bt0JL0GXmKgAhJCUl5erVqy4uLl5eXo8ePQoMDERzsX//fjk5
uY4dOx49epTrAPkDfPj48eNTpkxZt27d69evuQ6HEB9IS1hAWtJAIL2i/4Vm
3MPj2I4dLps3b7W3337okNuNGzfi4uLE8hEG1uTl5fn4+HTq1On27dv5+flc
hWFnZ0daUgWcqEFBQbNmzerTp4+hoSE8pHfv3goKCq1bt27ZsuXBgwfFYE4P
bCPq6cSJE42MjB4/fiwGW0QID6QlLCAtIYQBmMno0aONjY3fv3/PlbPZ29tD
S4Tz7cYcUlhY6O3tPWTIkKZNm/7000+///578+bNZWRk8O/du3dzqJF8ARIS
ExODNlBNTe3Bgwd0AZPgL6QlLCAtIYSB0tJSDw+PP/74A/1W5EFOYnBwcHBz
c5OcuUxrT3Z29rlz5yAk0tLSaFSZ/7dq1crGxkakZ5+Dk6SkpBgYGPTt2/fO
nTuirliEEEJawgLSEkJIgI0MGDDA3Nw8KiqKkwBIS2ogNTX10KFDrVu3lvr/
tGzZ0szM7O3bt1yHxp60tLQdO3Y0bdrU39+fnIRoCEhLWEBaQggPBw8eHDRo
0NWrVzmZMmLbtm2kJTWAJG5qatqqVSvmakmjRo1mz54tulOXfPr0ycnJqW3b
tsePH6cpSogGgrSEBaQlhPCALvnYsWM3bdoUHR0t+LU7OjpCS4TqpcZCRVlZ
WXJy8qhRo1q0aMGYiZKSEhyS67jY8PHjx507d/71119w0dzcXK7DIcQW0hIW
kJYQwgMSn6WlpZaWlq+vr+DXDi1xdXUlLamBr1+/Pnr0qH///k2aNEHrOmDA
gGPHjnEdVJ1JSkpCuzdhwgQIsEiPjSGEH9ISFpCWEEJFYGCgsrIyerLZ2dkC
XvX27duhJRL4cqI6UVJScuLEib59+zZq1KhLly67d+/mOqK6kZqaum/fvunT
p69Zs4aTi3KEREFawgLSEkKoyMzMnD9//rJly548eSLgVe/YsYO0pDZkZWXZ
2dn17t27devWtra2XIdTB9LT0w8ePKihoWFmZvb8+XOuwyHEH9ISFpCWEMIG
zklNTc2jR48KeGIrRkvovbG1ISYmxsjI6Ndff123bl1paSnX4dSKtLQ0Nze3
f/75Z+XKlY8ePeI6HEIiIC1hAWkJIWw8efJk1qxZ5ubmqampglyvk5MTaUnt
CQgIQIpfv369SLzVLj09/ciRIyoqKkuXLg0JCaFplgnBQFrCAtISQtgoLCy0
sLCYM2dOUFCQINfr7Ox86NCh2NhYQa5UpDl16hRyvZCPGmVeA3Hs2LERI0Ys
WbLk6dOnQuUkJSUlUKaUlJS8vDyuYyH4D2kJC0hLCCHEw8Nj9uzZODkFuVLS
krpSVFSUlpaGrMp1IN8FBpKTk3PhwoXu3bvDSSIjI4XKSQDOt8OHD+PEe/36
dV1jKy0tzalAtObMx2Yi8rKyshq2F1uUm5tbn03DD79U0BA3GVF4VgU/XJK0
hAWkJYQQEhoaumDBgsWLFwtynisXFxdkh5iYGIGtkWhokNfOnz/fvHlzU1PT
pKQkrsOpCvKyvr5+hw4dEB6L+XLj4uJw0u7evfvVq1cNEV4DAd9ITEzE4cjP
z/+emUDSDh48iPT07Nkzdmt5+fLltm3bnJycGuK4v3nzZt26dZaWlj9ckrSE
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
2bfPtH17bRGRp2RvlXxo3Xrz8uW6QjpLGkGqBbWEBKgliFBQWFjYsWPH8+fP
82/ZT3t7e75qiZeX15IlS7Zt2ybUE3DY8fPzV1NbKSW1k0b7UXst+SkhcWr8
eI2bN28J+jgQhF+glpAAtQQRFoYOHXr48OG4uDg+pQ9aApcDn7SEwWBA5ufN
m+fu7s6P9AVCbm6utbVN587/iYicp9FyauMkeSIiN/79d6GhoXEDX821VhQU
FPwsBVeEQwhQS0iAWoIIC7Nmzdq+fXvl9bGp4urVq3A5BAUF8SPxb9++6erq
amlpNfC38tWW5ORkc/PDUlLDabSbNFpRzZykmEbzlZCYuXatPl9nfNcnxcXF
4CTv3r0zMzM7dOgQueXZkcYHagkJUEsQYWHt2rU6Ojr8G5Lq4OBw6tSp9+/f
8yNxNzc3DQ0NCwsLfiQuWJKSkqysrJo16yomZkyj5dJoTJ5OkisiclxaesjW
rdtYLw4WdjIzM8Fpp02b1rt378WLF9+7d4/jfTRIkwW1hASoJYiwYGpqqqam
xr9ZG46OjvzTkt27dy9btgwCFj8SFyzFxcVpaWl37rj37z9WUnIonW5TusZa
QUUbKaLRUmi0y5KSY3r3Vjx79nxCQoKwr+wK+Y+Ojt63b9+gQYOUlZUPHjz4
+vXrnz9/5ufn40MchAC1hASoJYiwYGNjM3ny5GfPnvEp/WvXroGWvHv3jvKU
ExMT1dXVN23aFBsbS3niDQEwk+zs7JCQEAuLo0OGzJWWHi0pOUdaeo2EhLGE
xB4pqfXS0gvExBT69Zt14MChwMAX6enpQu0kGRkZ3t7e69evHzVq1OrVqx0c
HMBmU1JSWC8IRhAC1BISoJYgwoKbm5uCgoKvry+f0uefljx48GDOnDlWVlaN
+94+MY/76dNnTk7Ohw8f3bTJWEdns7b2JgMDo/37zSF2P3r0OC4uTnjHXUDO
P336dO7cOT09vcWLFxsbGzs5OYGQCLtlIfwDtYQEqCWIsPDkyZP+/ft7eHjw
aYLt9evXQUvevn1LecrHjx9ftGjRjRs3KE+5YZKfnw9+AhEcHA/KMywsLCYm
Jjc3V9D5Ik92dnZAQIClpeWaNWtWrVq1d+9eZ2fnDx8+5OXlCTprSIMGtYQE
qCWIsABhrl+/fteuXeNTgIOeLz+0BCRqxYoV69ate/nyJbUpI/wGzl1ycrKX
l5e5ufnmzZvhJO7bt8/NzS0yMrLRLD6D8BXUEhKgliDCQlpamry8vI2NDZ9e
KANacvLkScq15MePH5MnT96/f398fDy1KSN8gslk5uTkREREgJAcPXp07dq1
S5cuNTMze/LkSUZGhqBzhwgTqCUkQC1BhIWioiIFBYXDhw8nJCTwI31nZ2fQ
kjdv3lCbLMSyMWPG2NnZNe6BJY0DBoMB0vvx48e7d++CSaqqqs6dO/fMmTPf
vn0T3iExiABBLSEBagkiREyaNGnfvn1RUVH8SNzFxYUfWmJtbT1z5sxGOTW4
MQHSmJGR8enTJ0dHRx0dHUVFRW1t7Zs3b+LkGqQuoJaQALUEESLmzZu3c+dO
6MzyI3FCS16/fk1tsvr6+rq6ujiwpMFSXFxcWFgYHBxsamo6bNiw4cOH7927
l3+vRkKaFKglJEAtQYQI6MBu3LiRH3N4AVdXV35oyYQJE3bv3s2/NfORupCf
n3/37t2ZM2f++++/6urqXl5emZmZgs4U0nhALSEBagkiRBgYGKxZsyYwMJAf
ibu5uZ04cYLaVWTT0tJ69ep17tw5+AeFySJ1pLCwMCIi4vDhw8OHDx82bJi5
uXloaGhGRkZBQQEu0IpQCGoJCVBLECFiz549urq6jx494kfi/NCSJ0+e9OjR
4/79+wwGg8JkEdKkp6d7eXnp6+tPmjRp+fLl58+fDwsL+/79O4gKCglCOagl
JEAtQYQIS0vLpUuXent78yPxGzdugJZQOwgEot6oUaNevHhBYZoICUA5wsPD
bW1tdXR0oArt3r372rVrb9++BSERdNaQxgxqCQlQSxAh4uzZs/Pnz3d3d+dH
4jdv3rSysqJWSwwNDVVVVUNCQihME6k5YCN5eXlwTs3NzVeuXLl69er9+/c7
OzvDGcnOzhZ07pDGD2oJCVBLECHi+vXrKioqrq6u/Ej81q1boCXU3tkAiVq/
fn1kZCSFaSI1obCwMDEx0cfHx8LCwsDAQE9Pz8TEBMwzJiYGVyBB6g3UEhKg
liBChKen59SpUx0cHPiR+O3btynXksGDB0M/nU/rvyFc+f379+fPn+/evXv0
6FFwQg0Njb179z5+/PjXr184egSpZ1BLSIBagggRz549Gz9+/MWLF/kRXwgt
oXCaT35+vqysrL29Pa5YXg9AlSAWaL1z587+/fvBRhYsWHDixAlQFEFnDWm6
oJaQALUEESKCg4OVlJSsra35MbEFwhmFWlJcXBwXFycpKfnw4UOhfnluAwds
BCoDiN+XL18cHBy0tLTGjRunq6sLkok2iAgc1BISoJYgQkRMTIyysrKFhQU/
xiu6u7sfP378+fPnlKQGsRIMB7QkJCSkqKiIkjQRdkBIoGBB+aKjo83Nzfv1
6zdixAhTU9PQ0FCcjo00EFBLSIBagggRP3/+nDZt2r59+1JSUihPnFotyc/P
d3Z27tix49evXylJEOEgPT397t27ixYtatGixezZs728vH7//i3oTCFIBVBL
SIBagggR0DtWUVHZvn37t2/fKE8cYhxoSUBAACWpQS/+6NGjI0eOjIuLoyRB
hIDJZIaGhpqbm0+YMGHEiBF79+4NDg7OysrCBVqRBghqCQlQSxDhYuHChZs3
b+bHOEYPDw8KtQR67pDPefPmJSUlUZIgAkUK50hPT2/KlCk6OjqXLl368OFD
cnIyCImgs4Yg3EEtIQFqCSJcaGtrGxgYQAeZ8pSp1RLov4NBrVu3LjU1lZIE
mywMBiMuLu7cuXPq6upQpEZGRs7Ozu/evfv+/XtxcbGgc4cgvEAtIQFqCSJc
rF27Vl9fn9o31xB4enoeO3bs2bNnlKT28+fPMWPGmJmZ4XwQ0mRnZ79+/frU
qVM6Ojp6enr79+93cnLCBVoRIQK1hASoJYhwsXXrVjCTp0+fUp4ytVqSnp7e
pUuXS5cuYQytLUVFRXFxcffu3bO0tNy0adP69euNjY3d3NwSExNxig0iXKCW
kAC1BBEu9uzZs2rVqocPH1KespeXF2gJJcLDZDIhhkpJSd2/fx8XLak5UFaf
Pn26c+eOhYUFyOfy5ctNTEx8fHxwig0ipKCWkAC1BBEuiHeueXp6Up4ydM+p
0pLCwsKQkBBof+A3voGlWoqLi7OysogFWvft26emprZkyZKTJ0+Ghobi6BFE
qEEtIQFqCSJcQLTS0dG5efMm5Snfv3//6NGjT548qXtSOTk5Dx8+pNPpOCyT
N+BsxAKtt27d0tXVHTJkyIoVKzw8PNLS0gSdNQShANQSEqCWIMLFuXPntLS0
rl+/TnnK3t7eoCWPHz+ue1LQ93d2dpaSksInOFwhFmgFeQsLC7O0tFRUVOzV
q9fevXujo6Px5hLSmEAtIQFqCSJcODo6Ll269PLly5SnTKGWpKen29radunS
JT8/v+6pNT4yMzPv3LmzcOFCsBEVFRUnJyf0N6RRglpCAtQSRLi4devW4sWL
IehTnrKPjw9oyaNHj+qe1Pfv3w8dOjR8+HBc6YuDT58+mZmZjRgxYuzYsfv2
7Xv58mV2djYu0Io0VlBLSIBagggX3t7e6urqJ06coDzlBw8eUKUliYmJ27dv
nzFjBmoJQU5Ojp+f3+rVq0eOHKmrq3v16tWgoKCUlJS8vDxBZw1B+AhqCQlQ
SxDh4unTp/Pnzz9y5AjlKT98+NDS0pISLYmLi9PT01u2bFkTHykBhx8VFXXx
4kVtbe158+bt2rXrxo0b79+/T0tLwxVIkKYAagkJUEsQ4eLt27eqqqr79++n
PGVCS/z9/eue1NevXxcsWLBx48YmqyWZmZmBgYFWVlarVq1auXIlCImTk1No
aGheXh4+r0GaDqglJEAtQYSLT58+qampGRsbUx7xfX19qdKSL1++TJ48+cCB
A03wnkBCQsK9e/fMzc03bdpkYGBgYmLi4uICBYI2gjRBUEtIgFqCCBexsbEa
Ghpbt26lfFF3Qkv8/PzqnhS407Bhw2xtbYuKiuqeWsMHlCM/Px/c4/bt2yAk
69ev19XVBSuDwsRXAiFNGdQSEqCWIMJFenq6lpaWvr5+SkoKtSlDDLWwsKBE
S0JCQnr06OHm5tbotQQOEMQjLCzMw8MDPERFRUVdXR3ak4iICBzuiyCoJSRA
LUGEC+iV6+nprVixIjo6mtqU/f39QUt8fX3rmA6TyXz37l3btm0hwUa8xCtY
Byjip0+fXFxcVq9ePWLECA0NjTt37uTk5ODzGgQhQC0hAWoJInSsX79eS0sr
NDSU2mSp0hKI148ePZKVlQ0JCWmUAZrBYOTl5UH5Q3GNGzdu8ODBRkZGHz58
EHS+EKTBgVpCAtQSROjYsWMHaMnLly+pTRZcAuJs3d9N/OvXr1u3brVu3To5
ObnxaQlIl7u7u5qaWo8ePebOnevi4pKeni7oTCFIAwW1hASoJYjQYWJioq2t
TckgEHYeP35MiZZAmL58+bKcnFxjmh0MxxITE2NlZTVw4MDRo0fv37//3bt3
mZmZ8HnjUy8EoQrUEhKgliBCh6Wl5fLlyz08PKhNFrTkyJEjddeS5OTkU6dO
9e7du3HEa7CsBw8ebNy4cdSoUYsXL7azs/v48WNqamp+fn7jOEAE4R+oJSRA
LUGEDqiuoCUuLi7UJvv06VPQEgjBdUwnNjb20KFDI0eOpCRXggKUIyIi4sKF
C7q6ugsWLDA2NnZ2dn737l1aWlojHseLINSCWkIC1BJE6Lh06ZKOjg5026lN
ltASHx+fOqYTGRlpZGQ0Y8YMSnJV/+Tl5b148cLS0nJ1Kaampk5OTsHBwb9/
/xZ01hBEyEAtIQFqCSJ0QJQELbGxsaE22WfPnlGiJZ8+fTIwMFiyZAkluao3
GAxGSkrKw4cPDxw4APlft26dmZnZzZs3wbIa0yAZBKlPUEtIgFqCCB137tzR
1dU9evRo3ZNifx4REBBw+PBhb29v1ifkFkP78OEDZG/9+vV1z179kJOTExER
cffuXTh8EJJly5aBmfj6+qanp+PoEQSpC6glJEAtQYSOBw8eQNw3NTWtYzoQ
cyEif/36lZATdi0pLCyEoExuIdnXr1+rq6vv3bu3jtnjN3D4cIyhoaG3b982
MzMDG1FVVQXZ+/btW6NfnBZB6gfUEhKgliBCB/gDaMmOHTvqmA4EXxAPY2Pj
hIQE+Pfz589BS+7fv89gMKKjo52dneETctmbOXOmlZVVHbPHP+AA09LSPn/+
fO3atZUrV06cOFFTU9PFxSUrK0vQWUOQRgVqCQlQSxChIzg4eMWKFWvXrq17
Ur9+/Ro5cqShoWF8fDxxt8TLy+vr169mZmbwObm3Afr5+SkqKjo4ONQ9e9TC
ZDLBvnJzc798+QJHOnz4cAUFBbCyt2/f4u0RBOEHqCUkQC1BhI5v376tWbNm
2bJleXl5dUwKUti9e7ekpCRIDoiEubm5jY3Njh07ZGVlVVVVyaUJYjNw4MC6
L2JPOb9//3706JGWllazZs3mzJlz8+bNtLQ0QWcKQRozqCUkQC1BhA4Iptu2
bVuwYEFSUlIdkyoqKnrx4kXHjh3btm07ffp0dXX10aNHg5P06dMHLg0SCYLn
XLt2rX///h8/fqxj3qgCjjEiIuLo0aPjx48fMGCAoaHhp0+fsrOzcYFWBOE3
qCUkQC1BhI6CggITExMVFRUIr3VPLTc3t2vXruLi4mAjICfNmjWTkpKaMmXK
mzdvSKSWnp5ubW0tLy/fEG5EZGVl3b9/X19fHw5n2bJl586dCw0NTUlJwQm/
CFI/oJaQALUEETqgj29hYQFaEhgYSEmCs2bNAhsRKYVOp0tKSqqpqf369YtE
UvHx8YcOHRo9ejSDwaAkb+SAbNjZ2YGKzJ8/f9u2bQ4ODkFBQd+/f8cFWhGk
PkEtIQFqCSKM2NjYqKqqenp6UpKalZVV165dRUVFaaW0a9du8+bN5JL6/Pmz
sbExXFOUZKy25OTkvH///tSpU5qammvXrj1w4ICTkxN8kpGRIZD8IEgTB7WE
BKgliDBy9erVRYsWXblyhZLUPnz4MHjwYDExMWgxQE5GjBhBemV7cIBNmzZp
aWlRkrEawmAwEhMTfXx8LC0tN27cqK+vb2JicvPmzW/fvhUUFNRnThAEYQe1
hASoJYgwcufOHW1tbUoWev1TOk514sSJkpKS0GLA74ULFwYHB5NLKiAgYNWq
VVu2bKEkY9Xy+/fv8PDw27dvW1hYbNiwQVdXF4Tk/v37OTk5OJwVQQQOagkJ
UEsQYcTf3x+iv6GhIVUJ6unptW3bFlqM5s2bQ3wn/Vo6Hx+fZcuWmZubU5Wx
qsjIyAgNDXVzczM1NV2yZMnSpUuPHz8eFBSEo0cQpOGAWkIC1BJEGHn79i1x
c4CqBB0dHeXl5UVERDp06GBmZkY6nVu3bqmqql64cIGqjHHAYDDS09MjIyOv
X78OYqakpKSjowM7TU1N5dMeEQQhDWoJCVBLEGHky5cv27dvnz17NlWPKqKj
o6dNmyYhITFhwoTbt2+TTufKlStTpkzx8vKiJFcs4DBBSH79+hUREXHy5MkR
I0b07dt39+7dHz9+xNEjCNJgQS0hAWoJIoykpqYePHgQFILC5UHU1NSaNWu2
Zs2aqKgocimAIYAzjB8/PiQkhKpcEWRnZz948EBLS6tTp05w1Pb29rAvHD2C
IA0c1BISoJYgwgiDwbhw4cKoUaPILXrGlR07dkDQNzU1Jf2CmMTERGNj4xkz
ZlD4zrsvX75YWlqOHTt22LBhRkZGL1++zM3NxfXQEEQoQC0hAWoJIowwmcwb
N25MnjzZ1dWVqjQhqXnz5p05c4Z0CqGhoQYGBkuXLq37uFPwLh8fn9WrV48b
N05TU/PixYtBQUGpqan5+fl1TBlBkHoDtYQEqCWIkPLgwYMFCxZYWlpSlWBS
UpKzs3NAQADpFPz8/PT09Hbs2FF5E4hKTZ65ECuQXL9+fcmSJSoqKtu2bQNZ
IoREsMvGIghCAtQSEqCWIELKy5cvV61apa+vT1WCYA7fv3+vy4KoTk5Ompqa
la+m+Ph44mU0PP42Ozv7zZs3J0+eXLFixcqVK42NjW/cuPHhwwf4HMeQIIiQ
glpCAtQSREgJDw83MjKaMWMGhVG7jkmdOHFi4cKFd+/eZf8wKCjI1NT05s2b
P3784LrHxMREb29vCwuLjRs3GhgY7N2719nZOSIiAm0EQYQd1BISoJYgQkpK
SsqpU6fk5eXT09MFnZcScnNzjY2N2VeILS4uDggIWLNmjZKS0p07dzhG0hYW
FoJZ3bp1C4QEbGT16tX79+8HP2kIrx5GEIQSUEtIgFqCCCn5+fkQ6/v06VOX
0SAU8vXr11WrVq1YsQI0iclk5uTkPH36VFVVtXnz5jo6OixXATn5+fNnWFiY
u7u7iYkJaIyWlhb4FXwBh7MiSCMDtYQEqCWI8BIYGKioqNhAau/Dhw8XL168
Z88eEI+MjAwfH59BgwZJS0tLSUnZ29tnZmYWFBSkpaWBkLi6uhoYGCgoKICQ
3Lx5Ez7E5zUI0ihBLSEBagkivECI19TUXLFihaAzUoKtrS1k5vLly6mpqY6O
jnJychISEnQ6vU+fPs+fP//9+3dISMjJkyenTZs2YMCArVu3fvz4EW0EQRo3
qCUkQC1BhJe4uLj9+/cPGTJE0BkpYfPmzdra2teuXTtw4IC0tLSoqCi0P82a
Ndu3b9+lS5cWL17cs2fPKVOmXLly5efPn4LOLIIg9QFqCQlQSxDh5devX3fv
3m3evHl0dLRg35wbHx+vpqY2bty4mTNnQn5o5YiIiMjJyQ0dOtTIyOjVq1e/
f/9mMBh4kwRBmgioJSRALUGEF1CR8PDw3r17X7hwQbDjRV1dXZWUlNq0adOy
ZUs6nc6uJW3bttXT0/Pz88vMzBRgDhEEqX9QS0iAWoIINUlJScuWLdPQ0Pj9
+7eg8pCenr506VJwEjExMXYnAeC/4uLiPXr0UFRUXL58+aVLl6KiovBuCYI0
EVBLSIBaggg1mZmZ58+f79y5c3JyskCe40RHR2/evLljx44iIiIcTsIyE0lJ
SSkpqdatWw8ePHjJkiXW1taRkZH1n1UEQeoZ1BISoJYgQk1hYWFoaGjLli09
PT1re8OEyWTCn3z48MHTw8Px6tULZ89euXTphpvb06dPY2Njq30HDXwBvrlq
1aq2bdsSTiIqKiouLk7cM4HfkKvu3buPGDFi1qxZS5cuXbt27Y4dOywtLW/e
vBkfH1+Hg0YQRDhALSEBagki7IBaKCsrr169OjExsYZ/AjIDYuDl6Xn82LHN
q1frKSvrysvr9uih26/fyjFj1i1YsNfI6PKlS69evqxqyArs1N/fX01NTVJS
EpxEVlZ24MCBEydOnDNnzuLFi3V1dTds2GBsbHzs2DEHBwdvb+83b95ER0f/
/PmTY61XBEEaMaglJEAtQYQdBoNx9uzZfv36vXr1Cnyj2u9nZma+ePHC8tCh
hSNHThcRMZCSOk+n36LRHtBoXjSaA51uJiamKSk5o3XrVRoabq6uSUlJHC5R
XFyckJAAyjFz5sxhw4a1aNFCXV0dLiUPD4+XL1+CfmRlZfHtcBEEERpQS0iA
WoIIO0wmMzk5uVu3btbW1rzf0gtkZGS437mzdO7cyeLix8XEEqGJ4Pbzm0Z7
RqevlpSUl5a2On4cTINdeODfP378iImJyc3NNTU1HTVq1LNnzwQ7QxlBkAYI
agkJUEuQxoGurq6amtrr16956EFBQYHdpUvTR41aISYWXoWQsP8U0mi3abQe
4uI7t2798uULR8qgQ6mpqb169dqzZ09sbCz/DxFBECEDtYQEqCVI4+DNmzd9
+vQ5deoUqEJV37nh5jZdSWmPmFhaDZyE9fOWRhsoLn7QzIzDPXJycnbt2tW9
e/ewsDAcMYIgSGWaiJZAAxgREfHixYu8vLy6p4ZagjQOiouLN2/ePGPGDE9P
T65fCA0NnaKsvFdMLI5GY9ZGS4pLx5woNm9uY22dnZ1NpFZQUBAUFCQjI3Px
4kUcSYI0WKKioj58+FDtw02ETzRiLWEwGN++fXNzc9u+ffvkyZPnzp2bmJhI
SQcNtQRpNIB4TJs2bceOHVxXBdm8fr1u+/ZP6HRGbZyE+Mmh0YzFxXX++++B
j8+fUgX68uXLnDlzxo4dm5qaiqNKkAbL79+/z507N3v27AULFlhaWj558kSA
Cw82QRqfliQlJfn4+FhYWCxbtkxJSal///7dunUbP348VK3CwkJK1opELUEa
Dfn5+XCxzJo1y9ramqPt/fTp07gRI+wkJH7W3kmIn3d0urqs7GFzc0g5Ojra
2Nh40KBB/v7++PgGaciAM3/9+vXw4cODBw/u2rXrkCFDJk2atHXr1qtXr4aE
hKCi8JtGoCVQhTIzM9+8eXPlypVt27YtXLgQbKR3794tWrQQERFp3rw5OImH
h0dNZkHWENQSpDHx5csXfX196BjevHmTXRjO2NjM7dLlhYhIMVktyaXRtouL
b9DV9fLyOn78OFyYJ0+epORBKoLwFQgrkZGRBw8e7N69O/Gepvbt2w8dOnTG
jBl6enqWlpYQU+ALgn2rVGNFeLUElBVqhY+Pj42NDXgsNKrDhw+XlZWF+sNa
whqcRFlZ2dXVldrKg1qCNCagBX748OHy5cuXLl3q6+vLeryyeP78PS1afKXT
yTkJ8XNJVHTJsGEL58+fPXu2oaFhUlKSYA8WQWoIYSZmZmbdunVjfzOCtLR0
z549IbJoa2vv2bPn3Llzfn5+CQkJeA+QKoRLSxgMBpz9N2/e3Lp168SJEwYG
BqAHPXr0EBUVZb1Kg91JJk2a5OjoSHnvDLUEaWTk5OTcuHFDQ0NDU1Pz0aNH
xK3FIX372tdyAk7ln0c02qLmzYcPGrRjx47w8HBBHyiC1AIwk5iYGFNT086d
O1d+cxMgJSXVu3dvFRUVIyOjCxcu3Lt3LyQkJC0trdq3MCA8aPhaAuf358+f
UVFRL168ABs5ePAg9OkGDhzYrFmzyirCAraCzfLDSf6gliCNkczMTBcXlzlz
5qirq/v4+GRkZLRv29aTTv9dNy35QKPpiIpqLloUHR0t6ENEkFrDZDK/f/9u
bGwsJyfHfiue/bWSxD9atGgxevTo1atXQ2jw8PB49erV169fWdPQkJrTMLUE
HBW6b6mpqdCUgY04ODhs2bJl7NixEhISPFSEhaSkpJKSkrOzM5+eYqOWII2S
X79+3b9/f8aMGWPGjLG3t2/erNkjGi2/bloSQaOtk5Y23LpV0AeHICQBM8nN
zQXfaNeuHevOPA8/gX+0bdt24sSJhoaGbm5uISEhMTEx6enpBQUFlMy5aPQ0
HC2B88VgMODsQ68tPj7+wYMHhw4dgugPNaEmKsJeN/r27WtnZ5eUlJTBH44c
OTJlyhQLCws+pY8gggL6AtDLU1VVFQdERDxLl5Sv492StS1b7tiyRdBHhiB1
IjExcf78+S1atKhJGGIFLNAYOTk5dXX1M2fOBAUFff/+PTs7Oz8/HyfI86Dh
aAmcKbDK48ePT506tXnz5jU89ZWRlpbu1avXoEGDBvONjh07/vPPP/Cbf7tA
EAECl0+PHj1kREXtabT0umnJExpNXVy8W4cOgj4mBKkr8vLybdq0ERMTIxeb
QFT69eu3Zs0aNze3uLg4gcRZoaCBaAmTyQSH9PX1NTIyGjJkiKSkJGktkZCQ
gJrTvn37DnwDhBlyCL/5twsEESxwBbWSktpEp0fVTUts6fRhEhKyrVoJ+oAQ
hAJkZGR4PMepFkhhwYIFZ86cgT44DoutigaiJX9Kx5Pk5uampaWBRr57987e
3n7dunUgqFJSUizVrMl5h68NHTr0ypUrkZGR3/iDqanpxIkT4Tef0keQhsDp
06end+/+QlSUtJMwaDQDMbEVmppPnz4V9NEgSJ2IiorS1tZu3bp1DQ2ECFjw
W1paWklJaefOnZ6enuHh4cnJyZmZmTjOhAcNR0vYKSwszMjI+Pr169u3b93d
3S0sLNTV1Xv37s0+pohHffjnn3/mzp3r7e3NJx3FIa9IUyAmJkZp2LAzYmLf
yWrJYzpdvU2bY5aW0OMQ9NEgCHkglBw4cKBHjx7i4uI1cRIZGRl5eflly5Yd
P37cz88vODgYutu/fv3CISU1oWFqCQvwyby8vMTERPATUM0zZ85s2rRpypQp
7du35/2Ar1WrVmpqal5eXvwwE9QSpCkA186+PXsWd+/+UESkqPZOkk2jbRQT
W7Vw4bNnzwR9KAhCnszMTGjzu3fvzvXxDauPDMYCfec5c+bs2rXLzs4O+sVB
QUHJycmoIrWlgWsJO6AoOTk5nz9/9vHxsbW1NTY2XrRokYKCQtu2bSvXEEBW
Vnb+/Pn37t2j3ExQS5AmQkhIyDJV1a0tWwaJiNT28c0FMbHZ/fpduXz558+f
gj4OBCEDsWgJdIcHDBjAtf8LveN///139OjR2traBw8etLe3f/z4cWxsLL5h
oS4IkZawA7UlLS3t9evXDg4Oe/fuXbZsmbKycq9evaSkpDjMRFVV9eHDh9Qu
C4xagjQRoKN3zdFRfdy43dLSITV7OQ6TRsuj0W6Kis7899/9u3Z9+fJF0AeB
IGSAKJOQkABd4EGDBrGrCDHnd8iQISoqKqtXrwYbcXJyAoEHFcHhIpQgpFrC
TmFhIVQeb29vCwuLJUuWgJ/873//a9++PTFWtmXLlrNnzw4ICKDQTFBLkKZD
Tk6OrY3N/NGjDf/5J1BEhPfbhBk0WhyNdkNEZGaXLvorVnz8+BHvYCPCCOEk
Z86ckZeXJ2ykRYsWPXv2HDVqFASULVu2XLp06dWrV3gnkB80Ai1hB9wjLCzs
6tWrxBCU/v37d+rUqUOHDmARoaGhVJkJagnSpPj9+7ejg8P8qVMXdejgJCIS
ISKSWnpLpKj89kgBjZYJQkKnvxQROSwhMapPn20bN8bFxaGTIMII8ezGxsZG
QUGhTZs23bt3Hzx4sLq6uqWlpZ+f348fP7Bi85VGpiXs/Pr16+3bt6AQixYt
GjBggJqaWlpaGiXVCbUEaWqA0gcFBW3ZtKl/584qcnLHxcUD6PRoGi259PZI
EI3mJCpq0Ly5YseOIwcPdnBwIF72hyDCSH5+vp2d3eTJk0ePHg09XFdX14SE
BEFnqgnRiLWEBfFGgydPnvj7+1MyURG1BGmaFBQUREVFQZ9ReeTIZqUvqJIU
FRUTEZEUE+vTtavusmVubm44FxgRdsLDwx8/fvz582dc8UwgNAUtIWCWQklS
qCVIkwUuouLiYmiuCwsLk5OTIyIiYmNjs7Oz4b9FRUV4cxtpBDDLEXRGmihN
R0soBLUEQf6UPtkBP4Hf2IAjCEIVqCUkQC1BEARBEH6AWkIC1BIEQRAE4Qeo
JSRALUEQBEHqCJPJLCwsTExM/PbtW0FBAdcvJCUlhYaG/vjxo+mMv0UtIQFq
CYIgCEKOtLS0N2/e3L17197e/sSJE4aGhlu2bHn37h37LLbi4uKMjAwPDw8j
I6OVK1cePHgwPDy8iZgJagkJUEsQBEEQcnz+/Pn8+fMbNmyYNm2arKwsxFwR
EREwk8jISGL0ODhJSkrK1atXR40aRawx26xZMwcHh1+/fgk67/UBagkJUEsQ
BEEQcqSlpYWGhgYEBDg6Oi5cuFBSUpJOp7dr1+727dv5+flgJj9+/Lh27drI
kSP79OnTpUuXNm3adOzY0c7OLiMjQ9B5rw9QS0iAWoIgCILUkeLiYlCUwYMH
i4mJQeTdt29fTExMTk6Om5vbtGnTVq1a5evre+bMGX19fUtLy69fvzaRmfio
JSRALUEQBEHqDoPBsLW1bd68OUTe2bNnP3v2zM/Pb8WKFZs3b+Y6CLYpgFpC
AtQSBEEQpO4wmcy4uDhihImcnJyZmZmRkdHGjRuzs7MFnTWBgVpCAtQSBEEQ
hBKKiooUFBQkJCRERUU7d+68atWqgICAJvK8hiuoJSRALUEQBEGoYs2aNcQN
k/79+585c+b379+CzpEgQS0hAWoJgiAIQhWXLl3q3LkzBN9hw4Zdv35d0NkR
MKglJEAtQRAEQaji/fv3ffv2heDbtWtXGxsbQWdHwKCW8IDJZBYUFGRmZnJ8
XpWWwDfz8/PrK3cIgiBIY8DX17dnz54QfKWkpHbt2oUPcar9pMkCWpKamuru
7p6VlcX+OVctSU9P9/PzS0hIqN88IgiCIEJMTk7O2rVre/fuLSkpCfF3+fLl
kZGRgs6UIEEt4U1UVJSWltaNGzeg5rCGRlfWEvAWR0fHffv2BQcHCyinCIIg
iJBRXFz89OnT8ePHL1y4sFOnThB/p02b5uPjI+h8CRLUEt4kJSXt2rVLTk7u
8ePHv3//JsyEXUvgk/z8fDc3t86dOx85ciQ+Pl7QWUYQBEGEAAgf2dnZqqqq
586dc3BwGDZsGMTf//3vf7a2toLOmiBBLeHNr1+/PDw8oEzatm3r7++fk5Pz
p6KWgJP4+flJS0uLiorev3+/ya7LhyAIgtQKCCgQX8aMGZORkREbGztp0iSI
Na1atdq+fTv714qKiprUMiaoJbyBypCYmNiyZUsoFllZWScnp8zMTJaWgOje
vn27WbNmsHXw4MH4BAdBEASpCYWFhe/fv+/Tpw8EDhAP+ERTUxN6uBBNFi5c
mJqa+qdUSO7du7dr166kpCRB57f+QC2pFvDYefPmiYqKiouL9+zZ8/LlywcO
HAAtMTU1tbe379Spk5iYGJ1O19fXj4mJEXRmEQRBkIYIOEZ0dHRycjIICXR4
Q0NDdXR0du7cCf8lvgCRpVu3bhCCFRUVPT09GQxGZGTklClTPn782KTuw6OW
VEtOTs7JkydBS8A9JCQk5OXlR48ePX78+GnTpvXv359wEig0R0fHnz9/Cjqz
CIIgSEPE1tZ2+vTpkydPPnjwIMQLAwMDTU1N9s7s7du3x44dC9Gkffv2y5cv
v379+oIFCy5dusQ+4aIpgFpSLaCswcHBxIunCTNp0aJFu3bt2rRpw3ISGRmZ
kJAQ+KagM4sgCII0RLS0tGRlZSGC9OjRQ0lJCf77+PFjdt/49u3b4sWLRURE
xMXFO3ToAA5jYWGRkpJSXFwswGzXP6gl1QLVBmS1a9euLDMRKYdwEvgH1LHk
5GRB5xRBEARpoBw/fnzQoEHQq+3bt+/KlSu9vLw4Hs3Afy9cuDBixIhWrVop
KCgcOHAAREVAmRUkqCU1RF1dXUZGhvAQQk5o5YCW7Nmzp/JisAiCIAhCEBkZ
ee7cORMTE1tb27dv37KGlLATGxvr4OCwf/9+R0fHxMTE+s9kQwC1pIZARZKT
k2O3ERbwoa+vb15enqDziCAIgiDCDWpJDQkNDe3SpUtlLREREfnnn38yMjKa
2uM/BEEQBKEc1JIaUlRUNGLECAkJCQ4tkZKSGj9+fJMaJo0gCIIgfAK1pOZs
2LChffv27DdM4N+ysrIHDhxALUEQBEGQuoNaUnNu3rzZt29fjrslcnJyb968
EXTWEARBEKQxgFpSc5KSkkaNGsXuJKKiov369cPBrgiCIAhCCaglNYfBYCxe
vLhFixasJzht2rRZvny5oPOFIAiCII0E1JJaceTIkd69e7OGl3Tr1u38+fOC
zhSCIAiCNBJQS2rFw4cPx44dy9KSQYMGhYSECDpTCIIgCNJIQC2pFUlJSWpq
aqKiosTU4P/++y83N1fQmUIQBEGQRgJqSa1gMplbtmxp3bo1lFLHjh23b98u
6BwhCIIgSOMBtaS2XLp0aejQoXQ6HX67uLgIOjsIgiAI0nhALaktL1++nDt3
LpTS1KlTIyMjBZ0dBEEQBGk8oJbUlqysrPXr14uKimpoaODirgiCIAhCIagl
JDA3Nx86dKipqamgM4IgCIIgjQrUEhJ4enqCmfj6+go6IwiCIAjSqEAtIUFE
RMSrV69SUlIEnREEQRAEaVSglpAgLi4OzCQ7O1vQGUEQBEGQRgVqCYIgCIIg
DQTUEgRBEARBGgioJQiCIAiCNBBQSxAEQRAEaSCgliAIgiAI0kBALUEQBEEQ
pIGAWoIgCIIgSAMBtQRBEARBkAYCagmCIAiCIA0E1BIEQRAEQRoIHBJCQxAE
QRAEERyCMiIEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRBE
UBQFb5kxkBwz5nonV0wsP/2t4Y5p0vThi2fYh3xnCuaIhIzCoIc7O9F777JJ
LxKCZHnx7sYySVoFFEbcjiuu4V+nnd07Qqzin68xSWRw/S4z28NOs3PXTXcC
C8lnFxKxX9GG3mPBPO+4PPLJNFyKvljt3DBn1Ux5BYUBKoNaDnSNE3SOeFOY
HbxtzWBxyVmHbRLyBZ0ZQcNMCL2g2E5p1+HInDqk0nSKNCvq9kojA+U5AwdO
m9ZTUXJVVU1HjchwtVmjtkljMAQ5DeUWUhZv+VN2lOa5cQFt1wb1EvYYK6rI
/g0JIjM3LlixQr0cTc2FO5YrwDmS+fsVmX9OfChgTyvdemdfevnWcTMepQnq
oIQEZmGKy5V17WV4huAGk2wNYeR9d7ug3nqUYlvIAF3V/nmNvCQ38fpMraWd
S7Isu0L/bUoWD6dlfnps1Knk6PrURboK0z3Hl9X3cbbe9eZu9QgzPdDvwVWf
s5MmlRRWrwavJeHe64nWRbaNdVgdfLMRkPfdb17pWVNU9vleh3SaTpHmZ4S7
P31w0m5jRwravbywN17X/V0WafUuCWeSFm/4oyWU5rmxwnA92uuvc1RxLiDo
3Pc60L9P6XfEdvglsW97qc6WQIcO58OxlLnByEsL+/LCxv6g0qweLIure53k
U7IkSH29f+AC+6O6JVFfRfP9r+r/ghloP/3sI6fhJVnuddSVV5YzohxGQPWj
jzDY/OZHHZoLZuGn9fNKmgMZ6R2+MeTTafAwXzotlBAGLUn/fLZfafs8dtKD
pnyrlVn4xUgXAqLMOIUL72IZdSmJJlekzFijRZS1e4kvTNvwU0vKoDTPjY4a
aUkpzITQUwNKYs4i53fsdR3vllRDfpLLcLaHFF26dROhwh/4lCxpSrRE/eWn
u6uaQ9BvfiAwvZrvMwtD1o+3/5zgUq2WFGa9WDqVTpfSPOeSUvemIjfj83Ub
+1dhuTV90CScEA/XGr6WQBMUG3HP1vZlQmZTiKBVwMy6dlRZnNZHT+9FMgXP
FptakSaaaFPW7qW+OSxXD1pCaZ4bHTXXEiDH+ehokUoRJD/97U5jlZYiwxbh
2BJuMH6FnTUxOXb4xkO3VxFfsr4T1b7O/sCnZElDaElm9qNZ/UtumxnbZPKO
+4mv1i04nJKXVI2WMAvjDxtI9+hz0D+0EOtWzREeLUEYb+7qt5ZaeOJCIx8K
wjdQSxoZtdKSP6kfjnWmyRgc/t4Yn8rXE6n88Qc+JVuLDJRqya8yd6XJK9xJ
4KURWRdVVf2T/zCq05Ifoaemqnp+bSr9PspALREWmAXBG0ftvPe2kd++4yeo
JY0M3lqSF/bK1cs7jjUsnJH1YEoHmrp+eKOcxFA/NHYt+ZMWdroHZIK+2Olt
lS5RkOa+ZMnLzL+PoqoZW4LUFtQSpMmAWtLI4K0lJUVXoWUrDtefThs391km
pZlgMrKiw8Ji4ptEf6HRa8kfZozRkpIhd/NXhvzm/l3mG+eJJ90LmHXQkrys
hE+RkcHhL27d+JxBRb2hPEHBglrCD+qzkhCtYljsR2+3u5/jKblbyEhNhHb2
W+ArN//AdOGMhoykry9uuT76Es8+Khi1pJHBU0uKQ1aO42jZSip2VFRW+bSz
VBvj0tVMFBQGqI2WotGUicBUESYj/ZHfOU191f7/DSIWqegjN1170v6rF8KS
UsNszm7tq1A6cJw+Yss+YsJ+kb/jAnlinZQ5Kp1LtmrfDPubYObnK5OIrePG
9StNs8LJLfpkpF66ddq0nhN70ImQx8x988hmnp6iVMne529feScitcKVnvvz
45lzOyctJXZXgoykotpwHZP1158+T6dwml0D0BLm1/cX/lMbINlCZff2tz8o
al3/aglYxw0taRpNVvbI6wxuXy2O3Kl8IaI0i1VrSfkyAlzW3+BSaaGO+Xv/
38K1c0eqTOvZXW7y6G0XznzhmHD89dXppbtXK44ZOHD+dDnJZTfCeCZYmHLb
2XS6+pQhKjO6ynWfPXaP652yAbdMRtq9W383zZ9k5naHx1hcZnpCgIX11rFj
ylb+may41fpIQDy3x1KFvyIuXd49e8aWvVu01NU3b9misWOLR+Cra9N7HQ0q
qPx1XvDWEkZu/I1bx+ctLc+T/NJd+k6vQnn3Cxgxn+7vMl8xfHiv4QMm/Ddh
6H+ll3B6pSPPTQ868X9bxs2YMgQuz/91HjNUz3L/c27Hy+MUl0BhaQC/vr+2
tN6qOKrX8OGj+vfqNUlx63mbsLRahB7qK0nhz0DDrVtmwFmotIQF++VcfnUw
YsI9Nm/VHbdkwoBp7dp11THd7BmZylGqVRdpxSmTREMNZWJ2SEtx5lR51VHt
2v23TsPh7ZeyEVxwEo/83aS2VcuRtYkLzNzgl076RqWLfpQwRnPu8Vtu8b9J
ylTJJWN2XH80nKwBCgolqdk8eJSWEu6iPWvSll3WetvHSUjvfvJ3/axqQnyt
avtfLWGUFvgWDaWlM+VVxnbtPMdA3dr7UVWxgPE15Ob6HWojoMSmT+ve+X/q
k8xcXHmUAGoJD3hoSeG7+1vlqulwpdrsKhMD9trOTnai94I5JXNXZSRn7dly
97Grq+uTB6ccdvXrUxb8/5tk9yg4cKN26bTNskVRirwvzxhYYb2UClqSHnp+
3Jy//sB5couCt8xmzxVc1Dkh15fKtlxibnZrx97RxIwV9lW/chM9Jo8sTU1E
0/bco0eQSX+/C7ePj1Uu86V1K58kUPTgSuBawigblUrQ3/RiFiViwqYlfwrS
PCd2gMTlzR1yKl+XaSEH1U3iiau7ai0hlhFwmDW3ZPZX5UrIZGT731gvW1pp
X2d/ObRikoV1WYhkMlLOmpXMa1iz5RN7bcyIf3njubfR3lmSlWoUR4IvM4K3
Txl7/MKXzNIEGbnfDmzuS6dPsriazsj7ZFTFJi4DrpjZ966v6SA93/LYR1b4
zs0IO3pkjqzcuuve2ex/AlfKnA4zTl1lb8qYabHeC1RkSPTdqtYSZkKY/cRR
0hrqdz6VdzlB6ny9DvSXHrXNKPgnt4YU4u/18yvaiCjo6z/+9p34K2Zm6oeT
lsr9//NhX5guI+rajBGmt9xZR8H4Gnp96iR6x3a7HnAOWuZ1iiktjcIg3709
Jdss1/KNKss8IzrIbuIEESWFi8G1GaVPbSUpzot7+Mj/rIthd1muly0jMdJ5
fH/i6sgOc1s0Q+teeNkpKwx9bNJVhjZM/tLHCneuq7lq8rK/mGwumTgJDXVc
6NmpYw/7BmaXXolQti6wry7tTJ/FMjPD7aZXsYlL4WYHG63vL9vHzNOfFbIh
oN/WmC+tPPZqaK0nQZSerB70mTPciPoJlfPGhWX/0HuMGe4QVVLTih9fnSNR
4RkxjxBf69pe1pBKbDttPWWsqiPLXhh5KXfcNnWk99bVelopFhQ+dZqqpOH2
rnx+H0ipV8mX6TMrXh1soJbwoKKWiGlZ7jl2zMTExM5Kx1i9dWlMrv4+MDNq
yzzuWlKcF7x6LiEPHTYfTmbzTGb0E+O2pRu6tD/8MrPg6Y2VbeAkzvRP/hsj
mU+vzhHnpiUEv6Ivs6Irl5P7N1e9jM+c6t/c4G4ItIrfD68plxn6Go8vZdn0
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
AAAAAAAAAAAAAADw3/M3Fvp4RQ==
    "], {{0, 470}, {733, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{333.9636363636372, Automatic},
  ImageSizeRaw->{733, 470},
  PlotRange->{{0, 733}, {0, 470}}]], "Input",
 CellChangeTimes->{{3.709470347139618*^9, 3.709470397164242*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6945082211811686`*^9, 3.6945082350165057`*^9}, {
   3.694508353277437*^9, 3.694508357986554*^9}, {3.694509485037609*^9, 
   3.6945095303971586`*^9}, 3.6981358145867968`*^9}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOptSolverFobj", ",", "DGOptSolver"}], "]"}]], "Input",
 CellChangeTimes->{{3.69813587956089*^9, 3.698135900942071*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DGOptSolverFobj", "[", 
   RowBox[{"i_", ",", "j_", ",", "d_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "=", "0"}], ",", "numberOfAtoms", ",", "ncols", ",", 
      "nrows", ",", "k", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "d", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"f", "+=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"i", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"j", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}], "^", 
            "2"}]}], ")"}], "^", "2"}]}]}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGOptSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "f", ",", "y", ",", "v", ",", "w", ",", "i", ",", 
      "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "z", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"z", ",", 
        RowBox[{"3", "*", "numberOfAtoms"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", ":=", 
      RowBox[{
       RowBox[{"DGOptSolverFobj", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "#"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "y"}], "}"}], "=", 
      RowBox[{"NMinimize", "[", 
       RowBox[{
        RowBox[{"f", "[", "y", "]"}], ",", "y"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "y", "]"}], "/", "3"}], ",", "3"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", "iloc", "]"}], "]"}], "[", 
          RowBox[{"[", "jloc", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", 
          RowBox[{"Length", "[", "y", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwl0G1IU3EUBvC10AqKEBGNcuxmiDJ1mHmFJdF6AbdCxrq9KFrOUJsKRY3I
EExmJisj8u72cvU65wcjkGEur9SHcBGVisxc2IvaWFtik2WNBk2D7vPvw+EH
h4dzOIeqPm+skctksjyp4Fqvq+pBe1jb4XGaoCFovQrtqmXizOn7LZB2jbVC
YSHDBtnsA7dJXk874I9kfhTm3PjkgRWLCa+gWagMkfn2CeKkmPobKjL3EQ3b
N8Rh73iMWG7ZuvEh9vhWNsES2yIHvy5HiGyQEuGH0rwx+Cdr+v2wZOeV8Cxc
mW7yw2bhUgie6vtucEsyujNGGOj/XAan1EMm+C5WXgcHXzc1ws2HuGdwMuoh
+oTxl/CcanYGptd756FbTy1B+fqEKNxd4FyF1KO3257iDm9zOuzv2ZEFM125
anh5z7oCWE2XFMI5pVsDb70o3gvv0kVaWDGceASqjmsqYd1jtgauFVnNsCfp
ZgP8q/logQwTb4PxnwsdUMm334P5J8Vu6IvxLpLjDo7AtIYyEW4RlkKwS6b4
Bdt0zCr0MmeJ81qHfETyy2FdErwgpKRA/9CxNFh/LaKEiYHSDNK/cyIbPndU
EVkfT8NgzgCxNrCzGEbMtcTuCfuUiL9wrV64q1BhsXaGtUdH/2szDpqcknPJ
T4iUwJmhJnSxEer96hb4Zv83Yn70ehfU9fEs/AeJrpd4
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.694443377092915*^9, 3.69444339110975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"C", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "5", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eij", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"DGOptSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "y", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6981360211258264`*^9, 3.6981360483600693`*^9}, {
   3.6981360788457885`*^9, 3.6981360876976595`*^9}, {3.6981362425377584`*^9, 
   3.6981362793146505`*^9}, 3.700314325248334*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eij", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "eij"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGOptSolver", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698136335320798*^9, 3.698136365971901*^9}, 
   3.698136419643999*^9, {3.6981365233312697`*^9, 3.6981365309578285`*^9}, 
   3.6982328271785564`*^9, 3.698233064588676*^9, 3.6982342865286937`*^9, 
   3.700314325301742*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", 
    RowBox[{"D", ":", " ", 
     RowBox[{
     "Solving", " ", "an", " ", "instance", " ", "with", " ", "100", " ", 
      "points", " ", "using", " ", "optimization", " ", "based", " ", 
      "method"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "It", " ", "can", " ", "take", " ", "a", " ", "lot", " ", "of", " ", 
    RowBox[{
     RowBox[{"time", "!!"}], "!"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", "100"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "k", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"MDGAllPairs", "[", 
        RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eij", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"eij", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"0.50", 
           RowBox[{"Length", "[", "eij", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
       RowBox[{"MDGCreateInstanceFromSolutionAndPairs", "[", 
        RowBox[{"x", ",", "eij"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"MDGOptSolver", "[", 
        RowBox[{"i", ",", "j", ",", "d"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"CheckMDGSolution", "[", 
        RowBox[{"i", ",", "j", ",", "d", ",", "y", ",", "False"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"f", ">", "0.01"}], ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"k", ",", "10"}], "]"}], "\[Equal]", "0"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{Seed,Error}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "f"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.694509866767895*^9, 3.6945098916890173`*^9}, {
   3.694510093362407*^9, 3.6945101089935975`*^9}, {3.694510169324609*^9, 
   3.6945101956066246`*^9}, {3.69451025730608*^9, 3.6945103028323336`*^9}, {
   3.694510333348612*^9, 3.6945103372228565`*^9}, {3.694510375701194*^9, 
   3.6945103983735256`*^9}, {3.6945104397134395`*^9, 
   3.6945105412985134`*^9}, {3.6945116235631905`*^9, 
   3.6945117051807966`*^9}, {3.694511748936102*^9, 3.694511751267356*^9}, {
   3.694511828015873*^9, 3.69451182813148*^9}, {3.6945118732869487`*^9, 
   3.6945119184429393`*^9}, {3.694512052222779*^9, 3.694512063708476*^9}, {
   3.694512108959667*^9, 3.694512122482854*^9}, {3.6945122224563627`*^9, 
   3.6945122549831843`*^9}, {3.6945122929003396`*^9, 3.6945123044169874`*^9}, 
   3.6945123946710157`*^9, {3.6945124631794453`*^9, 3.6945125052038*^9}, {
   3.6945126788009663`*^9, 3.6945126790627346`*^9}, {3.6945130547371454`*^9, 
   3.6945130548839865`*^9}, {3.6945135081915073`*^9, 3.694513508353938*^9}, {
   3.694519946259391*^9, 3.6945199465126286`*^9}, {3.6945256242761097`*^9, 
   3.6945256246907053`*^9}, {3.694525800598526*^9, 3.6945258010835543`*^9}, {
   3.6957188810695877`*^9, 3.695718892192297*^9}, {3.6959992062308846`*^9, 
   3.695999250403311*^9}, {3.69807248104105*^9, 3.6980724810570617`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGAllEdgesSolver - Solver for complete distance matrices", "Section",
 CellChangeTimes->{{3.694440270104432*^9, 3.6944402903355665`*^9}, {
   3.694508362021762*^9, 3.6945083745408287`*^9}, {3.6945086248727016`*^9, 
   3.694508627838993*^9}, {3.6945094785730658`*^9, 3.6945094800751905`*^9}, {
   3.6945095153284197`*^9, 3.6945095197760963`*^9}, {3.6981344064787574`*^9, 
   3.6981344229460754`*^9}, 3.7003220682508497`*^9}],

Cell[CellGroupData[{

Cell["Main concepts", "Subsection",
 CellChangeTimes->{{3.698134238989613*^9, 3.698134242903209*^9}, 
   3.7094665937853384`*^9}],

Cell[CellGroupData[{

Cell["General idea", "Subsubsection",
 CellChangeTimes->{{3.709465577499*^9, 3.70946560433134*^9}, {
  3.7094666034257517`*^9, 3.7094666078966484`*^9}, {3.7094667051407757`*^9, 
  3.7094667208634553`*^9}, {3.709469242957382*^9, 3.7094692452832413`*^9}, {
  3.7094709664941397`*^9, 3.709470986290042*^9}, {3.709471493242118*^9, 
  3.709471513977575*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"The", " ", "matrix"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["D",
   FontSlant->"Italic"], 
  StyleBox["=",
   FontSlant->"Italic"], 
  RowBox[{
   StyleBox[
    SubscriptBox[
     RowBox[{"[", 
      SubscriptBox["d", "ij"], "]"}], 
     RowBox[{"n", "\[Times]", "n"}]],
    FontSlant->"Italic"], "  ", "=", 
   SubscriptBox[
    RowBox[{"[", 
     RowBox[{"||", 
      RowBox[{
       SubscriptBox["x", "i"], "-", 
       SubscriptBox["x", "j"]}], "||"}], "]"}], 
    RowBox[{
     RowBox[{"n", "\[Times]", "n"}], 
     "\[IndentingNewLine]"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"must", " ", "be", " ", "known", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "distances", " ", "are", " ", "given"}], ")"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"From", " ", "D"}], ",", " ", 
   RowBox[{
   "it", " ", "is", " ", "possible", " ", "to", " ", "create", " ", "a", " ", 
    "matrix", "  ", "M", "  ", "such", " ", "that"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "=", 
    RowBox[{
     SuperscriptBox["X", "t"], "X"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "By", " ", "doing", " ", "the", " ", "diagonalization", " ", "of", " ", 
    "the", " ", "symmetric"}], ",", 
   RowBox[{"positive", " ", "semidefinte", " ", "matrix", " ", "M"}], ",", 
   " ", 
   RowBox[{"we", " ", "get"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "=", 
    RowBox[{
     SuperscriptBox["V", "t"], "SV"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Finally", ",", " ", 
   RowBox[{
   "the", " ", "solution", " ", "X", " ", "is", " ", "given", " ", "by"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{
    SuperscriptBox["S", 
     RowBox[{"1", "/", "2"}]], "V"}]}], ";"}]}], "Text",
 CellChangeTimes->{{3.709469382050675*^9, 3.709469599132248*^9}, {
  3.709469785822062*^9, 3.709469803624137*^9}, {3.7094699947486534`*^9, 
  3.7094700397214284`*^9}, {3.709470086725078*^9, 3.7094702874048223`*^9}, {
  3.7094703757835827`*^9, 3.709470383110248*^9}, {3.709470689377967*^9, 
  3.7094707919166336`*^9}, {3.7094709766888742`*^9, 3.709471276383041*^9}, {
  3.7094713512336245`*^9, 3.7094714794163933`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.698135035451965*^9, 3.6981350399559503`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGAllEdgesSolver", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGAllEdgesSolver", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numberOfAtoms", ",", "k", ",", "m", ",", "\[Lambda]", ",", "v", ",", 
      "x", ",", "i", ",", "j", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "d"}], "}"}], "=", 
      RowBox[{"DGGraphGetIJD", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberOfAtoms", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"creates", " ", "distance", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"Length", "[", "i", "]"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"j", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"j", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"d", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"\[Lambda]", ":", 
       RowBox[{"eigenvalues", " ", "and", " ", "v"}], ":", "eigenvectors"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "iloc", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "iloc", "]"}], "]"}], "[", 
             RowBox[{"[", "jloc", "]"}], "]"}], "^", "2"}]}], ")"}], "/", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "v"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"m", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"getting", " ", "solution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "jloc", "]"}], "]"}], "[", 
          RowBox[{"[", "iloc", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iloc", ",", "numberOfAtoms"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jloc", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6945071563672113`*^9, 3.694507320236541*^9}, {
   3.694507374181988*^9, 3.6945074899994063`*^9}, {3.694508412302476*^9, 
   3.694508475668783*^9}, {3.694508530004429*^9, 3.694508561182579*^9}, {
   3.6959987033856926`*^9, 3.695998723358347*^9}, 3.698072480922473*^9, {
   3.6981333587577276`*^9, 3.698133359033911*^9}, {3.698133390002452*^9, 
   3.6981334023261256`*^9}, {3.698135717156601*^9, 3.6981357371274214`*^9}, {
   3.700322084102275*^9, 3.7003220841179*^9}, 3.702205777346334*^9, {
   3.702205852832011*^9, 3.702205863962781*^9}, {3.702205920478272*^9, 
   3.7022059370982065`*^9}, {3.702207236434928*^9, 3.7022072566342735`*^9}, {
   3.702717536736679*^9, 3.7027175405832577`*^9}, {3.7027176883324986`*^9, 
   3.702717699885353*^9}, {3.7027178659989595`*^9, 3.702717868829978*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.698135059085639*^9, 3.6981350698968105`*^9}}],

Cell[CellGroupData[{

Cell["Example: 5 points and 4 constraints where DGNSolve fails", \
"Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136136952828*^9, 
  3.6981361465947227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.732761", ",", "0.169653", ",", "0.656641"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.246863", ",", "0.660452", ",", "0.742898"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.426759", ",", "0.729058", ",", "0.897434"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.100975", ",", "0.670080", ",", "0.241258"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.204643", ",", "0.236955", ",", "0.655968"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.526000000000000"}], ",", "0", ",", "0"}], "}"}], ",", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.033755510908970"}], ",", " ", "1.439048415148556", 
        ",", "0"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.559719882819027"}], " ", ",", "1.439060986205111", 
        ",", "0.010427631711570"}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.076155173310602"}], " ", ",", "0.764476592552454", 
        ",", 
        RowBox[{"-", "1.257210521144031"}]}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.578831769689775"}], " ", ",", "1.531380885110071", 
        ",", 
        RowBox[{"-", "2.479177475798574"}]}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.053530057464236"}], " ", ",", "2.979379151615945", 
        ",", 
        RowBox[{"-", "2.397700142877220"}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGPrintGraph", "[", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"DGAllEdgesSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DGRelativeResidue", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.698135080509349*^9, 3.6981351226262827`*^9}, {
   3.698135768710869*^9, 3.698135776496533*^9}, 3.698232827201572*^9, 
   3.698233064605688*^9, 3.6982342865326967`*^9, 3.7003143253707542`*^9, 
   3.700322084150173*^9, {3.7022067183952436`*^9, 3.7022067807644897`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: 100 points all constraints", "Subsubsection",
 CellChangeTimes->{{3.6981342903376694`*^9, 3.6981343031896935`*^9}, {
  3.6981344697819333`*^9, 3.698134470007082*^9}, {3.698136155945425*^9, 
  3.6981361596994143`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tElapsed", "=", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"x", "=", 
     RowBox[{"DGAllEdgesSolver", "[", 
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981361619569116`*^9, 3.69813618311895*^9}, 
   3.700314325402018*^9, 3.700322084181426*^9, 3.7027175502076855`*^9, {
   3.7027291828911524`*^9, 3.702729248795787*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3) Ordering, BuildUP, BP and IBP", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.698278975629528*^9, 3.6982789823035517`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ordering\n",
 StyleBox["DGOrdering, DGNaturalOrdering", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.696934517173864*^9, 3.6969345185367727`*^9}, 
   3.6969346750258846`*^9, 3.6981366777421827`*^9, {3.698220137774626*^9, 
   3.698220138030796*^9}, {3.698268878385317*^9, 3.69826888252829*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.696934578835677*^9, 3.696934581103756*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGOrdering", ",", "DGNaturalOrdering"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGOrdering", "[", 
    RowBox[{"G_", ",", "C_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Finds", " ", "an", " ", "order", " ", "such", " ", "that", " ", "all", 
      " ", "atoms", " ", "could", " ", "be", " ", "determined", " ", "by", 
      " ", "following", " ", "it"}], ";", " ", "\[IndentingNewLine]", "   ", 
     RowBox[{
      StyleBox["C",
       FontSlant->"Italic"], 
      StyleBox[":",
       FontSlant->"Italic"], " ", 
      StyleBox[
       RowBox[{
       "Initial", " ", "clique", " ", "used", " ", "to", " ", "start", " ", 
        "the", " ", "ordering"}],
       FontSlant->"Italic"]}], 
     StyleBox[";",
      FontSlant->"Italic"], 
     StyleBox["\[IndentingNewLine]",
      FontSlant->"Italic"], 
     StyleBox["   ",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"G", ":", " ", 
       RowBox[{"Instance", " ", "graph"}]}],
      FontSlant->"Italic"], 
     StyleBox[";",
      FontSlant->"Italic"]}], 
    StyleBox["\[IndentingNewLine]",
     FontSlant->"Italic"], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "neighs", ",", "nAtoms", ",", 
       "nFixedAtoms", ",", "nFixedNeighs", ",", "atomsToBeFixed", ",", 
       "atomOrder", ",", " ", "order", ",", "minNeighsToBeFixed"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"initial", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minNeighsToBeFixed", "=", 
       RowBox[{"Length", "[", "C", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedNeighs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomOrder", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"atomsToBeFixed", "=", "C"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nFixedNeighs", "[", 
        RowBox[{"[", "C", "]"}], "]"}], "=", "Infinity"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nFixedAtoms", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "atomsToBeFixed", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<nFixedNeighs=\>\"", ",", "nFixedNeighs"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<atomsToBeFixed=\>\"", ",", "atomsToBeFixed"}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"i", "=", 
          RowBox[{"First", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"remove", " ", "the", " ", "first", " ", "element"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"atomsToBeFixed", "=", 
          RowBox[{"Rest", "[", "atomsToBeFixed", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"skipped", ":", " ", 
           RowBox[{"already", " ", "fixed"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"atomOrder", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Fixing: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"atomOrder", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"++", "nFixedAtoms"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<atomOrder=\>\"", ",", "atomOrder"}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "neighs", " ", "score"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"neighs", "=", 
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<neighs=\>\"", ",", "neighs"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "neighs", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"neighs", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"nFixedNeighs", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"atomOrder", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"nFixedNeighs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[GreaterEqual]", 
                "minNeighsToBeFixed"}], " ", "&&", 
               RowBox[{"Not", "[", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"atomsToBeFixed", ",", "j"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nFixedAtoms", "\[NotEqual]", "nAtoms"}], ",", 
        RowBox[{
        "Throw", "[", 
         "\"\<InvalidOrdering: It has not been possible the set \
ordering.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"order", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"order", "[", 
        RowBox[{"[", "atomOrder", "]"}], "]"}], "=", "order"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "order", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGNaturalOrdering", "[", "G_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6980611506193595`*^9, 3.698061152492004*^9}, 
   3.698072481134613*^9, {3.698136626484687*^9, 3.6981366266763134`*^9}, {
   3.69813681557358*^9, 3.698136816036886*^9}, {3.698137537734437*^9, 
   3.698137590182723*^9}, {3.698235991898496*^9, 3.6982360627464857`*^9}, {
   3.6982361166922655`*^9, 3.698236179383627*^9}, {3.6982362219318867`*^9, 
   3.698236263425408*^9}, {3.698268890318713*^9, 3.6982689596448994`*^9}, 
   3.6982762453630505`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{
  3.696335250480235*^9, {3.6963366417863913`*^9, 3.6963366443081226`*^9}, {
   3.69693446673809*^9, 3.6969344703216915`*^9}, {3.6969345925486455`*^9, 
   3.6969345996344643`*^9}}],

Cell[CellGroupData[{

Cell["Simple Example: The initial ordering is ok!", "Subsubsection",
 CellChangeTimes->{{3.696934614705723*^9, 3.6969346254263096`*^9}, {
  3.6981609206416388`*^9, 3.698160922002041*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6963351391970744`*^9, 3.6963351781245375`*^9}, {
   3.6963352250157614`*^9, 3.6963352441326723`*^9}, {3.6966991356467*^9, 
   3.6966991599848185`*^9}, {3.696699212467594*^9, 3.696699212567856*^9}, 
   3.696699760565385*^9, {3.69669979452897*^9, 3.6966998652771873`*^9}, {
   3.6967008913917418`*^9, 3.696700901880651*^9}, {3.696934477541465*^9, 
   3.6969344787881804`*^9}, {3.6969346029648733`*^9, 
   3.6969346047214565`*^9}, {3.6969459408755083`*^9, 3.696945941822027*^9}, 
   3.6980724811436186`*^9, {3.698136903087622*^9, 3.698136916136277*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Harder Example: The initial ordering is not valid", "Subsubsection",
 CellChangeTimes->{3.696934653673157*^9, 3.698160925305233*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Graph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LayeredGraphPlot", "[", 
    RowBox[{"G", ",", 
     RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{"G", ",", "True"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{"DGOrdering", "[", 
   RowBox[{"G", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "True"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.696699222452924*^9, 3.6966993598737216`*^9}, {
   3.6966993928242817`*^9, 3.69669964645918*^9}, {3.6966996846742587`*^9, 
   3.6966996863586435`*^9}, {3.696699787441859*^9, 3.6966997902261276`*^9}, {
   3.696699983277195*^9, 3.696700066799402*^9}, {3.6967001159283457`*^9, 
   3.6967001463737307`*^9}, {3.696700378130589*^9, 3.696700406037734*^9}, {
   3.6967008496726646`*^9, 3.696700855375781*^9}, {3.6967012062244864`*^9, 
   3.6967012420923347`*^9}, {3.6967013615844746`*^9, 3.696701364078554*^9}, {
   3.6967014049615245`*^9, 3.6967014090833235`*^9}, {3.696934481921709*^9, 
   3.696934483419512*^9}, 3.698072481153125*^9, {3.698136927274665*^9, 
   3.698136934192253*^9}, {3.700563046326106*^9, 3.700563132903144*^9}, {
   3.700563163619388*^9, 3.7005631745071526`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GeometricTransformationBox[
      GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}, {
        {RGBColor[0.5, 0., 0.], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
          6}, {2, 7}, {2, 8}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {4, 
          7}, {4, 8}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}}]}, {InsetBox[
          FrameBox["1",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 1], InsetBox[
          FrameBox["2",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 2], InsetBox[
          FrameBox["3",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 3], InsetBox[
          FrameBox["4",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 4], InsetBox[
          FrameBox["5",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 5], InsetBox[
          FrameBox["6",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 6], InsetBox[
          FrameBox["7",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 7], InsetBox[
          FrameBox["8",
           Background->RGBColor[1, 1, 0.8],
           FrameStyle->RGBColor[0.94, 0.85, 0.36],
           StripOnInput->False], 8]}}], {{
      0.007334089450707237, -0.008623418294631868}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.2201364009269462, 1.030980580344115}, {
       1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {1.095691072601297,
        0.6505122461849997}, {1.0491244756787474`, 1.1794990727199575`}, {
       0.5531324991014905, 0.08045910464541084}, {2.100483218682584, 
       0.9014058445027913}, {1.8248187044662827`, 0.16135316934500915`}}]& ],
    AspectRatio->Automatic,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {3.448487, 2.448487}},
    PlotRange->{{-0.262560402335323, 
     2.363043621017907}, {-0.14743738408999468`, 1.3269364568099522`}},
    PlotRangePadding->Automatic], ",", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 7, 8, 5, 6}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
           7}, {2, 8}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 8}, {4, 5}, {4, 
           6}, {4, 7}, {7, 8}, {7, 5}, {8, 5}, {8, 6}, {5, 6}}}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0.2201364009269462, 1.030980580344115}, {
           1.1130445584309527`, 0.}, {0., 0.4294270005706362}, {
           1.095691072601297, 0.6505122461849997}, {1.0491244756787474`, 
           1.1794990727199575`}, {0.5531324991014905, 0.08045910464541084}, {
           2.100483218682584, 0.9014058445027913}, {1.8248187044662827`, 
           0.16135316934500915`}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{2, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{3, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{5, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{6, 8}, 0.023421592724759938`]}, 
             {Arrowheads[0.], ArrowBox[{7, 8}, 0.023421592724759938`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.023421592724759938`], 
             DiskBox[2, 0.023421592724759938`], 
             DiskBox[3, 0.023421592724759938`], 
             DiskBox[4, 0.023421592724759938`], 
             DiskBox[5, 0.023421592724759938`], 
             DiskBox[6, 0.023421592724759938`], 
             DiskBox[7, 0.023421592724759938`], 
             DiskBox[8, 0.023421592724759938`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", "True"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{3.7005622829975276`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intersection of spheres\n",
 StyleBox["DGIntersect3Spheres, DGIntersect4Spheres", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.6982194666379185`*^9, 3.6982194765995255`*^9}, {
   3.698220168167163*^9, 3.6982202742700357`*^9}, {3.698220398059785*^9, 
   3.698220406529903*^9}, 3.698220659834761*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGIntersect3Spheres", ",", "DGIntersect4Spheres"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIntersect3Spheres", "[", 
     RowBox[{"a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_"}],
      "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Gets", " ", "the", " ", "2", " ", "solutions", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "a"}], "||"}], "=", "ra"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "b"}], "||"}], "=", "rb"}], ",", 
          RowBox[{
           RowBox[{"||", 
            RowBox[{"x", "-", "c"}], "||"}], "=", "rc"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "   ", 
       StyleBox["Input",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], 
       StyleBox[";",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], "\[IndentingNewLine]", "   ", 
       StyleBox["a",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox["b",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      RowBox[{
       RowBox[{
        StyleBox["c",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"sphere", " ", "centers"}],
         FontWeight->"Plain"]}], ";", "\[IndentingNewLine]", "   ", "ra"}], 
      ",", "rb", ",", 
      RowBox[{
       RowBox[{"rc", ":", " ", 
        StyleBox[
         RowBox[{"respective", " ", "sphere", " ", "radius"}],
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox["   ",
        FontWeight->"Plain"], 
       StyleBox["Output",
        FontSlant->"Italic",
        FontVariations->{"Underline"->True}], ";", "   ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{
        StyleBox["x",
         FontSlant->"Italic"], ":", " ", 
        StyleBox[
         RowBox[{"the", " ", "two", " ", "intersections", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ":", " ", 
            RowBox[{"positive", " ", "chirality", " ", "and", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ":", " ", 
            RowBox[{"negative", " ", "chirality"}]}], ")"}]}],
         FontWeight->"Plain"]}], ";"}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "A", ",", "x", ",", "p", ",", "dp", ",", "u", ",", "v", ",", 
        "w", ",", "du", ",", "dv", ",", "dw", ",", "dpu", ",", "AbsCos", ",", 
        "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "select", " ", "the", " ", "most", " ", "perpendicular", " ", "vertex",
         " ", "angle", " ", 
        RowBox[{"(", "stability", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AbsCos", "[", 
          RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"u", ",", "v"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Norm", "[", "u", "]"}], "*", 
            RowBox[{"Norm", "[", "v", "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w", ",", "du", ",", "dv", ",", "dw"}], 
          "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MinimalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"b", "-", "a"}], ",", 
                   RowBox[{"c", "-", "a"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "a", ",", "b", ",", "c", ",", "ra", ",", "rb", ",", "rc"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"c", "-", "b"}], ",", 
                   RowBox[{"a", "-", "b"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "b", ",", "c", ",", "a", ",", "rb", ",", "rc", ",", "ra"}], 
                  "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsCos", "[", 
                  RowBox[{
                   RowBox[{"a", "-", "c"}], ",", 
                   RowBox[{"b", "-", "c"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "c", ",", "a", ",", "b", ",", "rc", ",", "ra", ",", "rb"}], 
                  "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
             "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"normal", " ", "to", " ", "the", " ", "plane", " ", 
          RowBox[{"(", 
           RowBox[{"u", ",", "v", ",", "w"}], ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"v", "-", "u"}], ",", 
            RowBox[{"w", "-", "u"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "-", "u"}], ",", 
           RowBox[{"w", "-", "u"}], ",", "n"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"v", ",", "v"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dv", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dot", "[", 
               RowBox[{"w", ",", "w"}], "]"}], "-", 
              RowBox[{"Dot", "[", 
               RowBox[{"u", ",", "u"}], "]"}], "-", 
              RowBox[{"dw", "^", "2"}], "+", 
              RowBox[{"du", "^", "2"}]}], ")"}], "/", "2"}], ",", 
           RowBox[{"Dot", "[", 
            RowBox[{"n", ",", "u"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"A", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "select", " ", "the", " ", "factor", " ", "with", " ", "minimal", 
          " ", "canceling", " ", "effect", " ", 
          RowBox[{"(", "stability", ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "du"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"MaximalBy", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ra", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "a"}], "]"}]}], ")"}], "/", "ra"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", "ra"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rb", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "b"}], "]"}]}], ")"}], "/", "rb"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"b", ",", "rb"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rc", "-", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"p", "-", "c"}], "]"}]}], ")"}], "/", "rc"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"c", ",", "rc"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "First"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dpu", "=", 
         RowBox[{"Norm", "[", 
          RowBox[{"p", "-", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dp", "=", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"du", "+", "dpu"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"du", "-", "dpu"}], ")"}]}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"dp", "=", 
         RowBox[{"Re", "[", "dp", "]"}]}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "+", 
           RowBox[{"dp", "*", "n"}]}], ",", 
          RowBox[{"p", "-", 
           RowBox[{"dp", "*", "n"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<a=\>\"", ",", "a", ",", "\"\<  ra=\>\"", ",", "ra", ",", 
           "\"\<  b=\>\"", ",", "b", ",", "\"\<  rb=\>\"", ",", "rb", ",", 
           "\"\<  c=\>\"", ",", "c", ",", "\"\<  rc=\>\"", ",", "rc"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<p=\>\"", ",", "p", ",", "\"\<  dp=\>\"", ",", "dp", ",", 
           "\"\<  x=\>\"", ",", "x"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calculating", " ", "max", " ", "relative", " ", "errors", " ", "of", 
         " ", "each", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "ra"}], 
                ")"}], "/", "ra"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rb"}], 
                ")"}], "/", "rb"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"c", "-", 
                   RowBox[{"x", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", "rc"}], 
                ")"}], "/", "rc"}]}], "}"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIntersect4Spheres", "[", 
    RowBox[{
    "a_", ",", "ra_", ",", "b_", ",", "rb_", ",", "c_", ",", "rc_", ",", "d_",
      ",", "rd_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "error", ",", "errd1", ",", "errd2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "=", 
       RowBox[{"DGIntersect3Spheres", "[", 
        RowBox[{"a", ",", "ra", ",", "b", ",", "rb", ",", "c", ",", "rc"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"errd2", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "d"}], "]"}], "]"}], "-", 
         "rd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"errd1", "<", "errd2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "errd1"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"x", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"error", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "errd2"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "error"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982194867257423`*^9, 3.6982194896711955`*^9}, {
   3.6982195521886597`*^9, 3.6982195574006166`*^9}, {3.698219658452036*^9, 
   3.6982197616420813`*^9}, {3.6982197929738626`*^9, 3.698220066685677*^9}, {
   3.6982202502951345`*^9, 3.6982206319197464`*^9}, {3.698220667243675*^9, 
   3.698220668644104*^9}, {3.6982374927691836`*^9, 3.6982376692978663`*^9}, {
   3.6982376993873615`*^9, 3.6982377116575003`*^9}, {3.6982377427296095`*^9, 
   3.6982378010688024`*^9}, {3.698238162700093*^9, 3.69823821610886*^9}, {
   3.698238503550205*^9, 3.6982385061164074`*^9}, {3.6982394287569656`*^9, 
   3.6982395461318145`*^9}, {3.6982396045652046`*^9, 
   3.6982396143261786`*^9}, {3.6982396607885056`*^9, 
   3.6982397285916595`*^9}, {3.6982397636183057`*^9, 3.698239783426839*^9}, {
   3.6982399533225765`*^9, 3.698239972728856*^9}, {3.6982400966089387`*^9, 
   3.6982401012365484`*^9}, 3.6982427393374405`*^9, {3.698243596521635*^9, 
   3.6982437164378223`*^9}, {3.6982437695877132`*^9, 
   3.6982437905316043`*^9}, {3.6983192514474745`*^9, 
   3.6983192996453114`*^9}, {3.6983193844490786`*^9, 3.698319388494842*^9}, {
   3.6983194281754827`*^9, 3.698319433003346*^9}, {3.6983196015623474`*^9, 
   3.698319630059145*^9}, {3.698319684615945*^9, 3.698319702038396*^9}, {
   3.6983221142065024`*^9, 3.6983221170274825`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "DGBuildUpSolver\n",
 StyleBox["DGBuildUpInitX, DGBuildUpSetX, DGBuildUpSolver", "Text",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244132498234*^9, 
  3.698244132699868*^9}, {3.6982442429445033`*^9, 3.6982442478042264`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6808787874069276`*^9, 3.6808787932715735`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "DGBuildUpInitX", ",", "\[IndentingNewLine]", "DGBuildUpSetX", ",", 
    "\[IndentingNewLine]", "DGBuildUpSolver"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpInitX", "[", 
     RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i1", ",", "i2", ",", "i3", ",", "i4", ",", "d12", ",", "d13", ",", 
        "d14", ",", "d23", ",", "d24", ",", "d34", ",", "A", ",", "X", ",", 
        "X21", ",", "X31", ",", "X32", ",", "X41", ",", "X42", ",", "error"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
        "basis"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "d12", ",", "d13", ",", "d14", ",", "d23", ",", "d24", ",", "d34"}], 
         "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "i2"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i1", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i3"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "i4"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "i4"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
         "four", " ", "atoms", " ", "in", " ", "the", " ", "basis"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"X", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "d12"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X21", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d13", "^", "2"}], "-", 
           RowBox[{"d23", "^", "2"}], "+", 
           RowBox[{"X21", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "X21"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X31", "=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i3", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"d13", "^", "2"}], "-", 
          RowBox[{"X31", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i4", "]"}], "]"}], ",", "error"}], "}"}], "=", 
        RowBox[{
         RowBox[{"DGIntersect3Spheres", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i1", "]"}], "]"}], ",", "d14", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i2", "]"}], "]"}], ",", "d24", ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i3", "]"}], "]"}], ",", "d34"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBuildUpSetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "nodes_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "basis", ",", "x", ",", "i1", ",", 
        "i2", ",", "i3", ",", "i4", ",", "d1", ",", "d2", ",", "d3", ",", 
        "d4", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "4"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"basis", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{"neighs", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "basis", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i1", ",", "i2", ",", "i3", ",", "i4"}], "}"}], "=", 
           RowBox[{"basis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i3", "\[UndirectedEdge]", "k"}], ",", 
               RowBox[{"i4", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "error"}], "}"}], "=", 
           RowBox[{"DGIntersect4Spheres", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i3", "]"}], "]"}], ",", "d3", ",", 
             RowBox[{"X", "[", 
              RowBox[{"[", "i4", "]"}], "]"}], ",", "d4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"error", "<", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "3"}], ")"}]}]}], ",", "Break"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"error", ">", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}]}]}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidSolution: A precise solution could not be found.\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G_", ",", "nodes_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X", "=", 
       RowBox[{"DGBuildUpInitX", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "remaining", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "5"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "X", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"nodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"DGBuildUpSetX", "[", 
          RowBox[{"G", ",", "X", ",", "nodes", ",", "i"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.680878796715887*^9, 3.6808788985008335`*^9}, {
   3.6808789677890434`*^9, 3.680879020711442*^9}, {3.6808790793750415`*^9, 
   3.68087932980835*^9}, {3.6808794433580427`*^9, 3.680879452768545*^9}, {
   3.680879482957798*^9, 3.6808798572569814`*^9}, {3.6808801823844533`*^9, 
   3.6808802178347673`*^9}, {3.6808811493834057`*^9, 
   3.6808816352290897`*^9}, {3.6808816739789124`*^9, 3.680882032196274*^9}, {
   3.6808820912500343`*^9, 3.6808821757453947`*^9}, {3.680882211133314*^9, 
   3.680882378871024*^9}, {3.6808824342608643`*^9, 3.680882434823531*^9}, {
   3.680883747151867*^9, 3.680883922885659*^9}, {3.680883972978032*^9, 
   3.680884390920006*^9}, {3.6808844300037193`*^9, 3.6808845512584267`*^9}, 
   3.68088461521344*^9, {3.6808846535514545`*^9, 3.6808847349773226`*^9}, {
   3.6808850013417034`*^9, 3.6808850118309097`*^9}, {3.680885071364455*^9, 
   3.680885338050998*^9}, {3.680885369092225*^9, 3.6808854465825834`*^9}, {
   3.6808858161521587`*^9, 3.6808858165517445`*^9}, {3.680885969295744*^9, 
   3.680886034427628*^9}, {3.680886171713134*^9, 3.6808863538065033`*^9}, 
   3.6808863990841804`*^9, {3.6808864612464943`*^9, 3.680886529813063*^9}, {
   3.6808869456867824`*^9, 3.680886961764923*^9}, {3.6808870123576927`*^9, 
   3.680887019550462*^9}, {3.680887114898735*^9, 3.6808871182675095`*^9}, {
   3.680887181162428*^9, 3.680887187111746*^9}, {3.680887251367427*^9, 
   3.680887273892291*^9}, {3.680887323898876*^9, 3.680887325082522*^9}, {
   3.680887456347989*^9, 3.6808874620826855`*^9}, {3.6808875561244335`*^9, 
   3.680887573091951*^9}, {3.680887721148032*^9, 3.6808878253963804`*^9}, {
   3.680887892923795*^9, 3.680887895438401*^9}, {3.6808883279068727`*^9, 
   3.6808883742127953`*^9}, {3.6808887446347*^9, 3.6808888009663877`*^9}, {
   3.680888843084072*^9, 3.68088888217283*^9}, {3.6808889672984886`*^9, 
   3.680888980048806*^9}, {3.680889012873393*^9, 3.680889017001927*^9}, {
   3.6809607127676287`*^9, 3.680960713931309*^9}, {3.680963627939675*^9, 
   3.6809636936788006`*^9}, {3.680963725032446*^9, 3.68096375932222*^9}, {
   3.680963996232436*^9, 3.680964178133572*^9}, {3.680964213180361*^9, 
   3.6809642748716707`*^9}, {3.680964349959564*^9, 3.6809643607069154`*^9}, {
   3.6809643998686404`*^9, 3.680964423431587*^9}, {3.6809649940240765`*^9, 
   3.6809650555320835`*^9}, {3.680965297215009*^9, 3.680965374687066*^9}, {
   3.680965746541073*^9, 3.680965840873766*^9}, {3.680966028202756*^9, 
   3.6809661594200068`*^9}, {3.680966229724207*^9, 3.6809662777779217`*^9}, {
   3.6809663143619595`*^9, 3.680966336214636*^9}, {3.68096644404537*^9, 
   3.6809666533585944`*^9}, {3.680966782656155*^9, 3.68096684043402*^9}, {
   3.6809669531870036`*^9, 3.680967156904188*^9}, {3.6809672053008804`*^9, 
   3.680967224729057*^9}, {3.680967332314844*^9, 3.680967339149928*^9}, {
   3.6809673783050733`*^9, 3.6809674245168176`*^9}, {3.6809676623088226`*^9, 
   3.6809678364166517`*^9}, {3.6809683681222277`*^9, 
   3.6809686165290656`*^9}, {3.6809686831482697`*^9, 3.680968684388035*^9}, {
   3.680968722806388*^9, 3.6809688286478157`*^9}, {3.6809688660650325`*^9, 
   3.6809688731104565`*^9}, {3.680968922304273*^9, 3.680968979206273*^9}, {
   3.6809690865346055`*^9, 3.680969130012158*^9}, {3.680969781989382*^9, 
   3.680969872823762*^9}, {3.6809699400381446`*^9, 3.680970004489729*^9}, {
   3.6809700536833115`*^9, 3.6809700682716103`*^9}, {3.6809710208681808`*^9, 
   3.680971077002434*^9}, {3.680971109326406*^9, 3.680971115550733*^9}, {
   3.6809711907370863`*^9, 3.680971216592291*^9}, {3.680971278912956*^9, 
   3.6809712801192245`*^9}, {3.6809718771352825`*^9, 3.680971944993314*^9}, {
   3.6809720034773016`*^9, 3.6809720732264376`*^9}, {3.6809724406934075`*^9, 
   3.68097248602604*^9}, {3.6809726599472265`*^9, 3.6809726602954173`*^9}, {
   3.6809727230464745`*^9, 3.6809727291279593`*^9}, {3.680973017680879*^9, 
   3.6809730380391974`*^9}, {3.6809731227303166`*^9, 
   3.6809731466993895`*^9}, {3.680973762644851*^9, 3.6809737679144526`*^9}, {
   3.680973813745384*^9, 3.6809738243622527`*^9}, {3.6809739095062947`*^9, 
   3.680973940278738*^9}, {3.680973995792797*^9, 3.6809740011452093`*^9}, {
   3.6809740466010485`*^9, 3.680974060123784*^9}, {3.6809753469202642`*^9, 
   3.680975657929818*^9}, {3.680975695072091*^9, 3.6809758501681805`*^9}, {
   3.6809758996673946`*^9, 3.6809762262710686`*^9}, {3.680976301712438*^9, 
   3.6809763299510756`*^9}, {3.6809763746469035`*^9, 3.680976380499403*^9}, {
   3.6809764218826056`*^9, 3.6809765347847033`*^9}, {3.680976581667529*^9, 
   3.680976597026043*^9}, {3.680976666398885*^9, 3.6809766669610734`*^9}, {
   3.6809767210323706`*^9, 3.680976781558323*^9}, {3.6809768323302093`*^9, 
   3.680976846514173*^9}, {3.680976911357921*^9, 3.6809769209581203`*^9}, {
   3.680977049628893*^9, 3.6809771526850805`*^9}, {3.6809773883553143`*^9, 
   3.6809774793566475`*^9}, {3.6809775209278545`*^9, 3.680977521665044*^9}, {
   3.6809776512633805`*^9, 3.6809776515167046`*^9}, {3.680977712319936*^9, 
   3.6809777460168*^9}, {3.6810531539619203`*^9, 3.681053166959158*^9}, {
   3.6810532473507404`*^9, 3.6810532616980743`*^9}, {3.681053537630972*^9, 
   3.6810535971654816`*^9}, {3.6810536299030733`*^9, 3.681053764619897*^9}, {
   3.6810540191911044`*^9, 3.6810541426058364`*^9}, {3.681054193325778*^9, 
   3.681054202050123*^9}, {3.681054407650793*^9, 3.681054422525179*^9}, {
   3.6810544649467773`*^9, 3.6810544702728024`*^9}, {3.6810545196776843`*^9, 
   3.6810545642818737`*^9}, {3.6810546574028754`*^9, 
   3.6810546706011558`*^9}, {3.6811147611436043`*^9, 3.681114794728092*^9}, {
   3.681114882040724*^9, 3.6811148829097633`*^9}, {3.6811149340621448`*^9, 
   3.6811149841654096`*^9}, {3.6811151906954145`*^9, 3.68111537573689*^9}, {
   3.681115515816817*^9, 3.6811155891013746`*^9}, {3.6811156493781*^9, 
   3.681115666641453*^9}, {3.6811157198894944`*^9, 3.681115785849764*^9}, {
   3.681115827017232*^9, 3.6811158347965927`*^9}, {3.6811159033938723`*^9, 
   3.681116089029919*^9}, {3.681116213755548*^9, 3.681116272066968*^9}, {
   3.6811163405323725`*^9, 3.6811163422818956`*^9}, {3.6811164168073506`*^9, 
   3.6811164867154493`*^9}, {3.6811169255299654`*^9, 
   3.6811172248748937`*^9}, {3.681117258961213*^9, 3.6811174496638355`*^9}, {
   3.681117533579012*^9, 3.681117647560803*^9}, {3.681117763229082*^9, 
   3.681117783811084*^9}, {3.6811178439925947`*^9, 3.6811178454111786`*^9}, {
   3.6811178787361465`*^9, 3.681118062900173*^9}, {3.6811182140723333`*^9, 
   3.681118242911724*^9}, {3.681118570175209*^9, 3.681118576971583*^9}, {
   3.6811186959610105`*^9, 3.6811187586878242`*^9}, {3.6811187891790757`*^9, 
   3.681118790999563*^9}, {3.6811188571056223`*^9, 3.681118914067198*^9}, {
   3.6811189451494126`*^9, 3.681119011066283*^9}, {3.681119048258296*^9, 
   3.681119051434639*^9}, {3.681119092032136*^9, 3.681119104913178*^9}, {
   3.6811191834650784`*^9, 3.6811191867953424`*^9}, {3.6811196359476748`*^9, 
   3.681119688600884*^9}, {3.68111975028333*^9, 3.6811197807530875`*^9}, {
   3.6811198129044657`*^9, 3.681119817415021*^9}, 3.6811199829716883`*^9, {
   3.681120060387*^9, 3.68112008143056*^9}, {3.6811205197179084`*^9, 
   3.681120554142846*^9}, {3.68112059755657*^9, 3.6811209608421526`*^9}, {
   3.681121000321582*^9, 3.6811213121725974`*^9}, {3.68112299321381*^9, 
   3.681123012107442*^9}, {3.681123048832554*^9, 3.6811232172421627`*^9}, {
   3.6811273234720945`*^9, 3.681127432423428*^9}, {3.6811274800609336`*^9, 
   3.6811274809005604`*^9}, {3.6811275257683163`*^9, 3.681127578179681*^9}, {
   3.681127694826793*^9, 3.681127710789095*^9}, {3.6811278110887747`*^9, 
   3.681127844848827*^9}, {3.6811318326745567`*^9, 3.6811318616049323`*^9}, {
   3.6811320378293934`*^9, 3.6811321022246556`*^9}, {3.6811322022846727`*^9, 
   3.6811322197331595`*^9}, {3.681132275270756*^9, 3.681132303924238*^9}, {
   3.681132952546542*^9, 3.681132975747823*^9}, {3.6811330533869743`*^9, 
   3.681133069989792*^9}, {3.6811331401560717`*^9, 3.681133210129423*^9}, {
   3.68113355997246*^9, 3.681133580734687*^9}, {3.681133629200098*^9, 
   3.681133630070923*^9}, {3.6811337049047832`*^9, 3.6811337124057627`*^9}, {
   3.681133819975602*^9, 3.681133840938975*^9}, {3.681133980113397*^9, 
   3.6811339892678027`*^9}, {3.6811340593396463`*^9, 
   3.6811340697445583`*^9}, {3.6811341524626665`*^9, 3.681134155389428*^9}, {
   3.6811384085644703`*^9, 3.681138416451669*^9}, {3.6811384531639957`*^9, 
   3.6811387332515326`*^9}, {3.696326247015401*^9, 3.696326290249895*^9}, {
   3.6963263290758915`*^9, 3.6963263534943542`*^9}, {3.6963265499230905`*^9, 
   3.6963267199909678`*^9}, {3.6963267593116693`*^9, 
   3.6963269229873137`*^9}, {3.696326975109809*^9, 3.6963269771450577`*^9}, {
   3.6963270084709077`*^9, 3.6963270268753195`*^9}, {3.696327279707534*^9, 
   3.6963277124342194`*^9}, {3.6963277670566783`*^9, 
   3.6963279383852067`*^9}, {3.6963279795211296`*^9, 
   3.6963281839315977`*^9}, {3.696328216429962*^9, 3.696328350263246*^9}, {
   3.696328411126731*^9, 3.6963286380076227`*^9}, {3.6963286951665726`*^9, 
   3.6963289772073884`*^9}, {3.696329031822198*^9, 3.696329290347029*^9}, {
   3.6963293252573895`*^9, 3.696329474349821*^9}, {3.6963295071975946`*^9, 
   3.6963295732929854`*^9}, {3.6963296485433044`*^9, 
   3.6963296648466263`*^9}, {3.6963298886113076`*^9, 3.696329943964314*^9}, {
   3.6963299828627825`*^9, 3.696330037711483*^9}, {3.6963301105312886`*^9, 
   3.6963301559281893`*^9}, {3.69633018944613*^9, 3.696330215930565*^9}, {
   3.696330259860301*^9, 3.6963304438441257`*^9}, {3.696330475475258*^9, 
   3.6963306230483894`*^9}, {3.6963306563291655`*^9, 
   3.6963307206242332`*^9}, {3.6963345425594997`*^9, 3.696334563107193*^9}, {
   3.696334653622881*^9, 3.696334663105197*^9}, {3.6963351846429973`*^9, 
   3.696335191975522*^9}, {3.696338539683173*^9, 3.6963385468592424`*^9}, {
   3.6967009588676825`*^9, 3.6967009616899395`*^9}, {3.696701101654566*^9, 
   3.6967011779401827`*^9}, {3.696934183996126*^9, 3.696934207031106*^9}, {
   3.696934260981206*^9, 3.696934285673975*^9}, {3.696934322808727*^9, 
   3.6969343619935703`*^9}, {3.6969344502573805`*^9, 
   3.6969344569846115`*^9}, {3.6969345597853594`*^9, 3.696934564670198*^9}, {
   3.6981370507222033`*^9, 3.6981370610160313`*^9}, {3.6981373191413965`*^9, 
   3.6981373679463625`*^9}, {3.698137636535467*^9, 3.698137640349996*^9}, {
   3.698137692978403*^9, 3.698137694388838*^9}, {3.6981377371096735`*^9, 
   3.6981378087923565`*^9}, {3.6981378413129263`*^9, 3.698137901443728*^9}, {
   3.6981379713812246`*^9, 3.6981381104371033`*^9}, {3.698138163007603*^9, 
   3.698138273010347*^9}, {3.6981383288703957`*^9, 3.6981383470199337`*^9}, {
   3.698138383433584*^9, 3.6981385107632823`*^9}, {3.6981385728761735`*^9, 
   3.698138601187451*^9}, {3.6981386377627096`*^9, 3.6981386923429112`*^9}, {
   3.698138727770139*^9, 3.6981387340603113`*^9}, {3.6981387792380495`*^9, 
   3.698138792421794*^9}, {3.6981388289921837`*^9, 3.698139280883665*^9}, {
   3.698139335557928*^9, 3.6981394881856575`*^9}, {3.698139521639346*^9, 
   3.6981396956565886`*^9}, {3.6981397462081165`*^9, 
   3.6981397622967873`*^9}, {3.698155520709202*^9, 3.6981555904389486`*^9}, {
   3.6981556674640684`*^9, 3.698155693967147*^9}, {3.6981557545088015`*^9, 
   3.698155808280466*^9}, {3.698155853286815*^9, 3.698155855055989*^9}, {
   3.6982189983475137`*^9, 3.698219030988694*^9}, {3.698219100474406*^9, 
   3.698219198969232*^9}, {3.6982192381510115`*^9, 3.698219253221507*^9}, {
   3.698220777816371*^9, 3.6982208595135517`*^9}, {3.698220963698536*^9, 
   3.6982211178834953`*^9}, {3.698221212645543*^9, 3.6982212782050257`*^9}, 
   3.6982213725109158`*^9, {3.6982215131814556`*^9, 3.698221514190624*^9}, {
   3.698223369061162*^9, 3.698223370668728*^9}, {3.698223428680704*^9, 
   3.698223498676685*^9}, {3.698232667104102*^9, 3.6982327100590925`*^9}, {
   3.6982363879168158`*^9, 3.698236497420759*^9}, {3.698236542712164*^9, 
   3.698236577277589*^9}, {3.698236653268828*^9, 3.698236745014656*^9}, {
   3.698236775330765*^9, 3.6982368007891493`*^9}, {3.6982368409967117`*^9, 
   3.6982369917653947`*^9}, {3.6982370416917057`*^9, 3.698237114115241*^9}, {
   3.698237161049319*^9, 3.6982372226609635`*^9}, {3.6982372605330825`*^9, 
   3.698237302611991*^9}, {3.698237340209424*^9, 3.698237346900936*^9}, {
   3.6982374036160526`*^9, 3.6982374125940075`*^9}, {3.6982378428289995`*^9, 
   3.6982380410494075`*^9}, {3.698238254286378*^9, 3.6982382988629436`*^9}, 
   3.6982384288421555`*^9, {3.69823846001383*^9, 3.698238473616352*^9}, {
   3.6982386797612762`*^9, 3.69823869086414*^9}, {3.698238937783132*^9, 
   3.698238973369734*^9}, {3.698239054302782*^9, 3.698239120169636*^9}, 
   3.698240491600814*^9, 3.698240522976124*^9, {3.6982424083772717`*^9, 
   3.698242443063778*^9}, {3.698242810686262*^9, 3.698242818332333*^9}, {
   3.6982431621439376`*^9, 3.69824321141813*^9}, {3.6982432460511*^9, 
   3.6982432468136053`*^9}, {3.6982432868221755`*^9, 
   3.6982432902635994`*^9}, {3.6982435559692388`*^9, 
   3.6982435562439213`*^9}, {3.698245000504096*^9, 3.698245044587835*^9}, {
   3.698245079434947*^9, 3.698245100812493*^9}, {3.698245837087344*^9, 
   3.6982458669331384`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.6808847610415177`*^9, 3.680884762636571*^9}}],

Cell[CellGroupData[{

Cell["Check DGBuildUpInitX", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.6981402250229177`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpInitX", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "basis"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintDistanceMatrix", "[", 
  RowBox[{"x", ",", "edges"}], "]"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
  3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
  3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
  3.698218926550845*^9, 3.698218982996833*^9}, {3.698221528171595*^9, 
  3.6982215292478094`*^9}, {3.698223229496271*^9, 3.69822324531176*^9}, {
  3.698232789723715*^9, 3.6982327915454226`*^9}, {3.6982330045728703`*^9, 
  3.698233050778017*^9}, {3.698233185373212*^9, 3.6982331896285343`*^9}, {
  3.698234330535508*^9, 3.6982343508117933`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check DGBuildUpSolver", "Subsubsection",
 CellChangeTimes->{
  3.696335266702453*^9, {3.6981397985113087`*^9, 3.698139801145554*^9}, {
   3.6981401554311843`*^9, 3.6981401676693015`*^9}, 3.698140236428483*^9, 
   3.698238321752689*^9, {3.6982383734862976`*^9, 3.6982383771012917`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "x", ",", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698139821137314*^9, 3.698139825253544*^9}, {
   3.698139858701729*^9, 3.698139897364232*^9}, {3.698139966756256*^9, 
   3.6981399694110174`*^9}, {3.698140019910511*^9, 3.69814010999942*^9}, {
   3.6981402466162415`*^9, 3.698140340332897*^9}, 3.6981556019936123`*^9, {
   3.6982187458271065`*^9, 3.698218876577999*^9}, {3.6982344194696364`*^9, 
   3.6982344493154306`*^9}, {3.6982383323257017`*^9, 3.698238406412279*^9}, {
   3.6982385625786076`*^9, 3.698238587018317*^9}, {3.698238626331799*^9, 
   3.698238646767353*^9}, {3.6982387148145256`*^9, 3.698238802521889*^9}, {
   3.6982388531985006`*^9, 3.6982389113771334`*^9}, {3.6982390082525625`*^9, 
   3.698239019195321*^9}, {3.698239169984175*^9, 3.6982392406763315`*^9}, {
   3.698239330259947*^9, 3.69823933328045*^9}, 3.6982393807854576`*^9, 
   3.698239584306156*^9, 3.6982400280690603`*^9, 3.7003143255491667`*^9, {
   3.7009919838539476`*^9, 3.700992101070965*^9}, {3.700992166609742*^9, 
   3.7009922125087585`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving an instance using BuilUpSolver method ", "Subsubsection",
 CellChangeTimes->{3.696335266702453*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "=", 
    RowBox[{"DGProblem", "[", 
     RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"20", ",", "0.0", ",", "5.0", ",", "0"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGBuildUpSolver", "[", 
    RowBox[{"G", ",", "nodes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{"G", ",", "X", ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6811193723446083`*^9, 3.681119412620857*^9}, {
   3.6811199311928988`*^9, 3.681119960930756*^9}, {3.681119990991001*^9, 
   3.6811200405793905`*^9}, {3.6811230224344797`*^9, 3.681123028526058*^9}, {
   3.6811277224020305`*^9, 3.6811277237741623`*^9}, {3.6811285593560123`*^9, 
   3.681128578782134*^9}, {3.6811286737619624`*^9, 3.681128765537285*^9}, {
   3.681128804607932*^9, 3.6811288239519253`*^9}, {3.681130635133052*^9, 
   3.6811306585684404`*^9}, {3.681132006711861*^9, 3.6811320068519697`*^9}, {
   3.6811322329539566`*^9, 3.6811322568870325`*^9}, {3.681132509241618*^9, 
   3.681132516105033*^9}, {3.6811328599020844`*^9, 3.681132874485738*^9}, {
   3.6811342789491444`*^9, 3.6811343056250167`*^9}, {3.6815665500810804`*^9, 
   3.681566551437929*^9}, {3.681569740351883*^9, 3.681569740852806*^9}, {
   3.6815710193111305`*^9, 3.681571023000434*^9}, {3.6815714400430307`*^9, 
   3.681571491286482*^9}, 3.682752354751058*^9, 3.682757377921311*^9, {
   3.69633473379433*^9, 3.696334739241384*^9}, 3.696335048087739*^9, {
   3.6963351061616244`*^9, 3.696335135730406*^9}, {3.696335254918723*^9, 
   3.6963352586483583`*^9}, 3.698072481347253*^9, {3.6982401401846647`*^9, 
   3.698240149132599*^9}, {3.698240224116712*^9, 3.6982403996781855`*^9}, {
   3.6982405533797884`*^9, 3.698240564408103*^9}, {3.6982422163981752`*^9, 
   3.6982422286963325`*^9}, {3.698242338147665*^9, 3.698242351792679*^9}, {
   3.6982427561150675`*^9, 3.6982427695394716`*^9}, {3.698243314622154*^9, 
   3.6982433155002365`*^9}, 3.7003143256025734`*^9, {3.7009922376381283`*^9, 
   3.7009922464586315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"natoms", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"natoms", ",", "0", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "natoms"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"tElapsed", "=", 
  RowBox[{"Timing", "[", 
   RowBox[{"x", "=", 
    RowBox[{"DGBuildUpSolver", "[", 
     RowBox[{
      RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes"}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7027290713254433`*^9, 3.7027291171333704`*^9}, {
  3.70272931101943*^9, 3.702729363838706*^9}, {3.7027294015416803`*^9, 
  3.7027294019425626`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DGBPSolver", "Subchapter",
 CellChangeTimes->{{3.680878757330321*^9, 3.6808787634963007`*^9}, {
  3.682701954058903*^9, 3.6827019596222734`*^9}, {3.698244126381677*^9, 
  3.6982441350594325`*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"DGBPXinit", ",", "DGBPGetX", ",", "DGBPSolver"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPXinit", "[", 
    RowBox[{"G_", ",", "basis_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "numberOfAtoms", ",", "dab", ",", "dac", 
       ",", "dbc", ",", "\[Theta]", ",", "X"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"three", " ", "first", " ", "atoms"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
       RowBox[{"basis", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dab", ",", "dac", ",", "dbc"}], "}"}], "=", 
       RowBox[{"DGEdgeWeight", "[", 
        RowBox[{"G", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "\[UndirectedEdge]", "b"}], ",", 
           RowBox[{"a", "\[UndirectedEdge]", "c"}], ",", 
           RowBox[{"b", "\[UndirectedEdge]", "c"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "planar", " ", "rotation", " ", "angle", " ", "for", " ", "third", " ",
         "atom"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dab", "^", "2"}], "+", 
           RowBox[{"dbc", "^", "2"}], "-", 
           RowBox[{"dac", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "dab", "*", "dbc"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
        "three", " ", "first", " ", "points"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "dab"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dab"}], "+", 
            RowBox[{"dbc", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
           RowBox[{"dbc", "*", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", ",", "0"}], "}"}]}],
         "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGBPGetX", "[", 
     RowBox[{"G_", ",", "X_", ",", "branch_", ",", "nodes_", ",", "i_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "j", ",", "k", ",", "neighs", ",", "x", ",", "error", ",", "i1", ",", 
        "i2", ",", "i3", ",", "d1", ",", "d2", ",", "d3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"neighs", "=", 
        RowBox[{"Intersection", "[", 
         RowBox[{
          RowBox[{"AdjacencyList", "[", 
           RowBox[{"G", ",", "k"}], "]"}], ",", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "neighs", "]"}], "<", "3"}], ",", 
         RowBox[{
         "Throw", "[", 
          "\"\<InvalidOrder: There is not enough neighs to set a basis\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<neighs=\>\"", ",", "neighs", ",", "\"\< k=\>\"", ",", "k"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i1", ",", "i2", ",", "i3"}], "}"}], "=", 
        RowBox[{"neighs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d1", ",", "d2", ",", "d3"}], "}"}], "=", 
        RowBox[{"DGEdgeWeight", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i1", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i2", "\[UndirectedEdge]", "k"}], ",", 
            RowBox[{"i3", "\[UndirectedEdge]", "k"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "error"}], "}"}], "=", 
        RowBox[{"DGIntersect3Spheres", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i1", "]"}], "]"}], ",", "d1", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i2", "]"}], "]"}], ",", "d2", ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i3", "]"}], "]"}], ",", "d3"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"branch", "+", "1"}], "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G_", ",", "nodes_", ",", 
     RowBox[{"onesol_:", "False"}], ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", 
     RowBox[{"G", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "X", ",", "S", ",", "work", ",", "error", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"DGBPXinit", "[", 
        RowBox[{"G", ",", 
         RowBox[{"nodes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "BPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"work", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}], "=", 
          RowBox[{"DGBPGetX", "[", 
           RowBox[{"G", ",", "X", ",", 
            RowBox[{"branch", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "nodes", ",", "k"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"error", "=", 
          RowBox[{"DGRelativeResidue", "[", 
           RowBox[{"G", ",", "X", ",", "nodes", ",", "k"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"error", ">", "tol"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[bp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", "\"\<  error=\>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"error", ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             "\"\<  prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"DGPrintX", "[", 
            RowBox[{"X", "[", 
             RowBox[{"[", 
              RowBox[{"nodes", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "k"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", "X"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"onesol", ",", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"S", ",", "work"}], "}"}], "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679558175961939*^9, 3.6795582465756893`*^9}, {
   3.6795582826425705`*^9, 3.6795582839429235`*^9}, {3.6795657231676226`*^9, 
   3.6795657791530952`*^9}, {3.6795658130773067`*^9, 3.679565871544673*^9}, {
   3.6795861090630603`*^9, 3.679586268296414*^9}, {3.6795863005452967`*^9, 
   3.679586495840868*^9}, {3.6795865460918303`*^9, 3.6795865970915422`*^9}, {
   3.6795868432394185`*^9, 3.6795869018284483`*^9}, {3.679586939131709*^9, 
   3.679586976913601*^9}, {3.6795870626458464`*^9, 3.6795871011073523`*^9}, {
   3.6795871633176947`*^9, 3.679587758105817*^9}, {3.679587804838523*^9, 
   3.6795878406799817`*^9}, {3.6795881298229246`*^9, 3.679588139590253*^9}, {
   3.679588432141921*^9, 3.679588820678732*^9}, {3.67958885218464*^9, 
   3.679588859454245*^9}, {3.679591543221243*^9, 3.6795916551338434`*^9}, {
   3.679591702248043*^9, 3.679591773731745*^9}, {3.6795919722830153`*^9, 
   3.6795919729205785`*^9}, {3.6795920143454957`*^9, 
   3.6795920373721275`*^9}, {3.6795920942295294`*^9, 3.679592111174794*^9}, {
   3.6795921457433033`*^9, 3.6795921895011177`*^9}, {3.6795922813103876`*^9, 
   3.6795922980595803`*^9}, {3.679592407947278*^9, 3.6795924086627626`*^9}, {
   3.6795924498624945`*^9, 3.679592466754154*^9}, {3.679592757750784*^9, 
   3.679592801039822*^9}, {3.679592909747943*^9, 3.6795929608876143`*^9}, {
   3.679593939143162*^9, 3.6795940165402756`*^9}, {3.679594087903904*^9, 
   3.6795941883419476`*^9}, {3.679594287225954*^9, 3.6795943875196476`*^9}, {
   3.679594448595685*^9, 3.679594478828597*^9}, {3.6795945652724648`*^9, 
   3.6795946280032177`*^9}, {3.6795946789134407`*^9, 
   3.6795947026597376`*^9}, {3.679594776154107*^9, 3.6795948130815954`*^9}, {
   3.679594874794201*^9, 3.6795948828190813`*^9}, {3.6795949534488997`*^9, 
   3.6795949725060587`*^9}, {3.6795953069724016`*^9, 3.679595386091648*^9}, {
   3.6795955639765224`*^9, 3.6795956274997435`*^9}, {3.679595702271488*^9, 
   3.6795959233026123`*^9}, {3.679595965972151*^9, 3.6795959811159763`*^9}, {
   3.679596019161744*^9, 3.6795961007578773`*^9}, {3.679596138153123*^9, 
   3.679596343165894*^9}, {3.6795963808982925`*^9, 3.679596485412173*^9}, {
   3.679596522566841*^9, 3.6795965922679443`*^9}, {3.6795966325388813`*^9, 
   3.6795966980857244`*^9}, {3.679596732170254*^9, 3.679596952279262*^9}, {
   3.6795970019970694`*^9, 3.6795970768712177`*^9}, {3.679597120771289*^9, 
   3.679597123641965*^9}, {3.679597504661482*^9, 3.67959752405188*^9}, {
   3.6795977558745494`*^9, 3.679597791424835*^9}, 3.6795987087156878`*^9, {
   3.6795988192242517`*^9, 3.67959883584793*^9}, {3.679598870164411*^9, 
   3.6795991011240025`*^9}, {3.679599318938053*^9, 3.679599340969948*^9}, {
   3.6795993740469303`*^9, 3.679599392408225*^9}, {3.679599446418444*^9, 
   3.6795994936803236`*^9}, {3.6795995268675137`*^9, 3.6795995571197987`*^9}, 
   3.679599593529305*^9, {3.6795996462842827`*^9, 3.679599664667951*^9}, 
   3.6796000535012045`*^9, {3.6796005685888577`*^9, 3.6796006406104794`*^9}, {
   3.679600696928871*^9, 3.6796007267160053`*^9}, {3.6796008413370132`*^9, 
   3.6796008545284967`*^9}, {3.6796009031430583`*^9, 
   3.6796009310933266`*^9}, {3.6796010302991343`*^9, 3.67960105103058*^9}, {
   3.679601123591203*^9, 3.6796011690061445`*^9}, {3.6796012042311897`*^9, 
   3.6796012284117613`*^9}, {3.6796013171753454`*^9, 
   3.6796013538183103`*^9}, {3.679678803727684*^9, 3.6796788489988422`*^9}, {
   3.6796789029728556`*^9, 3.679678973714923*^9}, {3.679679007940275*^9, 
   3.6796790171013775`*^9}, {3.6796791140754843`*^9, 3.679679297244875*^9}, {
   3.679679330413969*^9, 3.6796793579806814`*^9}, {3.6796794551957006`*^9, 
   3.6796794760541725`*^9}, {3.679679575327817*^9, 3.6796796729758596`*^9}, {
   3.679679868010354*^9, 3.6796800326147842`*^9}, {3.6796800872006283`*^9, 
   3.679680109202219*^9}, {3.6796801598977137`*^9, 3.679680170399706*^9}, {
   3.679680211818449*^9, 3.6796804482737713`*^9}, {3.6796805112298536`*^9, 
   3.6796805744565773`*^9}, {3.6796806218580914`*^9, 3.679680757892975*^9}, {
   3.679680811495949*^9, 3.6796808818651915`*^9}, {3.6796809144827785`*^9, 
   3.6796809666833677`*^9}, {3.6796810029485235`*^9, 
   3.6796810081740055`*^9}, {3.6796810575156417`*^9, 
   3.6796811033995237`*^9}, {3.679681332527998*^9, 3.6796813333625546`*^9}, {
   3.6796813807917876`*^9, 3.67968147752941*^9}, {3.679681563739986*^9, 
   3.6796815769607897`*^9}, {3.6796817221757703`*^9, 3.679681763490862*^9}, {
   3.679681838781067*^9, 3.6796818408804646`*^9}, {3.6796818894447145`*^9, 
   3.679682079969407*^9}, {3.679682121825989*^9, 3.6796821248530035`*^9}, {
   3.679682265526948*^9, 3.679682306277526*^9}, {3.6796823673326397`*^9, 
   3.679682384445038*^9}, {3.6796824443186035`*^9, 3.679682475464719*^9}, {
   3.6796825288595295`*^9, 3.6796825637327585`*^9}, {3.67968278119676*^9, 
   3.679682782882883*^9}, {3.6797345890383964`*^9, 3.6797346061187067`*^9}, {
   3.679734645268098*^9, 3.679734678069255*^9}, {3.679734719550336*^9, 
   3.679734728336152*^9}, {3.679734851985812*^9, 3.6797348613539844`*^9}, {
   3.6797349632167463`*^9, 3.6797349754570136`*^9}, {3.679735010318187*^9, 
   3.679735089425761*^9}, {3.6797352029473877`*^9, 3.6797352174003067`*^9}, {
   3.679735334219095*^9, 3.6797353520668097`*^9}, {3.6797354127852964`*^9, 
   3.6797354225972743`*^9}, {3.6797356146960435`*^9, 3.6797356233076*^9}, {
   3.679735670171296*^9, 3.679735748032075*^9}, {3.679735818469843*^9, 
   3.679735848457308*^9}, {3.67973596027987*^9, 3.679735975920292*^9}, {
   3.6797360359884872`*^9, 3.679736087721181*^9}, {3.6797362491591873`*^9, 
   3.679736251571519*^9}, {3.6797363112665663`*^9, 3.67973638863768*^9}, {
   3.6797365176603727`*^9, 3.679736520301809*^9}, {3.679736670119876*^9, 
   3.6797367431527596`*^9}, {3.679756482791448*^9, 3.679756557876812*^9}, {
   3.6797567570184045`*^9, 3.6797567594612527`*^9}, {3.6797567906860046`*^9, 
   3.679756802275606*^9}, {3.6797568773893633`*^9, 3.679756886271783*^9}, {
   3.679757001405609*^9, 3.6797570054216137`*^9}, {3.679757180744531*^9, 
   3.6797572214769106`*^9}, {3.6797572539267645`*^9, 
   3.6797572552707305`*^9}, {3.679757302135573*^9, 3.679757309602027*^9}, {
   3.6797576159368067`*^9, 3.679757640960533*^9}, {3.6797577488837395`*^9, 
   3.6797577653388815`*^9}, {3.6797577958104706`*^9, 3.679757803108025*^9}, {
   3.6797578760871897`*^9, 3.6797578901608458`*^9}, {3.679758056388175*^9, 
   3.679758057856022*^9}, {3.679758116808442*^9, 3.679758142175377*^9}, {
   3.6797583149135833`*^9, 3.679758607202947*^9}, {3.679758663127587*^9, 
   3.6797586884288898`*^9}, {3.679759119373311*^9, 3.679759252843992*^9}, {
   3.679760070123723*^9, 3.679760141715478*^9}, {3.6797601874366446`*^9, 
   3.67976021978776*^9}, {3.679761268846787*^9, 3.6797613467221656`*^9}, {
   3.6797613820967917`*^9, 3.679761404174221*^9}, {3.6797614488257165`*^9, 
   3.6797615135316324`*^9}, {3.6797616958144684`*^9, 3.679761727076391*^9}, {
   3.6797629611339755`*^9, 3.6797630599393997`*^9}, {3.6797632969326744`*^9, 
   3.6797633450875072`*^9}, {3.6797633864858117`*^9, 3.679763417622408*^9}, {
   3.679763454154428*^9, 3.679763458232932*^9}, {3.679763559460507*^9, 
   3.679763559766924*^9}, {3.67976360142772*^9, 3.679763602011773*^9}, {
   3.679763652514624*^9, 3.6797636554635086`*^9}, {3.6797636883303623`*^9, 
   3.6797636933229237`*^9}, {3.679763739648059*^9, 3.6797637500153637`*^9}, {
   3.6797638017358065`*^9, 3.679763821403262*^9}, {3.6797639540004077`*^9, 
   3.679763967875004*^9}, {3.679764012996402*^9, 3.679764053151238*^9}, {
   3.679764105585392*^9, 3.6797641333006964`*^9}, {3.679764241169329*^9, 
   3.6797642550419507`*^9}, {3.6797642965486746`*^9, 
   3.6797642974911604`*^9}, {3.679766312258819*^9, 3.6797663400081835`*^9}, {
   3.6797665204820805`*^9, 3.6797666179276123`*^9}, {3.6797666878843207`*^9, 
   3.679766700259632*^9}, 3.679766730824309*^9, {3.67976678431518*^9, 
   3.6797667911152844`*^9}, {3.679766899700026*^9, 3.6797669126934752`*^9}, {
   3.6797669454005632`*^9, 3.679766965008849*^9}, {3.6797670469007864`*^9, 
   3.6797670576985207`*^9}, {3.679767112514214*^9, 3.6797671303351617`*^9}, {
   3.6797675537044563`*^9, 3.6797676224830623`*^9}, {3.679767976648643*^9, 
   3.6797680158816223`*^9}, {3.679768074496215*^9, 3.6797680775963783`*^9}, {
   3.6797683593332515`*^9, 3.6797683759920163`*^9}, {3.6797689343634205`*^9, 
   3.67976894926108*^9}, {3.679769294256039*^9, 3.679769332344527*^9}, {
   3.6798191469974074`*^9, 3.679819160356634*^9}, 3.6798192106398354`*^9, {
   3.67981926129202*^9, 3.679819264210451*^9}, {3.6798201118432903`*^9, 
   3.6798201155779047`*^9}, {3.679820335384288*^9, 3.679820377209854*^9}, {
   3.679820499748266*^9, 3.679820500648081*^9}, {3.6798205849449463`*^9, 
   3.679820599020897*^9}, {3.679820651543778*^9, 3.679820717123869*^9}, 
   3.6798208645536685`*^9, {3.679820946173946*^9, 3.6798209585549765`*^9}, {
   3.6798211650566034`*^9, 3.679821179641118*^9}, {3.6798212774784584`*^9, 
   3.6798212833238792`*^9}, {3.6798215653792295`*^9, 3.67982157108221*^9}, {
   3.679821616893424*^9, 3.679821653145285*^9}, {3.6798222987882447`*^9, 
   3.6798223432753534`*^9}, 3.679822416580861*^9, {3.679822823372448*^9, 
   3.6798228417201242`*^9}, {3.679823267991959*^9, 3.6798232844684114`*^9}, {
   3.679826381840706*^9, 3.67982643359863*^9}, 3.6798265156658287`*^9, {
   3.6798266225012636`*^9, 3.679826673734756*^9}, {3.679826743782586*^9, 
   3.679826770138029*^9}, {3.6798288730382085`*^9, 3.6798288749212675`*^9}, 
   3.679830925818262*^9, {3.6799122356862607`*^9, 3.679912420141233*^9}, 
   3.679912621838517*^9, {3.679912660005648*^9, 3.6799127645180964`*^9}, {
   3.679912796764311*^9, 3.679912833673414*^9}, {3.679912923419185*^9, 
   3.6799130110394573`*^9}, {3.6799132053019743`*^9, 
   3.6799132383140087`*^9}, {3.6799132802516465`*^9, 3.67991331943956*^9}, {
   3.679913510472663*^9, 3.6799136126746993`*^9}, {3.6799143039934287`*^9, 
   3.679914498499134*^9}, {3.6799146006025815`*^9, 3.679914665572703*^9}, {
   3.6799147788339305`*^9, 3.6799147832198434`*^9}, {3.679915529268517*^9, 
   3.6799155521864934`*^9}, {3.6799163694288054`*^9, 
   3.6799163759577293`*^9}, {3.679916633719616*^9, 3.6799166874558907`*^9}, {
   3.6799167701444783`*^9, 3.6799167738622227`*^9}, {3.6799168079043493`*^9, 
   3.6799168533126335`*^9}, {3.679916959985268*^9, 3.6799169731612396`*^9}, 
   3.6799170200748706`*^9, {3.6799171302212915`*^9, 3.679917141185356*^9}, {
   3.679917187615794*^9, 3.6799171931360073`*^9}, {3.679917338879426*^9, 
   3.679917349384443*^9}, {3.6799174136620827`*^9, 3.6799174401714363`*^9}, {
   3.6799175166104527`*^9, 3.6799175282932596`*^9}, 3.6799178373631587`*^9, {
   3.6799179537059784`*^9, 3.6799179803577185`*^9}, {3.67991866146945*^9, 
   3.6799187062925053`*^9}, {3.679918827393654*^9, 3.6799189074639287`*^9}, {
   3.6799189626153173`*^9, 3.6799189686805744`*^9}, {3.6799190280052376`*^9, 
   3.6799190455061207`*^9}, {3.6799190972022314`*^9, 3.679919125280387*^9}, {
   3.679924566119967*^9, 3.679924604385762*^9}, {3.6799246642790704`*^9, 
   3.6799246956132803`*^9}, {3.6799247527275844`*^9, 
   3.6799247930164156`*^9}, {3.679924951195854*^9, 3.6799249803781705`*^9}, {
   3.679925022623218*^9, 3.6799250488316956`*^9}, {3.6799253861656322`*^9, 
   3.6799254381888103`*^9}, {3.6799255434641275`*^9, 3.679925616718331*^9}, {
   3.679925661348341*^9, 3.679925698259054*^9}, {3.67992573602477*^9, 
   3.6799257478959365`*^9}, {3.6799258174994507`*^9, 
   3.6799259665814676`*^9}, {3.679926003783972*^9, 3.679926024748337*^9}, {
   3.679926069235965*^9, 3.6799260902291036`*^9}, {3.6799261736068425`*^9, 
   3.679926196432872*^9}, {3.679926255248601*^9, 3.6799262580962477`*^9}, {
   3.679926293552193*^9, 3.679926293751954*^9}, {3.6799263246875305`*^9, 
   3.67992632905294*^9}, {3.6799263775010214`*^9, 3.6799264110418615`*^9}, {
   3.6799264515895023`*^9, 3.679926470697673*^9}, {3.6799267773032274`*^9, 
   3.6799268074427676`*^9}, {3.6799273312718644`*^9, 
   3.6799273548658895`*^9}, {3.6799274096231394`*^9, 
   3.6799274791310563`*^9}, {3.6802492252310677`*^9, 
   3.6802494747564917`*^9}, {3.680249508550872*^9, 3.6802495430476055`*^9}, {
   3.680249675725598*^9, 3.6802497003809333`*^9}, 3.68024975508574*^9, {
   3.680256236853915*^9, 3.6802562600900726`*^9}, {3.68025634441387*^9, 
   3.680256365234165*^9}, {3.6802567065770197`*^9, 3.6802567081447225`*^9}, {
   3.68025976930814*^9, 3.6802597702248554`*^9}, {3.6802649405067997`*^9, 
   3.6802650359517117`*^9}, {3.680265067363373*^9, 3.6802650674600096`*^9}, {
   3.6802651867038527`*^9, 3.680265190137226*^9}, {3.680265223704136*^9, 
   3.680265238230487*^9}, {3.680265490528492*^9, 3.6802655052228985`*^9}, {
   3.680265558508396*^9, 3.680265561709672*^9}, {3.6808879559628687`*^9, 
   3.680888011732835*^9}, {3.6809606117806787`*^9, 3.6809606203078012`*^9}, 
   3.6809606847064285`*^9, {3.6809675539292154`*^9, 3.6809675860694647`*^9}, {
   3.6809692430036077`*^9, 3.680969426149309*^9}, {3.680969611597622*^9, 
   3.680969678171399*^9}, {3.6809717051663656`*^9, 3.680971757266692*^9}, {
   3.681049731545925*^9, 3.6810497326806526`*^9}, {3.6815751098190413`*^9, 
   3.6815752193084803`*^9}, {3.681575314417507*^9, 3.6815753681505737`*^9}, 
   3.6815761221030645`*^9, {3.6827804798722897`*^9, 3.682780494816037*^9}, 
   3.682780604217006*^9, {3.682781704192978*^9, 3.682781710459713*^9}, {
   3.682781876637768*^9, 3.682781904072253*^9}, {3.6827830443626947`*^9, 
   3.6827830549350944`*^9}, {3.682783127758354*^9, 3.6827832541087*^9}, {
   3.682783660581412*^9, 3.6827836734256077`*^9}, {3.682783792501422*^9, 
   3.682783800043203*^9}, {3.682783844406822*^9, 3.682783854282976*^9}, {
   3.6827840511165624`*^9, 3.682784068157834*^9}, {3.68278424789962*^9, 
   3.682784265851144*^9}, {3.6827844475525365`*^9, 3.6827845018196874`*^9}, {
   3.682784564540927*^9, 3.682784585555146*^9}, {3.682784632517503*^9, 
   3.6827846755811577`*^9}, {3.6827849678890543`*^9, 
   3.6827849698689795`*^9}, {3.6827850127031283`*^9, 3.682785092085968*^9}, {
   3.6827851570326347`*^9, 3.682785214146377*^9}, {3.6827852794649224`*^9, 
   3.6827852820630054`*^9}, {3.682785312889785*^9, 3.682785314900358*^9}, {
   3.682874358256663*^9, 3.682874360903284*^9}, {3.682934839631378*^9, 
   3.682934847817806*^9}, 3.682935758206027*^9, {3.6830328654542093`*^9, 
   3.683032867551629*^9}, 3.683032898094671*^9, {3.693310963628379*^9, 
   3.6933111790311046`*^9}, {3.693311218561573*^9, 3.6933112303168716`*^9}, {
   3.693311272066084*^9, 3.6933113625963125`*^9}, {3.6950523845124087`*^9, 
   3.6950523866515436`*^9}, {3.695052424890731*^9, 3.6950524370506387`*^9}, {
   3.6961619545602474`*^9, 3.6961620702824574`*^9}, {3.696338889049758*^9, 
   3.6963338496056805`*^9}, {3.6969507875440702`*^9, 
   3.6969508014723735`*^9}, {3.696950922935711*^9, 3.6969509459133635`*^9}, {
   3.697550371565403*^9, 3.697550371949326*^9}, 3.6979836235158963`*^9, {
   3.697983655060665*^9, 3.6979837327770033`*^9}, {3.697983790859722*^9, 
   3.6979838074844527`*^9}, {3.6979838473949614`*^9, 3.697983851665854*^9}, {
   3.697983950552133*^9, 3.6979840506270604`*^9}, {3.697984105707975*^9, 
   3.697984297952173*^9}, {3.6979847495993657`*^9, 3.6979847803348207`*^9}, 
   3.697984835994111*^9, {3.6979851699465094`*^9, 3.697985191261283*^9}, {
   3.697993736941249*^9, 3.697993822054891*^9}, {3.697995079340356*^9, 
   3.6979951862910323`*^9}, {3.697995230421173*^9, 3.697995375695047*^9}, {
   3.6979959019891167`*^9, 3.6979959454676337`*^9}, {3.6980465852605247`*^9, 
   3.69804683109072*^9}, {3.698047088010625*^9, 3.6980471411569014`*^9}, {
   3.6980472323885565`*^9, 3.6980472377501125`*^9}, {3.6980473104644995`*^9, 
   3.698047354675248*^9}, {3.6980473947561235`*^9, 3.698047402385198*^9}, {
   3.6980475542975597`*^9, 3.698047608345428*^9}, {3.6980476472397304`*^9, 
   3.6980476615872464`*^9}, {3.6980477094119816`*^9, 
   3.6980477828026576`*^9}, {3.698047829278983*^9, 3.698048018965683*^9}, {
   3.698048240561721*^9, 3.698048259884059*^9}, {3.698056934456436*^9, 
   3.6980571566496816`*^9}, {3.698057237832131*^9, 3.6980572462169743`*^9}, {
   3.6980579118181686`*^9, 3.6980579607923365`*^9}, {3.6980580053419185`*^9, 
   3.698058005805474*^9}, {3.6980580742219687`*^9, 3.698058079955908*^9}, {
   3.698058164953802*^9, 3.698058196322177*^9}, {3.698059333503028*^9, 
   3.6980594776024847`*^9}, {3.698061155504623*^9, 3.69806128012282*^9}, {
   3.69806131126612*^9, 3.698061611727914*^9}, 3.698061886200822*^9, {
   3.6980619836449723`*^9, 3.6980622098389125`*^9}, {3.6980622685617027`*^9, 
   3.698062269630556*^9}, {3.6980623644826*^9, 3.6980623815051975`*^9}, {
   3.6980624151710653`*^9, 3.698062418731555*^9}, {3.698062454202283*^9, 
   3.698062459051075*^9}, {3.698062507249819*^9, 3.6980625091454873`*^9}, 
   3.69807248122217*^9, {3.6982443204084044`*^9, 3.6982443820402813`*^9}, {
   3.6982444141631303`*^9, 3.6982444162199945`*^9}, {3.69824444651709*^9, 
   3.6982447022968225`*^9}, {3.6982448483396826`*^9, 3.698244851450246*^9}, {
   3.698244933819071*^9, 3.698244958976886*^9}, {3.698245395254878*^9, 
   3.6982454425872707`*^9}, {3.6982455334518604`*^9, 3.698245695213285*^9}, {
   3.698245781741675*^9, 3.6982457826152544`*^9}, {3.6982458825059676`*^9, 
   3.6982459172355022`*^9}, {3.698246045059526*^9, 3.698246100321678*^9}, {
   3.698253129835696*^9, 3.6982531386876264`*^9}, {3.6982532304499874`*^9, 
   3.69825324168644*^9}, {3.6982532778355227`*^9, 3.6982534073757544`*^9}, {
   3.698253465180602*^9, 3.6982534977651043`*^9}, {3.698254190143094*^9, 
   3.6982542433688955`*^9}, {3.698254279969256*^9, 3.698254353568982*^9}, {
   3.6982544022712836`*^9, 3.6982544534763365`*^9}, {3.6982544873733187`*^9, 
   3.698254508807534*^9}, {3.698254595014316*^9, 3.698254597343861*^9}, {
   3.698254634108245*^9, 3.698254680962821*^9}, {3.6982547749639425`*^9, 
   3.698254789407022*^9}, 3.698254861014345*^9, {3.6982549544580545`*^9, 
   3.6982549839301014`*^9}, {3.698255015125292*^9, 3.6982550486934605`*^9}, {
   3.6982551208823404`*^9, 3.6982552963360257`*^9}, {3.6982553362324867`*^9, 
   3.698255342231966*^9}, {3.698255465912278*^9, 3.698255486190133*^9}, {
   3.698255686124612*^9, 3.6982557622596884`*^9}, {3.6982558094149637`*^9, 
   3.6982558199469495`*^9}, 3.698256018427397*^9, {3.6982560569529486`*^9, 
   3.6982561175620804`*^9}, {3.698256229300191*^9, 3.6982562416898055`*^9}, {
   3.6982562844544973`*^9, 3.6982562938097024`*^9}, {3.6982563758321037`*^9, 
   3.698256377887467*^9}, {3.698256415702329*^9, 3.6982564539306993`*^9}, {
   3.6982566963957667`*^9, 3.698256770189762*^9}, {3.698256801014397*^9, 
   3.6982569997499104`*^9}, {3.6982570494969053`*^9, 3.698257072085887*^9}, {
   3.6982571653623567`*^9, 3.698257192433812*^9}, {3.6982572469951086`*^9, 
   3.6982573639914455`*^9}, {3.6982574279343557`*^9, 
   3.6982574668984146`*^9}, {3.698257511397131*^9, 3.6982575172485123`*^9}, {
   3.698257584419564*^9, 3.6982576933415976`*^9}, {3.6982577499231243`*^9, 
   3.6982577501943045`*^9}, {3.69825785394013*^9, 3.698257872567484*^9}, 
   3.6982579412235203`*^9, {3.698258013468663*^9, 3.6982580318583593`*^9}, {
   3.698258339897382*^9, 3.6982583475944867`*^9}, {3.6982583791599216`*^9, 
   3.698258380355215*^9}, {3.6982584368701987`*^9, 3.698258462045396*^9}, 
   3.6982585281301856`*^9, {3.698258606776347*^9, 3.698258607964134*^9}, {
   3.698259032988323*^9, 3.698259039056348*^9}, {3.6982590936030264`*^9, 
   3.6982591024363847`*^9}, {3.6982591576172233`*^9, 3.698259166864355*^9}, {
   3.698259200680093*^9, 3.698259243642088*^9}, {3.6982592893579845`*^9, 
   3.698259311563212*^9}, {3.698259404324794*^9, 3.6982594615177617`*^9}, {
   3.6982595450400524`*^9, 3.6982595530380344`*^9}, {3.69825971680807*^9, 
   3.698259723223493*^9}, 3.698259820699207*^9, {3.6982606713400655`*^9, 
   3.6982607004496317`*^9}, {3.6982607665887327`*^9, 
   3.6982607822190995`*^9}, {3.698260846650982*^9, 3.6982608594689837`*^9}, {
   3.6982609151166964`*^9, 3.6982609543557205`*^9}, {3.6982610021420703`*^9, 
   3.69826104096456*^9}, {3.6982610775518847`*^9, 3.6982610816931314`*^9}, {
   3.6982612369141397`*^9, 3.698261250419097*^9}, {3.698262305377144*^9, 
   3.6982623858675575`*^9}, {3.6982624440639563`*^9, 
   3.6982624579936953`*^9}, {3.6982680541222563`*^9, 3.698268104513773*^9}, {
   3.698268352069643*^9, 3.698268356044016*^9}, {3.6982692866625395`*^9, 
   3.6982693246676664`*^9}, 3.698269518825307*^9, 3.6983103791587944`*^9, {
   3.698310440083367*^9, 3.698310441363062*^9}, {3.698317111589958*^9, 
   3.698317113164505*^9}, {3.698318652996944*^9, 3.6983186843734655`*^9}, {
   3.698318741470319*^9, 3.6983187662058525`*^9}, {3.6983188359678097`*^9, 
   3.6983188588205843`*^9}, {3.698318889818942*^9, 3.698318935753536*^9}, {
   3.6983190542967052`*^9, 3.6983190942500157`*^9}, {3.6983198910647526`*^9, 
   3.698319940327596*^9}, {3.6983222530352154`*^9, 3.6983222561663446`*^9}, {
   3.698322286437148*^9, 3.698322288498358*^9}, {3.6983224085677023`*^9, 
   3.698322427449193*^9}, {3.6983224617708344`*^9, 3.6983224961451883`*^9}, {
   3.6983226973291006`*^9, 3.698322720017496*^9}, {3.6983257179480543`*^9, 
   3.6983257268086743`*^9}, 3.700314325718482*^9, {3.7034514891327367`*^9, 
   3.7034514915484447`*^9}, {3.7034515579852333`*^9, 3.703451560644167*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.6797567333782396`*^9, 3.6797567347311673`*^9}, {
  3.696335502893475*^9, 3.6963355050803843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Creates", " ", "a", " ", "DGProblem", " ", "with", " ", "specific", " ", 
    "edges"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], ",", " ", "0"}], "}"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.311"}], ",", "1.552", ",", "0.702"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.779"}], ",", "2.368", ",", "0.474"}], "}"}]}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eij", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", " ", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", " ", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"DGProblem", "[", 
      RowBox[{"x", ",", " ", "eij"}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"G", " ", "=", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", " ", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", " ", 
       "EdgeWeight"}], "]"}], "=", "2.575"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G", ",", " ", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", " ", 
       "\"\<DistanceBounds\>\""}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"2.2", ",", "2.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nodes", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DGPrintGraph", "[", "G", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S7", ",", "work"}], "}"}], "=", 
    RowBox[{"DGBPSolver", "[", 
     RowBox[{"G", ",", "nodes", ",", "False", ",", "True"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.698070175421965*^9, 3.698070175861757*^9}, {
   3.698070213177312*^9, 3.698070315300525*^9}, {3.6980713539418945`*^9, 
   3.6980713662326765`*^9}, {3.6980714206781745`*^9, 
   3.6980714208693013`*^9}, {3.698072476186808*^9, 3.698072476201317*^9}, 
   3.698079529705022*^9, {3.698079678277562*^9, 3.6980796782830653`*^9}, 
   3.698232826904878*^9, 3.69823306442557*^9, {3.6982342604183755`*^9, 
   3.6982342641588564`*^9}, {3.703450355467492*^9, 3.703450505919418*^9}, {
   3.7034505850559626`*^9, 3.7034505932233405`*^9}, {3.7034508902121344`*^9, 
   3.703450963099632*^9}, {3.703451023721037*^9, 3.7034510647777505`*^9}, {
   3.7034511083846593`*^9, 3.703451108817379*^9}, {3.7034511423819675`*^9, 
   3.703451158626009*^9}, {3.703451199287035*^9, 3.703451205657975*^9}, {
   3.7034513335943737`*^9, 3.703451367966873*^9}, {3.7034515381976824`*^9, 
   3.7034515393623114`*^9}, {3.7034517482425175`*^9, 3.703451777160204*^9}, 
   3.7034518510950785`*^9, {3.703452062414386*^9, 3.703452091031469*^9}, {
   3.7034522126552577`*^9, 3.703452287278256*^9}}],

Cell[BoxData[
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"S0", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S1", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S2", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S3", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S4", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S5", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S6", "[", "\"\<Points\>\"", "]"}], ",", 
     RowBox[{"S7", "[", "\"\<Points\>\"", "]"}]}], "]"}], ",", ".2", ",", 
   "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.703451608372284*^9, 3.7034516796417027`*^9}, {
  3.703451798710941*^9, 3.7034518374562125`*^9}, {3.7034520955512094`*^9, 
  3.7034521071086063`*^9}, {3.703452292208468*^9, 3.7034523099039793`*^9}}],

Cell[CellGroupData[{

Cell["Small Instance", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.7009922963106003`*^9, 3.7009923183190393`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"DGRandom3DBackbone", "[", "7", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{
     RowBox[{"X", "[", "\"\<Points\>\"", "]"}], ",", "edges"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"P", "[", "\"\<X\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"nodes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{"G", ",", "nodes", ",", "False", ",", "True"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"X", "=", 
  RowBox[{"S", "[", "\"\<Points\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"S", "[", "\"\<Branches\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{"X", ",", ".2", ",", ".08"}], "]"}]}], "Input",
 CellChangeTimes->{{3.700992316272402*^9, 3.7009923884478188`*^9}, {
   3.7009925127862043`*^9, 3.700992537293635*^9}, {3.70099305171308*^9, 
   3.7009930566034174`*^9}, {3.700993247763296*^9, 3.700993340032179*^9}, {
   3.700993521193789*^9, 3.700993536375091*^9}, {3.700993602648387*^9, 
   3.7009936033240385`*^9}, {3.700994063161317*^9, 3.700994100399763*^9}, {
   3.700994221044218*^9, 3.700994249734191*^9}, {3.7009969511055737`*^9, 
   3.7009969632500596`*^9}, {3.7027175853756847`*^9, 3.7027176224992905`*^9}, 
   3.7027179367510824`*^9, {3.702717987756665*^9, 3.70271798969906*^9}, {
   3.7027180484700594`*^9, 3.7027181111759844`*^9}, {3.7027181454983077`*^9, 
   3.702718210788308*^9}, {3.7027182591529436`*^9, 3.702718265089552*^9}, {
   3.7027183355720863`*^9, 3.7027183645707674`*^9}, {3.7027189430955796`*^9, 
   3.7027189441498065`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Easy case using natural order", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"20", ",", "0.0", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeElapsed", "=", 
   RowBox[{
    RowBox[{"Timing", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "work"}], "}"}], "=", 
      RowBox[{"DGBPSolver", "[", 
       RowBox[{
        RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",",
         "True"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<TimeElapsed=\>\"", ",", "timeElapsed"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGRelativeResidue", "[", 
   RowBox[{
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.693311450156807*^9, 3.693311476044976*^9}, {
   3.696338936452612*^9, 3.696338990378742*^9}, {3.6979845883633885`*^9, 
   3.697984617355788*^9}, {3.6979850347422743`*^9, 3.697985037135499*^9}, {
   3.6979953998165607`*^9, 3.6979954128237066`*^9}, {3.6979955008255515`*^9, 
   3.697995501469979*^9}, {3.698063057075743*^9, 3.6980630699679604`*^9}, 
   3.69807248124969*^9, {3.698258900635863*^9, 3.698259006148343*^9}, {
   3.698259380018849*^9, 3.6982593802355237`*^9}, {3.6982597311305723`*^9, 
   3.698259910722397*^9}, {3.69826115973089*^9, 3.698261179310876*^9}, {
   3.6982612672137356`*^9, 3.6982612687552586`*^9}, {3.698262268542156*^9, 
   3.698262269980609*^9}, {3.698262398805439*^9, 3.698262426512816*^9}, {
   3.698262569782508*^9, 3.6982625713080196`*^9}, {3.69826263228246*^9, 
   3.6982626331715517`*^9}, {3.6982682099045897`*^9, 3.698268212604455*^9}, {
   3.698268974378912*^9, 3.6982689818583913`*^9}, {3.6983225309017057`*^9, 
   3.698322539129117*^9}, 3.7003143257713733`*^9, {3.7005613624266267`*^9, 
   3.7005613782175703`*^9}, {3.7005614096460247`*^9, 3.700561462382221*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instance with more than two solutions", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"DGEdgesMDGP", "[", 
     RowBox[{"Length", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGProblem", "[", 
    RowBox[{"x", ",", "edges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nodes", ",", "False", ",", 
     "True"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6982675435780106`*^9, 3.6982676849749393`*^9}, {
   3.6982677879648824`*^9, 3.69826778900282*^9}, 3.6982678486650257`*^9, {
   3.6982678894365683`*^9, 3.6982678923935056`*^9}, {3.698267923742344*^9, 
   3.6982679643030577`*^9}, {3.6982680118994756`*^9, 
   3.6982680172609124`*^9}, {3.6982682635398445`*^9, 
   3.6982682725164557`*^9}, {3.698268335835042*^9, 3.6982683377986155`*^9}, {
   3.6982683734273853`*^9, 3.69826837813604*^9}, {3.6982688333430157`*^9, 
   3.698268846448496*^9}, 3.698268908772118*^9, {3.698268995492119*^9, 
   3.6982690516700015`*^9}, {3.69832255207037*^9, 3.6983225532429857`*^9}, {
   3.7027184519543343`*^9, 3.7027184669269233`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculating the number of solution as a function of the number of constraints \
(max distance)\
\>", "Subsection",
 CellChangeTimes->{{3.698268221056161*^9, 3.698268229004469*^9}, {
  3.69826828783591*^9, 3.6982682959829154`*^9}, {3.698322580067991*^9, 
  3.698322582100933*^9}}],

Cell[BoxData[{
 RowBox[{"G", "=", 
  RowBox[{
   RowBox[{"DGRandomMDGP", "[", "10", "]"}], "[", "\"\<G\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSample", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"density", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5"}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"density", " ", "of", " ", "edges"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"generating", " ", "sample", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"allEdges", "=", 
  RowBox[{"EdgeList", "[", "G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "nSample"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "density", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"density", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", "nSample"}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"create", " ", "subgraph"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gij", "=", "G"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", 
            RowBox[{"Length", "[", "allEdges", "]"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ek", "=", 
             RowBox[{"allEdges", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"RandomReal", "[", "]"}], ">", "d"}], "&&", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"ek", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", "3"}]}], ",", 
              RowBox[{"gij", "=", 
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"gij", ",", "ek"}], "]"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", "gij"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solve", " ", "instance"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"nodes", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "gij", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S", ",", "work"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"gij", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"nSols", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "=", 
          RowBox[{"Length", "[", 
           RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "results"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"density", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"nSols", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{"nSols", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "density", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Density of Edges\>\"", ",", " ", "\"\<Number of Solutions\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.696334028602558*^9, 3.6963341389390335`*^9}, {
   3.696334203814807*^9, 3.696334553004195*^9}, {3.6963345893136067`*^9, 
   3.6963346447828355`*^9}, {3.6963346937306294`*^9, 
   3.6963348195399055`*^9}, {3.6963348799142075`*^9, 
   3.6963348804536867`*^9}, {3.696334945896783*^9, 3.6963349840214233`*^9}, {
   3.696335032797847*^9, 3.6963351414831853`*^9}, {3.6963352043938837`*^9, 
   3.696335230724231*^9}, {3.696335343802195*^9, 3.6963353555009074`*^9}, 
   3.696335412777022*^9, {3.696339497682501*^9, 3.6963395030722947`*^9}, {
   3.696339541525276*^9, 3.6963395556060305`*^9}, {3.69634027449716*^9, 
   3.6963403350733366`*^9}, {3.6982620163546495`*^9, 
   3.6982620232827463`*^9}, {3.698262097986717*^9, 3.6982621670029964`*^9}, {
   3.6982698650202107`*^9, 3.6982699046144314`*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBPSolver", "Subchapter",
 CellChangeTimes->{{3.6795571036686206`*^9, 3.679557113728629*^9}, {
  3.6811328435634823`*^9, 3.681132843691572*^9}, {3.682701946598136*^9, 
  3.682701963537011*^9}}],

Cell[CellGroupData[{

Cell["Source Code", "Section",
 CellChangeTimes->{{3.679557165643343*^9, 3.6795571685082006`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"DGIPBSubG", ",", "DGIBPSolver"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGIPBSubG", "[", 
     RowBox[{"G_", ",", "k_", ",", "branch_", ",", "nslices_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "E", ",", 
        RowBox[{"W", "=", "G"}], ",", "nodes", ",", "ei", ",", "ej", ",", 
        "dij", ",", "lij", ",", "uij"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", " ", "vertices", " ", "k"}], "+", "1"}], ",", "...",
         ",", "numberOfAtoms"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"k", "+", "1"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"G", ",", "nodes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E", "=", 
        RowBox[{"EdgeList", "[", "W", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"uij", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "=", 
           RowBox[{"DGEdgeDistanceBounds", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dij", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"E", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "set", " ", "weight", " ", "affected", " ", "by", " ", "branch"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ei", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ej", "=", 
           RowBox[{
            RowBox[{"E", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ei", ">", "ej"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ei", ",", "ej"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"ej", ",", "ei"}], "}"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ej", "-", "ei"}], "\[Equal]", "3"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"uij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"lij", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", "nslices"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"dij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "*", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", "ej", "]"}], "]"}]}], "+", 
               RowBox[{"lij", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"dij", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "2.0"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"W", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{"E", ",", 
          RowBox[{"EdgeWeight", "\[Rule]", "dij"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "E", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"W", ",", 
               RowBox[{"E", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
             "\"\<DistanceBounds\>\""}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lij", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"uij", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "W", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{"G_", ",", "nslices_", ",", 
     RowBox[{"verbose_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "all", " ", "solutions", " ", "of", " ", "the", " ", 
     "DMDGP", " ", "instance", " ", "defined", " ", "by", " ", "the", " ", 
     "graph", " ", "G", " ", "using", " ", "natural", " ", 
     RowBox[{"ordering", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "numberOfAtoms", ",", "prune", ",", "branch", ",", 
       "W", ",", "S", ",", "SW", ",", "work", ",", "locwork", ",", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberOfAtoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"init", " ", "IBPTree"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"branch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"branch", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", 
       RowBox[{"nslices", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"work", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numberOfAtoms"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"work", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"solutions", " ", "and", " ", "branches"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Points\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<Branches\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", ">", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"W", "=", 
          RowBox[{"DGIPBSubG", "[", 
           RowBox[{"G", ",", "k", ",", "branch", ",", "nslices"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SW", ",", "locwork"}], "}"}], "=", 
          RowBox[{"DGBPSolver", "[", 
           RowBox[{"W", ",", 
            RowBox[{"DGNaturalOrdering", "[", "W", "]"}], ",", 
            RowBox[{"k", "\[NotEqual]", "numberOfAtoms"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "4"}], ",", 
           RowBox[{"i", "\[LessEqual]", "k"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{
            RowBox[{"work", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "+=", 
            RowBox[{"locwork", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SW", "[", "\"\<Points\>\"", "]"}], "]"}], "\[Equal]", 
           "0"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"unfeasible", " ", "subgraph"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<[ibp] k=\>\"", ",", "k", ",", "\"\<  branch=\>\"", ",", 
             "branch", ",", " ", "\"\<   work=\>\"", ",", "work", ",", 
             "\"\< prune=\>\"", ",", "prune"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"solution", " ", "found"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", "[", "prune", "]"}], "&&", 
            RowBox[{"k", "\[Equal]", "numberOfAtoms"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"S", "[", "\"\<Points\>\"", "]"}], ",", 
               RowBox[{"SW", "[", "\"\<Points\>\"", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"S", "[", "\"\<Branches\>\"", "]"}], ",", "branch"}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "tree", " ", "node"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"prune", "=", 
          RowBox[{"prune", "||", 
           RowBox[{"k", "\[Equal]", 
            RowBox[{"Length", "[", "branch", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", ">", "3"}], "&&", 
               RowBox[{
                RowBox[{"branch", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[Equal]", 
                RowBox[{"nslices", "-", "1"}]}]}], ",", 
              RowBox[{"k", "--"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"prune", "&&", 
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "<", 
             RowBox[{"nslices", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"branch", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "++"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{"k", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "branch", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{
               RowBox[{"branch", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", "prune", "]"}], ",", 
           RowBox[{"k", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<\!\(\*
StyleBox[\"DGIBPSolver\",
FontSlant->\"Italic\",
FontVariations->{\"Underline\"->True}]\)\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of solutions: \>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"S", "[", "\"\<Points\>\"", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", "work"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6827019671531935`*^9, 3.6827019883797054`*^9}, {
   3.6827520058773313`*^9, 3.682752007842795*^9}, {3.682773523900758*^9, 
   3.6827739504220514`*^9}, {3.6827739820939207`*^9, 3.682773997290721*^9}, {
   3.6827748027586565`*^9, 3.6827748602420864`*^9}, {3.682774937541239*^9, 
   3.6827753481045656`*^9}, {3.6827754855464773`*^9, 3.682775768077546*^9}, {
   3.6827758431794395`*^9, 3.682775852191575*^9}, {3.6827761086040697`*^9, 
   3.6827761356665545`*^9}, {3.6827761799051275`*^9, 
   3.6827762569294157`*^9}, {3.682776288487507*^9, 3.6827764838117733`*^9}, {
   3.682776598677207*^9, 3.682776711866549*^9}, {3.682776757766048*^9, 
   3.682776806526044*^9}, {3.6827769820156193`*^9, 3.6827770574592137`*^9}, {
   3.6827771830672836`*^9, 3.6827772226146555`*^9}, {3.6827772538317227`*^9, 
   3.682777263271402*^9}, {3.6827775456748238`*^9, 3.682777546518789*^9}, {
   3.6827775797151136`*^9, 3.6827775984622955`*^9}, {3.682777657482841*^9, 
   3.6827777067571774`*^9}, {3.6827777903994412`*^9, 
   3.6827777968861074`*^9}, {3.682777869172826*^9, 3.682777869551065*^9}, {
   3.6827779315169716`*^9, 3.682777931686807*^9}, {3.682778028203849*^9, 
   3.6827780327785378`*^9}, {3.682778114875511*^9, 3.6827781151693735`*^9}, {
   3.6827786318985825`*^9, 3.6827786532106905`*^9}, {3.682778780232845*^9, 
   3.6827788150088916`*^9}, {3.682778860589865*^9, 3.682778918862643*^9}, {
   3.6827790426077757`*^9, 3.6827794809945264`*^9}, {3.6827795619985237`*^9, 
   3.682779590990248*^9}, {3.682779976097824*^9, 3.6827799798825316`*^9}, 
   3.6827800453274255`*^9, {3.6827800812274303`*^9, 3.6827801376397424`*^9}, {
   3.6827801817742767`*^9, 3.682780266523752*^9}, {3.6827805401257453`*^9, 
   3.682780661598824*^9}, {3.6827807301684313`*^9, 3.6827807439590216`*^9}, {
   3.6827807922573433`*^9, 3.682780825155981*^9}, {3.68278089072889*^9, 
   3.6827809003062625`*^9}, {3.6827809636600475`*^9, 
   3.6827809691730986`*^9}, {3.682781052145022*^9, 3.6827810576947823`*^9}, 
   3.6827811031071897`*^9, {3.68278114552192*^9, 3.682781148502773*^9}, {
   3.682781191030442*^9, 3.682781251899205*^9}, {3.682781354202553*^9, 
   3.6827813544128523`*^9}, 3.6827813991698384`*^9, {3.6827814442928348`*^9, 
   3.6827814467598443`*^9}, {3.682781487351517*^9, 3.6827814884135475`*^9}, {
   3.6827818109759817`*^9, 3.682781813545724*^9}, {3.6827853356617775`*^9, 
   3.682785337550229*^9}, {3.6827867368412943`*^9, 3.682786741159988*^9}, {
   3.682786807927786*^9, 3.682786819894947*^9}, {3.68278715946465*^9, 
   3.682787162255832*^9}, {3.6827874230740376`*^9, 3.6827874366378717`*^9}, {
   3.682789227649762*^9, 3.682789230497446*^9}, {3.6827893815529485`*^9, 
   3.6827893845262256`*^9}, {3.682874323027193*^9, 3.682874336182909*^9}, {
   3.6829343494785357`*^9, 3.682934438253458*^9}, {3.682934871900261*^9, 
   3.682934888830892*^9}, {3.6829350043195353`*^9, 3.6829350106554976`*^9}, {
   3.6829355309198093`*^9, 3.682935703315592*^9}, {3.6829357824619856`*^9, 
   3.682935807468607*^9}, {3.683022005274223*^9, 3.6830220091210856`*^9}, {
   3.683022039821942*^9, 3.683022086349081*^9}, {3.6830326439989023`*^9, 
   3.6830326466660814`*^9}, {3.6982787207453346`*^9, 
   3.6982787416320457`*^9}, {3.6982788335657873`*^9, 
   3.6982788373652954`*^9}, {3.6982788850684876`*^9, 3.698278897118658*^9}, 
   3.698279124824894*^9, {3.6982791582475395`*^9, 3.6982791711539445`*^9}, {
   3.698309861882863*^9, 3.698309882569612*^9}, {3.69831038648313*^9, 
   3.698310415785906*^9}, {3.698310468313056*^9, 3.6983104947750435`*^9}, {
   3.6983105670383787`*^9, 3.6983108051037474`*^9}, {3.6983108460196304`*^9, 
   3.69831084647191*^9}, {3.6983109559174995`*^9, 3.6983109779913588`*^9}, {
   3.6983110265178947`*^9, 3.698311291553689*^9}, {3.6983145988464184`*^9, 
   3.69831460419575*^9}, {3.6983146463789663`*^9, 3.698314707852988*^9}, {
   3.6983147821238956`*^9, 3.698314782640411*^9}, {3.6983150107432384`*^9, 
   3.698315047343246*^9}, {3.698315092713068*^9, 3.6983152004211903`*^9}, {
   3.698315232561533*^9, 3.698315260222073*^9}, {3.6983157676291466`*^9, 
   3.698315857264064*^9}, {3.6983164679800034`*^9, 3.6983164752378836`*^9}, {
   3.6983168783230886`*^9, 3.6983170132968063`*^9}, {3.698317121264511*^9, 
   3.698317124532487*^9}, {3.6983171651430187`*^9, 3.6983172096940494`*^9}, {
   3.6983172690091677`*^9, 3.698317285520046*^9}, {3.698317341261922*^9, 
   3.6983174086930933`*^9}, {3.6983175075561094`*^9, 
   3.6983175489928827`*^9}, {3.698317985726252*^9, 3.6983180308053017`*^9}, {
   3.6983180804420214`*^9, 3.698318153053418*^9}, {3.6983182050383067`*^9, 
   3.698318227520159*^9}, {3.6983184577908587`*^9, 3.698318459816066*^9}, {
   3.6983201490009527`*^9, 3.6983202171540594`*^9}, {3.6983202616319118`*^9, 
   3.698320359747717*^9}, {3.6983204038955097`*^9, 3.698320404847747*^9}, {
   3.6983204662064514`*^9, 3.6983204668746033`*^9}, {3.6983205699139247`*^9, 
   3.6983205727767935`*^9}, {3.6983206452559185`*^9, 
   3.6983207396592913`*^9}, {3.698320820824626*^9, 3.698320839575612*^9}, {
   3.6983210012734385`*^9, 3.698321017213336*^9}, {3.6983210938335676`*^9, 
   3.6983211554295063`*^9}, {3.698321266161542*^9, 3.6983213674918222`*^9}, {
   3.6983214012285056`*^9, 3.698321481513752*^9}, {3.6983215312120943`*^9, 
   3.6983216238692656`*^9}, {3.6983217143387938`*^9, 3.6983218106859655`*^9}, 
   3.6983218871641626`*^9, {3.6983221735633664`*^9, 3.6983221756940465`*^9}, {
   3.6983223206968775`*^9, 3.6983223430101957`*^9}, {3.6983226000175014`*^9, 
   3.698322604477955*^9}, {3.6983227729344378`*^9, 3.698322785837361*^9}, {
   3.6983228585817385`*^9, 3.6983230005510645`*^9}, {3.6983241502043796`*^9, 
   3.6983247033865213`*^9}, {3.6983247355954504`*^9, 
   3.6983247369419065`*^9}, {3.698324818157818*^9, 3.698324911463064*^9}, {
   3.6983251317568593`*^9, 3.6983251389555683`*^9}, {3.6983253273352985`*^9, 
   3.698325353730069*^9}, {3.6983253976947374`*^9, 3.6983254234251127`*^9}, {
   3.698325469724806*^9, 3.6983254824073663`*^9}, {3.6983256972091217`*^9, 
   3.6983257021931415`*^9}, 3.6983257621151047`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples and Applications", "Section",
 CellChangeTimes->{{3.682777369516736*^9, 3.6827773754382195`*^9}, {
  3.6983259775553503`*^9, 3.6983259809093723`*^9}}],

Cell[CellGroupData[{

Cell["Check DGIBPSolver", "Subsection",
 CellChangeTimes->{{3.6983258405729327`*^9, 3.6983258521025915`*^9}, {
  3.7034507013622255`*^9, 3.7034507032381945`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"branch", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nslices", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", "=", 
   RowBox[{"DGIPBSubG", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "4", ",", "branch", ",", 
     "nslices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", 
   RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGPrintGraph", "[", "W", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.698324758634654*^9, 3.6983248054901347`*^9}, {
  3.6983249364999857`*^9, 3.698324940575715*^9}, {3.698325054588522*^9, 
  3.698325054742776*^9}, {3.6983258176326985`*^9, 3.698325836345594*^9}, {
  3.6983258878299446`*^9, 3.6983259175102806`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving a small instance using DGIBP ", "Subsection",
 CellChangeTimes->{{3.698325939397998*^9, 3.6983259605760155`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"DGRandomMDGP", "[", 
    RowBox[{"5", ",", "0.1", ",", "5.0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPrintGraph", "[", 
  RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6798218509178233`*^9, 3.679821852271891*^9}, {
   3.6798220754379344`*^9, 3.6798220755372047`*^9}, {3.679822744321784*^9, 
   3.6798227445214615`*^9}, {3.6798231052765684`*^9, 3.679823107593405*^9}, 
   3.679823226558363*^9, {3.6798233451775875`*^9, 3.679823345308581*^9}, {
   3.679823525737986*^9, 3.679823549906366*^9}, {3.6798263139146395`*^9, 
   3.679826344570452*^9}, {3.6798288602280912`*^9, 3.6798288604903975`*^9}, {
   3.6798288950564623`*^9, 3.679828994620492*^9}, {3.679829044969572*^9, 
   3.6798290909698343`*^9}, {3.6798294100005565`*^9, 
   3.6798294105697436`*^9}, {3.6798295004715223`*^9, 
   3.6798295681002893`*^9}, {3.6798296319378924`*^9, 3.679829632507357*^9}, {
   3.6798299800985794`*^9, 3.6798299863477526`*^9}, {3.679830157933735*^9, 
   3.6798301597117043`*^9}, {3.6798302974701996`*^9, 
   3.6798303164031887`*^9}, {3.6798303891181116`*^9, 3.679830389302563*^9}, {
   3.6798304759096456`*^9, 3.679830478014727*^9}, {3.6799119298147106`*^9, 
   3.6799119406954846`*^9}, {3.679912001613147*^9, 3.679912019708365*^9}, {
   3.6799121456440763`*^9, 3.6799121778114533`*^9}, 3.679912535631927*^9, {
   3.6799174812432394`*^9, 3.6799174816978993`*^9}, {3.679918592547327*^9, 
   3.6799186296132526`*^9}, {3.6799255011209993`*^9, 
   3.6799255012742624`*^9}, {3.6799265772569237`*^9, 
   3.6799266196275845`*^9}, {3.679927091468864*^9, 3.6799271177650127`*^9}, {
   3.679927217233017*^9, 3.679927233987025*^9}, {3.679927271460558*^9, 
   3.679927271760435*^9}, {3.679927363032942*^9, 3.679927363786351*^9}, 
   3.6799274640577226`*^9, {3.6799274956489134`*^9, 3.6799275047564964`*^9}, {
   3.6802494864436903`*^9, 3.680249517698353*^9}, {3.680249838745507*^9, 
   3.680249885493765*^9}, {3.6802499632347374`*^9, 3.68024997989824*^9}, {
   3.6802500278218193`*^9, 3.680250042557376*^9}, {3.6802500816458673`*^9, 
   3.680250094230627*^9}, {3.6802501729429226`*^9, 3.680250245242584*^9}, {
   3.680250277069769*^9, 3.680250349656209*^9}, {3.6802561938862762`*^9, 
   3.680256217314024*^9}, {3.6802562822999315`*^9, 3.6802562845355077`*^9}, {
   3.680259514448849*^9, 3.68025956932335*^9}, {3.680259617915313*^9, 
   3.680259625069577*^9}, {3.6802596588968315`*^9, 3.6802596591149898`*^9}, {
   3.6802597057100697`*^9, 3.680259710865752*^9}, {3.680259778882868*^9, 
   3.680259779298339*^9}, {3.6802598345877275`*^9, 3.6802598347003174`*^9}, {
   3.6802634539441957`*^9, 3.6802634724224014`*^9}, {3.680264125324051*^9, 
   3.680264127539488*^9}, {3.680971309238633*^9, 3.6809713321665344`*^9}, {
   3.6809713775361547`*^9, 3.680971388619849*^9}, 3.680971453133582*^9, {
   3.6809717846377277`*^9, 3.6809717933103046`*^9}, 3.682752354734047*^9, 
   3.682757377902835*^9, {3.6827585847612524`*^9, 3.682758585270115*^9}, {
   3.682758922849889*^9, 3.6827589310888653`*^9}, 3.682758963373986*^9, {
   3.682777338739936*^9, 3.6827773397706623`*^9}, {3.6827773885972614`*^9, 
   3.682777509880164*^9}, {3.682777995186551*^9, 3.6827779952866464`*^9}, {
   3.682778057930979*^9, 3.6827780633222637`*^9}, {3.682778129241908*^9, 
   3.682778129377575*^9}, {3.682778697943698*^9, 3.682778699490327*^9}, {
   3.682778953526342*^9, 3.6827789556117177`*^9}, {3.682779505273485*^9, 
   3.682779536222084*^9}, {3.6827800751236987`*^9, 3.682780075207179*^9}, {
   3.682781360244443*^9, 3.682781393632818*^9}, 3.682781437277698*^9, {
   3.6830326521888623`*^9, 3.68303266619322*^9}, 3.6980724813342457`*^9, {
   3.698316545143901*^9, 3.698316631268173*^9}, {3.698316730685111*^9, 
   3.698316736404586*^9}, {3.6983167909271526`*^9, 3.698316800641884*^9}, {
   3.6983170748361397`*^9, 3.698317079814169*^9}, {3.698318182985692*^9, 
   3.6983181898300004`*^9}, {3.6983183336292505`*^9, 3.698318356878724*^9}, 
   3.6983187108076825`*^9, {3.6983189659733076`*^9, 3.6983189766865835`*^9}, 
   3.698324932826663*^9, 3.698325230415392*^9, {3.6983257987214537`*^9, 
   3.6983258007115965`*^9}, {3.6983259353272004`*^9, 3.698325936799776*^9}, {
   3.698325998727798*^9, 3.6983260250657864`*^9}, {3.7027185261646767`*^9, 
   3.7027185719281225`*^9}, {3.702718621203302*^9, 3.7027186541041775`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nslices", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "testing", " ", "increasing", " ", "the", " ", "the", " ", "number", " ", 
    "of", " ", "slices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nslices", ",", "True"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702718576496505*^9, 3.702718618169186*^9}, 
   3.7027186645379457`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nslices", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "increasing", " ", "the", " ", "number", " ", "of", " ", "slices"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S", ",", "work"}], "}"}], "=", 
   RowBox[{"DGIBPSolver", "[", 
    RowBox[{
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], ",", "nslices", ",", "True"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7027186765200605`*^9, 3.702718693221716*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Illustrating the tree exponential growth", "Subsection",
 CellChangeTimes->{{3.697799201845194*^9, 3.6977992165628195`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "IBP", " ", "Tree", " ", 
    RowBox[{"(", 
     RowBox[{"it", " ", "can", " ", "be", " ", "very", " ", 
      RowBox[{
       RowBox[{"slow", "!!"}], "!"}]}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfAtoms", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfSlices", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"or", " ", "2", " ", "at", " ", "max"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"node", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"node", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "5"}], ",", 
     RowBox[{"k", "\[LessEqual]", "numberOfAtoms"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"leafs", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexDegree", "[", 
            RowBox[{"T", ",", "#"}], "]"}], "===", "1"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "leafs", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"node", "=", 
          RowBox[{"leafs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"2", "*", "numberOfSlices"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"node", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"++", "count"}], ")"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{"TreeGraph", "[", "edges", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "T", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Number of Vertex=\>\"", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "T", "]"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697799241731846*^9, 3.697799254334177*^9}, {
   3.697799346715639*^9, 3.697799494692484*^9}, {3.6977995415977516`*^9, 
   3.697799554133665*^9}, {3.69779958568857*^9, 3.6977996515207334`*^9}, {
   3.6977997018072743`*^9, 3.6977998432952023`*^9}, {3.697800084682583*^9, 
   3.697800241626899*^9}, {3.6978002876775465`*^9, 3.697800679942664*^9}, {
   3.697805514452196*^9, 3.6978056518731575`*^9}, {3.697822288932176*^9, 
   3.6978223841049337`*^9}, {3.697822429222677*^9, 3.6978225315229197`*^9}, {
   3.697822594480259*^9, 3.6978225945599475`*^9}, {3.6978228346728067`*^9, 
   3.697822844849125*^9}, {3.6978235002195606`*^9, 3.6978235312395496`*^9}, {
   3.697823578517539*^9, 3.697823602359697*^9}, {3.697823669118662*^9, 
   3.697823677917166*^9}, {3.697824726940096*^9, 3.697824736486435*^9}, 
   3.6981575223574333`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Number", " ", "of", " ", "nodes", " ", "on", " ", "IBP", " ", "tree"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NumberOfIBPVertex", "[", 
      RowBox[{"numberOfAtoms_", ",", "numberOfSlices_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "numberOfSlices"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"numberOfAtoms", "-", "2"}], ")"}]}], "-", "1"}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "numberOfSlices"}], ")"}], "-", "1"}], ")"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"NumberOfIBPVertex", "[", 
    RowBox[{"9", ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6978228548611045`*^9, 3.697822917604511*^9}, {
  3.6978229575375485`*^9, 3.6978231634677305`*^9}, {3.6978236566561227`*^9, 
  3.697823659776985*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NumberOfIBPVertex", "[", 
        RowBox[{"9", ",", "i"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"xy", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Number of Vertex on IBP Tree\>\""}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.697823173590905*^9, 3.6978232361668634`*^9}, {
  3.697823267024607*^9, 3.6978232863122206`*^9}, {3.697823356320365*^9, 
  3.6978234212662773`*^9}, {3.697823707493438*^9, 3.697823746026819*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Top", " ", "1"}], ":", " ", 
    RowBox[{
    "Sunway", " ", "TaihuLight", " ", "at", " ", "93", " ", "petaflops", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "^", "15"}], " ", "flops"}], ")"}], " ", "on", " ", 
     "November", " ", "2016"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"NumberOfIBPVertex", "[", 
           RowBox[{"i", ",", "4"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"365", "*", "24", "*", "3600", "*", 
            RowBox[{"(", 
             RowBox[{"93", "*", 
              RowBox[{"10", "^", "15"}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "40"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"xy", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Time to compute IBP tree on 93 petaflops\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Number of Atoms\>\"", ",", "\"\<Years\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697823996331522*^9, 3.697824013870758*^9}, {
  3.69782413901967*^9, 3.6978242355134754`*^9}, {3.697824272133033*^9, 
  3.6978242812725134`*^9}, {3.6978243603271613`*^9, 3.6978243609971724`*^9}, {
  3.697824393211303*^9, 3.6978244203256054`*^9}, {3.697824458619769*^9, 
  3.697824517973592*^9}, {3.6978245542102156`*^9, 3.697824700730853*^9}, {
  3.698157868126751*^9, 3.698157870975642*^9}, {3.6981579468509655`*^9, 
  3.6981579486031284`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4) Solving Manually", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["Solving Manually: Continuos Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
  3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
  3.696000958663651*^9}, {3.69827002677421*^9, 3.698270028592888*^9}}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766607424917`*^9, 3.698276672021037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"DGByHandGetX", ",", "DGByHandErrorMatrix"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandGetX", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"d", "=", "1.526"}], ",", 
        RowBox[{"\[Phi]", "=", "1.91"}], ",", "a", ",", "b", ",", "c", ",", 
        "i", ",", "p", ",", "u", ",", "v", ",", "x"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "\[Theta]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "d"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", 
            RowBox[{"d", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", ",", "0"}], "}"}]}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "4"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"dihedral", " ", "rotation", " ", "axis"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "3"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"u", "=", 
           RowBox[{"Normalize", "[", 
            RowBox[{"b", "-", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", " ", 
           RowBox[{"c", "+", 
            RowBox[{"d", "*", " ", "u"}]}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "normal", " ", "to", " ", "the", " ", "plane", " ", "abc"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"b", "-", "c"}], ",", 
             RowBox[{"a", "-", "c"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"plane", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{"\[Phi]", ",", "v", ",", "c"}], "]"}], "[", "p", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"dihedral", " ", "rotation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", "c"}], "]"}], 
            "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"set", " ", "i"}], "-", 
            RowBox[{"th", " ", "coordinate"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", "p"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "x", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandErrorMatrix", "[", 
     RowBox[{"G_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "edges", ",", "M", ",", "dij"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"edges", "=", 
        RowBox[{"EdgeList", "[", "G", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"j", "=", 
           RowBox[{
            RowBox[{"edges", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dij", "=", 
           RowBox[{"DGEdgeWeight", "[", 
            RowBox[{"G", ",", 
             RowBox[{"i", "\[UndirectedEdge]", "j"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"x", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "-", "dij"}], 
              ")"}], "/", "dij"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "9"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGByHandGetX", "[", "\[Omega]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    RowBox[{"DGProblem", "[", "x", "]"}], "[", "\"\<G\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Tube", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"DGByHandGetX", "[", 
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", 
                 ",", "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
                 "\[Omega]9"}], "}"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xrange", ",", "yrange", ",", "zrange"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RotationAction", "\[Rule]", "\"\<Clip\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Mean(error):\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"DGByHandErrorMatrix", "[", 
                RowBox[{"G", ",", 
                 RowBox[{"DGByHandGetX", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", 
                    "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", ",", 
                    "\[Omega]8", ",", "\[Omega]9"}], "}"}], "]"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"BoxStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"DGByHandErrorMatrix", "[", 
          RowBox[{"G", ",", 
           RowBox[{"DGByHandGetX", "[", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0", ",", "0", ",", "\[Omega]4", ",", "\[Omega]5", ",",
               "\[Omega]6", ",", "\[Omega]7", ",", "\[Omega]8", ",", 
              "\[Omega]9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Torsion", " ", "angles"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Torsion Angles\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]4", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]5", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]6", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]7", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]8", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]9", ",", "0"}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Bounding", " ", "boxes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Bounding Limits\>\"", ",", "Bold", ",", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zrange", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"ControlType", " ", "\[Rule]", " ", "IntervalSlider"}], ",", 
       RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Push\>\""}], ",", 
       RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"OpenerView", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Solution\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]4  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]5  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]6  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]7  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "7", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]8  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Omega]9  \>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"[", "9", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
            "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, 3.698072481114099*^9, {
   3.69827040072288*^9, 3.6982704392809677`*^9}, {3.6982704767129464`*^9, 
   3.698270486055981*^9}, {3.69827075311152*^9, 3.6982707839129333`*^9}, {
   3.6982708784692116`*^9, 3.6982710009520674`*^9}, {3.6982715503151693`*^9, 
   3.6982715571021194`*^9}, {3.698272298434101*^9, 3.6982723177884903`*^9}, {
   3.6982723607627*^9, 3.69827240129832*^9}, {3.6982724730876207`*^9, 
   3.6982724852625875`*^9}, {3.6982730960285783`*^9, 
   3.6982731030891294`*^9}, {3.6982731437015963`*^9, 3.698273157638199*^9}, {
   3.6982732033569045`*^9, 3.698273255405436*^9}, {3.698273380784088*^9, 
   3.6982733865643682`*^9}, {3.6982736799909735`*^9, 
   3.6982737316605234`*^9}, {3.698273897730236*^9, 3.6982739858410864`*^9}, {
   3.698274019835471*^9, 3.6982740332992177`*^9}, {3.698274112747086*^9, 
   3.698274124762021*^9}, {3.6982742677501135`*^9, 3.698274306521473*^9}, {
   3.698274498396601*^9, 3.6982745027545166`*^9}, {3.698274571764159*^9, 
   3.6982745897139077`*^9}, {3.6982746688748364`*^9, 3.698274741074173*^9}, {
   3.6982747716472054`*^9, 3.6982747847418785`*^9}, {3.6982748189324727`*^9, 
   3.6982748841478977`*^9}, {3.698274926542649*^9, 3.698274949153207*^9}, {
   3.698275160206649*^9, 3.698275187277109*^9}, {3.6982752501926146`*^9, 
   3.698275267361329*^9}, {3.698275308349368*^9, 3.6982753398186407`*^9}, {
   3.6982760798753653`*^9, 3.6982761022060823`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5927833573105872`", ",", 
   RowBox[{"-", "1.798550982932917`"}], ",", 
   RowBox[{"-", "0.8064073830592164`"}], ",", 
   RowBox[{"-", "1.4852654681106499`"}], ",", "0.5714116117217944`", ",", 
   RowBox[{"-", "1.4499663261701308`"}], ",", 
   RowBox[{"-", "1.8329037564204018`"}], ",", "2.796252885109979`", ",", 
   "2.3405881072013486`"}], "}"}]], "Output",
 CellChangeTimes->{3.7093917731197195`*^9, 3.709460927056589*^9}],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`xrange$$ = {-10., 
     10.}, $CellContext`yrange$$ = {-6.48, 
     9.940000000000001}, $CellContext`zrange$$ = {-5.8, 
     9.64}, $CellContext`\[Omega]4$$ = -3.141592653589793, $CellContext`\
\[Omega]5$$ = -3.141592653589793, $CellContext`\[Omega]6$$ = \
-3.141592653589793, $CellContext`\[Omega]7$$ = -3.141592653589793, \
$CellContext`\[Omega]8$$ = -3.141592653589793, $CellContext`\[Omega]9$$ = \
-3.141592653589793, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style["Torsion Angles", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`\[Omega]4$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]5$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]6$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]7$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]8$$], 0}, -Pi, Pi}, {{
        Hold[$CellContext`\[Omega]9$$], 0}, -Pi, Pi}, {
       Hold[
        Style["Bounding Limits", Bold, Medium]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`xrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`yrange$$], {-3, 3}}, -10, 10}, {{
        Hold[$CellContext`zrange$$], {-3, 3}}, -10, 10}, {
       Hold[
        OpenerView[{
          Style["Solution", Bold, Medium], 
          Column[{
            Row[{"\[Omega]4  ", 
              Slider[-1.4852654681106499`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]5  ", 
              Slider[0.5714116117217944, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]6  ", 
              Slider[-1.4499663261701308`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]7  ", 
              Slider[-1.8329037564204018`, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]8  ", 
              Slider[2.796252885109979, {-Pi, Pi}, Enabled -> False]}], 
            Row[{"\[Omega]9  ", 
              Slider[2.3405881072013486`, {-Pi, Pi}, Enabled -> False]}]}]}]],
        Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     666., {596., 334.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`\[Omega]4$4873$$ = 
     0, $CellContext`\[Omega]5$4878$$ = 0, $CellContext`\[Omega]6$4879$$ = 
     0, $CellContext`\[Omega]7$4880$$ = 0, $CellContext`\[Omega]8$4881$$ = 
     0, $CellContext`\[Omega]9$4882$$ = 0, $CellContext`xrange$4883$$ = 
     0, $CellContext`yrange$4884$$ = 0, $CellContext`zrange$4885$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      3, StandardForm, 
       "Variables" :> {$CellContext`xrange$$ = {-3, 
          3}, $CellContext`yrange$$ = {-3, 3}, $CellContext`zrange$$ = {-3, 
          3}, $CellContext`\[Omega]4$$ = 0, $CellContext`\[Omega]5$$ = 
         0, $CellContext`\[Omega]6$$ = 0, $CellContext`\[Omega]7$$ = 
         0, $CellContext`\[Omega]8$$ = 0, $CellContext`\[Omega]9$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`\[Omega]4$$, $CellContext`\[Omega]4$4873$$, 0], 
         Hold[$CellContext`\[Omega]5$$, $CellContext`\[Omega]5$4878$$, 0], 
         Hold[$CellContext`\[Omega]6$$, $CellContext`\[Omega]6$4879$$, 0], 
         Hold[$CellContext`\[Omega]7$$, $CellContext`\[Omega]7$4880$$, 0], 
         Hold[$CellContext`\[Omega]8$$, $CellContext`\[Omega]8$4881$$, 0], 
         Hold[$CellContext`\[Omega]9$$, $CellContext`\[Omega]9$4882$$, 0], 
         Hold[$CellContext`xrange$$, $CellContext`xrange$4883$$, 0], 
         Hold[$CellContext`yrange$$, $CellContext`yrange$4884$$, 0], 
         Hold[$CellContext`zrange$$, $CellContext`zrange$4885$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> {
         Graphics3D[{{Red, 
            Tube[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}, {
            PointSize[Large], Blue, 
            Point[
             $CellContext`DGByHandGetX[{
              0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]}}, 
          PlotRange -> {$CellContext`xrange$$, $CellContext`yrange$$, \
$CellContext`zrange$$}, RotationAction -> "Clip", Axes -> True, 
          AxesLabel -> {"x", "y", "z"}, PlotLabel -> {"Mean(error):", 
            NumberForm[
             Max[
              $CellContext`DGByHandErrorMatrix[$CellContext`G, 
               $CellContext`DGByHandGetX[{
                0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]]], {3, 2}]}, BoxStyle -> Directive[Dashed], 
          ImageSize -> Medium], 
         MatrixPlot[
          $CellContext`DGByHandErrorMatrix[$CellContext`G, 
           $CellContext`DGByHandGetX[{
            0, 0, 0, $CellContext`\[Omega]4$$, $CellContext`\[Omega]5$$, \
$CellContext`\[Omega]6$$, $CellContext`\[Omega]7$$, $CellContext`\[Omega]8$$, \
$CellContext`\[Omega]9$$}]], ColorFunction -> (ColorData["TemperatureMap"][
            Rescale[#, {0, 1}]]& ), ColorFunctionScaling -> False]}, 
       "Specifications" :> {
         Style[
         "Torsion Angles", Bold, Medium], {{$CellContext`\[Omega]4$$, 0}, -Pi,
           Pi}, {{$CellContext`\[Omega]5$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]6$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]7$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]8$$, 0}, -Pi, 
          Pi}, {{$CellContext`\[Omega]9$$, 0}, -Pi, Pi}, 
         Style[
         "Bounding Limits", Bold, 
          Medium], {{$CellContext`xrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`yrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 
          0.1}, {{$CellContext`zrange$$, {-3, 3}}, -10, 10, ControlType -> 
          IntervalSlider, Method -> "Push", MinIntervalSize -> 0.1}, 
         OpenerView[{
           Style["Solution", Bold, Medium], 
           Column[{
             Row[{"\[Omega]4  ", 
               Slider[-1.4852654681106499`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]5  ", 
               Slider[0.5714116117217944, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]6  ", 
               Slider[-1.4499663261701308`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]7  ", 
               Slider[-1.8329037564204018`, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]8  ", 
               Slider[2.796252885109979, {-Pi, Pi}, Enabled -> False]}], 
             Row[{"\[Omega]9  ", 
               Slider[
               2.3405881072013486`, {-Pi, Pi}, Enabled -> False]}]}]}]}, 
       "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
      ImageSizeCache->{1145., {497., 504.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7093917731197195`*^9, 3.709460945331562*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Manually: Discrete Problem", "Subchapter",
 CellChangeTimes->{{3.6957228443800993`*^9, 3.695722871251212*^9}, {
   3.696000820192024*^9, 3.6960008204222765`*^9}, {3.6960009494192247`*^9, 
   3.6960009726613865`*^9}, 3.6969455372420783`*^9}],

Cell[CellGroupData[{

Cell["Applet", "Section",
 CellChangeTimes->{{3.6982766832687664`*^9, 3.6982766889084167`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGByHandTreeFromBranches", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DGByHandTreeFromBranches", "[", 
     RowBox[{"G_", ",", "branch_", ",", "branches_", ",", "check_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "T", ",", "X", ",", "k", ",", "i", ",", "n", ",", "b", ",", "x", ",", 
        "y", ",", "z", ",", "dx", ",", "dy", ",", "dz", ",", 
        RowBox[{"edges", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"v", "=", 
         RowBox[{"{", "}"}]}], ",", "styVertex", ",", 
        RowBox[{"styEdges", "=", 
         RowBox[{"{", "}"}]}], ",", "m", ",", "color", ",", "valid", ",", 
        "nodes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nodes", "=", 
        RowBox[{"DGNaturalOrdering", "[", "G", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"VertexList", "[", "G", "]"}], "]"}], "-", "3"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"creating", " ", "edges"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{"2", "k"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"k", "\[UndirectedEdge]", 
             RowBox[{
              RowBox[{"2", "k"}], "+", "1"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"highlighting", " ", "current", " ", "branch"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "0"}], ",", 
         RowBox[{"k", "\[LessEqual]", "n"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"v", ",", 
            RowBox[{"FromDigits", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "k"}], "]"}], "]"}]}], "]"}], ",", "2"}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"styEdges", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "\[UndirectedEdge]", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"coloring", " ", "visited", " ", "nodes", " ", 
         RowBox[{"(", "branches", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"styVertex", "=", 
        RowBox[{"{", "LightGray", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "branches", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "branches", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"X", "=", 
              RowBox[{"DGBPXinit", "[", 
               RowBox[{"G", ",", 
                RowBox[{"nodes", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"b", "=", 
              RowBox[{"branches", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"check", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"checking", " ", "partial", " ", "solutions"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"valid", "&&", 
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], "<", "0.001"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"valid", " ", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"color", "=", "Red"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "checking", " ", "only", " ", "final", " ", "solution"}], " ",
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valid", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"DGBPGetX", "[", 
                    RowBox[{"G", ",", "X", ",", 
                    RowBox[{"b", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DGRelativeResidue", "[", 
                    RowBox[{"G", ",", "X", ",", "nodes", ",", 
                    RowBox[{"i", "+", "3"}]}], "]"}], ">", "0.001"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{"valid", ",", 
                    RowBox[{"color", "=", "Green"}], ",", 
                    RowBox[{"color", "=", "Red"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"v", "=", 
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "b"}], "]"}], ",", "2"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"styVertex", ",", 
                    RowBox[{"v", "\[Rule]", "color"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], ","}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"T", "=", 
        RowBox[{"TreeGraph", "[", "\[IndentingNewLine]", 
         RowBox[{"edges", ",", "\[IndentingNewLine]", 
          RowBox[{"VertexStyle", "\[Rule]", "styVertex"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"EdgeStyle", "\[Rule]", "styEdges"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GraphLayout", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<LayeredEmbedding\>\"", ",", 
             RowBox[{"LayerSizeFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"8", "&"}], ")"}]}]}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "minimal", " ", "edge", " ", "set"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "=", 
    RowBox[{"DGRandomMDGP", "[", 
     RowBox[{"9", ",", "0.0", ",", "0.0"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "it", " ", "must", " ", "be", " ", "a", " ", "graph", " ", "with", " ", 
    "9", " ", "nodes"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"EdgeList", "[", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"add", " ", "extra", " ", "constraints"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"Union", "[", 
     RowBox[{"edges", ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"init", " ", "graph"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{
     RowBox[{"DGProblem", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DGRandom3DBackbone", "[", "9", "]"}], "[", "\"\<Points\>\"", 
        "]"}], ",", "edges"}], "]"}], "[", "\"\<G\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "order"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"DGNaturalOrdering", "[", 
    RowBox[{"P", "[", "\"\<G\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"branches", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"s", "=", 
      RowBox[{"{", "}"}]}], ",", "node", ",", 
     RowBox[{"X", "=", 
      RowBox[{"DGBPXinit", "[", 
       RowBox[{"G", ",", 
        RowBox[{"nodes", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DGByHandTreeFromBranches", "[", 
         RowBox[{"G", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}], ",", "branches", ",",
           "BP"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Column", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DGPlotAdjacencyMatrix", "[", 
            RowBox[{"G", ",", "Sym"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Tube", "[", "X", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
                RowBox[{"Point", "[", "X", "]"}]}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"s", ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\[Omega]4\>\"", ",", "\"\<\[Omega]5\>\"", ",", 
                  "\"\<\[Omega]6\>\"", ",", "\"\<\[Omega]7\>\"", ",", 
                  "\"\<\[Omega]8\>\"", ",", "\"\<\[Omega]9\>\""}], "}"}]}], 
               "}"}]}]}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Branches", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Branches\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]4", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]5", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]6", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]7", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]8", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Omega]9", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Try\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"{", 
           RowBox[{
           "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7", 
            ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"node", "=", "1"}], ",", 
           RowBox[{"node", "\[LessEqual]", 
            RowBox[{"Length", "[", "b", "]"}]}], ",", 
           RowBox[{"node", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", 
               RowBox[{"node", "+", "3"}], "]"}], "]"}], "=", 
             RowBox[{"DGBPGetX", "[", 
              RowBox[{"G", ",", "X", ",", 
               RowBox[{"b", "[", 
                RowBox[{"[", "node", "]"}], "]"}], ",", "nodes", ",", 
               RowBox[{"node", "+", "3"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"branches", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]4", ",", "\[Omega]5", ",", "\[Omega]6", ",", "\[Omega]7",
              ",", "\[Omega]8", ",", "\[Omega]9"}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Options\>\"", ",", "Bold", ",", " ", "Medium"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"BP", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sym", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", "Checkbox"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"show", " ", "solutions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Solutions\>\"", ",", "Bold", ",", "Medium"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Show\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"DGBPSolver", "[", 
             RowBox[{"G", ",", "nodes"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Branches\>\"", "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "s", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"branches", "=", 
          RowBox[{"Union", "[", 
           RowBox[{"branches", ",", "s"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]",
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<Reset\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"G", "=", 
          RowBox[{
           RowBox[{"DGProblem", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DGRandom3DBackbone", "[", "9", "]"}], "[", 
              "\"\<Points\>\"", "]"}], ",", "edges"}], "]"}], "[", 
           "\"\<G\>\"", "]"}]}], ",", 
         RowBox[{"branches", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Background", "\[Rule]", "LightRed"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.695723321371716*^9, 3.6957233477244525`*^9}, {
   3.6957234760533085`*^9, 3.6957235098336396`*^9}, {3.695723735715779*^9, 
   3.6957237877536187`*^9}, {3.695723850173235*^9, 3.6957239031129613`*^9}, {
   3.695728140234626*^9, 3.695728170469324*^9}, {3.695728206912562*^9, 
   3.6957283189207373`*^9}, {3.6957302430448112`*^9, 3.695730251925662*^9}, {
   3.695730284192649*^9, 3.6957303072451687`*^9}, 3.6957303419698424`*^9, {
   3.6957303818606863`*^9, 3.695730385876433*^9}, {3.695730776871158*^9, 
   3.6957307799432144`*^9}, {3.695730913909477*^9, 3.695731056625264*^9}, {
   3.6957319251514997`*^9, 3.6957319315696564`*^9}, {3.6957321042594004`*^9, 
   3.6957321106365647`*^9}, {3.6957322295983095`*^9, 
   3.6957322502411985`*^9}, {3.695732413433252*^9, 3.695732417498835*^9}, {
   3.6957325188132176`*^9, 3.6957326476413317`*^9}, {3.6957327030329676`*^9, 
   3.6957327379451895`*^9}, {3.6957328580897083`*^9, 3.695732908861949*^9}, {
   3.695732976478773*^9, 3.695732988297332*^9}, {3.6957330608395104`*^9, 
   3.6957331084110994`*^9}, {3.6957331512650113`*^9, 3.6957331875252066`*^9}, 
   3.695733451581834*^9, {3.6957335101968355`*^9, 3.6957335723975716`*^9}, {
   3.695733630567013*^9, 3.6957336843221555`*^9}, {3.6957337403604355`*^9, 
   3.6957338169156723`*^9}, {3.695733865807949*^9, 3.695733871196596*^9}, {
   3.6957339622950974`*^9, 3.695733976453291*^9}, {3.695734172561076*^9, 
   3.6957341961862507`*^9}, {3.6957343224310236`*^9, 3.695734490364665*^9}, {
   3.6957345316085634`*^9, 3.6957345401498027`*^9}, {3.6957345864160423`*^9, 
   3.695734631603385*^9}, {3.6957347012036605`*^9, 3.6957347215090895`*^9}, {
   3.69573479380623*^9, 3.695734822739337*^9}, {3.695734874725807*^9, 
   3.695734922835139*^9}, {3.6957349678751855`*^9, 3.6957350309412208`*^9}, {
   3.6957350745613704`*^9, 3.695735083754054*^9}, {3.6957351324046464`*^9, 
   3.6957351801778193`*^9}, {3.695735237659878*^9, 3.6957352843844495`*^9}, 
   3.6957353270579834`*^9, {3.695735465755406*^9, 3.6957354886370554`*^9}, {
   3.6957355946776204`*^9, 3.695735604012744*^9}, {3.6957356352356386`*^9, 
   3.6957357853389974`*^9}, {3.695736023894952*^9, 3.695736029581028*^9}, {
   3.6957361614117217`*^9, 3.6957361738382483`*^9}, {3.6957362038644595`*^9, 
   3.695736210350934*^9}, {3.6957363377798505`*^9, 3.695736339913566*^9}, {
   3.695736388787493*^9, 3.695736395158078*^9}, {3.695736466272395*^9, 
   3.6957364681925907`*^9}, {3.6957365737824*^9, 3.6957367221996307`*^9}, {
   3.695736804774605*^9, 3.695736824849099*^9}, {3.695736870426489*^9, 
   3.6957368746607704`*^9}, {3.695737066994382*^9, 3.6957370745685244`*^9}, {
   3.695737180725799*^9, 3.6957373546184263`*^9}, {3.6957375699866943`*^9, 
   3.6957375998386583`*^9}, {3.6957377143178205`*^9, 3.695737742205675*^9}, {
   3.6957378110143795`*^9, 3.6957378850992956`*^9}, {3.6957379340609617`*^9, 
   3.695737934462038*^9}, {3.695738259762306*^9, 3.695738367274972*^9}, {
   3.695738409500598*^9, 3.6957384421132274`*^9}, {3.6957385706618986`*^9, 
   3.695738572694256*^9}, {3.695738612038187*^9, 3.69573864960015*^9}, 
   3.6957388507380824`*^9, {3.6957394459987955`*^9, 3.695739542795068*^9}, {
   3.6957396054892187`*^9, 3.6957396122208004`*^9}, {3.6957398838947153`*^9, 
   3.6957398874824905`*^9}, {3.6957406530594573`*^9, 3.695740661880864*^9}, {
   3.6957408944610014`*^9, 3.6957410066013136`*^9}, {3.6957410861236067`*^9, 
   3.6957411096802387`*^9}, {3.6957411462041087`*^9, 3.695741146320501*^9}, {
   3.6957411825985527`*^9, 3.69574118828378*^9}, {3.6957412376215544`*^9, 
   3.6957412475596485`*^9}, {3.695741432878501*^9, 3.695741446835599*^9}, {
   3.6957415063069725`*^9, 3.6957415325437765`*^9}, {3.6957416929362893`*^9, 
   3.6957418450245347`*^9}, 3.695741894746039*^9, {3.6957419279122915`*^9, 
   3.695741993636595*^9}, 3.6957420446016536`*^9, {3.695742091680943*^9, 
   3.6957421855837917`*^9}, {3.6957422226389103`*^9, 3.695742266516306*^9}, {
   3.69574234306454*^9, 3.695742385774511*^9}, {3.6957424775536404`*^9, 
   3.695742506889844*^9}, {3.6957425514568357`*^9, 3.695742633174608*^9}, {
   3.6957428115295515`*^9, 3.695742880306145*^9}, 3.6957491344650517`*^9, {
   3.6957493282972527`*^9, 3.6957493520816793`*^9}, {3.6960012909403973`*^9, 
   3.6960012938883305`*^9}, {3.696156255994712*^9, 3.6961562650100794`*^9}, {
   3.696156295886201*^9, 3.6961563106886444`*^9}, {3.6961564013359656`*^9, 
   3.6961564517039223`*^9}, {3.6961565250416493`*^9, 
   3.6961566543467717`*^9}, {3.6961567288961554`*^9, 
   3.6961568441226873`*^9}, {3.6961568909910555`*^9, 3.696156903900296*^9}, {
   3.6961569672255335`*^9, 3.696156969304701*^9}, {3.6961571034179225`*^9, 
   3.696157110312049*^9}, {3.696160282114659*^9, 3.696160302223087*^9}, {
   3.6961605625418644`*^9, 3.6961606222501583`*^9}, {3.696160658944554*^9, 
   3.6961606778289185`*^9}, {3.6961609283775125`*^9, 
   3.6961609808174286`*^9}, {3.6961610459570017`*^9, 
   3.6961610477260633`*^9}, {3.696161209739623*^9, 3.6961613158159175`*^9}, {
   3.696161357319108*^9, 3.69616136948481*^9}, {3.696162431625352*^9, 
   3.6961624330647745`*^9}, {3.6961628027014465`*^9, 
   3.6961628571260533`*^9}, {3.696162900512824*^9, 3.6961629049376287`*^9}, {
   3.6961642456888447`*^9, 3.696164270507456*^9}, {3.6961649316798134`*^9, 
   3.696164998676358*^9}, {3.696165041400201*^9, 3.696165083729754*^9}, {
   3.6961651566015034`*^9, 3.696165206769026*^9}, {3.6961652700456624`*^9, 
   3.696165289007637*^9}, {3.6961653864122925`*^9, 3.696165497141945*^9}, {
   3.696165743808255*^9, 3.696165799254837*^9}, {3.696165845290099*^9, 
   3.696165990776334*^9}, {3.6961661230691767`*^9, 3.696166191968793*^9}, {
   3.6961662871277575`*^9, 3.696166327478566*^9}, {3.696166386078822*^9, 
   3.6961664236976624`*^9}, {3.696166496850869*^9, 3.6961664989856625`*^9}, {
   3.6961665602905154`*^9, 3.69616677076039*^9}, {3.69616684916016*^9, 
   3.696166888844514*^9}, {3.696166989227959*^9, 3.6961669927334337`*^9}, {
   3.696167046616452*^9, 3.696167051273269*^9}, {3.6961670863546443`*^9, 
   3.69616711698417*^9}, {3.696168089856365*^9, 3.696168121062352*^9}, {
   3.69616818237259*^9, 3.6961682224238987`*^9}, {3.6961683411240253`*^9, 
   3.696168384465231*^9}, 3.6961684150385275`*^9, {3.6961684819548564`*^9, 
   3.6961685051447563`*^9}, {3.696168568475537*^9, 3.696168570263974*^9}, {
   3.6961686351296844`*^9, 3.6961686370314665`*^9}, {3.696168686385473*^9, 
   3.696168691443553*^9}, {3.6961687468176303`*^9, 3.6961688101433983`*^9}, {
   3.6961689711518*^9, 3.6961690483381233`*^9}, {3.696169125123598*^9, 
   3.696169175323496*^9}, {3.69616950254916*^9, 3.696169563303851*^9}, {
   3.6961696075874076`*^9, 3.6961696257426414`*^9}, {3.69616969935327*^9, 
   3.6961697070144925`*^9}, 3.6961697386375637`*^9, {3.696169815828497*^9, 
   3.6961698450990944`*^9}, {3.696169882730567*^9, 3.6961699262763777`*^9}, {
   3.6961699622860117`*^9, 3.6961699750439024`*^9}, {3.6961700134511185`*^9, 
   3.696170017009848*^9}, {3.6961700553549232`*^9, 3.696170086868808*^9}, {
   3.696170163107408*^9, 3.6961701814566517`*^9}, {3.6961702450598593`*^9, 
   3.6961702610064096`*^9}, {3.6961705582279353`*^9, 3.6961705711466084`*^9}, 
   3.6961706335282717`*^9, {3.6961707824291086`*^9, 3.6961707949249997`*^9}, {
   3.696170828378927*^9, 3.6961708451917305`*^9}, {3.6961775244960194`*^9, 
   3.696177536639609*^9}, {3.6961777114223776`*^9, 3.6961778726060057`*^9}, {
   3.6961779536871257`*^9, 3.696178001287077*^9}, {3.6961780446438513`*^9, 
   3.6961780491063614`*^9}, {3.69617808066495*^9, 3.6961782203938217`*^9}, {
   3.696178433914888*^9, 3.6961784492746*^9}, {3.696178482911583*^9, 
   3.6961785279941273`*^9}, {3.6963358148945017`*^9, 3.696335824944496*^9}, {
   3.696336702720662*^9, 3.696336711565955*^9}, {3.6963367506934752`*^9, 
   3.696336898626133*^9}, {3.6963369663555574`*^9, 3.6963370245934205`*^9}, {
   3.6963370579884453`*^9, 3.6963370911332693`*^9}, {3.69633713867729*^9, 
   3.69633714758457*^9}, {3.6963371784547625`*^9, 3.696337330668229*^9}, 
   3.696337506286955*^9, {3.696342030265442*^9, 3.696342055614204*^9}, {
   3.6965973436925826`*^9, 3.6965973584907165`*^9}, {3.6965973978907404`*^9, 
   3.6965974400600586`*^9}, {3.6965980687982664`*^9, 3.696598082182392*^9}, {
   3.6965987379952097`*^9, 3.69659875237007*^9}, {3.6965991595664005`*^9, 
   3.696599161357998*^9}, {3.6966041446608152`*^9, 3.6966042105828886`*^9}, {
   3.696604264613673*^9, 3.69660426850031*^9}, {3.6966042987761164`*^9, 
   3.696604362039445*^9}, {3.696604415473429*^9, 3.696604443979203*^9}, {
   3.6966044989890485`*^9, 3.6966045013103867`*^9}, {3.696610914922676*^9, 
   3.6966109153078117`*^9}, {3.696950003267107*^9, 3.69695000492143*^9}, 
   3.697995540885202*^9, {3.69799566194641*^9, 3.69799566224811*^9}, {
   3.6979957004319425`*^9, 3.6979958659780674`*^9}, {3.697995991555769*^9, 
   3.6979960054415*^9}, {3.6979962537211037`*^9, 3.697996260026286*^9}, {
   3.6979963909522963`*^9, 3.6979964058568335`*^9}, {3.698058369377993*^9, 
   3.6980584397127724`*^9}, {3.698072481305226*^9, 3.698072481323738*^9}, {
   3.6982767055230107`*^9, 3.6982769867686496`*^9}, {3.6982770477143927`*^9, 
   3.698277084070335*^9}, {3.698277363050057*^9, 3.698277378524715*^9}, {
   3.6982777503800545`*^9, 3.698277789489343*^9}, {3.6982778195086*^9, 
   3.698277825100151*^9}, {3.6982781608132734`*^9, 3.6982782111922708`*^9}, {
   3.698278364609772*^9, 3.6982783666122537`*^9}, 3.698278459380054*^9, {
   3.700314326154815*^9, 3.7003143261704407`*^9}, {3.70272171574891*^9, 
   3.702721775415797*^9}, {3.7027219332196655`*^9, 3.702721937385425*^9}, {
   3.7027220174543805`*^9, 3.702722189843503*^9}, {3.702722228626461*^9, 
   3.702722237594743*^9}, {3.70272227525725*^9, 3.7027224005488477`*^9}, {
   3.7027224342108183`*^9, 3.702722472304862*^9}, {3.702722543345603*^9, 
   3.7027225659706087`*^9}, {3.70273031811456*^9, 3.702730321156896*^9}, {
   3.7027306674365206`*^9, 3.702730669627152*^9}, {3.702730759901149*^9, 
   3.702730771403966*^9}, {3.7027312497473345`*^9, 3.7027312523926687`*^9}, {
   3.702731321570535*^9, 3.7027313412035847`*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5) Solving IMDGP using Rotations", "Chapter",
 CellChangeTimes->{
  3.6896820831181965`*^9, {3.6957184087362404`*^9, 3.695718419041832*^9}, {
   3.698067376091146*^9, 3.6980673786551833`*^9}, {3.698080445180032*^9, 
   3.698080464298929*^9}, {3.6980805484661093`*^9, 3.6980805555092807`*^9}, {
   3.6981366838232155`*^9, 3.6981367362664995`*^9}, 3.6982697383364143`*^9, {
   3.6982698149338293`*^9, 3.6982698227630577`*^9}, {3.698572390735381*^9, 
   3.6985723924870296`*^9}, {3.6985725480912857`*^9, 
   3.6985725546008253`*^9}, {3.7026482856328583`*^9, 3.702648293701703*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["DGRotAngleInterval", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.702667202900814*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGGetRotAngleInterval", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGGetRotAngleInterval", "[", 
   RowBox[{
   "dab_", ",", "dac_", ",", "dbc_", ",", "dax_", ",", "dbx_", ",", "lcx_", 
    ",", "ucx_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "r", ",", "q", ",", "\[Omega]", ",", 
      "\[Theta]", ",", "\[Chi]", ",", "\[Rho]", ",", "lcxMin", ",", "ucxMax", 
      ",", 
      RowBox[{"verbose", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"creates", " ", "the", " ", "base", " ", "triangle"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"{", 
       RowBox[{"dab", ",", "0", ",", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dab", "^", "2"}], "+", 
          RowBox[{"dac", "^", "2"}], "-", 
          RowBox[{"dbc", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "dac", "*", "dab"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"dac", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{a,b,c}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "intersection", " ", "of", " ", "the", " ", "circunference", " ", 
        "and", " ", "the", " ", "positive", " ", "quadrant", " ", "of", " ", 
        "XY"}], "-", "Plane"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dab", "^", "2"}], "+", 
          RowBox[{"dax", "^", "2"}], "-", 
          RowBox[{"dbx", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "dab", "*", "dax"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Theta]=\>\"", ",", "\[Theta]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"dax", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";", 
     " ", 
     RowBox[{"(*", " ", "intersection", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"q", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"circle", " ", "radius"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{q,r}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"q", ",", "r"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{daq,dbq}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"a", "-", "q"}], "]"}], ",", 
           RowBox[{"Norm", "[", 
            RowBox[{"b", "-", "q"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"circunference", " ", "parametrization"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]", "[", "\[Theta]_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"r", "*", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", "*", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{lcx,ucx}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"lcx", ",", "ucx"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lcxMin", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"lcx", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"c", "-", 
          RowBox[{"\[Chi]", "[", "0.01", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ucxMax", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"ucx", ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"c", "-", 
          RowBox[{"\[Chi]", "[", 
           RowBox[{"\[Pi]", "-", "0.01"}], "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"verbose", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<{lcxMin,ucxMax}=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"lcxMin", ",", "ucxMax"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calculates", " ", "rotation", " ", "angle", " ", "given", " ", "a", 
       " ", "distance", " ", "to", " ", "point", " ", "c"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Rho]", "[", "\[Delta]_", "]"}], ":=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", 
          RowBox[{"\[Delta]", "^", "2"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "r", "*", 
          RowBox[{"c", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]", "[", "lcxMin", "]"}], ",", 
        RowBox[{"\[Rho]", "[", "ucxMax", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7025849436368012`*^9, 3.702585225357638*^9}, {
   3.7025852591754107`*^9, 3.7025857138940496`*^9}, {3.7025857565632687`*^9, 
   3.702585903118622*^9}, {3.7025860436832285`*^9, 3.7025860476533823`*^9}, {
   3.7025861635004416`*^9, 3.7025863147989535`*^9}, {3.702586430620968*^9, 
   3.702586445561121*^9}, {3.70258657487226*^9, 3.702586575756974*^9}, {
   3.7025866391056137`*^9, 3.7025867215501156`*^9}, {3.7025867527108927`*^9, 
   3.7025867916388707`*^9}, 3.702587331764036*^9, {3.702587459676263*^9, 
   3.7025874659953156`*^9}, {3.7025875826488247`*^9, 
   3.7025875858814373`*^9}, {3.7025876481335454`*^9, 3.702587649270815*^9}, {
   3.702588255078732*^9, 3.702588292389495*^9}, {3.702630969216283*^9, 
   3.702631072151683*^9}, {3.7026311378776245`*^9, 3.702631214363267*^9}, {
   3.702631260295026*^9, 3.702631519663731*^9}, {3.7026315518069363`*^9, 
   3.7026316225921144`*^9}, {3.702634362216016*^9, 3.7026343818031397`*^9}, {
   3.702634422481219*^9, 3.7026344364337544`*^9}, {3.7026344933507614`*^9, 
   3.7026345371882915`*^9}, {3.7026349425169935`*^9, 
   3.7026349810576572`*^9}, {3.702644783859481*^9, 3.7026447841389008`*^9}, {
   3.7026448331592035`*^9, 3.702644901939868*^9}, 3.7026453149856663`*^9, {
   3.702648300284288*^9, 3.702648347022227*^9}, {3.702661215483858*^9, 
   3.702661225833205*^9}, {3.7026612564268284`*^9, 3.7026612993293605`*^9}, {
   3.7026614086918707`*^9, 3.7026614836580124`*^9}, {3.702661515331992*^9, 
   3.7026618629115076`*^9}, {3.702661911599752*^9, 3.7026619271410403`*^9}, {
   3.702662046008308*^9, 3.7026622347484393`*^9}, {3.702662396744067*^9, 
   3.702662501452999*^9}, {3.7026625645682664`*^9, 3.702662568861965*^9}, {
   3.70266265335056*^9, 3.7026628004748645`*^9}, {3.702662839687356*^9, 
   3.702662880985922*^9}, {3.7026629460938168`*^9, 3.70266308084925*^9}, {
   3.702663124856131*^9, 3.7026631638642344`*^9}, {3.7026633593211184`*^9, 
   3.7026633662045236`*^9}, {3.702663684901252*^9, 3.7026638076941195`*^9}, {
   3.7026638379649143`*^9, 3.7026640065720806`*^9}, {3.7026640557126565`*^9, 
   3.702664241092295*^9}, {3.7026643351504836`*^9, 3.702664449793388*^9}, {
   3.702664589938775*^9, 3.702664736540487*^9}, {3.7026647674144564`*^9, 
   3.7026650052647977`*^9}, {3.702665122778717*^9, 3.7026654088639297`*^9}, {
   3.7026659169400883`*^9, 3.7026659633030586`*^9}, {3.702666134124052*^9, 
   3.702666134255231*^9}, {3.70266616661606*^9, 3.702666227237485*^9}, {
   3.7026663558776674`*^9, 3.702666425489391*^9}, 3.7026664829392333`*^9, {
   3.70266652751575*^9, 3.7026665284225044`*^9}, {3.7026665703184357`*^9, 
   3.7026666700317545`*^9}, {3.7026668892991433`*^9, 3.702666896318932*^9}, {
   3.702666959854605*^9, 3.702666977200746*^9}, {3.7026672968919373`*^9, 
   3.7026673108613815`*^9}, {3.7026674288436193`*^9, 
   3.7026674419812307`*^9}, {3.702667581808366*^9, 3.702667664519201*^9}, {
   3.702668108800061*^9, 3.7026681347733264`*^9}, {3.702668186733611*^9, 
   3.7026682207794943`*^9}, {3.7026683310922623`*^9, 
   3.7026683401459484`*^9}, {3.7026684008277397`*^9, 
   3.7026684303024073`*^9}, {3.702675060885282*^9, 3.702675112744052*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"calculating", " ", "rotation", " ", "angle", " ", "bounds"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"b", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"c", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0"}], "}"}]}], ";", 
    RowBox[{"x", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dab", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "b"}], "]"}]}], ";", 
    RowBox[{"dac", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "c"}], "]"}]}], ";", 
    RowBox[{"dbc", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"b", "-", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dax", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"a", "-", "x"}], "]"}]}], ";", 
    RowBox[{"dbx", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"b", "-", "x"}], "]"}]}], ";", 
    RowBox[{"dcx", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"c", "-", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ucx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "*", "dcx"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lcx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Epsilon]"}], ")"}], "*", "dcx"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Omega]", "=", 
    RowBox[{"DGGetRotAngleInterval", "[", 
     RowBox[{
     "dab", ",", "dac", ",", "dbc", ",", "dax", ",", "dbx", ",", "lcx", ",", 
      "ucx"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7026655093224525`*^9, 3.702665554563734*^9}, {
   3.7026655902521696`*^9, 3.7026657447290707`*^9}, {3.7026657949966373`*^9, 
   3.7026658281277657`*^9}, 3.702665892123801*^9, {3.7026659690715313`*^9, 
   3.7026659883743114`*^9}, 3.702666085747013*^9, {3.7026662804870453`*^9, 
   3.70266628066825*^9}, {3.702667120041193*^9, 3.7026671205853405`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGGetAllRotAngleInterval", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.7026672225036063`*^9}, {
  3.7026744325981674`*^9, 3.7026744339580617`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGGetAllRotAngleInterval", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DGGetAllRotAngleInterval", "[", "G_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "natoms", ",", "\[Omega]", ",", "dab", ",", "dac", ",", "dbc", ",", 
       "dax", ",", "dbx", ",", "lcx", ",", "ucx", ",", "i", ",", "j"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"natoms", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "natoms"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "4"}], ",", 
        RowBox[{"i", "\[LessEqual]", "natoms"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dab", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dac", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dbc", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", 
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dax", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dbx", "=", 
          RowBox[{"DGEdgeWeight", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lcx", ",", "ucx"}], "}"}], "=", 
          RowBox[{"DGEdgeDistanceBounds", "[", 
           RowBox[{"G", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "3"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Omega]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"DGGetRotAngleInterval", "[", 
           RowBox[{
           "dab", ",", "dac", ",", "dbc", ",", "dax", ",", "dbx", ",", "lcx", 
            ",", "ucx"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[Omega]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702666989546089*^9, 3.702666997100268*^9}, {
  3.7026670869120684`*^9, 3.702667087138389*^9}, {3.7026672321214447`*^9, 
  3.7026672373297553`*^9}, {3.7026684671240573`*^9, 3.7026684979152117`*^9}, {
  3.702674906228129*^9, 3.7026749065957527`*^9}, {3.7026751297842484`*^9, 
  3.702675133116129*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "problem"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"5", ",", "0.1", ",", "5", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", "G", "]"}], "\[IndentingNewLine]", 
   RowBox[{"\[Omega]", "=", 
    RowBox[{"DGGetAllRotAngleInterval", "[", "G", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.702644906261314*^9, 3.7026449100171323`*^9}, {
   3.702645036161538*^9, 3.702645094031803*^9}, {3.7026451246550045`*^9, 
   3.7026451295210896`*^9}, {3.702645169536258*^9, 3.7026451721829042`*^9}, {
   3.702662516787837*^9, 3.702662527822175*^9}, {3.7026626074976935`*^9, 
   3.702662617656565*^9}, 3.70266550309933*^9, {3.7026670078134966`*^9, 
   3.702667009583333*^9}, {3.702667074676117*^9, 3.7026670821914744`*^9}, {
   3.7026751439485674`*^9, 3.7026751464737434`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DGSolverRot", "Subsection",
 CellChangeTimes->{{3.702667191258362*^9, 3.7026672225036063`*^9}, {
  3.7026744325981674`*^9, 3.7026744339580617`*^9}, {3.702674958850687*^9, 
  3.7026749624664736`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "DGSolverRot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DGSolverRot", "[", 
   RowBox[{"G_", ",", "\[Beta]_", ",", "nodes_", ",", "nsample_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "natoms", ",", "\[Omega]", ",", "i", ",", "j", ",", "\[Theta]", ",", 
      "\[Phi]", ",", "\[Rho]", ",", "\[Epsilon]", ",", "a", ",", "b", ",", 
      "c", ",", "n", ",", "p", ",", "q", ",", "x", ",", "dab", ",", "dac", 
      ",", "dbc", ",", "dax", ",", "dbx", ",", "dcx", ",", "X", ",", 
      "isSolution"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"natoms", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"DGGetAllRotAngleInterval", "[", "G", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"set", " ", "the", " ", "first", " ", "triangle"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"dab", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"1", "\[UndirectedEdge]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dac", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"1", "\[UndirectedEdge]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dbc", "=", 
      RowBox[{"DGEdgeWeight", "[", 
       RowBox[{"G", ",", 
        RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"X", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"isSolution", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nsample"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "natoms"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"dab", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dab", "^", "2"}], "+", 
             RowBox[{"dac", "^", "2"}], "-", 
             RowBox[{"dbc", "^", "2"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "dac", "*", "dab"}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "=", 
         RowBox[{"dac", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[1]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[2]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<x[3]=\>\"", ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"select", " ", "random", " ", "rotation", " ", "angles"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "4"}], ",", 
          RowBox[{"i", "\[LessEqual]", "natoms"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"get", " ", "distances"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dab", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dac", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dbc", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", 
               RowBox[{"(", 
                RowBox[{"i", "-", "3"}], ")"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dax", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"dbx", "=", 
            RowBox[{"DGEdgeWeight", "[", 
             RowBox[{"G", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "2"}], ")"}], "\[UndirectedEdge]", "i"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<dax=\>\"", ",", "dax"}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
           RowBox[{"b", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "2"}], "]"}], "]"}]}], ";", 
           RowBox[{"c", "=", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "3"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"circunference", " ", "center"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dab", "^", "2"}], "+", 
                RowBox[{"dax", "^", "2"}], "-", 
                RowBox[{"dbx", "^", "2"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "dab", "*", "dax"}], ")"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"p", "=", 
            RowBox[{"a", "+", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"b", "-", "a"}], "]"}], "*", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "dax"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{\[Theta],p}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "p"}], "}"}]}], "]"}], ";"}], "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "intersection", " ", "of", " ", "circunference", " ", "and", " ", 
             "the", " ", "triangle", " ", "abc"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"n", "=", 
            RowBox[{"Cross", "[", 
             RowBox[{
              RowBox[{"b", "-", "a"}], ",", 
              RowBox[{"c", "-", "a"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"q", "=", 
            RowBox[{"p", "+", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{"Cross", "[", 
                RowBox[{"n", ",", 
                 RowBox[{"b", "-", "a"}]}], "]"}], "]"}], "*", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "dax"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{n,q}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "q"}], "}"}]}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{daq,dbq}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"a", "-", "q"}], "]"}], ",", 
                 RowBox[{"Norm", "[", 
                  RowBox[{"b", "-", "q"}], "]"}]}], "}"}]}], "]"}], ";"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"random", " ", "rotation", " ", "angle"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"\[Phi]", "=", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"\[Omega]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Rho]", "=", 
            RowBox[{"RotationTransform", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], "^", 
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "*", "\[Phi]"}], ",", 
              RowBox[{"b", "-", "a"}], ",", "a"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"\[Rho]", "[", "q", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"X", ",", "x"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "X", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzmlI0wEcxvGpICxkq0wzGYGsyIYX6YtKEbdi4dwY/V1sHrU1CGuYSzwq
UqIX2aVdyASDLaPDICKPiSZk5tC1MCRwaKcplKgdhIsgZ+37f/Hj8+L38PCk
2J3CkWiJRLItcvhr3vNC51pUBzdce4U7hn1hrNqrkBZFrA0MytFkK0zEG5ta
k3HC7VGi/bYqHTPK8zNx2ZOZjTUv9wuYOD1cgg71m3IxN7JQjWkdz2rxcejT
BZx7625HoULvEXvMPzowv6vhPra6ZI8wL5TrFf9/FkW/d2r9Yn9M9DjumTkV
FvdpjTF69k2q4jBj6Uk8njjzeSPWFRxVoFQ+lorrTZfSsDTqpB4bvLMGFHST
gphTjx5Af7DtIH4rnqvE37uSLuPKg5Yr+HRt7HXc8s7iwvqbhls48bHxLs7+
7e/GGeV5Lw4UnB3AYPrqIL6/2jKGP895/aia6ltCy+7OELb7VsK4dcG9ikb7
Q5kh4tDre3LU1JiLbBGtx5yiljtOM/4b2W7H0tgPQ/i1rek51ktPT+EXWfU0
appz1hymd9wfhxatMgEDVYHNeMjUlYPWZYcG+3p0+3CnwliIWRetZTjv67Xh
unCxA7ubjcfxP6VxQUA=
  "]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.7026671619226885`*^9, 3.7026671767268395`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creates", " ", "a", " ", "random", " ", "problem"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"natoms", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "=", 
     RowBox[{"DGRandomMDGP", "[", 
      RowBox[{"natoms", ",", "0.1", ",", "5", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "=", 
     RowBox[{"P", "[", "\"\<G\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DGPlotAdjacencyMatrix", "[", "G", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nodes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "natoms"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "natoms"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.702644906261314*^9, 3.7026449100171323`*^9}, {
   3.702645036161538*^9, 3.702645094031803*^9}, {3.7026451246550045`*^9, 
   3.7026451295210896`*^9}, {3.702645169536258*^9, 3.7026451721829042`*^9}, {
   3.702662516787837*^9, 3.702662527822175*^9}, {3.7026626074976935`*^9, 
   3.702662617656565*^9}, 3.70266550309933*^9, {3.7026670078134966`*^9, 
   3.702667009583333*^9}, {3.702667074676117*^9, 3.7026670821914744`*^9}, {
   3.7026751439485674`*^9, 3.7026751464737434`*^9}, {3.7026783946413198`*^9, 
   3.7026784394789658`*^9}, {3.7026784992743807`*^9, 3.702678522562768*^9}, {
   3.70272017770084*^9, 3.7027201780690255`*^9}, 3.7027205533181133`*^9, {
   3.70272129436683*^9, 3.702721318408942*^9}, {3.702725196863783*^9, 
   3.702725203964079*^9}, {3.7027257393963566`*^9, 3.702725739543911*^9}, 
   3.7027321932831993`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"DGSolverRot", "[", 
    RowBox[{"G", ",", "\[Beta]", ",", "nodes", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DGPlot3DBackbone", "[", 
  RowBox[{"x", ",", "0.2", ",", "0.08"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "x", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Maximum Relative Residue of x[\>\"", ",", "i", ",", "\"\<]: \>\"", 
       ",", 
       RowBox[{"Max", "[", 
        RowBox[{"DGRelativeResidue", "[", 
         RowBox[{"G", ",", 
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.7027207842406006`*^9, 3.7027207881272287`*^9}, 
   3.702721111023469*^9, {3.7027211477836103`*^9, 3.7027212137574453`*^9}, {
   3.7027250159545083`*^9, 3.7027250359828978`*^9}, {3.7027251989949484`*^9, 
   3.7027252186817074`*^9}, 3.702725710337193*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1312, 827},
WindowMargins->{{-7, Automatic}, {Automatic, 1}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "er" -> 
  SubscriptBox["e", "r"], "es" -> SubscriptBox["e", "s"], "e0" -> 
  SubscriptBox["e", "0"], "e1" -> SubscriptBox["e", "1"], "e2" -> 
  SubscriptBox["e", "2"], "e3" -> SubscriptBox["e", "3"], "einf" -> 
  SubscriptBox["e", "\[Infinity]"], "I5" -> SubscriptBox["I", "5"]},
Magnification:>2.2 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 257, "Title"],
Cell[CellGroupData[{
Cell[837, 30, 458, 6, 307, "Chapter"],
Cell[CellGroupData[{
Cell[1320, 40, 126584, 2092, 677, "Subchapter"],
Cell[CellGroupData[{
Cell[127929, 2136, 149, 2, 154, "Section"],
Cell[128081, 2140, 31286, 770, 15142, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[159404, 2915, 176, 2, 122, "Section"],
Cell[CellGroupData[{
Cell[159605, 2921, 2010, 43, 237, "Input"],
Cell[161618, 2966, 2359, 74, 375, "Print"],
Cell[163980, 3042, 1061, 24, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165078, 3071, 1823, 43, 237, "Input"],
Cell[166904, 3116, 1613, 50, 177, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168554, 3171, 1975, 49, 279, "Input"],
Cell[170532, 3222, 1617, 50, 177, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172186, 3277, 1326, 32, 194, "Input"],
Cell[CellGroupData[{
Cell[173537, 3313, 423, 10, 49, "Print"],
Cell[173963, 3325, 417, 10, 49, "Print"]
}, Open  ]]
}, Open  ]],
Cell[174407, 3339, 94, 1, 66, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[174550, 3346, 1408, 27, 221, "Subchapter"],
Cell[CellGroupData[{
Cell[175983, 3377, 887, 12, 154, "Section"],
Cell[CellGroupData[{
Cell[176895, 3393, 1089, 18, 106, "Subsection"],
Cell[177987, 3413, 215311, 3535, 622, "Subsubsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[393335, 6953, 1136, 18, 87, "Subsection"],
Cell[394474, 6973, 112948, 1857, 520, 47831, 788, "CachedBoxData", "BoxData", \
"Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[507459, 8835, 213, 6, 87, "Subsection"],
Cell[507675, 8843, 133498, 2195, 671, 56091, 924, "CachedBoxData", "BoxData", \
"Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[641210, 11043, 185, 6, 87, "Subsection"],
Cell[641398, 11051, 147631, 2426, 973, 63138, 1039, "CachedBoxData", \
"BoxData", "Input"]
}, Closed]],
Cell[789044, 13480, 331, 8, 87, "Subsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[789412, 13493, 98, 1, 122, "Section"],
Cell[789513, 13496, 61785, 1347, 7964, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[851335, 14848, 97, 1, 122, "Section"],
Cell[CellGroupData[{
Cell[851457, 14853, 447, 10, 110, "Input"],
Cell[851907, 14865, 1835, 47, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853779, 14917, 1080, 23, 152, "Input"],
Cell[854862, 14942, 3958, 120, 738, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[858857, 15067, 693, 20, 110, "Input"],
Cell[859553, 15089, 387, 11, 89, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[860001, 15107, 358, 10, 162, "Subchapter"],
Cell[CellGroupData[{
Cell[860384, 15121, 98, 1, 154, "Section"],
Cell[860485, 15124, 11453, 272, 5823, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[871975, 15401, 95, 1, 122, "Section"],
Cell[CellGroupData[{
Cell[872095, 15406, 879, 20, 152, "Input"],
Cell[872977, 15428, 2182, 48, 671, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[875196, 15481, 559, 15, 137, "Input"],
Cell[875758, 15498, 1488, 35, 826, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[877319, 15541, 339, 5, 278, "Chapter"],
Cell[CellGroupData[{
Cell[877683, 15550, 621, 15, 191, "Subchapter"],
Cell[CellGroupData[{
Cell[878329, 15569, 149, 2, 154, "Section"],
Cell[878481, 15573, 16351, 405, 3534, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894869, 15983, 93, 1, 154, "Section"],
Cell[CellGroupData[{
Cell[894987, 15988, 1835, 43, 236, "Input"],
Cell[CellGroupData[{
Cell[896847, 16035, 445, 6, 48, "Print"],
Cell[897295, 16043, 246, 5, 48, "Print"],
Cell[897544, 16050, 248, 5, 48, "Print"],
Cell[897795, 16057, 306, 7, 48, "Print"],
Cell[898104, 16066, 251, 5, 48, "Print"]
}, Open  ]],
Cell[898370, 16074, 246, 5, 66, "Output"],
Cell[CellGroupData[{
Cell[898641, 16083, 445, 6, 48, "Print"],
Cell[899089, 16091, 246, 5, 48, "Print"],
Cell[899338, 16098, 250, 5, 48, "Print"],
Cell[899591, 16105, 381, 8, 48, "Print"],
Cell[899975, 16115, 292, 6, 48, "Print"]
}, Open  ]],
Cell[900282, 16124, 436, 8, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900755, 16137, 1994, 52, 278, "Input"],
Cell[902752, 16191, 1437, 42, 165, "Output"],
Cell[904192, 16235, 2860, 74, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907089, 16314, 1819, 49, 305, "Input"],
Cell[908911, 16365, 1464, 42, 188, "Output"],
Cell[910378, 16409, 2845, 73, 306, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[913284, 16489, 433, 8, 189, "Subchapter"],
Cell[CellGroupData[{
Cell[913742, 16501, 193, 2, 153, "Section"],
Cell[CellGroupData[{
Cell[913960, 16507, 129, 2, 105, "Subsection"],
Cell[CellGroupData[{
Cell[914114, 16513, 252, 3, 86, "Subsubsection"],
Cell[914369, 16518, 2737, 81, 283, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917143, 16604, 230, 3, 86, "Subsubsection"],
Cell[917376, 16609, 13831, 231, 626, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[931244, 16845, 219, 3, 68, "Subsubsection"],
Cell[931466, 16850, 66122, 1090, 727, 25669, 425, "CachedBoxData", "BoxData", \
"Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[997637, 17946, 99, 1, 82, "Subsection"],
Cell[997739, 17949, 9226, 214, 1128, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1007002, 18168, 151, 2, 82, "Subsection"],
Cell[CellGroupData[{
Cell[1007178, 18174, 181, 2, 86, "Subsubsection"],
Cell[CellGroupData[{
Cell[1007384, 18180, 3544, 81, 320, "Input"],
Cell[1010931, 18263, 1536, 49, 177, "Print"],
Cell[1012470, 18314, 2131, 44, 190, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014650, 18364, 291, 3, 86, "Subsubsection"],
Cell[1014944, 18369, 2808, 64, 531, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017789, 18438, 156, 2, 86, "Subsubsection"],
Cell[1017948, 18442, 1609, 47, 278, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019594, 18494, 289, 3, 86, "Subsubsection"],
Cell[1019886, 18499, 1541, 39, 489, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021488, 18545, 113, 1, 153, "Section"],
Cell[CellGroupData[{
Cell[1021626, 18550, 129, 2, 105, "Subsection"],
Cell[CellGroupData[{
Cell[1021780, 18556, 252, 3, 86, "Subsubsection"],
Cell[1022035, 18561, 63902, 1065, 619, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085974, 19631, 400, 6, 86, "Subsubsection"],
Cell[1086377, 19639, 342, 9, 65, "Text"],
Cell[1086722, 19650, 92153, 1517, 590, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1178912, 21172, 219, 3, 68, "Subsubsection"],
Cell[1179134, 21177, 62945, 1036, 504, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1242128, 22219, 229, 3, 82, "Subsection"],
Cell[1242360, 22224, 173, 3, 66, "Input"],
Cell[1242536, 22229, 4563, 120, 865, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247136, 22354, 95, 1, 105, "Subsection"],
Cell[1247234, 22357, 1907, 56, 403, "Input"],
Cell[1249144, 22415, 1896, 52, 529, "Input"],
Cell[1251043, 22469, 3886, 85, 739, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1254978, 22560, 429, 5, 207, "Section"],
Cell[CellGroupData[{
Cell[1255432, 22569, 129, 2, 105, "Subsection"],
Cell[CellGroupData[{
Cell[1255586, 22575, 353, 5, 86, "Subsubsection"],
Cell[1255942, 22582, 2491, 74, 781, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1258482, 22662, 101, 1, 105, "Subsection"],
Cell[1258586, 22665, 5119, 127, 991, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1263742, 22797, 98, 1, 105, "Subsection"],
Cell[CellGroupData[{
Cell[1263865, 22802, 255, 4, 86, "Subsubsection"],
Cell[1264123, 22808, 2898, 76, 823, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1267058, 22889, 232, 3, 86, "Subsubsection"],
Cell[1267293, 22894, 907, 25, 193, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1268285, 22928, 463, 7, 194, "Chapter"],
Cell[CellGroupData[{
Cell[1268773, 22939, 337, 7, 190, "Subchapter"],
Cell[CellGroupData[{
Cell[1269135, 22950, 99, 1, 105, "Subsection"],
Cell[1269237, 22953, 8251, 202, 33781, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1277525, 23160, 230, 4, 85, "Subsection"],
Cell[CellGroupData[{
Cell[1277780, 23168, 187, 2, 86, "Subsubsection"],
Cell[1277970, 23172, 1698, 37, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1279705, 23214, 138, 1, 86, "Subsubsection"],
Cell[1279846, 23217, 2619, 54, 237, "Input"],
Cell[1282468, 23273, 6113, 116, 270, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1288642, 23396, 342, 7, 190, "Subchapter"],
Cell[1288987, 23405, 15980, 404, 16431, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1305004, 23814, 364, 7, 152, "Subchapter"],
Cell[CellGroupData[{
Cell[1305393, 23825, 103, 1, 105, "Subsection"],
Cell[1305499, 23828, 22725, 420, 14726, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1328261, 24253, 97, 1, 118, "Subsection"],
Cell[CellGroupData[{
Cell[1328383, 24258, 216, 3, 86, "Subsubsection"],
Cell[1328602, 24263, 2228, 60, 322, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330867, 24328, 291, 4, 86, "Subsubsection"],
Cell[1331161, 24334, 2894, 74, 322, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334092, 24413, 113, 1, 86, "Subsubsection"],
Cell[1334208, 24416, 3850, 93, 364, "Input"],
Cell[1338061, 24511, 820, 24, 194, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1338942, 24542, 202, 3, 144, "Subchapter"],
Cell[CellGroupData[{
Cell[1339169, 24549, 98, 1, 151, "Section"],
Cell[1339270, 24552, 35740, 661, 3053, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375047, 25218, 165, 2, 211, "Section"],
Cell[1375215, 25222, 3904, 94, 688, "Input"],
Cell[1379122, 25318, 807, 16, 213, "Input"],
Cell[CellGroupData[{
Cell[1379954, 25338, 155, 2, 147, "Subsection"],
Cell[1380112, 25342, 3270, 85, 926, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1383419, 25432, 117, 1, 147, "Subsection"],
Cell[1383539, 25435, 2228, 48, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1385804, 25488, 175, 2, 147, "Subsection"],
Cell[1385982, 25492, 1747, 43, 391, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1387766, 25540, 289, 6, 237, "Subsection"],
Cell[1388058, 25548, 6382, 162, 5924, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1394501, 25717, 199, 3, 202, "Subchapter"],
Cell[CellGroupData[{
Cell[1394725, 25724, 98, 1, 211, "Section"],
Cell[1394826, 25727, 20588, 447, 14311, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1415451, 26179, 165, 2, 165, "Section"],
Cell[CellGroupData[{
Cell[1415641, 26185, 162, 2, 147, "Subsection"],
Cell[1415806, 26189, 1060, 27, 391, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416903, 26221, 127, 1, 147, "Subsection"],
Cell[1417033, 26224, 4366, 63, 154, "Input"],
Cell[1421402, 26289, 583, 17, 154, "Input"],
Cell[1421988, 26308, 533, 16, 154, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1422558, 26329, 130, 1, 147, "Subsection"],
Cell[1422691, 26332, 4275, 102, 1460, "Input"],
Cell[1426969, 26436, 1129, 32, 332, "Input"],
Cell[1428101, 26470, 745, 19, 154, "Input"],
Cell[1428849, 26491, 1787, 45, 391, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1430709, 26544, 452, 7, 165, "Chapter"],
Cell[CellGroupData[{
Cell[1431186, 26555, 272, 3, 146, "Subchapter"],
Cell[CellGroupData[{
Cell[1431483, 26562, 93, 1, 153, "Section"],
Cell[CellGroupData[{
Cell[1431601, 26567, 23803, 528, 3833, "Input"],
Cell[1455407, 27097, 468, 9, 64, "Output"],
Cell[1455878, 27108, 7961, 149, 1863, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463900, 27264, 254, 3, 144, "Subchapter"],
Cell[CellGroupData[{
Cell[1464179, 27271, 95, 1, 710, "Section"],
Cell[1464277, 27274, 30543, 623, 22954, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1494881, 27904, 619, 9, 195, "Chapter"],
Cell[CellGroupData[{
Cell[1495525, 27917, 106, 1, 105, "Subsection"],
Cell[1495634, 27920, 9908, 226, 10419, "Input"],
Cell[CellGroupData[{
Cell[1505567, 28150, 102, 1, 693, "Subsubsection"],
Cell[1505672, 28153, 2264, 63, 3218, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1507985, 28222, 167, 2, 85, "Subsection"],
Cell[1508155, 28226, 3819, 96, 5878, "Input"],
Cell[CellGroupData[{
Cell[1511999, 28326, 102, 1, 693, "Subsubsection"],
Cell[1512104, 28329, 1115, 23, 2087, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1513268, 28358, 205, 3, 85, "Subsection"],
Cell[1513476, 28363, 11412, 283, 2019, "Input"],
Cell[CellGroupData[{
Cell[1524913, 28650, 102, 1, 118, "Subsubsection"],
Cell[1525018, 28653, 1855, 42, 451, "Input"],
Cell[1526876, 28697, 1189, 29, 391, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

